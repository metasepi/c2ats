// File: example.h
%{#
#include <gtk/gtk.h>

%}
abst@ype type_c2ats___gnuc_va_list
abst@ype type_c2ats___any
viewdef ptr_v_1 (a:t@ype, l:addr) = a @ l
dataview ptr_v_2 (a:t@ype+, l0: addr, l1: addr) =
  | ptr_v_2_cons(a, l0, l1) of (ptr l1 @ l0, ptr_v_1 (a, l1))
dataview ptr_v_3 (a:t@ype+, l0:addr, l1:addr, l2:addr) =
  | ptr_v_3_cons(a, l0, l1, l2) of (ptr l1 @ l0, ptr_v_2 (a, l1, l2))
// No file
typedef type_c2ats_size_t = ulint
typedef type_c2ats___builtin_va_list = type_c2ats___gnuc_va_list
// File: /usr/lib/x86_64-linux-gnu/glib-2.0/include/glibconfig.h
typedef type_c2ats_gint8 = schar
typedef type_c2ats_guint8 = uchar
typedef type_c2ats_gint16 = sint
typedef type_c2ats_guint16 = usint
typedef type_c2ats_gint32 = int
typedef type_c2ats_guint32 = uint
typedef type_c2ats_gint64 = lint
typedef type_c2ats_guint64 = ulint
typedef type_c2ats_gssize = lint
typedef type_c2ats_gsize = ulint
typedef type_c2ats_goffset = type_c2ats_gint64
typedef type_c2ats_gintptr = lint
typedef type_c2ats_guintptr = ulint
typedef type_c2ats_GPid = int
// File: /usr/include/x86_64-linux-gnu/bits/types.h
typedef type_c2ats___u_char = uchar
typedef type_c2ats___u_short = usint
typedef type_c2ats___u_int = uint
typedef type_c2ats___u_long = ulint
typedef type_c2ats___int8_t = schar
typedef type_c2ats___uint8_t = uchar
typedef type_c2ats___int16_t = sint
typedef type_c2ats___uint16_t = usint
typedef type_c2ats___int32_t = int
typedef type_c2ats___uint32_t = uint
typedef type_c2ats___int64_t = lint
typedef type_c2ats___uint64_t = ulint
typedef type_c2ats___quad_t = lint
typedef type_c2ats___u_quad_t = ulint
typedef type_c2ats___dev_t = ulint
typedef type_c2ats___uid_t = uint
typedef type_c2ats___gid_t = uint
typedef type_c2ats___ino_t = ulint
typedef type_c2ats___ino64_t = ulint
typedef type_c2ats___mode_t = uint
typedef type_c2ats___nlink_t = ulint
typedef type_c2ats___off_t = lint
typedef type_c2ats___off64_t = lint
typedef type_c2ats___pid_t = int
typedef struct_c2ats_anon_291 = $extype_struct"struct { int __val[2]; }" of {
  __val = @[int][2]
}
typedef type_c2ats___fsid_t = struct_c2ats_anon_291
typedef type_c2ats___clock_t = lint
typedef type_c2ats___rlim_t = ulint
typedef type_c2ats___rlim64_t = ulint
typedef type_c2ats___id_t = uint
typedef type_c2ats___time_t = lint
typedef type_c2ats___useconds_t = uint
typedef type_c2ats___suseconds_t = lint
typedef type_c2ats___daddr_t = int
typedef type_c2ats___key_t = int
typedef type_c2ats___clockid_t = int
typedef type_c2ats___timer_t = ptr
typedef type_c2ats___blksize_t = lint
typedef type_c2ats___blkcnt_t = lint
typedef type_c2ats___blkcnt64_t = lint
typedef type_c2ats___fsblkcnt_t = ulint
typedef type_c2ats___fsblkcnt64_t = ulint
typedef type_c2ats___fsfilcnt_t = ulint
typedef type_c2ats___fsfilcnt64_t = ulint
typedef type_c2ats___fsword_t = lint
typedef type_c2ats___ssize_t = lint
typedef type_c2ats___syscall_slong_t = lint
typedef type_c2ats___syscall_ulong_t = ulint
typedef type_c2ats___loff_t = type_c2ats___off64_t
typedef type_c2ats___qaddr_t = cPtr0(type_c2ats___quad_t)
typedef type_c2ats___caddr_t = cPtr0(char)
typedef type_c2ats___intptr_t = lint
typedef type_c2ats___socklen_t = uint
// File: /usr/include/x86_64-linux-gnu/bits/time.h
fun fun_c2ats___sysconf: (int) -> lint = "mac#__sysconf"
// File: /usr/include/time.h
typedef type_c2ats_clock_t = type_c2ats___clock_t
typedef type_c2ats_time_t = type_c2ats___time_t
typedef struct_c2ats_timespec = $extype_struct"struct timespec" of {
  tv_sec = type_c2ats___time_t,
  tv_nsec = type_c2ats___syscall_slong_t
}
typedef struct_c2ats_tm = $extype_struct"struct tm" of {
  tm_sec = int,
  tm_min = int,
  tm_hour = int,
  tm_mday = int,
  tm_mon = int,
  tm_year = int,
  tm_wday = int,
  tm_yday = int,
  tm_isdst = int,
  __tm_gmtoff = lint,
  __tm_zone = ptr (* cPtr0(char) *)
}
fun fun_c2ats_clock: () -> type_c2ats_clock_t = "mac#clock"
fun fun_c2ats_time: {l1:addr} (!ptr_v_1(type_c2ats_time_t, l1) | ptr l1) -> type_c2ats_time_t = "mac#time"
fun fun_c2ats_difftime: (type_c2ats_time_t, type_c2ats_time_t) -> double = "mac#difftime"
fun fun_c2ats_mktime: {l1:addr} (!ptr_v_1(struct_c2ats_tm, l1) | ptr l1) -> type_c2ats_time_t = "mac#mktime"
fun fun_c2ats_strftime: {l1,l2,l3:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2), !ptr_v_1(struct_c2ats_tm, l3) | ptr l1, type_c2ats_size_t, ptr l2, ptr l3) -> type_c2ats_size_t = "mac#strftime"
fun fun_c2ats_strptime: {l1,l2,l3:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2), !ptr_v_1(struct_c2ats_tm, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(char, l4) | ptr l4) = "mac#strptime"
fun fun_c2ats_gmtime: {l1:addr} (!ptr_v_1(type_c2ats_time_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(struct_c2ats_tm, l2) | ptr l2) = "mac#gmtime"
fun fun_c2ats_localtime: {l1:addr} (!ptr_v_1(type_c2ats_time_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(struct_c2ats_tm, l2) | ptr l2) = "mac#localtime"
fun fun_c2ats_gmtime_r: {l1,l2:addr} (!ptr_v_1(type_c2ats_time_t, l1), !ptr_v_1(struct_c2ats_tm, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(struct_c2ats_tm, l3) | ptr l3) = "mac#gmtime_r"
fun fun_c2ats_localtime_r: {l1,l2:addr} (!ptr_v_1(type_c2ats_time_t, l1), !ptr_v_1(struct_c2ats_tm, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(struct_c2ats_tm, l3) | ptr l3) = "mac#localtime_r"
fun fun_c2ats_asctime: {l1:addr} (!ptr_v_1(struct_c2ats_tm, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#asctime"
fun fun_c2ats_ctime: {l1:addr} (!ptr_v_1(type_c2ats_time_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#ctime"
fun fun_c2ats_asctime_r: {l1,l2:addr} (!ptr_v_1(struct_c2ats_tm, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(char, l3) | ptr l3) = "mac#asctime_r"
fun fun_c2ats_ctime_r: {l1,l2:addr} (!ptr_v_1(type_c2ats_time_t, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(char, l3) | ptr l3) = "mac#ctime_r"
macdef takeout_c2ats___tzname = $extval([l1:addr] (ptr_v_1(@[cPtr0(char)][2], l1) | ptr l1), "&__tzname")
praxi addback_c2ats___tzname {l1:addr} (ptr_v_1(@[cPtr0(char)][2], l1) | ptr l1): void
macdef takeout_c2ats___daylight = $extval([l1:addr] (ptr_v_1(int, l1) | ptr l1), "&__daylight")
praxi addback_c2ats___daylight {l1:addr} (ptr_v_1(int, l1) | ptr l1): void
macdef takeout_c2ats___timezone = $extval([l1:addr] (ptr_v_1(lint, l1) | ptr l1), "&__timezone")
praxi addback_c2ats___timezone {l1:addr} (ptr_v_1(lint, l1) | ptr l1): void
macdef takeout_c2ats_tzname = $extval([l1:addr] (ptr_v_1(@[cPtr0(char)][2], l1) | ptr l1), "&tzname")
praxi addback_c2ats_tzname {l1:addr} (ptr_v_1(@[cPtr0(char)][2], l1) | ptr l1): void
fun fun_c2ats_tzset: () -> void = "mac#tzset"
macdef takeout_c2ats_daylight = $extval([l1:addr] (ptr_v_1(int, l1) | ptr l1), "&daylight")
praxi addback_c2ats_daylight {l1:addr} (ptr_v_1(int, l1) | ptr l1): void
macdef takeout_c2ats_timezone = $extval([l1:addr] (ptr_v_1(lint, l1) | ptr l1), "&timezone")
praxi addback_c2ats_timezone {l1:addr} (ptr_v_1(lint, l1) | ptr l1): void
fun fun_c2ats_timespec_get: {l1:addr} (!ptr_v_1(struct_c2ats_timespec, l1) | ptr l1, int) -> int = "mac#timespec_get"
// File: /usr/include/glib-2.0/glib/gtypes.h
typedef type_c2ats_gchar = char
typedef type_c2ats_gshort = sint
typedef type_c2ats_glong = lint
typedef type_c2ats_gint = int
typedef type_c2ats_gboolean = type_c2ats_gint
typedef type_c2ats_guchar = uchar
typedef type_c2ats_gushort = usint
typedef type_c2ats_gulong = ulint
typedef type_c2ats_guint = uint
typedef type_c2ats_gfloat = float
typedef type_c2ats_gdouble = double
typedef type_c2ats_gpointer = ptr
typedef type_c2ats_gconstpointer = ptr
typedef type_c2ats_GCompareFunc = (type_c2ats_gconstpointer, type_c2ats_gconstpointer) -> type_c2ats_gint
typedef type_c2ats_GCompareDataFunc = (type_c2ats_gconstpointer, type_c2ats_gconstpointer, type_c2ats_gpointer) -> type_c2ats_gint
typedef type_c2ats_GEqualFunc = (type_c2ats_gconstpointer, type_c2ats_gconstpointer) -> type_c2ats_gboolean
typedef type_c2ats_GDestroyNotify = (type_c2ats_gpointer) -> void
typedef type_c2ats_GFunc = (type_c2ats_gpointer, type_c2ats_gpointer) -> void
typedef type_c2ats_GHashFunc = (type_c2ats_gconstpointer) -> type_c2ats_guint
typedef type_c2ats_GHFunc = (type_c2ats_gpointer, type_c2ats_gpointer, type_c2ats_gpointer) -> void
typedef type_c2ats_GFreeFunc = (type_c2ats_gpointer) -> void
typedef type_c2ats_GTranslateFunc = {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2)
fun fun_c2ats__GLIB_CHECKED_ADD_U32: {l1:addr} (!ptr_v_1(type_c2ats_guint32, l1) | ptr l1, type_c2ats_guint32, type_c2ats_guint32) -> type_c2ats_gboolean = "mac#_GLIB_CHECKED_ADD_U32"
fun fun_c2ats__GLIB_CHECKED_MUL_U32: {l1:addr} (!ptr_v_1(type_c2ats_guint32, l1) | ptr l1, type_c2ats_guint32, type_c2ats_guint32) -> type_c2ats_gboolean = "mac#_GLIB_CHECKED_MUL_U32"
fun fun_c2ats__GLIB_CHECKED_ADD_U64: {l1:addr} (!ptr_v_1(type_c2ats_guint64, l1) | ptr l1, type_c2ats_guint64, type_c2ats_guint64) -> type_c2ats_gboolean = "mac#_GLIB_CHECKED_ADD_U64"
fun fun_c2ats__GLIB_CHECKED_MUL_U64: {l1:addr} (!ptr_v_1(type_c2ats_guint64, l1) | ptr l1, type_c2ats_guint64, type_c2ats_guint64) -> type_c2ats_gboolean = "mac#_GLIB_CHECKED_MUL_U64"
abst@ype union_c2ats__GDoubleIEEE754 // FIXME! Forward declaration.
typedef type_c2ats_GDoubleIEEE754 = union_c2ats__GDoubleIEEE754
abst@ype union_c2ats__GFloatIEEE754 // FIXME! Forward declaration.
typedef type_c2ats_GFloatIEEE754 = union_c2ats__GFloatIEEE754
typedef struct_c2ats_anon_1394 = $extype_struct"struct { guint mantissa : 23; guint biased_exponent : 8; guint sign : 1; }" of {
  mantissa = type_c2ats_guint,
  biased_exponent = type_c2ats_guint,
  sign = type_c2ats_guint
}
typedef union_c2ats__GFloatIEEE754 = $extype_struct"union _GFloatIEEE754" of {
  v_float = type_c2ats_gfloat,
  mpn = struct_c2ats_anon_1394
}
typedef struct_c2ats_anon_1432 = $extype_struct"struct { guint mantissa_low : 32; guint mantissa_high : 20; guint biased_exponent : 11; guint sign : 1; }" of {
  mantissa_low = type_c2ats_guint,
  mantissa_high = type_c2ats_guint,
  biased_exponent = type_c2ats_guint,
  sign = type_c2ats_guint
}
typedef union_c2ats__GDoubleIEEE754 = $extype_struct"union _GDoubleIEEE754" of {
  v_double = type_c2ats_gdouble,
  mpn = struct_c2ats_anon_1432
}
abst@ype struct_c2ats__GTimeVal // FIXME! Forward declaration.
typedef type_c2ats_GTimeVal = struct_c2ats__GTimeVal
typedef struct_c2ats__GTimeVal = $extype_struct"struct _GTimeVal" of {
  tv_sec = type_c2ats_glong,
  tv_usec = type_c2ats_glong
}
// File: /usr/include/glib-2.0/glib/garray.h
abst@ype struct_c2ats__GBytes // FIXME! Forward declaration.
typedef type_c2ats_GBytes = struct_c2ats__GBytes
abst@ype struct_c2ats__GArray // FIXME! Forward declaration.
typedef type_c2ats_GArray = struct_c2ats__GArray
abst@ype struct_c2ats__GByteArray // FIXME! Forward declaration.
typedef type_c2ats_GByteArray = struct_c2ats__GByteArray
abst@ype struct_c2ats__GPtrArray // FIXME! Forward declaration.
typedef type_c2ats_GPtrArray = struct_c2ats__GPtrArray
typedef struct_c2ats__GArray = $extype_struct"struct _GArray" of {
  data = ptr (* cPtr0(type_c2ats_gchar) *),
  len = type_c2ats_guint
}
typedef struct_c2ats__GByteArray = $extype_struct"struct _GByteArray" of {
  data = ptr (* cPtr0(type_c2ats_guint8) *),
  len = type_c2ats_guint
}
typedef struct_c2ats__GPtrArray = $extype_struct"struct _GPtrArray" of {
  pdata = ptr (* cPtr0(type_c2ats_gpointer) *),
  len = type_c2ats_guint
}
fun fun_c2ats_g_array_new: (type_c2ats_gboolean, type_c2ats_gboolean, type_c2ats_guint) -> [l1:addr] (ptr_v_1(type_c2ats_GArray, l1) | ptr l1) = "mac#g_array_new"
fun fun_c2ats_g_array_sized_new: (type_c2ats_gboolean, type_c2ats_gboolean, type_c2ats_guint, type_c2ats_guint) -> [l1:addr] (ptr_v_1(type_c2ats_GArray, l1) | ptr l1) = "mac#g_array_sized_new"
fun fun_c2ats_g_array_free: {l1:addr} (!ptr_v_1(type_c2ats_GArray, l1) | ptr l1, type_c2ats_gboolean) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_array_free"
fun fun_c2ats_g_array_ref: {l1:addr} (!ptr_v_1(type_c2ats_GArray, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GArray, l2) | ptr l2) = "mac#g_array_ref"
fun fun_c2ats_g_array_unref: {l1:addr} (!ptr_v_1(type_c2ats_GArray, l1) | ptr l1) -> void = "mac#g_array_unref"
fun fun_c2ats_g_array_get_element_size: {l1:addr} (!ptr_v_1(type_c2ats_GArray, l1) | ptr l1) -> type_c2ats_guint = "mac#g_array_get_element_size"
fun fun_c2ats_g_array_append_vals: {l1:addr} (!ptr_v_1(type_c2ats_GArray, l1) | ptr l1, type_c2ats_gconstpointer, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GArray, l2) | ptr l2) = "mac#g_array_append_vals"
fun fun_c2ats_g_array_prepend_vals: {l1:addr} (!ptr_v_1(type_c2ats_GArray, l1) | ptr l1, type_c2ats_gconstpointer, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GArray, l2) | ptr l2) = "mac#g_array_prepend_vals"
fun fun_c2ats_g_array_insert_vals: {l1:addr} (!ptr_v_1(type_c2ats_GArray, l1) | ptr l1, type_c2ats_guint, type_c2ats_gconstpointer, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GArray, l2) | ptr l2) = "mac#g_array_insert_vals"
fun fun_c2ats_g_array_set_size: {l1:addr} (!ptr_v_1(type_c2ats_GArray, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GArray, l2) | ptr l2) = "mac#g_array_set_size"
fun fun_c2ats_g_array_remove_index: {l1:addr} (!ptr_v_1(type_c2ats_GArray, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GArray, l2) | ptr l2) = "mac#g_array_remove_index"
fun fun_c2ats_g_array_remove_index_fast: {l1:addr} (!ptr_v_1(type_c2ats_GArray, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GArray, l2) | ptr l2) = "mac#g_array_remove_index_fast"
fun fun_c2ats_g_array_remove_range: {l1:addr} (!ptr_v_1(type_c2ats_GArray, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GArray, l2) | ptr l2) = "mac#g_array_remove_range"
fun fun_c2ats_g_array_sort: {l1:addr} (!ptr_v_1(type_c2ats_GArray, l1) | ptr l1, type_c2ats_GCompareFunc) -> void = "mac#g_array_sort"
fun fun_c2ats_g_array_sort_with_data: {l1:addr} (!ptr_v_1(type_c2ats_GArray, l1) | ptr l1, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> void = "mac#g_array_sort_with_data"
fun fun_c2ats_g_array_set_clear_func: {l1:addr} (!ptr_v_1(type_c2ats_GArray, l1) | ptr l1, type_c2ats_GDestroyNotify) -> void = "mac#g_array_set_clear_func"
fun fun_c2ats_g_ptr_array_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GPtrArray, l1) | ptr l1) = "mac#g_ptr_array_new"
fun fun_c2ats_g_ptr_array_new_with_free_func: (type_c2ats_GDestroyNotify) -> [l1:addr] (ptr_v_1(type_c2ats_GPtrArray, l1) | ptr l1) = "mac#g_ptr_array_new_with_free_func"
fun fun_c2ats_g_ptr_array_sized_new: (type_c2ats_guint) -> [l1:addr] (ptr_v_1(type_c2ats_GPtrArray, l1) | ptr l1) = "mac#g_ptr_array_sized_new"
fun fun_c2ats_g_ptr_array_new_full: (type_c2ats_guint, type_c2ats_GDestroyNotify) -> [l1:addr] (ptr_v_1(type_c2ats_GPtrArray, l1) | ptr l1) = "mac#g_ptr_array_new_full"
fun fun_c2ats_g_ptr_array_free: {l1:addr} (!ptr_v_1(type_c2ats_GPtrArray, l1) | ptr l1, type_c2ats_gboolean) -> [l2:addr] (ptr_v_1(type_c2ats_gpointer, l2) | ptr l2) = "mac#g_ptr_array_free"
fun fun_c2ats_g_ptr_array_ref: {l1:addr} (!ptr_v_1(type_c2ats_GPtrArray, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GPtrArray, l2) | ptr l2) = "mac#g_ptr_array_ref"
fun fun_c2ats_g_ptr_array_unref: {l1:addr} (!ptr_v_1(type_c2ats_GPtrArray, l1) | ptr l1) -> void = "mac#g_ptr_array_unref"
fun fun_c2ats_g_ptr_array_set_free_func: {l1:addr} (!ptr_v_1(type_c2ats_GPtrArray, l1) | ptr l1, type_c2ats_GDestroyNotify) -> void = "mac#g_ptr_array_set_free_func"
fun fun_c2ats_g_ptr_array_set_size: {l1:addr} (!ptr_v_1(type_c2ats_GPtrArray, l1) | ptr l1, type_c2ats_gint) -> void = "mac#g_ptr_array_set_size"
fun fun_c2ats_g_ptr_array_remove_index: {l1:addr} (!ptr_v_1(type_c2ats_GPtrArray, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_gpointer = "mac#g_ptr_array_remove_index"
fun fun_c2ats_g_ptr_array_remove_index_fast: {l1:addr} (!ptr_v_1(type_c2ats_GPtrArray, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_gpointer = "mac#g_ptr_array_remove_index_fast"
fun fun_c2ats_g_ptr_array_remove: {l1:addr} (!ptr_v_1(type_c2ats_GPtrArray, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#g_ptr_array_remove"
fun fun_c2ats_g_ptr_array_remove_fast: {l1:addr} (!ptr_v_1(type_c2ats_GPtrArray, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#g_ptr_array_remove_fast"
fun fun_c2ats_g_ptr_array_remove_range: {l1:addr} (!ptr_v_1(type_c2ats_GPtrArray, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GPtrArray, l2) | ptr l2) = "mac#g_ptr_array_remove_range"
fun fun_c2ats_g_ptr_array_add: {l1:addr} (!ptr_v_1(type_c2ats_GPtrArray, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_ptr_array_add"
fun fun_c2ats_g_ptr_array_insert: {l1:addr} (!ptr_v_1(type_c2ats_GPtrArray, l1) | ptr l1, type_c2ats_gint, type_c2ats_gpointer) -> void = "mac#g_ptr_array_insert"
fun fun_c2ats_g_ptr_array_sort: {l1:addr} (!ptr_v_1(type_c2ats_GPtrArray, l1) | ptr l1, type_c2ats_GCompareFunc) -> void = "mac#g_ptr_array_sort"
fun fun_c2ats_g_ptr_array_sort_with_data: {l1:addr} (!ptr_v_1(type_c2ats_GPtrArray, l1) | ptr l1, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> void = "mac#g_ptr_array_sort_with_data"
fun fun_c2ats_g_ptr_array_foreach: {l1:addr} (!ptr_v_1(type_c2ats_GPtrArray, l1) | ptr l1, type_c2ats_GFunc, type_c2ats_gpointer) -> void = "mac#g_ptr_array_foreach"
fun fun_c2ats_g_byte_array_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GByteArray, l1) | ptr l1) = "mac#g_byte_array_new"
fun fun_c2ats_g_byte_array_new_take: {l1:addr} (!ptr_v_1(type_c2ats_guint8, l1) | ptr l1, type_c2ats_gsize) -> [l2:addr] (ptr_v_1(type_c2ats_GByteArray, l2) | ptr l2) = "mac#g_byte_array_new_take"
fun fun_c2ats_g_byte_array_sized_new: (type_c2ats_guint) -> [l1:addr] (ptr_v_1(type_c2ats_GByteArray, l1) | ptr l1) = "mac#g_byte_array_sized_new"
fun fun_c2ats_g_byte_array_free: {l1:addr} (!ptr_v_1(type_c2ats_GByteArray, l1) | ptr l1, type_c2ats_gboolean) -> [l2:addr] (ptr_v_1(type_c2ats_guint8, l2) | ptr l2) = "mac#g_byte_array_free"
fun fun_c2ats_g_byte_array_free_to_bytes: {l1:addr} (!ptr_v_1(type_c2ats_GByteArray, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GBytes, l2) | ptr l2) = "mac#g_byte_array_free_to_bytes"
fun fun_c2ats_g_byte_array_ref: {l1:addr} (!ptr_v_1(type_c2ats_GByteArray, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GByteArray, l2) | ptr l2) = "mac#g_byte_array_ref"
fun fun_c2ats_g_byte_array_unref: {l1:addr} (!ptr_v_1(type_c2ats_GByteArray, l1) | ptr l1) -> void = "mac#g_byte_array_unref"
fun fun_c2ats_g_byte_array_append: {l1,l2:addr} (!ptr_v_1(type_c2ats_GByteArray, l1), !ptr_v_1(type_c2ats_guint8, l2) | ptr l1, ptr l2, type_c2ats_guint) -> [l3:addr] (ptr_v_1(type_c2ats_GByteArray, l3) | ptr l3) = "mac#g_byte_array_append"
fun fun_c2ats_g_byte_array_prepend: {l1,l2:addr} (!ptr_v_1(type_c2ats_GByteArray, l1), !ptr_v_1(type_c2ats_guint8, l2) | ptr l1, ptr l2, type_c2ats_guint) -> [l3:addr] (ptr_v_1(type_c2ats_GByteArray, l3) | ptr l3) = "mac#g_byte_array_prepend"
fun fun_c2ats_g_byte_array_set_size: {l1:addr} (!ptr_v_1(type_c2ats_GByteArray, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GByteArray, l2) | ptr l2) = "mac#g_byte_array_set_size"
fun fun_c2ats_g_byte_array_remove_index: {l1:addr} (!ptr_v_1(type_c2ats_GByteArray, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GByteArray, l2) | ptr l2) = "mac#g_byte_array_remove_index"
fun fun_c2ats_g_byte_array_remove_index_fast: {l1:addr} (!ptr_v_1(type_c2ats_GByteArray, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GByteArray, l2) | ptr l2) = "mac#g_byte_array_remove_index_fast"
fun fun_c2ats_g_byte_array_remove_range: {l1:addr} (!ptr_v_1(type_c2ats_GByteArray, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GByteArray, l2) | ptr l2) = "mac#g_byte_array_remove_range"
fun fun_c2ats_g_byte_array_sort: {l1:addr} (!ptr_v_1(type_c2ats_GByteArray, l1) | ptr l1, type_c2ats_GCompareFunc) -> void = "mac#g_byte_array_sort"
fun fun_c2ats_g_byte_array_sort_with_data: {l1:addr} (!ptr_v_1(type_c2ats_GByteArray, l1) | ptr l1, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> void = "mac#g_byte_array_sort_with_data"
// File: /usr/include/glib-2.0/glib/gatomic.h
fun fun_c2ats_g_atomic_int_get: {l1:addr} (!ptr_v_1(type_c2ats_gint, l1) | ptr l1) -> type_c2ats_gint = "mac#g_atomic_int_get"
fun fun_c2ats_g_atomic_int_set: {l1:addr} (!ptr_v_1(type_c2ats_gint, l1) | ptr l1, type_c2ats_gint) -> void = "mac#g_atomic_int_set"
fun fun_c2ats_g_atomic_int_inc: {l1:addr} (!ptr_v_1(type_c2ats_gint, l1) | ptr l1) -> void = "mac#g_atomic_int_inc"
fun fun_c2ats_g_atomic_int_dec_and_test: {l1:addr} (!ptr_v_1(type_c2ats_gint, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_atomic_int_dec_and_test"
fun fun_c2ats_g_atomic_int_compare_and_exchange: {l1:addr} (!ptr_v_1(type_c2ats_gint, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gboolean = "mac#g_atomic_int_compare_and_exchange"
fun fun_c2ats_g_atomic_int_add: {l1:addr} (!ptr_v_1(type_c2ats_gint, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gint = "mac#g_atomic_int_add"
fun fun_c2ats_g_atomic_int_and: {l1:addr} (!ptr_v_1(type_c2ats_guint, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_guint = "mac#g_atomic_int_and"
fun fun_c2ats_g_atomic_int_or: {l1:addr} (!ptr_v_1(type_c2ats_guint, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_guint = "mac#g_atomic_int_or"
fun fun_c2ats_g_atomic_int_xor: {l1:addr} (!ptr_v_1(type_c2ats_guint, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_guint = "mac#g_atomic_int_xor"
fun fun_c2ats_g_atomic_pointer_get: (ptr) -> type_c2ats_gpointer = "mac#g_atomic_pointer_get"
fun fun_c2ats_g_atomic_pointer_set: (ptr, type_c2ats_gpointer) -> void = "mac#g_atomic_pointer_set"
fun fun_c2ats_g_atomic_pointer_compare_and_exchange: (ptr, type_c2ats_gpointer, type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#g_atomic_pointer_compare_and_exchange"
fun fun_c2ats_g_atomic_pointer_add: (ptr, type_c2ats_gssize) -> type_c2ats_gssize = "mac#g_atomic_pointer_add"
fun fun_c2ats_g_atomic_pointer_and: (ptr, type_c2ats_gsize) -> type_c2ats_gsize = "mac#g_atomic_pointer_and"
fun fun_c2ats_g_atomic_pointer_or: (ptr, type_c2ats_gsize) -> type_c2ats_gsize = "mac#g_atomic_pointer_or"
fun fun_c2ats_g_atomic_pointer_xor: (ptr, type_c2ats_gsize) -> type_c2ats_gsize = "mac#g_atomic_pointer_xor"
fun fun_c2ats_g_atomic_int_exchange_and_add: {l1:addr} (!ptr_v_1(type_c2ats_gint, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gint = "mac#g_atomic_int_exchange_and_add"
// File: /usr/lib/gcc/x86_64-linux-gnu/6/include/stdarg.h
typedef type_c2ats___gnuc_va_list = type_c2ats___builtin_va_list
typedef type_c2ats_va_list = type_c2ats___gnuc_va_list
// File: /usr/include/glib-2.0/glib/gquark.h
typedef type_c2ats_GQuark = type_c2ats_guint32
fun fun_c2ats_g_quark_try_string: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_GQuark = "mac#g_quark_try_string"
fun fun_c2ats_g_quark_from_static_string: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_GQuark = "mac#g_quark_from_static_string"
fun fun_c2ats_g_quark_from_string: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_GQuark = "mac#g_quark_from_string"
fun fun_c2ats_g_quark_to_string: (type_c2ats_GQuark) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_quark_to_string"
fun fun_c2ats_g_intern_string: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_intern_string"
fun fun_c2ats_g_intern_static_string: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_intern_static_string"
// File: /usr/include/glib-2.0/glib/gerror.h
abst@ype struct_c2ats__GError // FIXME! Forward declaration.
typedef type_c2ats_GError = struct_c2ats__GError
typedef struct_c2ats__GError = $extype_struct"struct _GError" of {
  domain = type_c2ats_GQuark,
  code = type_c2ats_gint,
  message = ptr (* cPtr0(type_c2ats_gchar) *)
}
fun fun_c2ats_g_error_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_GQuark, type_c2ats_gint, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GError, l2) | ptr l2) = "mac#g_error_new"
fun fun_c2ats_g_error_new_literal: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_GQuark, type_c2ats_gint, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GError, l2) | ptr l2) = "mac#g_error_new_literal"
fun fun_c2ats_g_error_new_valist: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_GQuark, type_c2ats_gint, ptr l1, type_c2ats_va_list) -> [l2:addr] (ptr_v_1(type_c2ats_GError, l2) | ptr l2) = "mac#g_error_new_valist"
fun fun_c2ats_g_error_free: {l1:addr} (!ptr_v_1(type_c2ats_GError, l1) | ptr l1) -> void = "mac#g_error_free"
fun fun_c2ats_g_error_copy: {l1:addr} (!ptr_v_1(type_c2ats_GError, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GError, l2) | ptr l2) = "mac#g_error_copy"
fun fun_c2ats_g_error_matches: {l1:addr} (!ptr_v_1(type_c2ats_GError, l1) | ptr l1, type_c2ats_GQuark, type_c2ats_gint) -> type_c2ats_gboolean = "mac#g_error_matches"
fun fun_c2ats_g_set_error: {l1,l1_1,l2:addr} (!ptr_v_2(type_c2ats_GError, l1, l1_1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GQuark, type_c2ats_gint, ptr l2) -> void = "mac#g_set_error"
fun fun_c2ats_g_set_error_literal: {l1,l1_1,l2:addr} (!ptr_v_2(type_c2ats_GError, l1, l1_1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GQuark, type_c2ats_gint, ptr l2) -> void = "mac#g_set_error_literal"
fun fun_c2ats_g_propagate_error: {l1,l1_1,l2:addr} (!ptr_v_2(type_c2ats_GError, l1, l1_1), !ptr_v_1(type_c2ats_GError, l2) | ptr l1, ptr l2) -> void = "mac#g_propagate_error"
fun fun_c2ats_g_clear_error: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GError, l1, l1_1) | ptr l1) -> void = "mac#g_clear_error"
fun fun_c2ats_g_prefix_error: {l1,l1_1,l2:addr} (!ptr_v_2(type_c2ats_GError, l1, l1_1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_prefix_error"
fun fun_c2ats_g_propagate_prefixed_error: {l1,l1_1,l2,l3:addr} (!ptr_v_2(type_c2ats_GError, l1, l1_1), !ptr_v_1(type_c2ats_GError, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_propagate_prefixed_error"
// File: /usr/include/glib-2.0/glib/gutils.h
fun fun_c2ats_g_get_user_name: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_get_user_name"
fun fun_c2ats_g_get_real_name: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_get_real_name"
fun fun_c2ats_g_get_home_dir: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_get_home_dir"
fun fun_c2ats_g_get_tmp_dir: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_get_tmp_dir"
fun fun_c2ats_g_get_host_name: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_get_host_name"
fun fun_c2ats_g_get_prgname: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_get_prgname"
fun fun_c2ats_g_set_prgname: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#g_set_prgname"
fun fun_c2ats_g_get_application_name: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_get_application_name"
fun fun_c2ats_g_set_application_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#g_set_application_name"
fun fun_c2ats_g_reload_user_special_dirs_cache: () -> void = "mac#g_reload_user_special_dirs_cache"
fun fun_c2ats_g_get_user_data_dir: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_get_user_data_dir"
fun fun_c2ats_g_get_user_config_dir: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_get_user_config_dir"
fun fun_c2ats_g_get_user_cache_dir: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_get_user_cache_dir"
fun fun_c2ats_g_get_system_data_dirs: () -> [l1,l1_1:addr] (ptr_v_2(type_c2ats_gchar, l1, l1_1) | ptr l1) = "mac#g_get_system_data_dirs"
fun fun_c2ats_g_get_system_config_dirs: () -> [l1,l1_1:addr] (ptr_v_2(type_c2ats_gchar, l1, l1_1) | ptr l1) = "mac#g_get_system_config_dirs"
fun fun_c2ats_g_get_user_runtime_dir: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_get_user_runtime_dir"
typedef type_c2ats_GUserDirectory = int
#define enum_c2ats_G_USER_DIRECTORY_DESKTOP 0
#define enum_c2ats_G_USER_DIRECTORY_DOCUMENTS 1
#define enum_c2ats_G_USER_DIRECTORY_DOWNLOAD 2
#define enum_c2ats_G_USER_DIRECTORY_MUSIC 3
#define enum_c2ats_G_USER_DIRECTORY_PICTURES 4
#define enum_c2ats_G_USER_DIRECTORY_PUBLIC_SHARE 5
#define enum_c2ats_G_USER_DIRECTORY_TEMPLATES 6
#define enum_c2ats_G_USER_DIRECTORY_VIDEOS 7
#define enum_c2ats_G_USER_N_DIRECTORIES 8
fun fun_c2ats_g_get_user_special_dir: (type_c2ats_GUserDirectory) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_get_user_special_dir"
abst@ype struct_c2ats__GDebugKey // FIXME! Forward declaration.
typedef type_c2ats_GDebugKey = struct_c2ats__GDebugKey
typedef struct_c2ats__GDebugKey = $extype_struct"struct _GDebugKey" of {
  key = ptr (* cPtr0(type_c2ats_gchar) *),
  value = type_c2ats_guint
}
fun fun_c2ats_g_parse_debug_string: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GDebugKey, l2) | ptr l1, ptr l2, type_c2ats_guint) -> type_c2ats_guint = "mac#g_parse_debug_string"
fun fun_c2ats_g_snprintf: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gulong, ptr l2) -> type_c2ats_gint = "mac#g_snprintf"
fun fun_c2ats_g_vsnprintf: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gulong, ptr l2, type_c2ats_va_list) -> type_c2ats_gint = "mac#g_vsnprintf"
fun fun_c2ats_g_nullify_pointer: {l1:addr} (!ptr_v_1(type_c2ats_gpointer, l1) | ptr l1) -> void = "mac#g_nullify_pointer"
typedef type_c2ats_GFormatSizeFlags = int
#define enum_c2ats_G_FORMAT_SIZE_DEFAULT 0
#define enum_c2ats_G_FORMAT_SIZE_LONG_FORMAT 1 << 0
#define enum_c2ats_G_FORMAT_SIZE_IEC_UNITS 1 << 1
fun fun_c2ats_g_format_size_full: (type_c2ats_guint64, type_c2ats_GFormatSizeFlags) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_format_size_full"
fun fun_c2ats_g_format_size: (type_c2ats_guint64) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_format_size"
fun fun_c2ats_g_format_size_for_display: (type_c2ats_goffset) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_format_size_for_display"
typedef type_c2ats_GVoidFunc = () -> void
fun fun_c2ats_g_atexit: (type_c2ats_GVoidFunc) -> void = "mac#g_atexit"
fun fun_c2ats_g_find_program_in_path: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_find_program_in_path"
fun fun_c2ats_g_bit_nth_lsf: (type_c2ats_gulong, type_c2ats_gint) -> type_c2ats_gint = "mac#g_bit_nth_lsf"
fun fun_c2ats_g_bit_nth_msf: (type_c2ats_gulong, type_c2ats_gint) -> type_c2ats_gint = "mac#g_bit_nth_msf"
fun fun_c2ats_g_bit_storage: (type_c2ats_gulong) -> type_c2ats_guint = "mac#g_bit_storage"
fun fun_c2ats_g_bit_nth_lsf_impl: (type_c2ats_gulong, type_c2ats_gint) -> type_c2ats_gint = "mac#g_bit_nth_lsf_impl"
fun fun_c2ats_g_bit_nth_msf_impl: (type_c2ats_gulong, type_c2ats_gint) -> type_c2ats_gint = "mac#g_bit_nth_msf_impl"
fun fun_c2ats_g_bit_storage_impl: (type_c2ats_gulong) -> type_c2ats_guint = "mac#g_bit_storage_impl"
// File: /usr/include/glib-2.0/glib/gthread.h
fun fun_c2ats_g_thread_error_quark: () -> type_c2ats_GQuark = "mac#g_thread_error_quark"
typedef type_c2ats_GThreadError = int
#define enum_c2ats_G_THREAD_ERROR_AGAIN 0
typedef type_c2ats_GThreadFunc = (type_c2ats_gpointer) -> type_c2ats_gpointer
abst@ype struct_c2ats__GThread // FIXME! Forward declaration.
typedef type_c2ats_GThread = struct_c2ats__GThread
abst@ype union_c2ats__GMutex // FIXME! Forward declaration.
typedef type_c2ats_GMutex = union_c2ats__GMutex
abst@ype struct_c2ats__GRecMutex // FIXME! Forward declaration.
typedef type_c2ats_GRecMutex = struct_c2ats__GRecMutex
abst@ype struct_c2ats__GRWLock // FIXME! Forward declaration.
typedef type_c2ats_GRWLock = struct_c2ats__GRWLock
abst@ype struct_c2ats__GCond // FIXME! Forward declaration.
typedef type_c2ats_GCond = struct_c2ats__GCond
abst@ype struct_c2ats__GPrivate // FIXME! Forward declaration.
typedef type_c2ats_GPrivate = struct_c2ats__GPrivate
abst@ype struct_c2ats__GOnce // FIXME! Forward declaration.
typedef type_c2ats_GOnce = struct_c2ats__GOnce
typedef union_c2ats__GMutex = $extype_struct"union _GMutex" of {
  p = type_c2ats_gpointer,
  i = @[type_c2ats_guint][2]
}
typedef struct_c2ats__GRWLock = $extype_struct"struct _GRWLock" of {
  p = type_c2ats_gpointer,
  i = @[type_c2ats_guint][2]
}
typedef struct_c2ats__GCond = $extype_struct"struct _GCond" of {
  p = type_c2ats_gpointer,
  i = @[type_c2ats_guint][2]
}
typedef struct_c2ats__GRecMutex = $extype_struct"struct _GRecMutex" of {
  p = type_c2ats_gpointer,
  i = @[type_c2ats_guint][2]
}
typedef struct_c2ats__GPrivate = $extype_struct"struct _GPrivate" of {
  p = type_c2ats_gpointer,
  notify = type_c2ats_GDestroyNotify,
  future = @[type_c2ats_gpointer][2]
}
typedef type_c2ats_GOnceStatus = int
#define enum_c2ats_G_ONCE_STATUS_NOTCALLED 0
#define enum_c2ats_G_ONCE_STATUS_PROGRESS 1
#define enum_c2ats_G_ONCE_STATUS_READY 2
typedef struct_c2ats__GOnce = $extype_struct"struct _GOnce" of {
  status = type_c2ats_GOnceStatus,
  retval = type_c2ats_gpointer
}
fun fun_c2ats_g_thread_ref: {l1:addr} (!ptr_v_1(type_c2ats_GThread, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GThread, l2) | ptr l2) = "mac#g_thread_ref"
fun fun_c2ats_g_thread_unref: {l1:addr} (!ptr_v_1(type_c2ats_GThread, l1) | ptr l1) -> void = "mac#g_thread_unref"
fun fun_c2ats_g_thread_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_GThreadFunc, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GThread, l2) | ptr l2) = "mac#g_thread_new"
fun fun_c2ats_g_thread_try_new: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_GThreadFunc, type_c2ats_gpointer, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GThread, l3) | ptr l3) = "mac#g_thread_try_new"
fun fun_c2ats_g_thread_self: () -> [l1:addr] (ptr_v_1(type_c2ats_GThread, l1) | ptr l1) = "mac#g_thread_self"
fun fun_c2ats_g_thread_exit: (type_c2ats_gpointer) -> void = "mac#g_thread_exit"
fun fun_c2ats_g_thread_join: {l1:addr} (!ptr_v_1(type_c2ats_GThread, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_thread_join"
fun fun_c2ats_g_thread_yield: () -> void = "mac#g_thread_yield"
fun fun_c2ats_g_mutex_init: {l1:addr} (!ptr_v_1(type_c2ats_GMutex, l1) | ptr l1) -> void = "mac#g_mutex_init"
fun fun_c2ats_g_mutex_clear: {l1:addr} (!ptr_v_1(type_c2ats_GMutex, l1) | ptr l1) -> void = "mac#g_mutex_clear"
fun fun_c2ats_g_mutex_lock: {l1:addr} (!ptr_v_1(type_c2ats_GMutex, l1) | ptr l1) -> void = "mac#g_mutex_lock"
fun fun_c2ats_g_mutex_trylock: {l1:addr} (!ptr_v_1(type_c2ats_GMutex, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_mutex_trylock"
fun fun_c2ats_g_mutex_unlock: {l1:addr} (!ptr_v_1(type_c2ats_GMutex, l1) | ptr l1) -> void = "mac#g_mutex_unlock"
fun fun_c2ats_g_rw_lock_init: {l1:addr} (!ptr_v_1(type_c2ats_GRWLock, l1) | ptr l1) -> void = "mac#g_rw_lock_init"
fun fun_c2ats_g_rw_lock_clear: {l1:addr} (!ptr_v_1(type_c2ats_GRWLock, l1) | ptr l1) -> void = "mac#g_rw_lock_clear"
fun fun_c2ats_g_rw_lock_writer_lock: {l1:addr} (!ptr_v_1(type_c2ats_GRWLock, l1) | ptr l1) -> void = "mac#g_rw_lock_writer_lock"
fun fun_c2ats_g_rw_lock_writer_trylock: {l1:addr} (!ptr_v_1(type_c2ats_GRWLock, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_rw_lock_writer_trylock"
fun fun_c2ats_g_rw_lock_writer_unlock: {l1:addr} (!ptr_v_1(type_c2ats_GRWLock, l1) | ptr l1) -> void = "mac#g_rw_lock_writer_unlock"
fun fun_c2ats_g_rw_lock_reader_lock: {l1:addr} (!ptr_v_1(type_c2ats_GRWLock, l1) | ptr l1) -> void = "mac#g_rw_lock_reader_lock"
fun fun_c2ats_g_rw_lock_reader_trylock: {l1:addr} (!ptr_v_1(type_c2ats_GRWLock, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_rw_lock_reader_trylock"
fun fun_c2ats_g_rw_lock_reader_unlock: {l1:addr} (!ptr_v_1(type_c2ats_GRWLock, l1) | ptr l1) -> void = "mac#g_rw_lock_reader_unlock"
fun fun_c2ats_g_rec_mutex_init: {l1:addr} (!ptr_v_1(type_c2ats_GRecMutex, l1) | ptr l1) -> void = "mac#g_rec_mutex_init"
fun fun_c2ats_g_rec_mutex_clear: {l1:addr} (!ptr_v_1(type_c2ats_GRecMutex, l1) | ptr l1) -> void = "mac#g_rec_mutex_clear"
fun fun_c2ats_g_rec_mutex_lock: {l1:addr} (!ptr_v_1(type_c2ats_GRecMutex, l1) | ptr l1) -> void = "mac#g_rec_mutex_lock"
fun fun_c2ats_g_rec_mutex_trylock: {l1:addr} (!ptr_v_1(type_c2ats_GRecMutex, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_rec_mutex_trylock"
fun fun_c2ats_g_rec_mutex_unlock: {l1:addr} (!ptr_v_1(type_c2ats_GRecMutex, l1) | ptr l1) -> void = "mac#g_rec_mutex_unlock"
fun fun_c2ats_g_cond_init: {l1:addr} (!ptr_v_1(type_c2ats_GCond, l1) | ptr l1) -> void = "mac#g_cond_init"
fun fun_c2ats_g_cond_clear: {l1:addr} (!ptr_v_1(type_c2ats_GCond, l1) | ptr l1) -> void = "mac#g_cond_clear"
fun fun_c2ats_g_cond_wait: {l1,l2:addr} (!ptr_v_1(type_c2ats_GCond, l1), !ptr_v_1(type_c2ats_GMutex, l2) | ptr l1, ptr l2) -> void = "mac#g_cond_wait"
fun fun_c2ats_g_cond_signal: {l1:addr} (!ptr_v_1(type_c2ats_GCond, l1) | ptr l1) -> void = "mac#g_cond_signal"
fun fun_c2ats_g_cond_broadcast: {l1:addr} (!ptr_v_1(type_c2ats_GCond, l1) | ptr l1) -> void = "mac#g_cond_broadcast"
fun fun_c2ats_g_cond_wait_until: {l1,l2:addr} (!ptr_v_1(type_c2ats_GCond, l1), !ptr_v_1(type_c2ats_GMutex, l2) | ptr l1, ptr l2, type_c2ats_gint64) -> type_c2ats_gboolean = "mac#g_cond_wait_until"
fun fun_c2ats_g_private_get: {l1:addr} (!ptr_v_1(type_c2ats_GPrivate, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_private_get"
fun fun_c2ats_g_private_set: {l1:addr} (!ptr_v_1(type_c2ats_GPrivate, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_private_set"
fun fun_c2ats_g_private_replace: {l1:addr} (!ptr_v_1(type_c2ats_GPrivate, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_private_replace"
fun fun_c2ats_g_once_impl: {l1:addr} (!ptr_v_1(type_c2ats_GOnce, l1) | ptr l1, type_c2ats_GThreadFunc, type_c2ats_gpointer) -> type_c2ats_gpointer = "mac#g_once_impl"
fun fun_c2ats_g_once_init_enter: (ptr) -> type_c2ats_gboolean = "mac#g_once_init_enter"
fun fun_c2ats_g_once_init_leave: (ptr, type_c2ats_gsize) -> void = "mac#g_once_init_leave"
fun fun_c2ats_g_get_num_processors: () -> type_c2ats_guint = "mac#g_get_num_processors"
typedef type_c2ats_GMutexLocker = void
fun fun_c2ats_g_mutex_locker_new: {l1:addr} (!ptr_v_1(type_c2ats_GMutex, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMutexLocker, l2) | ptr l2) = "mac#g_mutex_locker_new"
fun fun_c2ats_g_mutex_locker_free: {l1:addr} (!ptr_v_1(type_c2ats_GMutexLocker, l1) | ptr l1) -> void = "mac#g_mutex_locker_free"
// File: /usr/include/glib-2.0/glib/gasyncqueue.h
abst@ype struct_c2ats__GAsyncQueue // FIXME! Forward declaration.
typedef type_c2ats_GAsyncQueue = struct_c2ats__GAsyncQueue
fun fun_c2ats_g_async_queue_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1) = "mac#g_async_queue_new"
fun fun_c2ats_g_async_queue_new_full: (type_c2ats_GDestroyNotify) -> [l1:addr] (ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1) = "mac#g_async_queue_new_full"
fun fun_c2ats_g_async_queue_lock: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1) -> void = "mac#g_async_queue_lock"
fun fun_c2ats_g_async_queue_unlock: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1) -> void = "mac#g_async_queue_unlock"
fun fun_c2ats_g_async_queue_ref: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GAsyncQueue, l2) | ptr l2) = "mac#g_async_queue_ref"
fun fun_c2ats_g_async_queue_unref: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1) -> void = "mac#g_async_queue_unref"
fun fun_c2ats_g_async_queue_ref_unlocked: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1) -> void = "mac#g_async_queue_ref_unlocked"
fun fun_c2ats_g_async_queue_unref_and_unlock: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1) -> void = "mac#g_async_queue_unref_and_unlock"
fun fun_c2ats_g_async_queue_push: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_async_queue_push"
fun fun_c2ats_g_async_queue_push_unlocked: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_async_queue_push_unlocked"
fun fun_c2ats_g_async_queue_push_sorted: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> void = "mac#g_async_queue_push_sorted"
fun fun_c2ats_g_async_queue_push_sorted_unlocked: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> void = "mac#g_async_queue_push_sorted_unlocked"
fun fun_c2ats_g_async_queue_pop: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_async_queue_pop"
fun fun_c2ats_g_async_queue_pop_unlocked: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_async_queue_pop_unlocked"
fun fun_c2ats_g_async_queue_try_pop: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_async_queue_try_pop"
fun fun_c2ats_g_async_queue_try_pop_unlocked: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_async_queue_try_pop_unlocked"
fun fun_c2ats_g_async_queue_timeout_pop: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1, type_c2ats_guint64) -> type_c2ats_gpointer = "mac#g_async_queue_timeout_pop"
fun fun_c2ats_g_async_queue_timeout_pop_unlocked: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1, type_c2ats_guint64) -> type_c2ats_gpointer = "mac#g_async_queue_timeout_pop_unlocked"
fun fun_c2ats_g_async_queue_length: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1) -> type_c2ats_gint = "mac#g_async_queue_length"
fun fun_c2ats_g_async_queue_length_unlocked: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1) -> type_c2ats_gint = "mac#g_async_queue_length_unlocked"
fun fun_c2ats_g_async_queue_sort: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> void = "mac#g_async_queue_sort"
fun fun_c2ats_g_async_queue_sort_unlocked: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> void = "mac#g_async_queue_sort_unlocked"
fun fun_c2ats_g_async_queue_remove: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#g_async_queue_remove"
fun fun_c2ats_g_async_queue_remove_unlocked: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#g_async_queue_remove_unlocked"
fun fun_c2ats_g_async_queue_push_front: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_async_queue_push_front"
fun fun_c2ats_g_async_queue_push_front_unlocked: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_async_queue_push_front_unlocked"
fun fun_c2ats_g_async_queue_timed_pop: {l1,l2:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1), !ptr_v_1(type_c2ats_GTimeVal, l2) | ptr l1, ptr l2) -> type_c2ats_gpointer = "mac#g_async_queue_timed_pop"
fun fun_c2ats_g_async_queue_timed_pop_unlocked: {l1,l2:addr} (!ptr_v_1(type_c2ats_GAsyncQueue, l1), !ptr_v_1(type_c2ats_GTimeVal, l2) | ptr l1, ptr l2) -> type_c2ats_gpointer = "mac#g_async_queue_timed_pop_unlocked"
// File: /usr/include/x86_64-linux-gnu/bits/sigset.h
typedef type_c2ats___sig_atomic_t = int
typedef struct_c2ats_anon_5126 = $extype_struct"struct { unsigned long int __val[1024 / (8 * sizeof(unsigned long int))]; }" of {
  __val = @[ulint][1024 / (8 * sizeof(ulint))]
}
typedef type_c2ats___sigset_t = struct_c2ats_anon_5126
fun fun_c2ats___sigismember: {l1:addr} (!ptr_v_1(type_c2ats___sigset_t, l1) | ptr l1, int) -> int = "mac#__sigismember"
fun fun_c2ats___sigaddset: {l1:addr} (!ptr_v_1(type_c2ats___sigset_t, l1) | ptr l1, int) -> int = "mac#__sigaddset"
fun fun_c2ats___sigdelset: {l1:addr} (!ptr_v_1(type_c2ats___sigset_t, l1) | ptr l1, int) -> int = "mac#__sigdelset"
// File: /usr/include/signal.h
typedef type_c2ats_sig_atomic_t = type_c2ats___sig_atomic_t
typedef type_c2ats_sigset_t = type_c2ats___sigset_t
typedef type_c2ats_pid_t = type_c2ats___pid_t
typedef type_c2ats_uid_t = type_c2ats___uid_t
typedef type_c2ats___sighandler_t = (int) -> void
fun fun_c2ats___sysv_signal: (int, type_c2ats___sighandler_t) -> type_c2ats___sighandler_t = "mac#__sysv_signal"
fun fun_c2ats_signal: (int, type_c2ats___sighandler_t) -> type_c2ats___sighandler_t = "mac#signal"
fun fun_c2ats_bsd_signal: (int, type_c2ats___sighandler_t) -> type_c2ats___sighandler_t = "mac#bsd_signal"
fun fun_c2ats_kill: (type_c2ats___pid_t, int) -> int = "mac#kill"
fun fun_c2ats_raise: (int) -> int = "mac#raise"
fun fun_c2ats_sigpause: (int) -> int = "mac#sigpause"
fun fun_c2ats_sigemptyset: {l1:addr} (!ptr_v_1(type_c2ats_sigset_t, l1) | ptr l1) -> int = "mac#sigemptyset"
fun fun_c2ats_sigfillset: {l1:addr} (!ptr_v_1(type_c2ats_sigset_t, l1) | ptr l1) -> int = "mac#sigfillset"
fun fun_c2ats_sigaddset: {l1:addr} (!ptr_v_1(type_c2ats_sigset_t, l1) | ptr l1, int) -> int = "mac#sigaddset"
fun fun_c2ats_sigdelset: {l1:addr} (!ptr_v_1(type_c2ats_sigset_t, l1) | ptr l1, int) -> int = "mac#sigdelset"
fun fun_c2ats_sigismember: {l1:addr} (!ptr_v_1(type_c2ats_sigset_t, l1) | ptr l1, int) -> int = "mac#sigismember"
fun fun_c2ats_sigprocmask: {l1,l2:addr} (!ptr_v_1(type_c2ats_sigset_t, l1), !ptr_v_1(type_c2ats_sigset_t, l2) | int, ptr l1, ptr l2) -> int = "mac#sigprocmask"
fun fun_c2ats_sigsuspend: {l1:addr} (!ptr_v_1(type_c2ats_sigset_t, l1) | ptr l1) -> int = "mac#sigsuspend"
abst@ype struct_c2ats_sigaction // FIXME! Forward declaration.
fun fun_c2ats_sigaction: {l1,l2:addr} (!ptr_v_1(struct_c2ats_sigaction, l1), !ptr_v_1(struct_c2ats_sigaction, l2) | int, ptr l1, ptr l2) -> int = "mac#sigaction"
fun fun_c2ats_sigpending: {l1:addr} (!ptr_v_1(type_c2ats_sigset_t, l1) | ptr l1) -> int = "mac#sigpending"
fun fun_c2ats_sigwait: {l1,l2:addr} (!ptr_v_1(type_c2ats_sigset_t, l1), !ptr_v_1(int, l2) | ptr l1, ptr l2) -> int = "mac#sigwait"
fun fun_c2ats___libc_current_sigrtmin: () -> int = "mac#__libc_current_sigrtmin"
fun fun_c2ats___libc_current_sigrtmax: () -> int = "mac#__libc_current_sigrtmax"
// File: /usr/include/x86_64-linux-gnu/bits/sigaction.h
typedef struct_c2ats_sigaction = $extype_struct"struct sigaction" of {
  sa_handler = type_c2ats___sighandler_t,
  sa_mask = type_c2ats___sigset_t,
  sa_flags = int,
  sa_restorer = () -> void
}
// File: /usr/include/glib-2.0/glib/gbacktrace.h
fun fun_c2ats_g_on_error_query: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#g_on_error_query"
fun fun_c2ats_g_on_error_stack_trace: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#g_on_error_stack_trace"
// File: /usr/include/glib-2.0/glib/gbase64.h
fun fun_c2ats_g_base64_encode_step: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_guchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, type_c2ats_gsize, type_c2ats_gboolean, ptr l2, ptr l3, ptr l4) -> type_c2ats_gsize = "mac#g_base64_encode_step"
fun fun_c2ats_g_base64_encode_close: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | type_c2ats_gboolean, ptr l1, ptr l2, ptr l3) -> type_c2ats_gsize = "mac#g_base64_encode_close"
fun fun_c2ats_g_base64_encode: {l1:addr} (!ptr_v_1(type_c2ats_guchar, l1) | ptr l1, type_c2ats_gsize) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_base64_encode"
fun fun_c2ats_g_base64_decode_step: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_guchar, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_guint, l4) | ptr l1, type_c2ats_gsize, ptr l2, ptr l3, ptr l4) -> type_c2ats_gsize = "mac#g_base64_decode_step"
fun fun_c2ats_g_base64_decode: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_guchar, l3) | ptr l3) = "mac#g_base64_decode"
fun fun_c2ats_g_base64_decode_inplace: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_guchar, l3) | ptr l3) = "mac#g_base64_decode_inplace"
// File: /usr/include/glib-2.0/glib/gbitlock.h
fun fun_c2ats_g_bit_lock: {l1:addr} (!ptr_v_1(type_c2ats_gint, l1) | ptr l1, type_c2ats_gint) -> void = "mac#g_bit_lock"
fun fun_c2ats_g_bit_trylock: {l1:addr} (!ptr_v_1(type_c2ats_gint, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#g_bit_trylock"
fun fun_c2ats_g_bit_unlock: {l1:addr} (!ptr_v_1(type_c2ats_gint, l1) | ptr l1, type_c2ats_gint) -> void = "mac#g_bit_unlock"
fun fun_c2ats_g_pointer_bit_lock: (ptr, type_c2ats_gint) -> void = "mac#g_pointer_bit_lock"
fun fun_c2ats_g_pointer_bit_trylock: (ptr, type_c2ats_gint) -> type_c2ats_gboolean = "mac#g_pointer_bit_trylock"
fun fun_c2ats_g_pointer_bit_unlock: (ptr, type_c2ats_gint) -> void = "mac#g_pointer_bit_unlock"
// File: /usr/include/glib-2.0/glib/gbookmarkfile.h
typedef type_c2ats_GBookmarkFileError = int
#define enum_c2ats_G_BOOKMARK_FILE_ERROR_INVALID_URI 0
#define enum_c2ats_G_BOOKMARK_FILE_ERROR_INVALID_VALUE 1
#define enum_c2ats_G_BOOKMARK_FILE_ERROR_APP_NOT_REGISTERED 2
#define enum_c2ats_G_BOOKMARK_FILE_ERROR_URI_NOT_FOUND 3
#define enum_c2ats_G_BOOKMARK_FILE_ERROR_READ 4
#define enum_c2ats_G_BOOKMARK_FILE_ERROR_UNKNOWN_ENCODING 5
#define enum_c2ats_G_BOOKMARK_FILE_ERROR_WRITE 6
#define enum_c2ats_G_BOOKMARK_FILE_ERROR_FILE_NOT_FOUND 7
fun fun_c2ats_g_bookmark_file_error_quark: () -> type_c2ats_GQuark = "mac#g_bookmark_file_error_quark"
abst@ype struct_c2ats__GBookmarkFile // FIXME! Forward declaration.
typedef type_c2ats_GBookmarkFile = struct_c2ats__GBookmarkFile
fun fun_c2ats_g_bookmark_file_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GBookmarkFile, l1) | ptr l1) = "mac#g_bookmark_file_new"
fun fun_c2ats_g_bookmark_file_free: {l1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1) | ptr l1) -> void = "mac#g_bookmark_file_free"
fun fun_c2ats_g_bookmark_file_load_from_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_bookmark_file_load_from_file"
fun fun_c2ats_g_bookmark_file_load_from_data: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gsize, ptr l3) -> type_c2ats_gboolean = "mac#g_bookmark_file_load_from_data"
fun fun_c2ats_g_bookmark_file_load_from_data_dirs: {l1,l2,l3,l3_1,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_bookmark_file_load_from_data_dirs"
fun fun_c2ats_g_bookmark_file_to_data: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#g_bookmark_file_to_data"
fun fun_c2ats_g_bookmark_file_to_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_bookmark_file_to_file"
fun fun_c2ats_g_bookmark_file_set_title: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_bookmark_file_set_title"
fun fun_c2ats_g_bookmark_file_get_title: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#g_bookmark_file_get_title"
fun fun_c2ats_g_bookmark_file_set_description: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_bookmark_file_set_description"
fun fun_c2ats_g_bookmark_file_get_description: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#g_bookmark_file_get_description"
fun fun_c2ats_g_bookmark_file_set_mime_type: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_bookmark_file_set_mime_type"
fun fun_c2ats_g_bookmark_file_get_mime_type: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#g_bookmark_file_get_mime_type"
fun fun_c2ats_g_bookmark_file_set_groups: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l1, ptr l2, ptr l3, type_c2ats_gsize) -> void = "mac#g_bookmark_file_set_groups"
fun fun_c2ats_g_bookmark_file_add_group: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_bookmark_file_add_group"
fun fun_c2ats_g_bookmark_file_has_group: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_bookmark_file_has_group"
fun fun_c2ats_g_bookmark_file_get_groups: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5,l5_1:addr] (ptr_v_2(type_c2ats_gchar, l5, l5_1) | ptr l5) = "mac#g_bookmark_file_get_groups"
fun fun_c2ats_g_bookmark_file_add_application: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#g_bookmark_file_add_application"
fun fun_c2ats_g_bookmark_file_has_application: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_bookmark_file_has_application"
fun fun_c2ats_g_bookmark_file_get_applications: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5,l5_1:addr] (ptr_v_2(type_c2ats_gchar, l5, l5_1) | ptr l5) = "mac#g_bookmark_file_get_applications"
fun fun_c2ats_g_bookmark_file_set_app_info: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_time_t, ptr l5) -> type_c2ats_gboolean = "mac#g_bookmark_file_set_app_info"
fun fun_c2ats_g_bookmark_file_get_app_info: {l1,l2,l3,l4,l4_1,l5,l6,l7,l7_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_gchar, l4, l4_1), !ptr_v_1(type_c2ats_guint, l5), !ptr_v_1(type_c2ats_time_t, l6), !ptr_v_2(type_c2ats_GError, l7, l7_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7) -> type_c2ats_gboolean = "mac#g_bookmark_file_get_app_info"
fun fun_c2ats_g_bookmark_file_set_is_private: {l1,l2:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#g_bookmark_file_set_is_private"
fun fun_c2ats_g_bookmark_file_get_is_private: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_bookmark_file_get_is_private"
fun fun_c2ats_g_bookmark_file_set_icon: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#g_bookmark_file_set_icon"
fun fun_c2ats_g_bookmark_file_get_icon: {l1,l2,l3,l3_1,l4,l4_1,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1), !ptr_v_2(type_c2ats_gchar, l4, l4_1), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#g_bookmark_file_get_icon"
fun fun_c2ats_g_bookmark_file_set_added: {l1,l2:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_time_t) -> void = "mac#g_bookmark_file_set_added"
fun fun_c2ats_g_bookmark_file_get_added: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_time_t = "mac#g_bookmark_file_get_added"
fun fun_c2ats_g_bookmark_file_set_modified: {l1,l2:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_time_t) -> void = "mac#g_bookmark_file_set_modified"
fun fun_c2ats_g_bookmark_file_get_modified: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_time_t = "mac#g_bookmark_file_get_modified"
fun fun_c2ats_g_bookmark_file_set_visited: {l1,l2:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_time_t) -> void = "mac#g_bookmark_file_set_visited"
fun fun_c2ats_g_bookmark_file_get_visited: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_time_t = "mac#g_bookmark_file_get_visited"
fun fun_c2ats_g_bookmark_file_has_item: {l1,l2:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_bookmark_file_has_item"
fun fun_c2ats_g_bookmark_file_get_size: {l1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1) | ptr l1) -> type_c2ats_gint = "mac#g_bookmark_file_get_size"
fun fun_c2ats_g_bookmark_file_get_uris: {l1,l2:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#g_bookmark_file_get_uris"
fun fun_c2ats_g_bookmark_file_remove_group: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_bookmark_file_remove_group"
fun fun_c2ats_g_bookmark_file_remove_application: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_bookmark_file_remove_application"
fun fun_c2ats_g_bookmark_file_remove_item: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_bookmark_file_remove_item"
fun fun_c2ats_g_bookmark_file_move_item: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GBookmarkFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_bookmark_file_move_item"
// File: /usr/include/glib-2.0/glib/gbytes.h
fun fun_c2ats_g_bytes_new: (type_c2ats_gconstpointer, type_c2ats_gsize) -> [l1:addr] (ptr_v_1(type_c2ats_GBytes, l1) | ptr l1) = "mac#g_bytes_new"
fun fun_c2ats_g_bytes_new_take: (type_c2ats_gpointer, type_c2ats_gsize) -> [l1:addr] (ptr_v_1(type_c2ats_GBytes, l1) | ptr l1) = "mac#g_bytes_new_take"
fun fun_c2ats_g_bytes_new_static: (type_c2ats_gconstpointer, type_c2ats_gsize) -> [l1:addr] (ptr_v_1(type_c2ats_GBytes, l1) | ptr l1) = "mac#g_bytes_new_static"
fun fun_c2ats_g_bytes_new_with_free_func: (type_c2ats_gconstpointer, type_c2ats_gsize, type_c2ats_GDestroyNotify, type_c2ats_gpointer) -> [l1:addr] (ptr_v_1(type_c2ats_GBytes, l1) | ptr l1) = "mac#g_bytes_new_with_free_func"
fun fun_c2ats_g_bytes_new_from_bytes: {l1:addr} (!ptr_v_1(type_c2ats_GBytes, l1) | ptr l1, type_c2ats_gsize, type_c2ats_gsize) -> [l2:addr] (ptr_v_1(type_c2ats_GBytes, l2) | ptr l2) = "mac#g_bytes_new_from_bytes"
fun fun_c2ats_g_bytes_get_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_GBytes, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> type_c2ats_gconstpointer = "mac#g_bytes_get_data"
fun fun_c2ats_g_bytes_get_size: {l1:addr} (!ptr_v_1(type_c2ats_GBytes, l1) | ptr l1) -> type_c2ats_gsize = "mac#g_bytes_get_size"
fun fun_c2ats_g_bytes_ref: {l1:addr} (!ptr_v_1(type_c2ats_GBytes, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GBytes, l2) | ptr l2) = "mac#g_bytes_ref"
fun fun_c2ats_g_bytes_unref: {l1:addr} (!ptr_v_1(type_c2ats_GBytes, l1) | ptr l1) -> void = "mac#g_bytes_unref"
fun fun_c2ats_g_bytes_unref_to_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_GBytes, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> type_c2ats_gpointer = "mac#g_bytes_unref_to_data"
fun fun_c2ats_g_bytes_unref_to_array: {l1:addr} (!ptr_v_1(type_c2ats_GBytes, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GByteArray, l2) | ptr l2) = "mac#g_bytes_unref_to_array"
fun fun_c2ats_g_bytes_hash: (type_c2ats_gconstpointer) -> type_c2ats_guint = "mac#g_bytes_hash"
fun fun_c2ats_g_bytes_equal: (type_c2ats_gconstpointer, type_c2ats_gconstpointer) -> type_c2ats_gboolean = "mac#g_bytes_equal"
fun fun_c2ats_g_bytes_compare: (type_c2ats_gconstpointer, type_c2ats_gconstpointer) -> type_c2ats_gint = "mac#g_bytes_compare"
// File: /usr/include/glib-2.0/glib/gcharset.h
fun fun_c2ats_g_get_charset: {l1,l1_1:addr} (!ptr_v_2(char, l1, l1_1) | ptr l1) -> type_c2ats_gboolean = "mac#g_get_charset"
fun fun_c2ats_g_get_codeset: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_get_codeset"
fun fun_c2ats_g_get_language_names: () -> [l1,l1_1:addr] (ptr_v_2(type_c2ats_gchar, l1, l1_1) | ptr l1) = "mac#g_get_language_names"
fun fun_c2ats_g_get_locale_variants: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#g_get_locale_variants"
// File: /usr/include/glib-2.0/glib/gchecksum.h
typedef type_c2ats_GChecksumType = int
#define enum_c2ats_G_CHECKSUM_MD5 0
#define enum_c2ats_G_CHECKSUM_SHA1 1
#define enum_c2ats_G_CHECKSUM_SHA256 2
#define enum_c2ats_G_CHECKSUM_SHA512 3
abst@ype struct_c2ats__GChecksum // FIXME! Forward declaration.
typedef type_c2ats_GChecksum = struct_c2ats__GChecksum
fun fun_c2ats_g_checksum_type_get_length: (type_c2ats_GChecksumType) -> type_c2ats_gssize = "mac#g_checksum_type_get_length"
fun fun_c2ats_g_checksum_new: (type_c2ats_GChecksumType) -> [l1:addr] (ptr_v_1(type_c2ats_GChecksum, l1) | ptr l1) = "mac#g_checksum_new"
fun fun_c2ats_g_checksum_reset: {l1:addr} (!ptr_v_1(type_c2ats_GChecksum, l1) | ptr l1) -> void = "mac#g_checksum_reset"
fun fun_c2ats_g_checksum_copy: {l1:addr} (!ptr_v_1(type_c2ats_GChecksum, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GChecksum, l2) | ptr l2) = "mac#g_checksum_copy"
fun fun_c2ats_g_checksum_free: {l1:addr} (!ptr_v_1(type_c2ats_GChecksum, l1) | ptr l1) -> void = "mac#g_checksum_free"
fun fun_c2ats_g_checksum_update: {l1,l2:addr} (!ptr_v_1(type_c2ats_GChecksum, l1), !ptr_v_1(type_c2ats_guchar, l2) | ptr l1, ptr l2, type_c2ats_gssize) -> void = "mac#g_checksum_update"
fun fun_c2ats_g_checksum_get_string: {l1:addr} (!ptr_v_1(type_c2ats_GChecksum, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_checksum_get_string"
fun fun_c2ats_g_checksum_get_digest: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GChecksum, l1), !ptr_v_1(type_c2ats_guint8, l2), !ptr_v_1(type_c2ats_gsize, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_checksum_get_digest"
fun fun_c2ats_g_compute_checksum_for_data: {l1:addr} (!ptr_v_1(type_c2ats_guchar, l1) | type_c2ats_GChecksumType, ptr l1, type_c2ats_gsize) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_compute_checksum_for_data"
fun fun_c2ats_g_compute_checksum_for_string: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_GChecksumType, ptr l1, type_c2ats_gssize) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_compute_checksum_for_string"
fun fun_c2ats_g_compute_checksum_for_bytes: {l1:addr} (!ptr_v_1(type_c2ats_GBytes, l1) | type_c2ats_GChecksumType, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_compute_checksum_for_bytes"
// File: /usr/include/glib-2.0/glib/gconvert.h
typedef type_c2ats_GConvertError = int
#define enum_c2ats_G_CONVERT_ERROR_NO_CONVERSION 0
#define enum_c2ats_G_CONVERT_ERROR_ILLEGAL_SEQUENCE 1
#define enum_c2ats_G_CONVERT_ERROR_FAILED 2
#define enum_c2ats_G_CONVERT_ERROR_PARTIAL_INPUT 3
#define enum_c2ats_G_CONVERT_ERROR_BAD_URI 4
#define enum_c2ats_G_CONVERT_ERROR_NOT_ABSOLUTE_PATH 5
#define enum_c2ats_G_CONVERT_ERROR_NO_MEMORY 6
fun fun_c2ats_g_convert_error_quark: () -> type_c2ats_GQuark = "mac#g_convert_error_quark"
abst@ype struct_c2ats__GIConv // FIXME! Forward declaration.
typedef type_c2ats_GIConv = cPtr0(struct_c2ats__GIConv)
fun fun_c2ats_g_iconv_open: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_GIConv = "mac#g_iconv_open"
fun fun_c2ats_g_iconv: {l1,l1_1,l2,l3,l3_1,l4:addr} (!ptr_v_2(type_c2ats_gchar, l1, l1_1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1), !ptr_v_1(type_c2ats_gsize, l4) | type_c2ats_GIConv, ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gsize = "mac#g_iconv"
fun fun_c2ats_g_iconv_close: (type_c2ats_GIConv) -> type_c2ats_gint = "mac#g_iconv_close"
fun fun_c2ats_g_convert: {l1,l2,l3,l4,l5,l6,l6_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gsize, l4), !ptr_v_1(type_c2ats_gsize, l5), !ptr_v_2(type_c2ats_GError, l6, l6_1) | ptr l1, type_c2ats_gssize, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> [l7:addr] (ptr_v_1(type_c2ats_gchar, l7) | ptr l7) = "mac#g_convert"
fun fun_c2ats_g_convert_with_iconv: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, type_c2ats_gssize, type_c2ats_GIConv, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_gchar, l5) | ptr l5) = "mac#g_convert_with_iconv"
fun fun_c2ats_g_convert_with_fallback: {l1,l2,l3,l4,l5,l6,l7,l7_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gsize, l5), !ptr_v_1(type_c2ats_gsize, l6), !ptr_v_2(type_c2ats_GError, l7, l7_1) | ptr l1, type_c2ats_gssize, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7) -> [l8:addr] (ptr_v_1(type_c2ats_gchar, l8) | ptr l8) = "mac#g_convert_with_fallback"
fun fun_c2ats_g_locale_to_utf8: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, type_c2ats_gssize, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_gchar, l5) | ptr l5) = "mac#g_locale_to_utf8"
fun fun_c2ats_g_locale_from_utf8: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, type_c2ats_gssize, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_gchar, l5) | ptr l5) = "mac#g_locale_from_utf8"
fun fun_c2ats_g_filename_to_utf8: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, type_c2ats_gssize, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_gchar, l5) | ptr l5) = "mac#g_filename_to_utf8"
fun fun_c2ats_g_filename_from_utf8: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, type_c2ats_gssize, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_gchar, l5) | ptr l5) = "mac#g_filename_from_utf8"
fun fun_c2ats_g_filename_from_uri: {l1,l2,l2_1,l3,l3_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#g_filename_from_uri"
fun fun_c2ats_g_filename_to_uri: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#g_filename_to_uri"
fun fun_c2ats_g_filename_display_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_filename_display_name"
fun fun_c2ats_g_get_filename_charsets: {l1,l1_1,l1_2:addr} (!ptr_v_3(type_c2ats_gchar, l1, l1_1, l1_2) | ptr l1) -> type_c2ats_gboolean = "mac#g_get_filename_charsets"
fun fun_c2ats_g_filename_display_basename: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_filename_display_basename"
fun fun_c2ats_g_uri_list_extract_uris: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#g_uri_list_extract_uris"
// File: /usr/include/glib-2.0/glib/gdataset.h
abst@ype struct_c2ats__GData // FIXME! Forward declaration.
typedef type_c2ats_GData = struct_c2ats__GData
typedef type_c2ats_GDataForeachFunc = (type_c2ats_GQuark, type_c2ats_gpointer, type_c2ats_gpointer) -> void
fun fun_c2ats_g_datalist_init: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GData, l1, l1_1) | ptr l1) -> void = "mac#g_datalist_init"
fun fun_c2ats_g_datalist_clear: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GData, l1, l1_1) | ptr l1) -> void = "mac#g_datalist_clear"
fun fun_c2ats_g_datalist_id_get_data: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GData, l1, l1_1) | ptr l1, type_c2ats_GQuark) -> type_c2ats_gpointer = "mac#g_datalist_id_get_data"
fun fun_c2ats_g_datalist_id_set_data_full: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GData, l1, l1_1) | ptr l1, type_c2ats_GQuark, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#g_datalist_id_set_data_full"
typedef type_c2ats_GDuplicateFunc = (type_c2ats_gpointer, type_c2ats_gpointer) -> type_c2ats_gpointer
fun fun_c2ats_g_datalist_id_dup_data: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GData, l1, l1_1) | ptr l1, type_c2ats_GQuark, type_c2ats_GDuplicateFunc, type_c2ats_gpointer) -> type_c2ats_gpointer = "mac#g_datalist_id_dup_data"
fun fun_c2ats_g_datalist_id_replace_data: {l1,l1_1,l2:addr} (!ptr_v_2(type_c2ats_GData, l1, l1_1), !ptr_v_1(type_c2ats_GDestroyNotify, l2) | ptr l1, type_c2ats_GQuark, type_c2ats_gpointer, type_c2ats_gpointer, type_c2ats_GDestroyNotify, ptr l2) -> type_c2ats_gboolean = "mac#g_datalist_id_replace_data"
fun fun_c2ats_g_datalist_id_remove_no_notify: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GData, l1, l1_1) | ptr l1, type_c2ats_GQuark) -> type_c2ats_gpointer = "mac#g_datalist_id_remove_no_notify"
fun fun_c2ats_g_datalist_foreach: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GData, l1, l1_1) | ptr l1, type_c2ats_GDataForeachFunc, type_c2ats_gpointer) -> void = "mac#g_datalist_foreach"
fun fun_c2ats_g_datalist_set_flags: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GData, l1, l1_1) | ptr l1, type_c2ats_guint) -> void = "mac#g_datalist_set_flags"
fun fun_c2ats_g_datalist_unset_flags: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GData, l1, l1_1) | ptr l1, type_c2ats_guint) -> void = "mac#g_datalist_unset_flags"
fun fun_c2ats_g_datalist_get_flags: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GData, l1, l1_1) | ptr l1) -> type_c2ats_guint = "mac#g_datalist_get_flags"
fun fun_c2ats_g_dataset_destroy: (type_c2ats_gconstpointer) -> void = "mac#g_dataset_destroy"
fun fun_c2ats_g_dataset_id_get_data: (type_c2ats_gconstpointer, type_c2ats_GQuark) -> type_c2ats_gpointer = "mac#g_dataset_id_get_data"
fun fun_c2ats_g_datalist_get_data: {l1,l1_1,l2:addr} (!ptr_v_2(type_c2ats_GData, l1, l1_1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gpointer = "mac#g_datalist_get_data"
fun fun_c2ats_g_dataset_id_set_data_full: (type_c2ats_gconstpointer, type_c2ats_GQuark, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#g_dataset_id_set_data_full"
fun fun_c2ats_g_dataset_id_remove_no_notify: (type_c2ats_gconstpointer, type_c2ats_GQuark) -> type_c2ats_gpointer = "mac#g_dataset_id_remove_no_notify"
fun fun_c2ats_g_dataset_foreach: (type_c2ats_gconstpointer, type_c2ats_GDataForeachFunc, type_c2ats_gpointer) -> void = "mac#g_dataset_foreach"
// File: /usr/include/glib-2.0/glib/gdate.h
typedef type_c2ats_GTime = type_c2ats_gint32
typedef type_c2ats_GDateYear = type_c2ats_guint16
typedef type_c2ats_GDateDay = type_c2ats_guint8
abst@ype struct_c2ats__GDate // FIXME! Forward declaration.
typedef type_c2ats_GDate = struct_c2ats__GDate
typedef type_c2ats_GDateDMY = int
#define enum_c2ats_G_DATE_DAY 0
#define enum_c2ats_G_DATE_MONTH 1
#define enum_c2ats_G_DATE_YEAR 2
typedef type_c2ats_GDateWeekday = int
#define enum_c2ats_G_DATE_BAD_WEEKDAY 0
#define enum_c2ats_G_DATE_MONDAY 1
#define enum_c2ats_G_DATE_TUESDAY 2
#define enum_c2ats_G_DATE_WEDNESDAY 3
#define enum_c2ats_G_DATE_THURSDAY 4
#define enum_c2ats_G_DATE_FRIDAY 5
#define enum_c2ats_G_DATE_SATURDAY 6
#define enum_c2ats_G_DATE_SUNDAY 7
typedef type_c2ats_GDateMonth = int
#define enum_c2ats_G_DATE_BAD_MONTH 0
#define enum_c2ats_G_DATE_JANUARY 1
#define enum_c2ats_G_DATE_FEBRUARY 2
#define enum_c2ats_G_DATE_MARCH 3
#define enum_c2ats_G_DATE_APRIL 4
#define enum_c2ats_G_DATE_MAY 5
#define enum_c2ats_G_DATE_JUNE 6
#define enum_c2ats_G_DATE_JULY 7
#define enum_c2ats_G_DATE_AUGUST 8
#define enum_c2ats_G_DATE_SEPTEMBER 9
#define enum_c2ats_G_DATE_OCTOBER 10
#define enum_c2ats_G_DATE_NOVEMBER 11
#define enum_c2ats_G_DATE_DECEMBER 12
typedef struct_c2ats__GDate = $extype_struct"struct _GDate" of {
  julian_days = type_c2ats_guint,
  julian = type_c2ats_guint,
  dmy = type_c2ats_guint,
  day = type_c2ats_guint,
  month = type_c2ats_guint,
  year = type_c2ats_guint
}
fun fun_c2ats_g_date_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GDate, l1) | ptr l1) = "mac#g_date_new"
fun fun_c2ats_g_date_new_dmy: (type_c2ats_GDateDay, type_c2ats_GDateMonth, type_c2ats_GDateYear) -> [l1:addr] (ptr_v_1(type_c2ats_GDate, l1) | ptr l1) = "mac#g_date_new_dmy"
fun fun_c2ats_g_date_new_julian: (type_c2ats_guint32) -> [l1:addr] (ptr_v_1(type_c2ats_GDate, l1) | ptr l1) = "mac#g_date_new_julian"
fun fun_c2ats_g_date_free: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1) -> void = "mac#g_date_free"
fun fun_c2ats_g_date_valid: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_date_valid"
fun fun_c2ats_g_date_valid_day: (type_c2ats_GDateDay) -> type_c2ats_gboolean = "mac#g_date_valid_day"
fun fun_c2ats_g_date_valid_month: (type_c2ats_GDateMonth) -> type_c2ats_gboolean = "mac#g_date_valid_month"
fun fun_c2ats_g_date_valid_year: (type_c2ats_GDateYear) -> type_c2ats_gboolean = "mac#g_date_valid_year"
fun fun_c2ats_g_date_valid_weekday: (type_c2ats_GDateWeekday) -> type_c2ats_gboolean = "mac#g_date_valid_weekday"
fun fun_c2ats_g_date_valid_julian: (type_c2ats_guint32) -> type_c2ats_gboolean = "mac#g_date_valid_julian"
fun fun_c2ats_g_date_valid_dmy: (type_c2ats_GDateDay, type_c2ats_GDateMonth, type_c2ats_GDateYear) -> type_c2ats_gboolean = "mac#g_date_valid_dmy"
fun fun_c2ats_g_date_get_weekday: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1) -> type_c2ats_GDateWeekday = "mac#g_date_get_weekday"
fun fun_c2ats_g_date_get_month: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1) -> type_c2ats_GDateMonth = "mac#g_date_get_month"
fun fun_c2ats_g_date_get_year: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1) -> type_c2ats_GDateYear = "mac#g_date_get_year"
fun fun_c2ats_g_date_get_day: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1) -> type_c2ats_GDateDay = "mac#g_date_get_day"
fun fun_c2ats_g_date_get_julian: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1) -> type_c2ats_guint32 = "mac#g_date_get_julian"
fun fun_c2ats_g_date_get_day_of_year: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1) -> type_c2ats_guint = "mac#g_date_get_day_of_year"
fun fun_c2ats_g_date_get_monday_week_of_year: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1) -> type_c2ats_guint = "mac#g_date_get_monday_week_of_year"
fun fun_c2ats_g_date_get_sunday_week_of_year: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1) -> type_c2ats_guint = "mac#g_date_get_sunday_week_of_year"
fun fun_c2ats_g_date_get_iso8601_week_of_year: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1) -> type_c2ats_guint = "mac#g_date_get_iso8601_week_of_year"
fun fun_c2ats_g_date_clear: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_date_clear"
fun fun_c2ats_g_date_set_parse: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDate, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_date_set_parse"
fun fun_c2ats_g_date_set_time_t: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1, type_c2ats_time_t) -> void = "mac#g_date_set_time_t"
fun fun_c2ats_g_date_set_time_val: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDate, l1), !ptr_v_1(type_c2ats_GTimeVal, l2) | ptr l1, ptr l2) -> void = "mac#g_date_set_time_val"
fun fun_c2ats_g_date_set_time: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1, type_c2ats_GTime) -> void = "mac#g_date_set_time"
fun fun_c2ats_g_date_set_month: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1, type_c2ats_GDateMonth) -> void = "mac#g_date_set_month"
fun fun_c2ats_g_date_set_day: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1, type_c2ats_GDateDay) -> void = "mac#g_date_set_day"
fun fun_c2ats_g_date_set_year: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1, type_c2ats_GDateYear) -> void = "mac#g_date_set_year"
fun fun_c2ats_g_date_set_dmy: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1, type_c2ats_GDateDay, type_c2ats_GDateMonth, type_c2ats_GDateYear) -> void = "mac#g_date_set_dmy"
fun fun_c2ats_g_date_set_julian: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1, type_c2ats_guint32) -> void = "mac#g_date_set_julian"
fun fun_c2ats_g_date_is_first_of_month: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_date_is_first_of_month"
fun fun_c2ats_g_date_is_last_of_month: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_date_is_last_of_month"
fun fun_c2ats_g_date_add_days: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_date_add_days"
fun fun_c2ats_g_date_subtract_days: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_date_subtract_days"
fun fun_c2ats_g_date_add_months: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_date_add_months"
fun fun_c2ats_g_date_subtract_months: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_date_subtract_months"
fun fun_c2ats_g_date_add_years: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_date_add_years"
fun fun_c2ats_g_date_subtract_years: {l1:addr} (!ptr_v_1(type_c2ats_GDate, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_date_subtract_years"
fun fun_c2ats_g_date_is_leap_year: (type_c2ats_GDateYear) -> type_c2ats_gboolean = "mac#g_date_is_leap_year"
fun fun_c2ats_g_date_get_days_in_month: (type_c2ats_GDateMonth, type_c2ats_GDateYear) -> type_c2ats_guint8 = "mac#g_date_get_days_in_month"
fun fun_c2ats_g_date_get_monday_weeks_in_year: (type_c2ats_GDateYear) -> type_c2ats_guint8 = "mac#g_date_get_monday_weeks_in_year"
fun fun_c2ats_g_date_get_sunday_weeks_in_year: (type_c2ats_GDateYear) -> type_c2ats_guint8 = "mac#g_date_get_sunday_weeks_in_year"
fun fun_c2ats_g_date_days_between: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDate, l1), !ptr_v_1(type_c2ats_GDate, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#g_date_days_between"
fun fun_c2ats_g_date_compare: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDate, l1), !ptr_v_1(type_c2ats_GDate, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#g_date_compare"
fun fun_c2ats_g_date_to_struct_tm: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDate, l1), !ptr_v_1(struct_c2ats_tm, l2) | ptr l1, ptr l2) -> void = "mac#g_date_to_struct_tm"
fun fun_c2ats_g_date_clamp: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDate, l1), !ptr_v_1(type_c2ats_GDate, l2), !ptr_v_1(type_c2ats_GDate, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_date_clamp"
fun fun_c2ats_g_date_order: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDate, l1), !ptr_v_1(type_c2ats_GDate, l2) | ptr l1, ptr l2) -> void = "mac#g_date_order"
fun fun_c2ats_g_date_strftime: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GDate, l3) | ptr l1, type_c2ats_gsize, ptr l2, ptr l3) -> type_c2ats_gsize = "mac#g_date_strftime"
// File: /usr/include/glib-2.0/glib/gtimezone.h
abst@ype struct_c2ats__GTimeZone // FIXME! Forward declaration.
typedef type_c2ats_GTimeZone = struct_c2ats__GTimeZone
typedef type_c2ats_GTimeType = int
#define enum_c2ats_G_TIME_TYPE_STANDARD 0
#define enum_c2ats_G_TIME_TYPE_DAYLIGHT 1
#define enum_c2ats_G_TIME_TYPE_UNIVERSAL 2
fun fun_c2ats_g_time_zone_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTimeZone, l2) | ptr l2) = "mac#g_time_zone_new"
fun fun_c2ats_g_time_zone_new_utc: () -> [l1:addr] (ptr_v_1(type_c2ats_GTimeZone, l1) | ptr l1) = "mac#g_time_zone_new_utc"
fun fun_c2ats_g_time_zone_new_local: () -> [l1:addr] (ptr_v_1(type_c2ats_GTimeZone, l1) | ptr l1) = "mac#g_time_zone_new_local"
fun fun_c2ats_g_time_zone_ref: {l1:addr} (!ptr_v_1(type_c2ats_GTimeZone, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTimeZone, l2) | ptr l2) = "mac#g_time_zone_ref"
fun fun_c2ats_g_time_zone_unref: {l1:addr} (!ptr_v_1(type_c2ats_GTimeZone, l1) | ptr l1) -> void = "mac#g_time_zone_unref"
fun fun_c2ats_g_time_zone_find_interval: {l1:addr} (!ptr_v_1(type_c2ats_GTimeZone, l1) | ptr l1, type_c2ats_GTimeType, type_c2ats_gint64) -> type_c2ats_gint = "mac#g_time_zone_find_interval"
fun fun_c2ats_g_time_zone_adjust_time: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTimeZone, l1), !ptr_v_1(type_c2ats_gint64, l2) | ptr l1, type_c2ats_GTimeType, ptr l2) -> type_c2ats_gint = "mac#g_time_zone_adjust_time"
fun fun_c2ats_g_time_zone_get_abbreviation: {l1:addr} (!ptr_v_1(type_c2ats_GTimeZone, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_time_zone_get_abbreviation"
fun fun_c2ats_g_time_zone_get_offset: {l1:addr} (!ptr_v_1(type_c2ats_GTimeZone, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gint32 = "mac#g_time_zone_get_offset"
fun fun_c2ats_g_time_zone_is_dst: {l1:addr} (!ptr_v_1(type_c2ats_GTimeZone, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#g_time_zone_is_dst"
// File: /usr/include/glib-2.0/glib/gdatetime.h
typedef type_c2ats_GTimeSpan = type_c2ats_gint64
abst@ype struct_c2ats__GDateTime // FIXME! Forward declaration.
typedef type_c2ats_GDateTime = struct_c2ats__GDateTime
fun fun_c2ats_g_date_time_unref: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> void = "mac#g_date_time_unref"
fun fun_c2ats_g_date_time_ref: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDateTime, l2) | ptr l2) = "mac#g_date_time_ref"
fun fun_c2ats_g_date_time_new_now: {l1:addr} (!ptr_v_1(type_c2ats_GTimeZone, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDateTime, l2) | ptr l2) = "mac#g_date_time_new_now"
fun fun_c2ats_g_date_time_new_now_local: () -> [l1:addr] (ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) = "mac#g_date_time_new_now_local"
fun fun_c2ats_g_date_time_new_now_utc: () -> [l1:addr] (ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) = "mac#g_date_time_new_now_utc"
fun fun_c2ats_g_date_time_new_from_unix_local: (type_c2ats_gint64) -> [l1:addr] (ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) = "mac#g_date_time_new_from_unix_local"
fun fun_c2ats_g_date_time_new_from_unix_utc: (type_c2ats_gint64) -> [l1:addr] (ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) = "mac#g_date_time_new_from_unix_utc"
fun fun_c2ats_g_date_time_new_from_timeval_local: {l1:addr} (!ptr_v_1(type_c2ats_GTimeVal, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDateTime, l2) | ptr l2) = "mac#g_date_time_new_from_timeval_local"
fun fun_c2ats_g_date_time_new_from_timeval_utc: {l1:addr} (!ptr_v_1(type_c2ats_GTimeVal, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDateTime, l2) | ptr l2) = "mac#g_date_time_new_from_timeval_utc"
fun fun_c2ats_g_date_time_new: {l1:addr} (!ptr_v_1(type_c2ats_GTimeZone, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gdouble) -> [l2:addr] (ptr_v_1(type_c2ats_GDateTime, l2) | ptr l2) = "mac#g_date_time_new"
fun fun_c2ats_g_date_time_new_local: (type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gdouble) -> [l1:addr] (ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) = "mac#g_date_time_new_local"
fun fun_c2ats_g_date_time_new_utc: (type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gdouble) -> [l1:addr] (ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) = "mac#g_date_time_new_utc"
fun fun_c2ats_g_date_time_add: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1, type_c2ats_GTimeSpan) -> [l2:addr] (ptr_v_1(type_c2ats_GDateTime, l2) | ptr l2) = "mac#g_date_time_add"
fun fun_c2ats_g_date_time_add_years: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GDateTime, l2) | ptr l2) = "mac#g_date_time_add_years"
fun fun_c2ats_g_date_time_add_months: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GDateTime, l2) | ptr l2) = "mac#g_date_time_add_months"
fun fun_c2ats_g_date_time_add_weeks: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GDateTime, l2) | ptr l2) = "mac#g_date_time_add_weeks"
fun fun_c2ats_g_date_time_add_days: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GDateTime, l2) | ptr l2) = "mac#g_date_time_add_days"
fun fun_c2ats_g_date_time_add_hours: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GDateTime, l2) | ptr l2) = "mac#g_date_time_add_hours"
fun fun_c2ats_g_date_time_add_minutes: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GDateTime, l2) | ptr l2) = "mac#g_date_time_add_minutes"
fun fun_c2ats_g_date_time_add_seconds: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1, type_c2ats_gdouble) -> [l2:addr] (ptr_v_1(type_c2ats_GDateTime, l2) | ptr l2) = "mac#g_date_time_add_seconds"
fun fun_c2ats_g_date_time_add_full: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gdouble) -> [l2:addr] (ptr_v_1(type_c2ats_GDateTime, l2) | ptr l2) = "mac#g_date_time_add_full"
fun fun_c2ats_g_date_time_compare: (type_c2ats_gconstpointer, type_c2ats_gconstpointer) -> type_c2ats_gint = "mac#g_date_time_compare"
fun fun_c2ats_g_date_time_difference: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDateTime, l1), !ptr_v_1(type_c2ats_GDateTime, l2) | ptr l1, ptr l2) -> type_c2ats_GTimeSpan = "mac#g_date_time_difference"
fun fun_c2ats_g_date_time_hash: (type_c2ats_gconstpointer) -> type_c2ats_guint = "mac#g_date_time_hash"
fun fun_c2ats_g_date_time_equal: (type_c2ats_gconstpointer, type_c2ats_gconstpointer) -> type_c2ats_gboolean = "mac#g_date_time_equal"
fun fun_c2ats_g_date_time_get_ymd: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GDateTime, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#g_date_time_get_ymd"
fun fun_c2ats_g_date_time_get_year: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> type_c2ats_gint = "mac#g_date_time_get_year"
fun fun_c2ats_g_date_time_get_month: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> type_c2ats_gint = "mac#g_date_time_get_month"
fun fun_c2ats_g_date_time_get_day_of_month: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> type_c2ats_gint = "mac#g_date_time_get_day_of_month"
fun fun_c2ats_g_date_time_get_week_numbering_year: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> type_c2ats_gint = "mac#g_date_time_get_week_numbering_year"
fun fun_c2ats_g_date_time_get_week_of_year: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> type_c2ats_gint = "mac#g_date_time_get_week_of_year"
fun fun_c2ats_g_date_time_get_day_of_week: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> type_c2ats_gint = "mac#g_date_time_get_day_of_week"
fun fun_c2ats_g_date_time_get_day_of_year: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> type_c2ats_gint = "mac#g_date_time_get_day_of_year"
fun fun_c2ats_g_date_time_get_hour: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> type_c2ats_gint = "mac#g_date_time_get_hour"
fun fun_c2ats_g_date_time_get_minute: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> type_c2ats_gint = "mac#g_date_time_get_minute"
fun fun_c2ats_g_date_time_get_second: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> type_c2ats_gint = "mac#g_date_time_get_second"
fun fun_c2ats_g_date_time_get_microsecond: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> type_c2ats_gint = "mac#g_date_time_get_microsecond"
fun fun_c2ats_g_date_time_get_seconds: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> type_c2ats_gdouble = "mac#g_date_time_get_seconds"
fun fun_c2ats_g_date_time_to_unix: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> type_c2ats_gint64 = "mac#g_date_time_to_unix"
fun fun_c2ats_g_date_time_to_timeval: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDateTime, l1), !ptr_v_1(type_c2ats_GTimeVal, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_date_time_to_timeval"
fun fun_c2ats_g_date_time_get_utc_offset: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> type_c2ats_GTimeSpan = "mac#g_date_time_get_utc_offset"
fun fun_c2ats_g_date_time_get_timezone_abbreviation: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_date_time_get_timezone_abbreviation"
fun fun_c2ats_g_date_time_is_daylight_savings: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_date_time_is_daylight_savings"
fun fun_c2ats_g_date_time_to_timezone: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDateTime, l1), !ptr_v_1(type_c2ats_GTimeZone, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDateTime, l3) | ptr l3) = "mac#g_date_time_to_timezone"
fun fun_c2ats_g_date_time_to_local: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDateTime, l2) | ptr l2) = "mac#g_date_time_to_local"
fun fun_c2ats_g_date_time_to_utc: {l1:addr} (!ptr_v_1(type_c2ats_GDateTime, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDateTime, l2) | ptr l2) = "mac#g_date_time_to_utc"
fun fun_c2ats_g_date_time_format: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDateTime, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_date_time_format"
// File: /usr/include/dirent.h
typedef type_c2ats_ino_t = type_c2ats___ino_t
abst@ype struct_c2ats___dirstream // FIXME! Forward declaration.
typedef type_c2ats_DIR = struct_c2ats___dirstream
fun fun_c2ats_opendir: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_DIR, l2) | ptr l2) = "mac#opendir"
fun fun_c2ats_closedir: {l1:addr} (!ptr_v_1(type_c2ats_DIR, l1) | ptr l1) -> int = "mac#closedir"
abst@ype struct_c2ats_dirent // FIXME! Forward declaration.
fun fun_c2ats_readdir: {l1:addr} (!ptr_v_1(type_c2ats_DIR, l1) | ptr l1) -> [l2:addr] (ptr_v_1(struct_c2ats_dirent, l2) | ptr l2) = "mac#readdir"
fun fun_c2ats_readdir_r: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_DIR, l1), !ptr_v_1(struct_c2ats_dirent, l2), !ptr_v_2(struct_c2ats_dirent, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> int = "mac#readdir_r"
fun fun_c2ats_rewinddir: {l1:addr} (!ptr_v_1(type_c2ats_DIR, l1) | ptr l1) -> void = "mac#rewinddir"
fun fun_c2ats_seekdir: {l1:addr} (!ptr_v_1(type_c2ats_DIR, l1) | ptr l1, lint) -> void = "mac#seekdir"
fun fun_c2ats_telldir: {l1:addr} (!ptr_v_1(type_c2ats_DIR, l1) | ptr l1) -> lint = "mac#telldir"
// File: /usr/include/x86_64-linux-gnu/bits/dirent.h
typedef struct_c2ats_dirent = $extype_struct"struct dirent" of {
  d_ino = type_c2ats___ino_t,
  d_off = type_c2ats___off_t,
  d_reclen = usint,
  d_type = uchar,
  d_name = @[char][256]
}
// File: /usr/include/glib-2.0/glib/gdir.h
abst@ype struct_c2ats__GDir // FIXME! Forward declaration.
typedef type_c2ats_GDir = struct_c2ats__GDir
fun fun_c2ats_g_dir_open: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_guint, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDir, l3) | ptr l3) = "mac#g_dir_open"
fun fun_c2ats_g_dir_read_name: {l1:addr} (!ptr_v_1(type_c2ats_GDir, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dir_read_name"
fun fun_c2ats_g_dir_rewind: {l1:addr} (!ptr_v_1(type_c2ats_GDir, l1) | ptr l1) -> void = "mac#g_dir_rewind"
fun fun_c2ats_g_dir_close: {l1:addr} (!ptr_v_1(type_c2ats_GDir, l1) | ptr l1) -> void = "mac#g_dir_close"
// File: /usr/include/glib-2.0/glib/genviron.h
fun fun_c2ats_g_getenv: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_getenv"
fun fun_c2ats_g_setenv: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#g_setenv"
fun fun_c2ats_g_unsetenv: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#g_unsetenv"
fun fun_c2ats_g_listenv: () -> [l1,l1_1:addr] (ptr_v_2(type_c2ats_gchar, l1, l1_1) | ptr l1) = "mac#g_listenv"
fun fun_c2ats_g_get_environ: () -> [l1,l1_1:addr] (ptr_v_2(type_c2ats_gchar, l1, l1_1) | ptr l1) = "mac#g_get_environ"
fun fun_c2ats_g_environ_getenv: {l1,l1_1,l2:addr} (!ptr_v_2(type_c2ats_gchar, l1, l1_1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_environ_getenv"
fun fun_c2ats_g_environ_setenv: {l1,l1_1,l2,l3:addr} (!ptr_v_2(type_c2ats_gchar, l1, l1_1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean) -> [l4,l4_1:addr] (ptr_v_2(type_c2ats_gchar, l4, l4_1) | ptr l4) = "mac#g_environ_setenv"
fun fun_c2ats_g_environ_unsetenv: {l1,l1_1,l2:addr} (!ptr_v_2(type_c2ats_gchar, l1, l1_1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#g_environ_unsetenv"
// File: /usr/include/glib-2.0/glib/gfileutils.h
typedef type_c2ats_GFileError = int
#define enum_c2ats_G_FILE_ERROR_EXIST 0
#define enum_c2ats_G_FILE_ERROR_ISDIR 1
#define enum_c2ats_G_FILE_ERROR_ACCES 2
#define enum_c2ats_G_FILE_ERROR_NAMETOOLONG 3
#define enum_c2ats_G_FILE_ERROR_NOENT 4
#define enum_c2ats_G_FILE_ERROR_NOTDIR 5
#define enum_c2ats_G_FILE_ERROR_NXIO 6
#define enum_c2ats_G_FILE_ERROR_NODEV 7
#define enum_c2ats_G_FILE_ERROR_ROFS 8
#define enum_c2ats_G_FILE_ERROR_TXTBSY 9
#define enum_c2ats_G_FILE_ERROR_FAULT 10
#define enum_c2ats_G_FILE_ERROR_LOOP 11
#define enum_c2ats_G_FILE_ERROR_NOSPC 12
#define enum_c2ats_G_FILE_ERROR_NOMEM 13
#define enum_c2ats_G_FILE_ERROR_MFILE 14
#define enum_c2ats_G_FILE_ERROR_NFILE 15
#define enum_c2ats_G_FILE_ERROR_BADF 16
#define enum_c2ats_G_FILE_ERROR_INVAL 17
#define enum_c2ats_G_FILE_ERROR_PIPE 18
#define enum_c2ats_G_FILE_ERROR_AGAIN 19
#define enum_c2ats_G_FILE_ERROR_INTR 20
#define enum_c2ats_G_FILE_ERROR_IO 21
#define enum_c2ats_G_FILE_ERROR_PERM 22
#define enum_c2ats_G_FILE_ERROR_NOSYS 23
#define enum_c2ats_G_FILE_ERROR_FAILED 24
typedef type_c2ats_GFileTest = int
#define enum_c2ats_G_FILE_TEST_IS_REGULAR 1 << 0
#define enum_c2ats_G_FILE_TEST_IS_SYMLINK 1 << 1
#define enum_c2ats_G_FILE_TEST_IS_DIR 1 << 2
#define enum_c2ats_G_FILE_TEST_IS_EXECUTABLE 1 << 3
#define enum_c2ats_G_FILE_TEST_EXISTS 1 << 4
fun fun_c2ats_g_file_error_quark: () -> type_c2ats_GQuark = "mac#g_file_error_quark"
fun fun_c2ats_g_file_error_from_errno: (type_c2ats_gint) -> type_c2ats_GFileError = "mac#g_file_error_from_errno"
fun fun_c2ats_g_file_test: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_GFileTest) -> type_c2ats_gboolean = "mac#g_file_test"
fun fun_c2ats_g_file_get_contents: {l1,l2,l2_1,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_file_get_contents"
fun fun_c2ats_g_file_set_contents: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gssize, ptr l3) -> type_c2ats_gboolean = "mac#g_file_set_contents"
fun fun_c2ats_g_file_read_link: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_file_read_link"
fun fun_c2ats_g_mkdtemp: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_mkdtemp"
fun fun_c2ats_g_mkdtemp_full: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_mkdtemp_full"
fun fun_c2ats_g_mkstemp: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gint = "mac#g_mkstemp"
fun fun_c2ats_g_mkstemp_full: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gint = "mac#g_mkstemp_full"
fun fun_c2ats_g_file_open_tmp: {l1,l2,l2_1,l3,l3_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gint = "mac#g_file_open_tmp"
fun fun_c2ats_g_dir_make_tmp: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_dir_make_tmp"
fun fun_c2ats_g_build_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_build_path"
fun fun_c2ats_g_build_pathv: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_build_pathv"
fun fun_c2ats_g_build_filename: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_build_filename"
fun fun_c2ats_g_build_filenamev: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_gchar, l1, l1_1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_build_filenamev"
fun fun_c2ats_g_mkdir_with_parents: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gint = "mac#g_mkdir_with_parents"
fun fun_c2ats_g_path_is_absolute: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_path_is_absolute"
fun fun_c2ats_g_path_skip_root: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_path_skip_root"
fun fun_c2ats_g_basename: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_basename"
fun fun_c2ats_g_get_current_dir: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_get_current_dir"
fun fun_c2ats_g_path_get_basename: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_path_get_basename"
fun fun_c2ats_g_path_get_dirname: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_path_get_dirname"
// File: /usr/include/glib-2.0/glib/ggettext.h
fun fun_c2ats_g_strip_context: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_strip_context"
fun fun_c2ats_g_dgettext: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_dgettext"
fun fun_c2ats_g_dcgettext: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_dcgettext"
fun fun_c2ats_g_dngettext: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gulong) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#g_dngettext"
fun fun_c2ats_g_dpgettext: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gsize) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_dpgettext"
fun fun_c2ats_g_dpgettext2: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#g_dpgettext2"
// File: /usr/include/glib-2.0/glib/gmem.h
abst@ype struct_c2ats__GMemVTable // FIXME! Forward declaration.
typedef type_c2ats_GMemVTable = struct_c2ats__GMemVTable
fun fun_c2ats_g_free: (type_c2ats_gpointer) -> void = "mac#g_free"
fun fun_c2ats_g_clear_pointer: {l1:addr} (!ptr_v_1(type_c2ats_gpointer, l1) | ptr l1, type_c2ats_GDestroyNotify) -> void = "mac#g_clear_pointer"
fun fun_c2ats_g_malloc: (type_c2ats_gsize) -> type_c2ats_gpointer = "mac#g_malloc"
fun fun_c2ats_g_malloc0: (type_c2ats_gsize) -> type_c2ats_gpointer = "mac#g_malloc0"
fun fun_c2ats_g_realloc: (type_c2ats_gpointer, type_c2ats_gsize) -> type_c2ats_gpointer = "mac#g_realloc"
fun fun_c2ats_g_try_malloc: (type_c2ats_gsize) -> type_c2ats_gpointer = "mac#g_try_malloc"
fun fun_c2ats_g_try_malloc0: (type_c2ats_gsize) -> type_c2ats_gpointer = "mac#g_try_malloc0"
fun fun_c2ats_g_try_realloc: (type_c2ats_gpointer, type_c2ats_gsize) -> type_c2ats_gpointer = "mac#g_try_realloc"
fun fun_c2ats_g_malloc_n: (type_c2ats_gsize, type_c2ats_gsize) -> type_c2ats_gpointer = "mac#g_malloc_n"
fun fun_c2ats_g_malloc0_n: (type_c2ats_gsize, type_c2ats_gsize) -> type_c2ats_gpointer = "mac#g_malloc0_n"
fun fun_c2ats_g_realloc_n: (type_c2ats_gpointer, type_c2ats_gsize, type_c2ats_gsize) -> type_c2ats_gpointer = "mac#g_realloc_n"
fun fun_c2ats_g_try_malloc_n: (type_c2ats_gsize, type_c2ats_gsize) -> type_c2ats_gpointer = "mac#g_try_malloc_n"
fun fun_c2ats_g_try_malloc0_n: (type_c2ats_gsize, type_c2ats_gsize) -> type_c2ats_gpointer = "mac#g_try_malloc0_n"
fun fun_c2ats_g_try_realloc_n: (type_c2ats_gpointer, type_c2ats_gsize, type_c2ats_gsize) -> type_c2ats_gpointer = "mac#g_try_realloc_n"
fun fun_c2ats_g_steal_pointer: (type_c2ats_gpointer) -> type_c2ats_gpointer = "mac#g_steal_pointer"
typedef struct_c2ats__GMemVTable = $extype_struct"struct _GMemVTable" of {
  malloc = (type_c2ats_gsize) -> type_c2ats_gpointer,
  realloc = (type_c2ats_gpointer, type_c2ats_gsize) -> type_c2ats_gpointer,
  free = (type_c2ats_gpointer) -> void,
  calloc = (type_c2ats_gsize, type_c2ats_gsize) -> type_c2ats_gpointer,
  try_malloc = (type_c2ats_gsize) -> type_c2ats_gpointer,
  try_realloc = (type_c2ats_gpointer, type_c2ats_gsize) -> type_c2ats_gpointer
}
fun fun_c2ats_g_mem_set_vtable: {l1:addr} (!ptr_v_1(type_c2ats_GMemVTable, l1) | ptr l1) -> void = "mac#g_mem_set_vtable"
fun fun_c2ats_g_mem_is_system_malloc: () -> type_c2ats_gboolean = "mac#g_mem_is_system_malloc"
macdef takeout_c2ats_g_mem_gc_friendly = $extval([l1:addr] (ptr_v_1(type_c2ats_gboolean, l1) | ptr l1), "&g_mem_gc_friendly")
praxi addback_c2ats_g_mem_gc_friendly {l1:addr} (ptr_v_1(type_c2ats_gboolean, l1) | ptr l1): void
macdef takeout_c2ats_glib_mem_profiler_table = $extval([l1,l1_1:addr] (ptr_v_2(type_c2ats_GMemVTable, l1, l1_1) | ptr l1), "&glib_mem_profiler_table")
praxi addback_c2ats_glib_mem_profiler_table {l1,l1_1:addr} (ptr_v_2(type_c2ats_GMemVTable, l1, l1_1) | ptr l1): void
fun fun_c2ats_g_mem_profile: () -> void = "mac#g_mem_profile"
// File: /usr/include/glib-2.0/glib/gnode.h
abst@ype struct_c2ats__GNode // FIXME! Forward declaration.
typedef type_c2ats_GNode = struct_c2ats__GNode
typedef type_c2ats_GTraverseFlags = int
#define enum_c2ats_G_TRAVERSE_LEAVES 1 << 0
#define enum_c2ats_G_TRAVERSE_NON_LEAVES 1 << 1
#define enum_c2ats_G_TRAVERSE_ALL G_TRAVERSE_LEAVES lor G_TRAVERSE_NON_LEAVES
#define enum_c2ats_G_TRAVERSE_MASK 0x3
#define enum_c2ats_G_TRAVERSE_LEAFS G_TRAVERSE_LEAVES
#define enum_c2ats_G_TRAVERSE_NON_LEAFS G_TRAVERSE_NON_LEAVES
typedef type_c2ats_GTraverseType = int
#define enum_c2ats_G_IN_ORDER 0
#define enum_c2ats_G_PRE_ORDER 1
#define enum_c2ats_G_POST_ORDER 2
#define enum_c2ats_G_LEVEL_ORDER 3
typedef type_c2ats_GNodeTraverseFunc = {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GNodeForeachFunc = {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1, type_c2ats_gpointer) -> void
typedef type_c2ats_GCopyFunc = (type_c2ats_gconstpointer, type_c2ats_gpointer) -> type_c2ats_gpointer
typedef struct_c2ats__GNode = $extype_struct"struct _GNode" of {
  data = type_c2ats_gpointer,
  next = ptr (* cPtr0(type_c2ats_GNode) *),
  prev = ptr (* cPtr0(type_c2ats_GNode) *),
  parent = ptr (* cPtr0(type_c2ats_GNode) *),
  children = ptr (* cPtr0(type_c2ats_GNode) *)
}
fun fun_c2ats_g_node_new: (type_c2ats_gpointer) -> [l1:addr] (ptr_v_1(type_c2ats_GNode, l1) | ptr l1) = "mac#g_node_new"
fun fun_c2ats_g_node_destroy: {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1) -> void = "mac#g_node_destroy"
fun fun_c2ats_g_node_unlink: {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1) -> void = "mac#g_node_unlink"
fun fun_c2ats_g_node_copy_deep: {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1, type_c2ats_GCopyFunc, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GNode, l2) | ptr l2) = "mac#g_node_copy_deep"
fun fun_c2ats_g_node_copy: {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GNode, l2) | ptr l2) = "mac#g_node_copy"
fun fun_c2ats_g_node_insert: {l1,l2:addr} (!ptr_v_1(type_c2ats_GNode, l1), !ptr_v_1(type_c2ats_GNode, l2) | ptr l1, type_c2ats_gint, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GNode, l3) | ptr l3) = "mac#g_node_insert"
fun fun_c2ats_g_node_insert_before: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GNode, l1), !ptr_v_1(type_c2ats_GNode, l2), !ptr_v_1(type_c2ats_GNode, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GNode, l4) | ptr l4) = "mac#g_node_insert_before"
fun fun_c2ats_g_node_insert_after: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GNode, l1), !ptr_v_1(type_c2ats_GNode, l2), !ptr_v_1(type_c2ats_GNode, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GNode, l4) | ptr l4) = "mac#g_node_insert_after"
fun fun_c2ats_g_node_prepend: {l1,l2:addr} (!ptr_v_1(type_c2ats_GNode, l1), !ptr_v_1(type_c2ats_GNode, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GNode, l3) | ptr l3) = "mac#g_node_prepend"
fun fun_c2ats_g_node_n_nodes: {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1, type_c2ats_GTraverseFlags) -> type_c2ats_guint = "mac#g_node_n_nodes"
fun fun_c2ats_g_node_get_root: {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GNode, l2) | ptr l2) = "mac#g_node_get_root"
fun fun_c2ats_g_node_is_ancestor: {l1,l2:addr} (!ptr_v_1(type_c2ats_GNode, l1), !ptr_v_1(type_c2ats_GNode, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_node_is_ancestor"
fun fun_c2ats_g_node_depth: {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1) -> type_c2ats_guint = "mac#g_node_depth"
fun fun_c2ats_g_node_find: {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1, type_c2ats_GTraverseType, type_c2ats_GTraverseFlags, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GNode, l2) | ptr l2) = "mac#g_node_find"
fun fun_c2ats_g_node_traverse: {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1, type_c2ats_GTraverseType, type_c2ats_GTraverseFlags, type_c2ats_gint, type_c2ats_GNodeTraverseFunc, type_c2ats_gpointer) -> void = "mac#g_node_traverse"
fun fun_c2ats_g_node_max_height: {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1) -> type_c2ats_guint = "mac#g_node_max_height"
fun fun_c2ats_g_node_children_foreach: {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1, type_c2ats_GTraverseFlags, type_c2ats_GNodeForeachFunc, type_c2ats_gpointer) -> void = "mac#g_node_children_foreach"
fun fun_c2ats_g_node_reverse_children: {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1) -> void = "mac#g_node_reverse_children"
fun fun_c2ats_g_node_n_children: {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1) -> type_c2ats_guint = "mac#g_node_n_children"
fun fun_c2ats_g_node_nth_child: {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GNode, l2) | ptr l2) = "mac#g_node_nth_child"
fun fun_c2ats_g_node_last_child: {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GNode, l2) | ptr l2) = "mac#g_node_last_child"
fun fun_c2ats_g_node_find_child: {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1, type_c2ats_GTraverseFlags, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GNode, l2) | ptr l2) = "mac#g_node_find_child"
fun fun_c2ats_g_node_child_position: {l1,l2:addr} (!ptr_v_1(type_c2ats_GNode, l1), !ptr_v_1(type_c2ats_GNode, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#g_node_child_position"
fun fun_c2ats_g_node_child_index: {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gint = "mac#g_node_child_index"
fun fun_c2ats_g_node_first_sibling: {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GNode, l2) | ptr l2) = "mac#g_node_first_sibling"
fun fun_c2ats_g_node_last_sibling: {l1:addr} (!ptr_v_1(type_c2ats_GNode, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GNode, l2) | ptr l2) = "mac#g_node_last_sibling"
// File: /usr/include/glib-2.0/glib/glist.h
abst@ype struct_c2ats__GList // FIXME! Forward declaration.
typedef type_c2ats_GList = struct_c2ats__GList
typedef struct_c2ats__GList = $extype_struct"struct _GList" of {
  data = type_c2ats_gpointer,
  next = ptr (* cPtr0(type_c2ats_GList) *),
  prev = ptr (* cPtr0(type_c2ats_GList) *)
}
fun fun_c2ats_g_list_alloc: () -> [l1:addr] (ptr_v_1(type_c2ats_GList, l1) | ptr l1) = "mac#g_list_alloc"
fun fun_c2ats_g_list_free: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1) -> void = "mac#g_list_free"
fun fun_c2ats_g_list_free_1: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1) -> void = "mac#g_list_free_1"
fun fun_c2ats_g_list_free_full: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1, type_c2ats_GDestroyNotify) -> void = "mac#g_list_free_full"
fun fun_c2ats_g_list_append: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_list_append"
fun fun_c2ats_g_list_prepend: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_list_prepend"
fun fun_c2ats_g_list_insert: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_list_insert"
fun fun_c2ats_g_list_insert_sorted: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GCompareFunc) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_list_insert_sorted"
fun fun_c2ats_g_list_insert_sorted_with_data: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_list_insert_sorted_with_data"
fun fun_c2ats_g_list_insert_before: {l1,l2:addr} (!ptr_v_1(type_c2ats_GList, l1), !ptr_v_1(type_c2ats_GList, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> [l3:addr] (ptr_v_1(type_c2ats_GList, l3) | ptr l3) = "mac#g_list_insert_before"
fun fun_c2ats_g_list_concat: {l1,l2:addr} (!ptr_v_1(type_c2ats_GList, l1), !ptr_v_1(type_c2ats_GList, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GList, l3) | ptr l3) = "mac#g_list_concat"
fun fun_c2ats_g_list_remove: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1, type_c2ats_gconstpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_list_remove"
fun fun_c2ats_g_list_remove_all: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1, type_c2ats_gconstpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_list_remove_all"
fun fun_c2ats_g_list_remove_link: {l1,l2:addr} (!ptr_v_1(type_c2ats_GList, l1), !ptr_v_1(type_c2ats_GList, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GList, l3) | ptr l3) = "mac#g_list_remove_link"
fun fun_c2ats_g_list_delete_link: {l1,l2:addr} (!ptr_v_1(type_c2ats_GList, l1), !ptr_v_1(type_c2ats_GList, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GList, l3) | ptr l3) = "mac#g_list_delete_link"
fun fun_c2ats_g_list_reverse: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_list_reverse"
fun fun_c2ats_g_list_copy: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_list_copy"
fun fun_c2ats_g_list_copy_deep: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1, type_c2ats_GCopyFunc, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_list_copy_deep"
fun fun_c2ats_g_list_nth: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_list_nth"
fun fun_c2ats_g_list_nth_prev: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_list_nth_prev"
fun fun_c2ats_g_list_find: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1, type_c2ats_gconstpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_list_find"
fun fun_c2ats_g_list_find_custom: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1, type_c2ats_gconstpointer, type_c2ats_GCompareFunc) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_list_find_custom"
fun fun_c2ats_g_list_position: {l1,l2:addr} (!ptr_v_1(type_c2ats_GList, l1), !ptr_v_1(type_c2ats_GList, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#g_list_position"
fun fun_c2ats_g_list_index: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1, type_c2ats_gconstpointer) -> type_c2ats_gint = "mac#g_list_index"
fun fun_c2ats_g_list_last: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_list_last"
fun fun_c2ats_g_list_first: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_list_first"
fun fun_c2ats_g_list_length: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1) -> type_c2ats_guint = "mac#g_list_length"
fun fun_c2ats_g_list_foreach: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1, type_c2ats_GFunc, type_c2ats_gpointer) -> void = "mac#g_list_foreach"
fun fun_c2ats_g_list_sort: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1, type_c2ats_GCompareFunc) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_list_sort"
fun fun_c2ats_g_list_sort_with_data: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_list_sort_with_data"
fun fun_c2ats_g_list_nth_data: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_gpointer = "mac#g_list_nth_data"
// File: /usr/include/glib-2.0/glib/ghash.h
abst@ype struct_c2ats__GHashTable // FIXME! Forward declaration.
typedef type_c2ats_GHashTable = struct_c2ats__GHashTable
typedef type_c2ats_GHRFunc = (type_c2ats_gpointer, type_c2ats_gpointer, type_c2ats_gpointer) -> type_c2ats_gboolean
abst@ype struct_c2ats__GHashTableIter // FIXME! Forward declaration.
typedef type_c2ats_GHashTableIter = struct_c2ats__GHashTableIter
typedef struct_c2ats__GHashTableIter = $extype_struct"struct _GHashTableIter" of {
  dummy1 = type_c2ats_gpointer,
  dummy2 = type_c2ats_gpointer,
  dummy3 = type_c2ats_gpointer,
  dummy4 = int,
  dummy5 = type_c2ats_gboolean,
  dummy6 = type_c2ats_gpointer
}
fun fun_c2ats_g_hash_table_new: (type_c2ats_GHashFunc, type_c2ats_GEqualFunc) -> [l1:addr] (ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1) = "mac#g_hash_table_new"
fun fun_c2ats_g_hash_table_new_full: (type_c2ats_GHashFunc, type_c2ats_GEqualFunc, type_c2ats_GDestroyNotify, type_c2ats_GDestroyNotify) -> [l1:addr] (ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1) = "mac#g_hash_table_new_full"
fun fun_c2ats_g_hash_table_destroy: {l1:addr} (!ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1) -> void = "mac#g_hash_table_destroy"
fun fun_c2ats_g_hash_table_insert: {l1:addr} (!ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#g_hash_table_insert"
fun fun_c2ats_g_hash_table_replace: {l1:addr} (!ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#g_hash_table_replace"
fun fun_c2ats_g_hash_table_add: {l1:addr} (!ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#g_hash_table_add"
fun fun_c2ats_g_hash_table_remove: {l1:addr} (!ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1, type_c2ats_gconstpointer) -> type_c2ats_gboolean = "mac#g_hash_table_remove"
fun fun_c2ats_g_hash_table_remove_all: {l1:addr} (!ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1) -> void = "mac#g_hash_table_remove_all"
fun fun_c2ats_g_hash_table_steal: {l1:addr} (!ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1, type_c2ats_gconstpointer) -> type_c2ats_gboolean = "mac#g_hash_table_steal"
fun fun_c2ats_g_hash_table_steal_all: {l1:addr} (!ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1) -> void = "mac#g_hash_table_steal_all"
fun fun_c2ats_g_hash_table_lookup: {l1:addr} (!ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1, type_c2ats_gconstpointer) -> type_c2ats_gpointer = "mac#g_hash_table_lookup"
fun fun_c2ats_g_hash_table_contains: {l1:addr} (!ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1, type_c2ats_gconstpointer) -> type_c2ats_gboolean = "mac#g_hash_table_contains"
fun fun_c2ats_g_hash_table_lookup_extended: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GHashTable, l1), !ptr_v_1(type_c2ats_gpointer, l2), !ptr_v_1(type_c2ats_gpointer, l3) | ptr l1, type_c2ats_gconstpointer, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_hash_table_lookup_extended"
fun fun_c2ats_g_hash_table_foreach: {l1:addr} (!ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1, type_c2ats_GHFunc, type_c2ats_gpointer) -> void = "mac#g_hash_table_foreach"
fun fun_c2ats_g_hash_table_find: {l1:addr} (!ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1, type_c2ats_GHRFunc, type_c2ats_gpointer) -> type_c2ats_gpointer = "mac#g_hash_table_find"
fun fun_c2ats_g_hash_table_foreach_remove: {l1:addr} (!ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1, type_c2ats_GHRFunc, type_c2ats_gpointer) -> type_c2ats_guint = "mac#g_hash_table_foreach_remove"
fun fun_c2ats_g_hash_table_foreach_steal: {l1:addr} (!ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1, type_c2ats_GHRFunc, type_c2ats_gpointer) -> type_c2ats_guint = "mac#g_hash_table_foreach_steal"
fun fun_c2ats_g_hash_table_size: {l1:addr} (!ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1) -> type_c2ats_guint = "mac#g_hash_table_size"
fun fun_c2ats_g_hash_table_get_keys: {l1:addr} (!ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_hash_table_get_keys"
fun fun_c2ats_g_hash_table_get_values: {l1:addr} (!ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_hash_table_get_values"
fun fun_c2ats_g_hash_table_get_keys_as_array: {l1,l2:addr} (!ptr_v_1(type_c2ats_GHashTable, l1), !ptr_v_1(type_c2ats_guint, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gpointer, l3) | ptr l3) = "mac#g_hash_table_get_keys_as_array"
fun fun_c2ats_g_hash_table_iter_init: {l1,l2:addr} (!ptr_v_1(type_c2ats_GHashTableIter, l1), !ptr_v_1(type_c2ats_GHashTable, l2) | ptr l1, ptr l2) -> void = "mac#g_hash_table_iter_init"
fun fun_c2ats_g_hash_table_iter_next: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GHashTableIter, l1), !ptr_v_1(type_c2ats_gpointer, l2), !ptr_v_1(type_c2ats_gpointer, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_hash_table_iter_next"
fun fun_c2ats_g_hash_table_iter_get_hash_table: {l1:addr} (!ptr_v_1(type_c2ats_GHashTableIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GHashTable, l2) | ptr l2) = "mac#g_hash_table_iter_get_hash_table"
fun fun_c2ats_g_hash_table_iter_remove: {l1:addr} (!ptr_v_1(type_c2ats_GHashTableIter, l1) | ptr l1) -> void = "mac#g_hash_table_iter_remove"
fun fun_c2ats_g_hash_table_iter_replace: {l1:addr} (!ptr_v_1(type_c2ats_GHashTableIter, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_hash_table_iter_replace"
fun fun_c2ats_g_hash_table_iter_steal: {l1:addr} (!ptr_v_1(type_c2ats_GHashTableIter, l1) | ptr l1) -> void = "mac#g_hash_table_iter_steal"
fun fun_c2ats_g_hash_table_ref: {l1:addr} (!ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GHashTable, l2) | ptr l2) = "mac#g_hash_table_ref"
fun fun_c2ats_g_hash_table_unref: {l1:addr} (!ptr_v_1(type_c2ats_GHashTable, l1) | ptr l1) -> void = "mac#g_hash_table_unref"
fun fun_c2ats_g_str_equal: (type_c2ats_gconstpointer, type_c2ats_gconstpointer) -> type_c2ats_gboolean = "mac#g_str_equal"
fun fun_c2ats_g_str_hash: (type_c2ats_gconstpointer) -> type_c2ats_guint = "mac#g_str_hash"
fun fun_c2ats_g_int_equal: (type_c2ats_gconstpointer, type_c2ats_gconstpointer) -> type_c2ats_gboolean = "mac#g_int_equal"
fun fun_c2ats_g_int_hash: (type_c2ats_gconstpointer) -> type_c2ats_guint = "mac#g_int_hash"
fun fun_c2ats_g_int64_equal: (type_c2ats_gconstpointer, type_c2ats_gconstpointer) -> type_c2ats_gboolean = "mac#g_int64_equal"
fun fun_c2ats_g_int64_hash: (type_c2ats_gconstpointer) -> type_c2ats_guint = "mac#g_int64_hash"
fun fun_c2ats_g_double_equal: (type_c2ats_gconstpointer, type_c2ats_gconstpointer) -> type_c2ats_gboolean = "mac#g_double_equal"
fun fun_c2ats_g_double_hash: (type_c2ats_gconstpointer) -> type_c2ats_guint = "mac#g_double_hash"
fun fun_c2ats_g_direct_hash: (type_c2ats_gconstpointer) -> type_c2ats_guint = "mac#g_direct_hash"
fun fun_c2ats_g_direct_equal: (type_c2ats_gconstpointer, type_c2ats_gconstpointer) -> type_c2ats_gboolean = "mac#g_direct_equal"
// File: /usr/include/glib-2.0/glib/ghmac.h
abst@ype struct_c2ats__GHmac // FIXME! Forward declaration.
typedef type_c2ats_GHmac = struct_c2ats__GHmac
fun fun_c2ats_g_hmac_new: {l1:addr} (!ptr_v_1(type_c2ats_guchar, l1) | type_c2ats_GChecksumType, ptr l1, type_c2ats_gsize) -> [l2:addr] (ptr_v_1(type_c2ats_GHmac, l2) | ptr l2) = "mac#g_hmac_new"
fun fun_c2ats_g_hmac_copy: {l1:addr} (!ptr_v_1(type_c2ats_GHmac, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GHmac, l2) | ptr l2) = "mac#g_hmac_copy"
fun fun_c2ats_g_hmac_ref: {l1:addr} (!ptr_v_1(type_c2ats_GHmac, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GHmac, l2) | ptr l2) = "mac#g_hmac_ref"
fun fun_c2ats_g_hmac_unref: {l1:addr} (!ptr_v_1(type_c2ats_GHmac, l1) | ptr l1) -> void = "mac#g_hmac_unref"
fun fun_c2ats_g_hmac_update: {l1,l2:addr} (!ptr_v_1(type_c2ats_GHmac, l1), !ptr_v_1(type_c2ats_guchar, l2) | ptr l1, ptr l2, type_c2ats_gssize) -> void = "mac#g_hmac_update"
fun fun_c2ats_g_hmac_get_string: {l1:addr} (!ptr_v_1(type_c2ats_GHmac, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_hmac_get_string"
fun fun_c2ats_g_hmac_get_digest: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GHmac, l1), !ptr_v_1(type_c2ats_guint8, l2), !ptr_v_1(type_c2ats_gsize, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_hmac_get_digest"
fun fun_c2ats_g_compute_hmac_for_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_guchar, l1), !ptr_v_1(type_c2ats_guchar, l2) | type_c2ats_GChecksumType, ptr l1, type_c2ats_gsize, ptr l2, type_c2ats_gsize) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_compute_hmac_for_data"
fun fun_c2ats_g_compute_hmac_for_string: {l1,l2:addr} (!ptr_v_1(type_c2ats_guchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | type_c2ats_GChecksumType, ptr l1, type_c2ats_gsize, ptr l2, type_c2ats_gssize) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_compute_hmac_for_string"
fun fun_c2ats_g_compute_hmac_for_bytes: {l1,l2:addr} (!ptr_v_1(type_c2ats_GBytes, l1), !ptr_v_1(type_c2ats_GBytes, l2) | type_c2ats_GChecksumType, ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_compute_hmac_for_bytes"
// File: /usr/include/glib-2.0/glib/ghook.h
abst@ype struct_c2ats__GHook // FIXME! Forward declaration.
typedef type_c2ats_GHook = struct_c2ats__GHook
abst@ype struct_c2ats__GHookList // FIXME! Forward declaration.
typedef type_c2ats_GHookList = struct_c2ats__GHookList
typedef type_c2ats_GHookCompareFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GHook, l1), !ptr_v_1(type_c2ats_GHook, l2) | ptr l1, ptr l2) -> type_c2ats_gint
typedef type_c2ats_GHookFindFunc = {l1:addr} (!ptr_v_1(type_c2ats_GHook, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GHookMarshaller = {l1:addr} (!ptr_v_1(type_c2ats_GHook, l1) | ptr l1, type_c2ats_gpointer) -> void
typedef type_c2ats_GHookCheckMarshaller = {l1:addr} (!ptr_v_1(type_c2ats_GHook, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GHookFunc = (type_c2ats_gpointer) -> void
typedef type_c2ats_GHookCheckFunc = (type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GHookFinalizeFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GHookList, l1), !ptr_v_1(type_c2ats_GHook, l2) | ptr l1, ptr l2) -> void
typedef type_c2ats_GHookFlagMask = int
#define enum_c2ats_G_HOOK_FLAG_ACTIVE 1 << 0
#define enum_c2ats_G_HOOK_FLAG_IN_CALL 1 << 1
#define enum_c2ats_G_HOOK_FLAG_MASK 0xf
typedef struct_c2ats__GHookList = $extype_struct"struct _GHookList" of {
  seq_id = type_c2ats_gulong,
  hook_size = type_c2ats_guint,
  is_setup = type_c2ats_guint,
  hooks = ptr (* cPtr0(type_c2ats_GHook) *),
  dummy3 = type_c2ats_gpointer,
  finalize_hook = type_c2ats_GHookFinalizeFunc,
  dummy = @[type_c2ats_gpointer][2]
}
typedef struct_c2ats__GHook = $extype_struct"struct _GHook" of {
  data = type_c2ats_gpointer,
  next = ptr (* cPtr0(type_c2ats_GHook) *),
  prev = ptr (* cPtr0(type_c2ats_GHook) *),
  ref_count = type_c2ats_guint,
  hook_id = type_c2ats_gulong,
  flags = type_c2ats_guint,
  func = type_c2ats_gpointer,
  destroy = type_c2ats_GDestroyNotify
}
fun fun_c2ats_g_hook_list_init: {l1:addr} (!ptr_v_1(type_c2ats_GHookList, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_hook_list_init"
fun fun_c2ats_g_hook_list_clear: {l1:addr} (!ptr_v_1(type_c2ats_GHookList, l1) | ptr l1) -> void = "mac#g_hook_list_clear"
fun fun_c2ats_g_hook_alloc: {l1:addr} (!ptr_v_1(type_c2ats_GHookList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GHook, l2) | ptr l2) = "mac#g_hook_alloc"
fun fun_c2ats_g_hook_free: {l1,l2:addr} (!ptr_v_1(type_c2ats_GHookList, l1), !ptr_v_1(type_c2ats_GHook, l2) | ptr l1, ptr l2) -> void = "mac#g_hook_free"
fun fun_c2ats_g_hook_ref: {l1,l2:addr} (!ptr_v_1(type_c2ats_GHookList, l1), !ptr_v_1(type_c2ats_GHook, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GHook, l3) | ptr l3) = "mac#g_hook_ref"
fun fun_c2ats_g_hook_unref: {l1,l2:addr} (!ptr_v_1(type_c2ats_GHookList, l1), !ptr_v_1(type_c2ats_GHook, l2) | ptr l1, ptr l2) -> void = "mac#g_hook_unref"
fun fun_c2ats_g_hook_destroy: {l1:addr} (!ptr_v_1(type_c2ats_GHookList, l1) | ptr l1, type_c2ats_gulong) -> type_c2ats_gboolean = "mac#g_hook_destroy"
fun fun_c2ats_g_hook_destroy_link: {l1,l2:addr} (!ptr_v_1(type_c2ats_GHookList, l1), !ptr_v_1(type_c2ats_GHook, l2) | ptr l1, ptr l2) -> void = "mac#g_hook_destroy_link"
fun fun_c2ats_g_hook_prepend: {l1,l2:addr} (!ptr_v_1(type_c2ats_GHookList, l1), !ptr_v_1(type_c2ats_GHook, l2) | ptr l1, ptr l2) -> void = "mac#g_hook_prepend"
fun fun_c2ats_g_hook_insert_before: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GHookList, l1), !ptr_v_1(type_c2ats_GHook, l2), !ptr_v_1(type_c2ats_GHook, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_hook_insert_before"
fun fun_c2ats_g_hook_insert_sorted: {l1,l2:addr} (!ptr_v_1(type_c2ats_GHookList, l1), !ptr_v_1(type_c2ats_GHook, l2) | ptr l1, ptr l2, type_c2ats_GHookCompareFunc) -> void = "mac#g_hook_insert_sorted"
fun fun_c2ats_g_hook_get: {l1:addr} (!ptr_v_1(type_c2ats_GHookList, l1) | ptr l1, type_c2ats_gulong) -> [l2:addr] (ptr_v_1(type_c2ats_GHook, l2) | ptr l2) = "mac#g_hook_get"
fun fun_c2ats_g_hook_find: {l1:addr} (!ptr_v_1(type_c2ats_GHookList, l1) | ptr l1, type_c2ats_gboolean, type_c2ats_GHookFindFunc, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GHook, l2) | ptr l2) = "mac#g_hook_find"
fun fun_c2ats_g_hook_find_data: {l1:addr} (!ptr_v_1(type_c2ats_GHookList, l1) | ptr l1, type_c2ats_gboolean, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GHook, l2) | ptr l2) = "mac#g_hook_find_data"
fun fun_c2ats_g_hook_find_func: {l1:addr} (!ptr_v_1(type_c2ats_GHookList, l1) | ptr l1, type_c2ats_gboolean, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GHook, l2) | ptr l2) = "mac#g_hook_find_func"
fun fun_c2ats_g_hook_find_func_data: {l1:addr} (!ptr_v_1(type_c2ats_GHookList, l1) | ptr l1, type_c2ats_gboolean, type_c2ats_gpointer, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GHook, l2) | ptr l2) = "mac#g_hook_find_func_data"
fun fun_c2ats_g_hook_first_valid: {l1:addr} (!ptr_v_1(type_c2ats_GHookList, l1) | ptr l1, type_c2ats_gboolean) -> [l2:addr] (ptr_v_1(type_c2ats_GHook, l2) | ptr l2) = "mac#g_hook_first_valid"
fun fun_c2ats_g_hook_next_valid: {l1,l2:addr} (!ptr_v_1(type_c2ats_GHookList, l1), !ptr_v_1(type_c2ats_GHook, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> [l3:addr] (ptr_v_1(type_c2ats_GHook, l3) | ptr l3) = "mac#g_hook_next_valid"
fun fun_c2ats_g_hook_compare_ids: {l1,l2:addr} (!ptr_v_1(type_c2ats_GHook, l1), !ptr_v_1(type_c2ats_GHook, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#g_hook_compare_ids"
fun fun_c2ats_g_hook_list_invoke: {l1:addr} (!ptr_v_1(type_c2ats_GHookList, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_hook_list_invoke"
fun fun_c2ats_g_hook_list_invoke_check: {l1:addr} (!ptr_v_1(type_c2ats_GHookList, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_hook_list_invoke_check"
fun fun_c2ats_g_hook_list_marshal: {l1:addr} (!ptr_v_1(type_c2ats_GHookList, l1) | ptr l1, type_c2ats_gboolean, type_c2ats_GHookMarshaller, type_c2ats_gpointer) -> void = "mac#g_hook_list_marshal"
fun fun_c2ats_g_hook_list_marshal_check: {l1:addr} (!ptr_v_1(type_c2ats_GHookList, l1) | ptr l1, type_c2ats_gboolean, type_c2ats_GHookCheckMarshaller, type_c2ats_gpointer) -> void = "mac#g_hook_list_marshal_check"
// File: /usr/include/glib-2.0/glib/ghostutils.h
fun fun_c2ats_g_hostname_is_non_ascii: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_hostname_is_non_ascii"
fun fun_c2ats_g_hostname_is_ascii_encoded: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_hostname_is_ascii_encoded"
fun fun_c2ats_g_hostname_is_ip_address: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_hostname_is_ip_address"
fun fun_c2ats_g_hostname_to_ascii: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_hostname_to_ascii"
fun fun_c2ats_g_hostname_to_unicode: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_hostname_to_unicode"
// File: /usr/include/glib-2.0/glib/gpoll.h
abst@ype struct_c2ats__GPollFD // FIXME! Forward declaration.
typedef type_c2ats_GPollFD = struct_c2ats__GPollFD
typedef type_c2ats_GPollFunc = {l1:addr} (!ptr_v_1(type_c2ats_GPollFD, l1) | ptr l1, type_c2ats_guint, type_c2ats_gint) -> type_c2ats_gint
typedef struct_c2ats__GPollFD = $extype_struct"struct _GPollFD" of {
  fd = type_c2ats_gint,
  events = type_c2ats_gushort,
  revents = type_c2ats_gushort
}
fun fun_c2ats_g_poll: {l1:addr} (!ptr_v_1(type_c2ats_GPollFD, l1) | ptr l1, type_c2ats_guint, type_c2ats_gint) -> type_c2ats_gint = "mac#g_poll"
// File: /usr/include/glib-2.0/glib/gslist.h
abst@ype struct_c2ats__GSList // FIXME! Forward declaration.
typedef type_c2ats_GSList = struct_c2ats__GSList
typedef struct_c2ats__GSList = $extype_struct"struct _GSList" of {
  data = type_c2ats_gpointer,
  next = ptr (* cPtr0(type_c2ats_GSList) *)
}
fun fun_c2ats_g_slist_alloc: () -> [l1:addr] (ptr_v_1(type_c2ats_GSList, l1) | ptr l1) = "mac#g_slist_alloc"
fun fun_c2ats_g_slist_free: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1) -> void = "mac#g_slist_free"
fun fun_c2ats_g_slist_free_1: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1) -> void = "mac#g_slist_free_1"
fun fun_c2ats_g_slist_free_full: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1, type_c2ats_GDestroyNotify) -> void = "mac#g_slist_free_full"
fun fun_c2ats_g_slist_append: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#g_slist_append"
fun fun_c2ats_g_slist_prepend: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#g_slist_prepend"
fun fun_c2ats_g_slist_insert: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#g_slist_insert"
fun fun_c2ats_g_slist_insert_sorted: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GCompareFunc) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#g_slist_insert_sorted"
fun fun_c2ats_g_slist_insert_sorted_with_data: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#g_slist_insert_sorted_with_data"
fun fun_c2ats_g_slist_insert_before: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSList, l1), !ptr_v_1(type_c2ats_GSList, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> [l3:addr] (ptr_v_1(type_c2ats_GSList, l3) | ptr l3) = "mac#g_slist_insert_before"
fun fun_c2ats_g_slist_concat: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSList, l1), !ptr_v_1(type_c2ats_GSList, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSList, l3) | ptr l3) = "mac#g_slist_concat"
fun fun_c2ats_g_slist_remove: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1, type_c2ats_gconstpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#g_slist_remove"
fun fun_c2ats_g_slist_remove_all: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1, type_c2ats_gconstpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#g_slist_remove_all"
fun fun_c2ats_g_slist_remove_link: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSList, l1), !ptr_v_1(type_c2ats_GSList, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSList, l3) | ptr l3) = "mac#g_slist_remove_link"
fun fun_c2ats_g_slist_delete_link: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSList, l1), !ptr_v_1(type_c2ats_GSList, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSList, l3) | ptr l3) = "mac#g_slist_delete_link"
fun fun_c2ats_g_slist_reverse: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#g_slist_reverse"
fun fun_c2ats_g_slist_copy: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#g_slist_copy"
fun fun_c2ats_g_slist_copy_deep: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1, type_c2ats_GCopyFunc, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#g_slist_copy_deep"
fun fun_c2ats_g_slist_nth: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#g_slist_nth"
fun fun_c2ats_g_slist_find: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1, type_c2ats_gconstpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#g_slist_find"
fun fun_c2ats_g_slist_find_custom: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1, type_c2ats_gconstpointer, type_c2ats_GCompareFunc) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#g_slist_find_custom"
fun fun_c2ats_g_slist_position: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSList, l1), !ptr_v_1(type_c2ats_GSList, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#g_slist_position"
fun fun_c2ats_g_slist_index: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1, type_c2ats_gconstpointer) -> type_c2ats_gint = "mac#g_slist_index"
fun fun_c2ats_g_slist_last: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#g_slist_last"
fun fun_c2ats_g_slist_length: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1) -> type_c2ats_guint = "mac#g_slist_length"
fun fun_c2ats_g_slist_foreach: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1, type_c2ats_GFunc, type_c2ats_gpointer) -> void = "mac#g_slist_foreach"
fun fun_c2ats_g_slist_sort: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1, type_c2ats_GCompareFunc) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#g_slist_sort"
fun fun_c2ats_g_slist_sort_with_data: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#g_slist_sort_with_data"
fun fun_c2ats_g_slist_nth_data: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_gpointer = "mac#g_slist_nth_data"
// File: /usr/include/glib-2.0/glib/gmain.h
typedef type_c2ats_GIOCondition = int
#define enum_c2ats_G_IO_IN 1
#define enum_c2ats_G_IO_OUT 4
#define enum_c2ats_G_IO_PRI 2
#define enum_c2ats_G_IO_ERR 8
#define enum_c2ats_G_IO_HUP 16
#define enum_c2ats_G_IO_NVAL 32
abst@ype struct_c2ats__GMainContext // FIXME! Forward declaration.
typedef type_c2ats_GMainContext = struct_c2ats__GMainContext
abst@ype struct_c2ats__GMainLoop // FIXME! Forward declaration.
typedef type_c2ats_GMainLoop = struct_c2ats__GMainLoop
abst@ype struct_c2ats__GSource // FIXME! Forward declaration.
typedef type_c2ats_GSource = struct_c2ats__GSource
abst@ype struct_c2ats__GSourcePrivate // FIXME! Forward declaration.
typedef type_c2ats_GSourcePrivate = struct_c2ats__GSourcePrivate
abst@ype struct_c2ats__GSourceCallbackFuncs // FIXME! Forward declaration.
typedef type_c2ats_GSourceCallbackFuncs = struct_c2ats__GSourceCallbackFuncs
abst@ype struct_c2ats__GSourceFuncs // FIXME! Forward declaration.
typedef type_c2ats_GSourceFuncs = struct_c2ats__GSourceFuncs
typedef type_c2ats_GSourceFunc = (type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GChildWatchFunc = (type_c2ats_GPid, type_c2ats_gint, type_c2ats_gpointer) -> void
typedef struct_c2ats__GSource = $extype_struct"struct _GSource" of {
  callback_data = type_c2ats_gpointer,
  callback_funcs = ptr (* cPtr0(type_c2ats_GSourceCallbackFuncs) *),
  source_funcs = ptr (* cPtr0(type_c2ats_GSourceFuncs) *),
  ref_count = type_c2ats_guint,
  context = ptr (* cPtr0(type_c2ats_GMainContext) *),
  priority = type_c2ats_gint,
  flags = type_c2ats_guint,
  source_id = type_c2ats_guint,
  poll_fds = ptr (* cPtr0(type_c2ats_GSList) *),
  prev = ptr (* cPtr0(type_c2ats_GSource) *),
  next = ptr (* cPtr0(type_c2ats_GSource) *),
  name = ptr (* cPtr0(char) *),
  priv = ptr (* cPtr0(type_c2ats_GSourcePrivate) *)
}
typedef struct_c2ats__GSourceCallbackFuncs = $extype_struct"struct _GSourceCallbackFuncs" of {
  ref = (type_c2ats_gpointer) -> void,
  unref = (type_c2ats_gpointer) -> void,
  get = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSource, l1), !ptr_v_1(type_c2ats_GSourceFunc, l2), !ptr_v_1(type_c2ats_gpointer, l3) | type_c2ats_gpointer, ptr l1, ptr l2, ptr l3) -> void
}
typedef type_c2ats_GSourceDummyMarshal = () -> void
typedef struct_c2ats__GSourceFuncs = $extype_struct"struct _GSourceFuncs" of {
  prepare = {l1,l2:addr} (!ptr_v_1(type_c2ats_GSource, l1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  check = {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1) -> type_c2ats_gboolean,
  dispatch = {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1, type_c2ats_GSourceFunc, type_c2ats_gpointer) -> type_c2ats_gboolean,
  finalize = {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1) -> void,
  closure_callback = type_c2ats_GSourceFunc,
  closure_marshal = type_c2ats_GSourceDummyMarshal
}
fun fun_c2ats_g_main_context_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1) = "mac#g_main_context_new"
fun fun_c2ats_g_main_context_ref: {l1:addr} (!ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMainContext, l2) | ptr l2) = "mac#g_main_context_ref"
fun fun_c2ats_g_main_context_unref: {l1:addr} (!ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1) -> void = "mac#g_main_context_unref"
fun fun_c2ats_g_main_context_default: () -> [l1:addr] (ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1) = "mac#g_main_context_default"
fun fun_c2ats_g_main_context_iteration: {l1:addr} (!ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#g_main_context_iteration"
fun fun_c2ats_g_main_context_pending: {l1:addr} (!ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_main_context_pending"
fun fun_c2ats_g_main_context_find_source_by_id: {l1:addr} (!ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GSource, l2) | ptr l2) = "mac#g_main_context_find_source_by_id"
fun fun_c2ats_g_main_context_find_source_by_user_data: {l1:addr} (!ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GSource, l2) | ptr l2) = "mac#g_main_context_find_source_by_user_data"
fun fun_c2ats_g_main_context_find_source_by_funcs_user_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMainContext, l1), !ptr_v_1(type_c2ats_GSourceFuncs, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> [l3:addr] (ptr_v_1(type_c2ats_GSource, l3) | ptr l3) = "mac#g_main_context_find_source_by_funcs_user_data"
fun fun_c2ats_g_main_context_wakeup: {l1:addr} (!ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1) -> void = "mac#g_main_context_wakeup"
fun fun_c2ats_g_main_context_acquire: {l1:addr} (!ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_main_context_acquire"
fun fun_c2ats_g_main_context_release: {l1:addr} (!ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1) -> void = "mac#g_main_context_release"
fun fun_c2ats_g_main_context_is_owner: {l1:addr} (!ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_main_context_is_owner"
fun fun_c2ats_g_main_context_wait: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMainContext, l1), !ptr_v_1(type_c2ats_GCond, l2), !ptr_v_1(type_c2ats_GMutex, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_main_context_wait"
fun fun_c2ats_g_main_context_prepare: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMainContext, l1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_main_context_prepare"
fun fun_c2ats_g_main_context_query: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMainContext, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_GPollFD, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3, type_c2ats_gint) -> type_c2ats_gint = "mac#g_main_context_query"
fun fun_c2ats_g_main_context_check: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMainContext, l1), !ptr_v_1(type_c2ats_GPollFD, l2) | ptr l1, type_c2ats_gint, ptr l2, type_c2ats_gint) -> type_c2ats_gint = "mac#g_main_context_check"
fun fun_c2ats_g_main_context_dispatch: {l1:addr} (!ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1) -> void = "mac#g_main_context_dispatch"
fun fun_c2ats_g_main_context_set_poll_func: {l1:addr} (!ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1, type_c2ats_GPollFunc) -> void = "mac#g_main_context_set_poll_func"
fun fun_c2ats_g_main_context_get_poll_func: {l1:addr} (!ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1) -> type_c2ats_GPollFunc = "mac#g_main_context_get_poll_func"
fun fun_c2ats_g_main_context_add_poll: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMainContext, l1), !ptr_v_1(type_c2ats_GPollFD, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#g_main_context_add_poll"
fun fun_c2ats_g_main_context_remove_poll: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMainContext, l1), !ptr_v_1(type_c2ats_GPollFD, l2) | ptr l1, ptr l2) -> void = "mac#g_main_context_remove_poll"
fun fun_c2ats_g_main_depth: () -> type_c2ats_gint = "mac#g_main_depth"
fun fun_c2ats_g_main_current_source: () -> [l1:addr] (ptr_v_1(type_c2ats_GSource, l1) | ptr l1) = "mac#g_main_current_source"
fun fun_c2ats_g_main_context_push_thread_default: {l1:addr} (!ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1) -> void = "mac#g_main_context_push_thread_default"
fun fun_c2ats_g_main_context_pop_thread_default: {l1:addr} (!ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1) -> void = "mac#g_main_context_pop_thread_default"
fun fun_c2ats_g_main_context_get_thread_default: () -> [l1:addr] (ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1) = "mac#g_main_context_get_thread_default"
fun fun_c2ats_g_main_context_ref_thread_default: () -> [l1:addr] (ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1) = "mac#g_main_context_ref_thread_default"
fun fun_c2ats_g_main_loop_new: {l1:addr} (!ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1, type_c2ats_gboolean) -> [l2:addr] (ptr_v_1(type_c2ats_GMainLoop, l2) | ptr l2) = "mac#g_main_loop_new"
fun fun_c2ats_g_main_loop_run: {l1:addr} (!ptr_v_1(type_c2ats_GMainLoop, l1) | ptr l1) -> void = "mac#g_main_loop_run"
fun fun_c2ats_g_main_loop_quit: {l1:addr} (!ptr_v_1(type_c2ats_GMainLoop, l1) | ptr l1) -> void = "mac#g_main_loop_quit"
fun fun_c2ats_g_main_loop_ref: {l1:addr} (!ptr_v_1(type_c2ats_GMainLoop, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMainLoop, l2) | ptr l2) = "mac#g_main_loop_ref"
fun fun_c2ats_g_main_loop_unref: {l1:addr} (!ptr_v_1(type_c2ats_GMainLoop, l1) | ptr l1) -> void = "mac#g_main_loop_unref"
fun fun_c2ats_g_main_loop_is_running: {l1:addr} (!ptr_v_1(type_c2ats_GMainLoop, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_main_loop_is_running"
fun fun_c2ats_g_main_loop_get_context: {l1:addr} (!ptr_v_1(type_c2ats_GMainLoop, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMainContext, l2) | ptr l2) = "mac#g_main_loop_get_context"
fun fun_c2ats_g_source_new: {l1:addr} (!ptr_v_1(type_c2ats_GSourceFuncs, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GSource, l2) | ptr l2) = "mac#g_source_new"
fun fun_c2ats_g_source_ref: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSource, l2) | ptr l2) = "mac#g_source_ref"
fun fun_c2ats_g_source_unref: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1) -> void = "mac#g_source_unref"
fun fun_c2ats_g_source_attach: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSource, l1), !ptr_v_1(type_c2ats_GMainContext, l2) | ptr l1, ptr l2) -> type_c2ats_guint = "mac#g_source_attach"
fun fun_c2ats_g_source_destroy: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1) -> void = "mac#g_source_destroy"
fun fun_c2ats_g_source_set_priority: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1, type_c2ats_gint) -> void = "mac#g_source_set_priority"
fun fun_c2ats_g_source_get_priority: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1) -> type_c2ats_gint = "mac#g_source_get_priority"
fun fun_c2ats_g_source_set_can_recurse: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_source_set_can_recurse"
fun fun_c2ats_g_source_get_can_recurse: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_source_get_can_recurse"
fun fun_c2ats_g_source_get_id: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1) -> type_c2ats_guint = "mac#g_source_get_id"
fun fun_c2ats_g_source_get_context: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMainContext, l2) | ptr l2) = "mac#g_source_get_context"
fun fun_c2ats_g_source_set_callback: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1, type_c2ats_GSourceFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#g_source_set_callback"
fun fun_c2ats_g_source_set_funcs: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSource, l1), !ptr_v_1(type_c2ats_GSourceFuncs, l2) | ptr l1, ptr l2) -> void = "mac#g_source_set_funcs"
fun fun_c2ats_g_source_is_destroyed: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_source_is_destroyed"
fun fun_c2ats_g_source_set_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSource, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#g_source_set_name"
fun fun_c2ats_g_source_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_source_get_name"
fun fun_c2ats_g_source_set_name_by_id: {l1:addr} (!ptr_v_1(char, l1) | type_c2ats_guint, ptr l1) -> void = "mac#g_source_set_name_by_id"
fun fun_c2ats_g_source_set_ready_time: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1, type_c2ats_gint64) -> void = "mac#g_source_set_ready_time"
fun fun_c2ats_g_source_get_ready_time: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1) -> type_c2ats_gint64 = "mac#g_source_get_ready_time"
fun fun_c2ats_g_source_add_unix_fd: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1, type_c2ats_gint, type_c2ats_GIOCondition) -> type_c2ats_gpointer = "mac#g_source_add_unix_fd"
fun fun_c2ats_g_source_modify_unix_fd: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GIOCondition) -> void = "mac#g_source_modify_unix_fd"
fun fun_c2ats_g_source_remove_unix_fd: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_source_remove_unix_fd"
fun fun_c2ats_g_source_query_unix_fd: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_GIOCondition = "mac#g_source_query_unix_fd"
fun fun_c2ats_g_source_set_callback_indirect: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSource, l1), !ptr_v_1(type_c2ats_GSourceCallbackFuncs, l2) | ptr l1, type_c2ats_gpointer, ptr l2) -> void = "mac#g_source_set_callback_indirect"
fun fun_c2ats_g_source_add_poll: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSource, l1), !ptr_v_1(type_c2ats_GPollFD, l2) | ptr l1, ptr l2) -> void = "mac#g_source_add_poll"
fun fun_c2ats_g_source_remove_poll: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSource, l1), !ptr_v_1(type_c2ats_GPollFD, l2) | ptr l1, ptr l2) -> void = "mac#g_source_remove_poll"
fun fun_c2ats_g_source_add_child_source: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSource, l1), !ptr_v_1(type_c2ats_GSource, l2) | ptr l1, ptr l2) -> void = "mac#g_source_add_child_source"
fun fun_c2ats_g_source_remove_child_source: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSource, l1), !ptr_v_1(type_c2ats_GSource, l2) | ptr l1, ptr l2) -> void = "mac#g_source_remove_child_source"
fun fun_c2ats_g_source_get_current_time: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSource, l1), !ptr_v_1(type_c2ats_GTimeVal, l2) | ptr l1, ptr l2) -> void = "mac#g_source_get_current_time"
fun fun_c2ats_g_source_get_time: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1) -> type_c2ats_gint64 = "mac#g_source_get_time"
fun fun_c2ats_g_idle_source_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GSource, l1) | ptr l1) = "mac#g_idle_source_new"
fun fun_c2ats_g_child_watch_source_new: (type_c2ats_GPid) -> [l1:addr] (ptr_v_1(type_c2ats_GSource, l1) | ptr l1) = "mac#g_child_watch_source_new"
fun fun_c2ats_g_timeout_source_new: (type_c2ats_guint) -> [l1:addr] (ptr_v_1(type_c2ats_GSource, l1) | ptr l1) = "mac#g_timeout_source_new"
fun fun_c2ats_g_timeout_source_new_seconds: (type_c2ats_guint) -> [l1:addr] (ptr_v_1(type_c2ats_GSource, l1) | ptr l1) = "mac#g_timeout_source_new_seconds"
fun fun_c2ats_g_get_current_time: {l1:addr} (!ptr_v_1(type_c2ats_GTimeVal, l1) | ptr l1) -> void = "mac#g_get_current_time"
fun fun_c2ats_g_get_monotonic_time: () -> type_c2ats_gint64 = "mac#g_get_monotonic_time"
fun fun_c2ats_g_get_real_time: () -> type_c2ats_gint64 = "mac#g_get_real_time"
fun fun_c2ats_g_source_remove: (type_c2ats_guint) -> type_c2ats_gboolean = "mac#g_source_remove"
fun fun_c2ats_g_source_remove_by_user_data: (type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#g_source_remove_by_user_data"
fun fun_c2ats_g_source_remove_by_funcs_user_data: {l1:addr} (!ptr_v_1(type_c2ats_GSourceFuncs, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#g_source_remove_by_funcs_user_data"
fun fun_c2ats_g_timeout_add_full: (type_c2ats_gint, type_c2ats_guint, type_c2ats_GSourceFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_guint = "mac#g_timeout_add_full"
fun fun_c2ats_g_timeout_add: (type_c2ats_guint, type_c2ats_GSourceFunc, type_c2ats_gpointer) -> type_c2ats_guint = "mac#g_timeout_add"
fun fun_c2ats_g_timeout_add_seconds_full: (type_c2ats_gint, type_c2ats_guint, type_c2ats_GSourceFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_guint = "mac#g_timeout_add_seconds_full"
fun fun_c2ats_g_timeout_add_seconds: (type_c2ats_guint, type_c2ats_GSourceFunc, type_c2ats_gpointer) -> type_c2ats_guint = "mac#g_timeout_add_seconds"
fun fun_c2ats_g_child_watch_add_full: (type_c2ats_gint, type_c2ats_GPid, type_c2ats_GChildWatchFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_guint = "mac#g_child_watch_add_full"
fun fun_c2ats_g_child_watch_add: (type_c2ats_GPid, type_c2ats_GChildWatchFunc, type_c2ats_gpointer) -> type_c2ats_guint = "mac#g_child_watch_add"
fun fun_c2ats_g_idle_add: (type_c2ats_GSourceFunc, type_c2ats_gpointer) -> type_c2ats_guint = "mac#g_idle_add"
fun fun_c2ats_g_idle_add_full: (type_c2ats_gint, type_c2ats_GSourceFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_guint = "mac#g_idle_add_full"
fun fun_c2ats_g_idle_remove_by_data: (type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#g_idle_remove_by_data"
fun fun_c2ats_g_main_context_invoke_full: {l1:addr} (!ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1, type_c2ats_gint, type_c2ats_GSourceFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#g_main_context_invoke_full"
fun fun_c2ats_g_main_context_invoke: {l1:addr} (!ptr_v_1(type_c2ats_GMainContext, l1) | ptr l1, type_c2ats_GSourceFunc, type_c2ats_gpointer) -> void = "mac#g_main_context_invoke"
macdef takeout_c2ats_g_timeout_funcs = $extval([l1:addr] (ptr_v_1(type_c2ats_GSourceFuncs, l1) | ptr l1), "&g_timeout_funcs")
praxi addback_c2ats_g_timeout_funcs {l1:addr} (ptr_v_1(type_c2ats_GSourceFuncs, l1) | ptr l1): void
macdef takeout_c2ats_g_child_watch_funcs = $extval([l1:addr] (ptr_v_1(type_c2ats_GSourceFuncs, l1) | ptr l1), "&g_child_watch_funcs")
praxi addback_c2ats_g_child_watch_funcs {l1:addr} (ptr_v_1(type_c2ats_GSourceFuncs, l1) | ptr l1): void
macdef takeout_c2ats_g_idle_funcs = $extval([l1:addr] (ptr_v_1(type_c2ats_GSourceFuncs, l1) | ptr l1), "&g_idle_funcs")
praxi addback_c2ats_g_idle_funcs {l1:addr} (ptr_v_1(type_c2ats_GSourceFuncs, l1) | ptr l1): void
macdef takeout_c2ats_g_unix_signal_funcs = $extval([l1:addr] (ptr_v_1(type_c2ats_GSourceFuncs, l1) | ptr l1), "&g_unix_signal_funcs")
praxi addback_c2ats_g_unix_signal_funcs {l1:addr} (ptr_v_1(type_c2ats_GSourceFuncs, l1) | ptr l1): void
macdef takeout_c2ats_g_unix_fd_source_funcs = $extval([l1:addr] (ptr_v_1(type_c2ats_GSourceFuncs, l1) | ptr l1), "&g_unix_fd_source_funcs")
praxi addback_c2ats_g_unix_fd_source_funcs {l1:addr} (ptr_v_1(type_c2ats_GSourceFuncs, l1) | ptr l1): void
// File: /usr/include/glib-2.0/glib/gunicode.h
typedef type_c2ats_gunichar = type_c2ats_guint32
typedef type_c2ats_gunichar2 = type_c2ats_guint16
typedef type_c2ats_GUnicodeType = int
#define enum_c2ats_G_UNICODE_CONTROL 0
#define enum_c2ats_G_UNICODE_FORMAT 1
#define enum_c2ats_G_UNICODE_UNASSIGNED 2
#define enum_c2ats_G_UNICODE_PRIVATE_USE 3
#define enum_c2ats_G_UNICODE_SURROGATE 4
#define enum_c2ats_G_UNICODE_LOWERCASE_LETTER 5
#define enum_c2ats_G_UNICODE_MODIFIER_LETTER 6
#define enum_c2ats_G_UNICODE_OTHER_LETTER 7
#define enum_c2ats_G_UNICODE_TITLECASE_LETTER 8
#define enum_c2ats_G_UNICODE_UPPERCASE_LETTER 9
#define enum_c2ats_G_UNICODE_SPACING_MARK 10
#define enum_c2ats_G_UNICODE_ENCLOSING_MARK 11
#define enum_c2ats_G_UNICODE_NON_SPACING_MARK 12
#define enum_c2ats_G_UNICODE_DECIMAL_NUMBER 13
#define enum_c2ats_G_UNICODE_LETTER_NUMBER 14
#define enum_c2ats_G_UNICODE_OTHER_NUMBER 15
#define enum_c2ats_G_UNICODE_CONNECT_PUNCTUATION 16
#define enum_c2ats_G_UNICODE_DASH_PUNCTUATION 17
#define enum_c2ats_G_UNICODE_CLOSE_PUNCTUATION 18
#define enum_c2ats_G_UNICODE_FINAL_PUNCTUATION 19
#define enum_c2ats_G_UNICODE_INITIAL_PUNCTUATION 20
#define enum_c2ats_G_UNICODE_OTHER_PUNCTUATION 21
#define enum_c2ats_G_UNICODE_OPEN_PUNCTUATION 22
#define enum_c2ats_G_UNICODE_CURRENCY_SYMBOL 23
#define enum_c2ats_G_UNICODE_MODIFIER_SYMBOL 24
#define enum_c2ats_G_UNICODE_MATH_SYMBOL 25
#define enum_c2ats_G_UNICODE_OTHER_SYMBOL 26
#define enum_c2ats_G_UNICODE_LINE_SEPARATOR 27
#define enum_c2ats_G_UNICODE_PARAGRAPH_SEPARATOR 28
#define enum_c2ats_G_UNICODE_SPACE_SEPARATOR 29
typedef type_c2ats_GUnicodeBreakType = int
#define enum_c2ats_G_UNICODE_BREAK_MANDATORY 0
#define enum_c2ats_G_UNICODE_BREAK_CARRIAGE_RETURN 1
#define enum_c2ats_G_UNICODE_BREAK_LINE_FEED 2
#define enum_c2ats_G_UNICODE_BREAK_COMBINING_MARK 3
#define enum_c2ats_G_UNICODE_BREAK_SURROGATE 4
#define enum_c2ats_G_UNICODE_BREAK_ZERO_WIDTH_SPACE 5
#define enum_c2ats_G_UNICODE_BREAK_INSEPARABLE 6
#define enum_c2ats_G_UNICODE_BREAK_NON_BREAKING_GLUE 7
#define enum_c2ats_G_UNICODE_BREAK_CONTINGENT 8
#define enum_c2ats_G_UNICODE_BREAK_SPACE 9
#define enum_c2ats_G_UNICODE_BREAK_AFTER 10
#define enum_c2ats_G_UNICODE_BREAK_BEFORE 11
#define enum_c2ats_G_UNICODE_BREAK_BEFORE_AND_AFTER 12
#define enum_c2ats_G_UNICODE_BREAK_HYPHEN 13
#define enum_c2ats_G_UNICODE_BREAK_NON_STARTER 14
#define enum_c2ats_G_UNICODE_BREAK_OPEN_PUNCTUATION 15
#define enum_c2ats_G_UNICODE_BREAK_CLOSE_PUNCTUATION 16
#define enum_c2ats_G_UNICODE_BREAK_QUOTATION 17
#define enum_c2ats_G_UNICODE_BREAK_EXCLAMATION 18
#define enum_c2ats_G_UNICODE_BREAK_IDEOGRAPHIC 19
#define enum_c2ats_G_UNICODE_BREAK_NUMERIC 20
#define enum_c2ats_G_UNICODE_BREAK_INFIX_SEPARATOR 21
#define enum_c2ats_G_UNICODE_BREAK_SYMBOL 22
#define enum_c2ats_G_UNICODE_BREAK_ALPHABETIC 23
#define enum_c2ats_G_UNICODE_BREAK_PREFIX 24
#define enum_c2ats_G_UNICODE_BREAK_POSTFIX 25
#define enum_c2ats_G_UNICODE_BREAK_COMPLEX_CONTEXT 26
#define enum_c2ats_G_UNICODE_BREAK_AMBIGUOUS 27
#define enum_c2ats_G_UNICODE_BREAK_UNKNOWN 28
#define enum_c2ats_G_UNICODE_BREAK_NEXT_LINE 29
#define enum_c2ats_G_UNICODE_BREAK_WORD_JOINER 30
#define enum_c2ats_G_UNICODE_BREAK_HANGUL_L_JAMO 31
#define enum_c2ats_G_UNICODE_BREAK_HANGUL_V_JAMO 32
#define enum_c2ats_G_UNICODE_BREAK_HANGUL_T_JAMO 33
#define enum_c2ats_G_UNICODE_BREAK_HANGUL_LV_SYLLABLE 34
#define enum_c2ats_G_UNICODE_BREAK_HANGUL_LVT_SYLLABLE 35
#define enum_c2ats_G_UNICODE_BREAK_CLOSE_PARANTHESIS 36
#define enum_c2ats_G_UNICODE_BREAK_CONDITIONAL_JAPANESE_STARTER 37
#define enum_c2ats_G_UNICODE_BREAK_HEBREW_LETTER 38
#define enum_c2ats_G_UNICODE_BREAK_REGIONAL_INDICATOR 39
#define enum_c2ats_G_UNICODE_BREAK_EMOJI_BASE 40
#define enum_c2ats_G_UNICODE_BREAK_EMOJI_MODIFIER 41
#define enum_c2ats_G_UNICODE_BREAK_ZERO_WIDTH_JOINER 42
typedef type_c2ats_GUnicodeScript = int
#define enum_c2ats_G_UNICODE_SCRIPT_INVALID_CODE ~1
#define enum_c2ats_G_UNICODE_SCRIPT_COMMON 0
#define enum_c2ats_G_UNICODE_SCRIPT_INHERITED 0 + 1
#define enum_c2ats_G_UNICODE_SCRIPT_ARABIC 0 + 2
#define enum_c2ats_G_UNICODE_SCRIPT_ARMENIAN 0 + 3
#define enum_c2ats_G_UNICODE_SCRIPT_BENGALI 0 + 4
#define enum_c2ats_G_UNICODE_SCRIPT_BOPOMOFO 0 + 5
#define enum_c2ats_G_UNICODE_SCRIPT_CHEROKEE 0 + 6
#define enum_c2ats_G_UNICODE_SCRIPT_COPTIC 0 + 7
#define enum_c2ats_G_UNICODE_SCRIPT_CYRILLIC 0 + 8
#define enum_c2ats_G_UNICODE_SCRIPT_DESERET 0 + 9
#define enum_c2ats_G_UNICODE_SCRIPT_DEVANAGARI 0 + 10
#define enum_c2ats_G_UNICODE_SCRIPT_ETHIOPIC 0 + 11
#define enum_c2ats_G_UNICODE_SCRIPT_GEORGIAN 0 + 12
#define enum_c2ats_G_UNICODE_SCRIPT_GOTHIC 0 + 13
#define enum_c2ats_G_UNICODE_SCRIPT_GREEK 0 + 14
#define enum_c2ats_G_UNICODE_SCRIPT_GUJARATI 0 + 15
#define enum_c2ats_G_UNICODE_SCRIPT_GURMUKHI 0 + 16
#define enum_c2ats_G_UNICODE_SCRIPT_HAN 0 + 17
#define enum_c2ats_G_UNICODE_SCRIPT_HANGUL 0 + 18
#define enum_c2ats_G_UNICODE_SCRIPT_HEBREW 0 + 19
#define enum_c2ats_G_UNICODE_SCRIPT_HIRAGANA 0 + 20
#define enum_c2ats_G_UNICODE_SCRIPT_KANNADA 0 + 21
#define enum_c2ats_G_UNICODE_SCRIPT_KATAKANA 0 + 22
#define enum_c2ats_G_UNICODE_SCRIPT_KHMER 0 + 23
#define enum_c2ats_G_UNICODE_SCRIPT_LAO 0 + 24
#define enum_c2ats_G_UNICODE_SCRIPT_LATIN 0 + 25
#define enum_c2ats_G_UNICODE_SCRIPT_MALAYALAM 0 + 26
#define enum_c2ats_G_UNICODE_SCRIPT_MONGOLIAN 0 + 27
#define enum_c2ats_G_UNICODE_SCRIPT_MYANMAR 0 + 28
#define enum_c2ats_G_UNICODE_SCRIPT_OGHAM 0 + 29
#define enum_c2ats_G_UNICODE_SCRIPT_OLD_ITALIC 0 + 30
#define enum_c2ats_G_UNICODE_SCRIPT_ORIYA 0 + 31
#define enum_c2ats_G_UNICODE_SCRIPT_RUNIC 0 + 32
#define enum_c2ats_G_UNICODE_SCRIPT_SINHALA 0 + 33
#define enum_c2ats_G_UNICODE_SCRIPT_SYRIAC 0 + 34
#define enum_c2ats_G_UNICODE_SCRIPT_TAMIL 0 + 35
#define enum_c2ats_G_UNICODE_SCRIPT_TELUGU 0 + 36
#define enum_c2ats_G_UNICODE_SCRIPT_THAANA 0 + 37
#define enum_c2ats_G_UNICODE_SCRIPT_THAI 0 + 38
#define enum_c2ats_G_UNICODE_SCRIPT_TIBETAN 0 + 39
#define enum_c2ats_G_UNICODE_SCRIPT_CANADIAN_ABORIGINAL 0 + 40
#define enum_c2ats_G_UNICODE_SCRIPT_YI 0 + 41
#define enum_c2ats_G_UNICODE_SCRIPT_TAGALOG 0 + 42
#define enum_c2ats_G_UNICODE_SCRIPT_HANUNOO 0 + 43
#define enum_c2ats_G_UNICODE_SCRIPT_BUHID 0 + 44
#define enum_c2ats_G_UNICODE_SCRIPT_TAGBANWA 0 + 45
#define enum_c2ats_G_UNICODE_SCRIPT_BRAILLE 0 + 46
#define enum_c2ats_G_UNICODE_SCRIPT_CYPRIOT 0 + 47
#define enum_c2ats_G_UNICODE_SCRIPT_LIMBU 0 + 48
#define enum_c2ats_G_UNICODE_SCRIPT_OSMANYA 0 + 49
#define enum_c2ats_G_UNICODE_SCRIPT_SHAVIAN 0 + 50
#define enum_c2ats_G_UNICODE_SCRIPT_LINEAR_B 0 + 51
#define enum_c2ats_G_UNICODE_SCRIPT_TAI_LE 0 + 52
#define enum_c2ats_G_UNICODE_SCRIPT_UGARITIC 0 + 53
#define enum_c2ats_G_UNICODE_SCRIPT_NEW_TAI_LUE 0 + 54
#define enum_c2ats_G_UNICODE_SCRIPT_BUGINESE 0 + 55
#define enum_c2ats_G_UNICODE_SCRIPT_GLAGOLITIC 0 + 56
#define enum_c2ats_G_UNICODE_SCRIPT_TIFINAGH 0 + 57
#define enum_c2ats_G_UNICODE_SCRIPT_SYLOTI_NAGRI 0 + 58
#define enum_c2ats_G_UNICODE_SCRIPT_OLD_PERSIAN 0 + 59
#define enum_c2ats_G_UNICODE_SCRIPT_KHAROSHTHI 0 + 60
#define enum_c2ats_G_UNICODE_SCRIPT_UNKNOWN 0 + 61
#define enum_c2ats_G_UNICODE_SCRIPT_BALINESE 0 + 62
#define enum_c2ats_G_UNICODE_SCRIPT_CUNEIFORM 0 + 63
#define enum_c2ats_G_UNICODE_SCRIPT_PHOENICIAN 0 + 64
#define enum_c2ats_G_UNICODE_SCRIPT_PHAGS_PA 0 + 65
#define enum_c2ats_G_UNICODE_SCRIPT_NKO 0 + 66
#define enum_c2ats_G_UNICODE_SCRIPT_KAYAH_LI 0 + 67
#define enum_c2ats_G_UNICODE_SCRIPT_LEPCHA 0 + 68
#define enum_c2ats_G_UNICODE_SCRIPT_REJANG 0 + 69
#define enum_c2ats_G_UNICODE_SCRIPT_SUNDANESE 0 + 70
#define enum_c2ats_G_UNICODE_SCRIPT_SAURASHTRA 0 + 71
#define enum_c2ats_G_UNICODE_SCRIPT_CHAM 0 + 72
#define enum_c2ats_G_UNICODE_SCRIPT_OL_CHIKI 0 + 73
#define enum_c2ats_G_UNICODE_SCRIPT_VAI 0 + 74
#define enum_c2ats_G_UNICODE_SCRIPT_CARIAN 0 + 75
#define enum_c2ats_G_UNICODE_SCRIPT_LYCIAN 0 + 76
#define enum_c2ats_G_UNICODE_SCRIPT_LYDIAN 0 + 77
#define enum_c2ats_G_UNICODE_SCRIPT_AVESTAN 0 + 78
#define enum_c2ats_G_UNICODE_SCRIPT_BAMUM 0 + 79
#define enum_c2ats_G_UNICODE_SCRIPT_EGYPTIAN_HIEROGLYPHS 0 + 80
#define enum_c2ats_G_UNICODE_SCRIPT_IMPERIAL_ARAMAIC 0 + 81
#define enum_c2ats_G_UNICODE_SCRIPT_INSCRIPTIONAL_PAHLAVI 0 + 82
#define enum_c2ats_G_UNICODE_SCRIPT_INSCRIPTIONAL_PARTHIAN 0 + 83
#define enum_c2ats_G_UNICODE_SCRIPT_JAVANESE 0 + 84
#define enum_c2ats_G_UNICODE_SCRIPT_KAITHI 0 + 85
#define enum_c2ats_G_UNICODE_SCRIPT_LISU 0 + 86
#define enum_c2ats_G_UNICODE_SCRIPT_MEETEI_MAYEK 0 + 87
#define enum_c2ats_G_UNICODE_SCRIPT_OLD_SOUTH_ARABIAN 0 + 88
#define enum_c2ats_G_UNICODE_SCRIPT_OLD_TURKIC 0 + 89
#define enum_c2ats_G_UNICODE_SCRIPT_SAMARITAN 0 + 90
#define enum_c2ats_G_UNICODE_SCRIPT_TAI_THAM 0 + 91
#define enum_c2ats_G_UNICODE_SCRIPT_TAI_VIET 0 + 92
#define enum_c2ats_G_UNICODE_SCRIPT_BATAK 0 + 93
#define enum_c2ats_G_UNICODE_SCRIPT_BRAHMI 0 + 94
#define enum_c2ats_G_UNICODE_SCRIPT_MANDAIC 0 + 95
#define enum_c2ats_G_UNICODE_SCRIPT_CHAKMA 0 + 96
#define enum_c2ats_G_UNICODE_SCRIPT_MEROITIC_CURSIVE 0 + 97
#define enum_c2ats_G_UNICODE_SCRIPT_MEROITIC_HIEROGLYPHS 0 + 98
#define enum_c2ats_G_UNICODE_SCRIPT_MIAO 0 + 99
#define enum_c2ats_G_UNICODE_SCRIPT_SHARADA 0 + 100
#define enum_c2ats_G_UNICODE_SCRIPT_SORA_SOMPENG 0 + 101
#define enum_c2ats_G_UNICODE_SCRIPT_TAKRI 0 + 102
#define enum_c2ats_G_UNICODE_SCRIPT_BASSA_VAH 0 + 103
#define enum_c2ats_G_UNICODE_SCRIPT_CAUCASIAN_ALBANIAN 0 + 104
#define enum_c2ats_G_UNICODE_SCRIPT_DUPLOYAN 0 + 105
#define enum_c2ats_G_UNICODE_SCRIPT_ELBASAN 0 + 106
#define enum_c2ats_G_UNICODE_SCRIPT_GRANTHA 0 + 107
#define enum_c2ats_G_UNICODE_SCRIPT_KHOJKI 0 + 108
#define enum_c2ats_G_UNICODE_SCRIPT_KHUDAWADI 0 + 109
#define enum_c2ats_G_UNICODE_SCRIPT_LINEAR_A 0 + 110
#define enum_c2ats_G_UNICODE_SCRIPT_MAHAJANI 0 + 111
#define enum_c2ats_G_UNICODE_SCRIPT_MANICHAEAN 0 + 112
#define enum_c2ats_G_UNICODE_SCRIPT_MENDE_KIKAKUI 0 + 113
#define enum_c2ats_G_UNICODE_SCRIPT_MODI 0 + 114
#define enum_c2ats_G_UNICODE_SCRIPT_MRO 0 + 115
#define enum_c2ats_G_UNICODE_SCRIPT_NABATAEAN 0 + 116
#define enum_c2ats_G_UNICODE_SCRIPT_OLD_NORTH_ARABIAN 0 + 117
#define enum_c2ats_G_UNICODE_SCRIPT_OLD_PERMIC 0 + 118
#define enum_c2ats_G_UNICODE_SCRIPT_PAHAWH_HMONG 0 + 119
#define enum_c2ats_G_UNICODE_SCRIPT_PALMYRENE 0 + 120
#define enum_c2ats_G_UNICODE_SCRIPT_PAU_CIN_HAU 0 + 121
#define enum_c2ats_G_UNICODE_SCRIPT_PSALTER_PAHLAVI 0 + 122
#define enum_c2ats_G_UNICODE_SCRIPT_SIDDHAM 0 + 123
#define enum_c2ats_G_UNICODE_SCRIPT_TIRHUTA 0 + 124
#define enum_c2ats_G_UNICODE_SCRIPT_WARANG_CITI 0 + 125
#define enum_c2ats_G_UNICODE_SCRIPT_AHOM 0 + 126
#define enum_c2ats_G_UNICODE_SCRIPT_ANATOLIAN_HIEROGLYPHS 0 + 127
#define enum_c2ats_G_UNICODE_SCRIPT_HATRAN 0 + 128
#define enum_c2ats_G_UNICODE_SCRIPT_MULTANI 0 + 129
#define enum_c2ats_G_UNICODE_SCRIPT_OLD_HUNGARIAN 0 + 130
#define enum_c2ats_G_UNICODE_SCRIPT_SIGNWRITING 0 + 131
#define enum_c2ats_G_UNICODE_SCRIPT_ADLAM 0 + 132
#define enum_c2ats_G_UNICODE_SCRIPT_BHAIKSUKI 0 + 133
#define enum_c2ats_G_UNICODE_SCRIPT_MARCHEN 0 + 134
#define enum_c2ats_G_UNICODE_SCRIPT_NEWA 0 + 135
#define enum_c2ats_G_UNICODE_SCRIPT_OSAGE 0 + 136
#define enum_c2ats_G_UNICODE_SCRIPT_TANGUT 0 + 137
fun fun_c2ats_g_unicode_script_to_iso15924: (type_c2ats_GUnicodeScript) -> type_c2ats_guint32 = "mac#g_unicode_script_to_iso15924"
fun fun_c2ats_g_unicode_script_from_iso15924: (type_c2ats_guint32) -> type_c2ats_GUnicodeScript = "mac#g_unicode_script_from_iso15924"
fun fun_c2ats_g_unichar_isalnum: (type_c2ats_gunichar) -> type_c2ats_gboolean = "mac#g_unichar_isalnum"
fun fun_c2ats_g_unichar_isalpha: (type_c2ats_gunichar) -> type_c2ats_gboolean = "mac#g_unichar_isalpha"
fun fun_c2ats_g_unichar_iscntrl: (type_c2ats_gunichar) -> type_c2ats_gboolean = "mac#g_unichar_iscntrl"
fun fun_c2ats_g_unichar_isdigit: (type_c2ats_gunichar) -> type_c2ats_gboolean = "mac#g_unichar_isdigit"
fun fun_c2ats_g_unichar_isgraph: (type_c2ats_gunichar) -> type_c2ats_gboolean = "mac#g_unichar_isgraph"
fun fun_c2ats_g_unichar_islower: (type_c2ats_gunichar) -> type_c2ats_gboolean = "mac#g_unichar_islower"
fun fun_c2ats_g_unichar_isprint: (type_c2ats_gunichar) -> type_c2ats_gboolean = "mac#g_unichar_isprint"
fun fun_c2ats_g_unichar_ispunct: (type_c2ats_gunichar) -> type_c2ats_gboolean = "mac#g_unichar_ispunct"
fun fun_c2ats_g_unichar_isspace: (type_c2ats_gunichar) -> type_c2ats_gboolean = "mac#g_unichar_isspace"
fun fun_c2ats_g_unichar_isupper: (type_c2ats_gunichar) -> type_c2ats_gboolean = "mac#g_unichar_isupper"
fun fun_c2ats_g_unichar_isxdigit: (type_c2ats_gunichar) -> type_c2ats_gboolean = "mac#g_unichar_isxdigit"
fun fun_c2ats_g_unichar_istitle: (type_c2ats_gunichar) -> type_c2ats_gboolean = "mac#g_unichar_istitle"
fun fun_c2ats_g_unichar_isdefined: (type_c2ats_gunichar) -> type_c2ats_gboolean = "mac#g_unichar_isdefined"
fun fun_c2ats_g_unichar_iswide: (type_c2ats_gunichar) -> type_c2ats_gboolean = "mac#g_unichar_iswide"
fun fun_c2ats_g_unichar_iswide_cjk: (type_c2ats_gunichar) -> type_c2ats_gboolean = "mac#g_unichar_iswide_cjk"
fun fun_c2ats_g_unichar_iszerowidth: (type_c2ats_gunichar) -> type_c2ats_gboolean = "mac#g_unichar_iszerowidth"
fun fun_c2ats_g_unichar_ismark: (type_c2ats_gunichar) -> type_c2ats_gboolean = "mac#g_unichar_ismark"
fun fun_c2ats_g_unichar_toupper: (type_c2ats_gunichar) -> type_c2ats_gunichar = "mac#g_unichar_toupper"
fun fun_c2ats_g_unichar_tolower: (type_c2ats_gunichar) -> type_c2ats_gunichar = "mac#g_unichar_tolower"
fun fun_c2ats_g_unichar_totitle: (type_c2ats_gunichar) -> type_c2ats_gunichar = "mac#g_unichar_totitle"
fun fun_c2ats_g_unichar_digit_value: (type_c2ats_gunichar) -> type_c2ats_gint = "mac#g_unichar_digit_value"
fun fun_c2ats_g_unichar_xdigit_value: (type_c2ats_gunichar) -> type_c2ats_gint = "mac#g_unichar_xdigit_value"
fun fun_c2ats_g_unichar_type: (type_c2ats_gunichar) -> type_c2ats_GUnicodeType = "mac#g_unichar_type"
fun fun_c2ats_g_unichar_break_type: (type_c2ats_gunichar) -> type_c2ats_GUnicodeBreakType = "mac#g_unichar_break_type"
fun fun_c2ats_g_unichar_combining_class: (type_c2ats_gunichar) -> type_c2ats_gint = "mac#g_unichar_combining_class"
fun fun_c2ats_g_unichar_get_mirror_char: {l1:addr} (!ptr_v_1(type_c2ats_gunichar, l1) | type_c2ats_gunichar, ptr l1) -> type_c2ats_gboolean = "mac#g_unichar_get_mirror_char"
fun fun_c2ats_g_unichar_get_script: (type_c2ats_gunichar) -> type_c2ats_GUnicodeScript = "mac#g_unichar_get_script"
fun fun_c2ats_g_unichar_validate: (type_c2ats_gunichar) -> type_c2ats_gboolean = "mac#g_unichar_validate"
fun fun_c2ats_g_unichar_compose: {l1:addr} (!ptr_v_1(type_c2ats_gunichar, l1) | type_c2ats_gunichar, type_c2ats_gunichar, ptr l1) -> type_c2ats_gboolean = "mac#g_unichar_compose"
fun fun_c2ats_g_unichar_decompose: {l1,l2:addr} (!ptr_v_1(type_c2ats_gunichar, l1), !ptr_v_1(type_c2ats_gunichar, l2) | type_c2ats_gunichar, ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_unichar_decompose"
fun fun_c2ats_g_unichar_fully_decompose: {l1:addr} (!ptr_v_1(type_c2ats_gunichar, l1) | type_c2ats_gunichar, type_c2ats_gboolean, ptr l1, type_c2ats_gsize) -> type_c2ats_gsize = "mac#g_unichar_fully_decompose"
fun fun_c2ats_g_unicode_canonical_ordering: {l1:addr} (!ptr_v_1(type_c2ats_gunichar, l1) | ptr l1, type_c2ats_gsize) -> void = "mac#g_unicode_canonical_ordering"
fun fun_c2ats_g_unicode_canonical_decomposition: {l1:addr} (!ptr_v_1(type_c2ats_gsize, l1) | type_c2ats_gunichar, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gunichar, l2) | ptr l2) = "mac#g_unicode_canonical_decomposition"
macdef takeout_c2ats_g_utf8_skip = $extval([l1,l1_1:addr] (ptr_v_2(type_c2ats_gchar, l1, l1_1) | ptr l1), "&g_utf8_skip")
praxi addback_c2ats_g_utf8_skip {l1,l1_1:addr} (ptr_v_2(type_c2ats_gchar, l1, l1_1) | ptr l1): void
fun fun_c2ats_g_utf8_get_char: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gunichar = "mac#g_utf8_get_char"
fun fun_c2ats_g_utf8_get_char_validated: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gssize) -> type_c2ats_gunichar = "mac#g_utf8_get_char_validated"
fun fun_c2ats_g_utf8_offset_to_pointer: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_glong) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_utf8_offset_to_pointer"
fun fun_c2ats_g_utf8_pointer_to_offset: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_glong = "mac#g_utf8_pointer_to_offset"
fun fun_c2ats_g_utf8_prev_char: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_utf8_prev_char"
fun fun_c2ats_g_utf8_find_next_char: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_utf8_find_next_char"
fun fun_c2ats_g_utf8_find_prev_char: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_utf8_find_prev_char"
fun fun_c2ats_g_utf8_strlen: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gssize) -> type_c2ats_glong = "mac#g_utf8_strlen"
fun fun_c2ats_g_utf8_substring: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_glong, type_c2ats_glong) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_utf8_substring"
fun fun_c2ats_g_utf8_strncpy: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gsize) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_utf8_strncpy"
fun fun_c2ats_g_utf8_strchr: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gssize, type_c2ats_gunichar) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_utf8_strchr"
fun fun_c2ats_g_utf8_strrchr: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gssize, type_c2ats_gunichar) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_utf8_strrchr"
fun fun_c2ats_g_utf8_strreverse: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gssize) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_utf8_strreverse"
fun fun_c2ats_g_utf8_to_utf16: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_glong, l2), !ptr_v_1(type_c2ats_glong, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, type_c2ats_glong, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_gunichar2, l5) | ptr l5) = "mac#g_utf8_to_utf16"
fun fun_c2ats_g_utf8_to_ucs4: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_glong, l2), !ptr_v_1(type_c2ats_glong, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, type_c2ats_glong, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_gunichar, l5) | ptr l5) = "mac#g_utf8_to_ucs4"
fun fun_c2ats_g_utf8_to_ucs4_fast: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_glong, l2) | ptr l1, type_c2ats_glong, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gunichar, l3) | ptr l3) = "mac#g_utf8_to_ucs4_fast"
fun fun_c2ats_g_utf16_to_ucs4: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_gunichar2, l1), !ptr_v_1(type_c2ats_glong, l2), !ptr_v_1(type_c2ats_glong, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, type_c2ats_glong, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_gunichar, l5) | ptr l5) = "mac#g_utf16_to_ucs4"
fun fun_c2ats_g_utf16_to_utf8: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_gunichar2, l1), !ptr_v_1(type_c2ats_glong, l2), !ptr_v_1(type_c2ats_glong, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, type_c2ats_glong, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_gchar, l5) | ptr l5) = "mac#g_utf16_to_utf8"
fun fun_c2ats_g_ucs4_to_utf16: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_gunichar, l1), !ptr_v_1(type_c2ats_glong, l2), !ptr_v_1(type_c2ats_glong, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, type_c2ats_glong, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_gunichar2, l5) | ptr l5) = "mac#g_ucs4_to_utf16"
fun fun_c2ats_g_ucs4_to_utf8: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_gunichar, l1), !ptr_v_1(type_c2ats_glong, l2), !ptr_v_1(type_c2ats_glong, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, type_c2ats_glong, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_gchar, l5) | ptr l5) = "mac#g_ucs4_to_utf8"
fun fun_c2ats_g_unichar_to_utf8: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_gunichar, ptr l1) -> type_c2ats_gint = "mac#g_unichar_to_utf8"
fun fun_c2ats_g_utf8_validate: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l1, type_c2ats_gssize, ptr l2) -> type_c2ats_gboolean = "mac#g_utf8_validate"
fun fun_c2ats_g_utf8_strup: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gssize) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_utf8_strup"
fun fun_c2ats_g_utf8_strdown: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gssize) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_utf8_strdown"
fun fun_c2ats_g_utf8_casefold: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gssize) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_utf8_casefold"
typedef type_c2ats_GNormalizeMode = int
#define enum_c2ats_G_NORMALIZE_DEFAULT 0
#define enum_c2ats_G_NORMALIZE_NFD G_NORMALIZE_DEFAULT
#define enum_c2ats_G_NORMALIZE_DEFAULT_COMPOSE G_NORMALIZE_DEFAULT + 1
#define enum_c2ats_G_NORMALIZE_NFC G_NORMALIZE_DEFAULT_COMPOSE
#define enum_c2ats_G_NORMALIZE_ALL G_NORMALIZE_DEFAULT_COMPOSE + 1
#define enum_c2ats_G_NORMALIZE_NFKD G_NORMALIZE_ALL
#define enum_c2ats_G_NORMALIZE_ALL_COMPOSE G_NORMALIZE_ALL + 1
#define enum_c2ats_G_NORMALIZE_NFKC G_NORMALIZE_ALL_COMPOSE
fun fun_c2ats_g_utf8_normalize: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gssize, type_c2ats_GNormalizeMode) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_utf8_normalize"
fun fun_c2ats_g_utf8_collate: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#g_utf8_collate"
fun fun_c2ats_g_utf8_collate_key: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gssize) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_utf8_collate_key"
fun fun_c2ats_g_utf8_collate_key_for_filename: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gssize) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_utf8_collate_key_for_filename"
fun fun_c2ats__g_utf8_make_valid: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#_g_utf8_make_valid"
// File: /usr/include/glib-2.0/glib/gstring.h
abst@ype struct_c2ats__GString // FIXME! Forward declaration.
typedef type_c2ats_GString = struct_c2ats__GString
typedef struct_c2ats__GString = $extype_struct"struct _GString" of {
  str = ptr (* cPtr0(type_c2ats_gchar) *),
  len = type_c2ats_gsize,
  allocated_len = type_c2ats_gsize
}
fun fun_c2ats_g_string_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GString, l2) | ptr l2) = "mac#g_string_new"
fun fun_c2ats_g_string_new_len: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gssize) -> [l2:addr] (ptr_v_1(type_c2ats_GString, l2) | ptr l2) = "mac#g_string_new_len"
fun fun_c2ats_g_string_sized_new: (type_c2ats_gsize) -> [l1:addr] (ptr_v_1(type_c2ats_GString, l1) | ptr l1) = "mac#g_string_sized_new"
fun fun_c2ats_g_string_free: {l1:addr} (!ptr_v_1(type_c2ats_GString, l1) | ptr l1, type_c2ats_gboolean) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_string_free"
fun fun_c2ats_g_string_free_to_bytes: {l1:addr} (!ptr_v_1(type_c2ats_GString, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GBytes, l2) | ptr l2) = "mac#g_string_free_to_bytes"
fun fun_c2ats_g_string_equal: {l1,l2:addr} (!ptr_v_1(type_c2ats_GString, l1), !ptr_v_1(type_c2ats_GString, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_string_equal"
fun fun_c2ats_g_string_hash: {l1:addr} (!ptr_v_1(type_c2ats_GString, l1) | ptr l1) -> type_c2ats_guint = "mac#g_string_hash"
fun fun_c2ats_g_string_assign: {l1,l2:addr} (!ptr_v_1(type_c2ats_GString, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GString, l3) | ptr l3) = "mac#g_string_assign"
fun fun_c2ats_g_string_truncate: {l1:addr} (!ptr_v_1(type_c2ats_GString, l1) | ptr l1, type_c2ats_gsize) -> [l2:addr] (ptr_v_1(type_c2ats_GString, l2) | ptr l2) = "mac#g_string_truncate"
fun fun_c2ats_g_string_set_size: {l1:addr} (!ptr_v_1(type_c2ats_GString, l1) | ptr l1, type_c2ats_gsize) -> [l2:addr] (ptr_v_1(type_c2ats_GString, l2) | ptr l2) = "mac#g_string_set_size"
fun fun_c2ats_g_string_insert_len: {l1,l2:addr} (!ptr_v_1(type_c2ats_GString, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gssize, ptr l2, type_c2ats_gssize) -> [l3:addr] (ptr_v_1(type_c2ats_GString, l3) | ptr l3) = "mac#g_string_insert_len"
fun fun_c2ats_g_string_append: {l1,l2:addr} (!ptr_v_1(type_c2ats_GString, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GString, l3) | ptr l3) = "mac#g_string_append"
fun fun_c2ats_g_string_append_len: {l1,l2:addr} (!ptr_v_1(type_c2ats_GString, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gssize) -> [l3:addr] (ptr_v_1(type_c2ats_GString, l3) | ptr l3) = "mac#g_string_append_len"
fun fun_c2ats_g_string_append_c: {l1:addr} (!ptr_v_1(type_c2ats_GString, l1) | ptr l1, type_c2ats_gchar) -> [l2:addr] (ptr_v_1(type_c2ats_GString, l2) | ptr l2) = "mac#g_string_append_c"
fun fun_c2ats_g_string_append_unichar: {l1:addr} (!ptr_v_1(type_c2ats_GString, l1) | ptr l1, type_c2ats_gunichar) -> [l2:addr] (ptr_v_1(type_c2ats_GString, l2) | ptr l2) = "mac#g_string_append_unichar"
fun fun_c2ats_g_string_prepend: {l1,l2:addr} (!ptr_v_1(type_c2ats_GString, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GString, l3) | ptr l3) = "mac#g_string_prepend"
fun fun_c2ats_g_string_prepend_c: {l1:addr} (!ptr_v_1(type_c2ats_GString, l1) | ptr l1, type_c2ats_gchar) -> [l2:addr] (ptr_v_1(type_c2ats_GString, l2) | ptr l2) = "mac#g_string_prepend_c"
fun fun_c2ats_g_string_prepend_unichar: {l1:addr} (!ptr_v_1(type_c2ats_GString, l1) | ptr l1, type_c2ats_gunichar) -> [l2:addr] (ptr_v_1(type_c2ats_GString, l2) | ptr l2) = "mac#g_string_prepend_unichar"
fun fun_c2ats_g_string_prepend_len: {l1,l2:addr} (!ptr_v_1(type_c2ats_GString, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gssize) -> [l3:addr] (ptr_v_1(type_c2ats_GString, l3) | ptr l3) = "mac#g_string_prepend_len"
fun fun_c2ats_g_string_insert: {l1,l2:addr} (!ptr_v_1(type_c2ats_GString, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gssize, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GString, l3) | ptr l3) = "mac#g_string_insert"
fun fun_c2ats_g_string_insert_c: {l1:addr} (!ptr_v_1(type_c2ats_GString, l1) | ptr l1, type_c2ats_gssize, type_c2ats_gchar) -> [l2:addr] (ptr_v_1(type_c2ats_GString, l2) | ptr l2) = "mac#g_string_insert_c"
fun fun_c2ats_g_string_insert_unichar: {l1:addr} (!ptr_v_1(type_c2ats_GString, l1) | ptr l1, type_c2ats_gssize, type_c2ats_gunichar) -> [l2:addr] (ptr_v_1(type_c2ats_GString, l2) | ptr l2) = "mac#g_string_insert_unichar"
fun fun_c2ats_g_string_overwrite: {l1,l2:addr} (!ptr_v_1(type_c2ats_GString, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gsize, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GString, l3) | ptr l3) = "mac#g_string_overwrite"
fun fun_c2ats_g_string_overwrite_len: {l1,l2:addr} (!ptr_v_1(type_c2ats_GString, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gsize, ptr l2, type_c2ats_gssize) -> [l3:addr] (ptr_v_1(type_c2ats_GString, l3) | ptr l3) = "mac#g_string_overwrite_len"
fun fun_c2ats_g_string_erase: {l1:addr} (!ptr_v_1(type_c2ats_GString, l1) | ptr l1, type_c2ats_gssize, type_c2ats_gssize) -> [l2:addr] (ptr_v_1(type_c2ats_GString, l2) | ptr l2) = "mac#g_string_erase"
fun fun_c2ats_g_string_ascii_down: {l1:addr} (!ptr_v_1(type_c2ats_GString, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GString, l2) | ptr l2) = "mac#g_string_ascii_down"
fun fun_c2ats_g_string_ascii_up: {l1:addr} (!ptr_v_1(type_c2ats_GString, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GString, l2) | ptr l2) = "mac#g_string_ascii_up"
fun fun_c2ats_g_string_vprintf: {l1,l2:addr} (!ptr_v_1(type_c2ats_GString, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_va_list) -> void = "mac#g_string_vprintf"
fun fun_c2ats_g_string_printf: {l1,l2:addr} (!ptr_v_1(type_c2ats_GString, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_string_printf"
fun fun_c2ats_g_string_append_vprintf: {l1,l2:addr} (!ptr_v_1(type_c2ats_GString, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_va_list) -> void = "mac#g_string_append_vprintf"
fun fun_c2ats_g_string_append_printf: {l1,l2:addr} (!ptr_v_1(type_c2ats_GString, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_string_append_printf"
fun fun_c2ats_g_string_append_uri_escaped: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GString, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean) -> [l4:addr] (ptr_v_1(type_c2ats_GString, l4) | ptr l4) = "mac#g_string_append_uri_escaped"
fun fun_c2ats_g_string_append_c_inline: {l1:addr} (!ptr_v_1(type_c2ats_GString, l1) | ptr l1, type_c2ats_gchar) -> [l2:addr] (ptr_v_1(type_c2ats_GString, l2) | ptr l2) = "mac#g_string_append_c_inline"
fun fun_c2ats_g_string_down: {l1:addr} (!ptr_v_1(type_c2ats_GString, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GString, l2) | ptr l2) = "mac#g_string_down"
fun fun_c2ats_g_string_up: {l1:addr} (!ptr_v_1(type_c2ats_GString, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GString, l2) | ptr l2) = "mac#g_string_up"
// File: /usr/include/glib-2.0/glib/giochannel.h
abst@ype struct_c2ats__GIOChannel // FIXME! Forward declaration.
typedef type_c2ats_GIOChannel = struct_c2ats__GIOChannel
abst@ype struct_c2ats__GIOFuncs // FIXME! Forward declaration.
typedef type_c2ats_GIOFuncs = struct_c2ats__GIOFuncs
typedef type_c2ats_GIOError = int
#define enum_c2ats_G_IO_ERROR_NONE 0
#define enum_c2ats_G_IO_ERROR_AGAIN 1
#define enum_c2ats_G_IO_ERROR_INVAL 2
#define enum_c2ats_G_IO_ERROR_UNKNOWN 3
typedef type_c2ats_GIOChannelError = int
#define enum_c2ats_G_IO_CHANNEL_ERROR_FBIG 0
#define enum_c2ats_G_IO_CHANNEL_ERROR_INVAL 1
#define enum_c2ats_G_IO_CHANNEL_ERROR_IO 2
#define enum_c2ats_G_IO_CHANNEL_ERROR_ISDIR 3
#define enum_c2ats_G_IO_CHANNEL_ERROR_NOSPC 4
#define enum_c2ats_G_IO_CHANNEL_ERROR_NXIO 5
#define enum_c2ats_G_IO_CHANNEL_ERROR_OVERFLOW 6
#define enum_c2ats_G_IO_CHANNEL_ERROR_PIPE 7
#define enum_c2ats_G_IO_CHANNEL_ERROR_FAILED 8
typedef type_c2ats_GIOStatus = int
#define enum_c2ats_G_IO_STATUS_ERROR 0
#define enum_c2ats_G_IO_STATUS_NORMAL 1
#define enum_c2ats_G_IO_STATUS_EOF 2
#define enum_c2ats_G_IO_STATUS_AGAIN 3
typedef type_c2ats_GSeekType = int
#define enum_c2ats_G_SEEK_CUR 0
#define enum_c2ats_G_SEEK_SET 1
#define enum_c2ats_G_SEEK_END 2
typedef type_c2ats_GIOFlags = int
#define enum_c2ats_G_IO_FLAG_APPEND 1 << 0
#define enum_c2ats_G_IO_FLAG_NONBLOCK 1 << 1
#define enum_c2ats_G_IO_FLAG_IS_READABLE 1 << 2
#define enum_c2ats_G_IO_FLAG_IS_WRITABLE 1 << 3
#define enum_c2ats_G_IO_FLAG_IS_WRITEABLE 1 << 3
#define enum_c2ats_G_IO_FLAG_IS_SEEKABLE 1 << 4
#define enum_c2ats_G_IO_FLAG_MASK (1 << 5) - 1
#define enum_c2ats_G_IO_FLAG_GET_MASK G_IO_FLAG_MASK
#define enum_c2ats_G_IO_FLAG_SET_MASK G_IO_FLAG_APPEND lor G_IO_FLAG_NONBLOCK
typedef struct_c2ats__GIOChannel = $extype_struct"struct _GIOChannel" of {
  ref_count = type_c2ats_gint,
  funcs = ptr (* cPtr0(type_c2ats_GIOFuncs) *),
  encoding = ptr (* cPtr0(type_c2ats_gchar) *),
  read_cd = type_c2ats_GIConv,
  write_cd = type_c2ats_GIConv,
  line_term = ptr (* cPtr0(type_c2ats_gchar) *),
  line_term_len = type_c2ats_guint,
  buf_size = type_c2ats_gsize,
  read_buf = ptr (* cPtr0(type_c2ats_GString) *),
  encoded_read_buf = ptr (* cPtr0(type_c2ats_GString) *),
  write_buf = ptr (* cPtr0(type_c2ats_GString) *),
  partial_write_buf = @[type_c2ats_gchar][6],
  use_buffer = type_c2ats_guint,
  do_encode = type_c2ats_guint,
  close_on_unref = type_c2ats_guint,
  is_readable = type_c2ats_guint,
  is_writeable = type_c2ats_guint,
  is_seekable = type_c2ats_guint,
  reserved1 = type_c2ats_gpointer,
  reserved2 = type_c2ats_gpointer
}
typedef type_c2ats_GIOFunc = {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1, type_c2ats_GIOCondition, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef struct_c2ats__GIOFuncs = $extype_struct"struct _GIOFuncs" of {
  io_read = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gsize, ptr l3, ptr l4) -> type_c2ats_GIOStatus,
  io_write = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gsize, ptr l3, ptr l4) -> type_c2ats_GIOStatus,
  io_seek = {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_gint64, type_c2ats_GSeekType, ptr l2) -> type_c2ats_GIOStatus,
  io_close = {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_GIOStatus,
  io_create_watch = {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1, type_c2ats_GIOCondition) -> [l2:addr] (ptr_v_1(type_c2ats_GSource, l2) | ptr l2),
  io_free = {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1) -> void,
  io_set_flags = {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_GIOFlags, ptr l2) -> type_c2ats_GIOStatus,
  io_get_flags = {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1) -> type_c2ats_GIOFlags
}
fun fun_c2ats_g_io_channel_init: {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1) -> void = "mac#g_io_channel_init"
fun fun_c2ats_g_io_channel_ref: {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIOChannel, l2) | ptr l2) = "mac#g_io_channel_ref"
fun fun_c2ats_g_io_channel_unref: {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1) -> void = "mac#g_io_channel_unref"
fun fun_c2ats_g_io_channel_read: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gsize, l3) | ptr l1, ptr l2, type_c2ats_gsize, ptr l3) -> type_c2ats_GIOError = "mac#g_io_channel_read"
fun fun_c2ats_g_io_channel_write: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gsize, l3) | ptr l1, ptr l2, type_c2ats_gsize, ptr l3) -> type_c2ats_GIOError = "mac#g_io_channel_write"
fun fun_c2ats_g_io_channel_seek: {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1, type_c2ats_gint64, type_c2ats_GSeekType) -> type_c2ats_GIOError = "mac#g_io_channel_seek"
fun fun_c2ats_g_io_channel_close: {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1) -> void = "mac#g_io_channel_close"
fun fun_c2ats_g_io_channel_shutdown: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_gboolean, ptr l2) -> type_c2ats_GIOStatus = "mac#g_io_channel_shutdown"
fun fun_c2ats_g_io_add_watch_full: {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1, type_c2ats_gint, type_c2ats_GIOCondition, type_c2ats_GIOFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_guint = "mac#g_io_add_watch_full"
fun fun_c2ats_g_io_create_watch: {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1, type_c2ats_GIOCondition) -> [l2:addr] (ptr_v_1(type_c2ats_GSource, l2) | ptr l2) = "mac#g_io_create_watch"
fun fun_c2ats_g_io_add_watch: {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1, type_c2ats_GIOCondition, type_c2ats_GIOFunc, type_c2ats_gpointer) -> type_c2ats_guint = "mac#g_io_add_watch"
fun fun_c2ats_g_io_channel_set_buffer_size: {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1, type_c2ats_gsize) -> void = "mac#g_io_channel_set_buffer_size"
fun fun_c2ats_g_io_channel_get_buffer_size: {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1) -> type_c2ats_gsize = "mac#g_io_channel_get_buffer_size"
fun fun_c2ats_g_io_channel_get_buffer_condition: {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1) -> type_c2ats_GIOCondition = "mac#g_io_channel_get_buffer_condition"
fun fun_c2ats_g_io_channel_set_flags: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_GIOFlags, ptr l2) -> type_c2ats_GIOStatus = "mac#g_io_channel_set_flags"
fun fun_c2ats_g_io_channel_get_flags: {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1) -> type_c2ats_GIOFlags = "mac#g_io_channel_get_flags"
fun fun_c2ats_g_io_channel_set_line_term: {l1,l2:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#g_io_channel_set_line_term"
fun fun_c2ats_g_io_channel_get_line_term: {l1,l2:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_io_channel_get_line_term"
fun fun_c2ats_g_io_channel_set_buffered: {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_io_channel_set_buffered"
fun fun_c2ats_g_io_channel_get_buffered: {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_io_channel_get_buffered"
fun fun_c2ats_g_io_channel_set_encoding: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_GIOStatus = "mac#g_io_channel_set_encoding"
fun fun_c2ats_g_io_channel_get_encoding: {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_io_channel_get_encoding"
fun fun_c2ats_g_io_channel_set_close_on_unref: {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_io_channel_set_close_on_unref"
fun fun_c2ats_g_io_channel_get_close_on_unref: {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_io_channel_get_close_on_unref"
fun fun_c2ats_g_io_channel_flush: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_GIOStatus = "mac#g_io_channel_flush"
fun fun_c2ats_g_io_channel_read_line: {l1,l2,l2_1,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_1(type_c2ats_gsize, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_GIOStatus = "mac#g_io_channel_read_line"
fun fun_c2ats_g_io_channel_read_line_string: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_1(type_c2ats_GString, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_GIOStatus = "mac#g_io_channel_read_line_string"
fun fun_c2ats_g_io_channel_read_to_end: {l1,l2,l2_1,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_GIOStatus = "mac#g_io_channel_read_to_end"
fun fun_c2ats_g_io_channel_read_chars: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gsize, ptr l3, ptr l4) -> type_c2ats_GIOStatus = "mac#g_io_channel_read_chars"
fun fun_c2ats_g_io_channel_read_unichar: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_1(type_c2ats_gunichar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_GIOStatus = "mac#g_io_channel_read_unichar"
fun fun_c2ats_g_io_channel_write_chars: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gssize, ptr l3, ptr l4) -> type_c2ats_GIOStatus = "mac#g_io_channel_write_chars"
fun fun_c2ats_g_io_channel_write_unichar: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_gunichar, ptr l2) -> type_c2ats_GIOStatus = "mac#g_io_channel_write_unichar"
fun fun_c2ats_g_io_channel_seek_position: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_gint64, type_c2ats_GSeekType, ptr l2) -> type_c2ats_GIOStatus = "mac#g_io_channel_seek_position"
fun fun_c2ats_g_io_channel_new_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GIOChannel, l4) | ptr l4) = "mac#g_io_channel_new_file"
fun fun_c2ats_g_io_channel_error_quark: () -> type_c2ats_GQuark = "mac#g_io_channel_error_quark"
fun fun_c2ats_g_io_channel_error_from_errno: (type_c2ats_gint) -> type_c2ats_GIOChannelError = "mac#g_io_channel_error_from_errno"
fun fun_c2ats_g_io_channel_unix_new: (int) -> [l1:addr] (ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1) = "mac#g_io_channel_unix_new"
fun fun_c2ats_g_io_channel_unix_get_fd: {l1:addr} (!ptr_v_1(type_c2ats_GIOChannel, l1) | ptr l1) -> type_c2ats_gint = "mac#g_io_channel_unix_get_fd"
macdef takeout_c2ats_g_io_watch_funcs = $extval([l1:addr] (ptr_v_1(type_c2ats_GSourceFuncs, l1) | ptr l1), "&g_io_watch_funcs")
praxi addback_c2ats_g_io_watch_funcs {l1:addr} (ptr_v_1(type_c2ats_GSourceFuncs, l1) | ptr l1): void
// File: /usr/include/glib-2.0/glib/gkeyfile.h
typedef type_c2ats_GKeyFileError = int
#define enum_c2ats_G_KEY_FILE_ERROR_UNKNOWN_ENCODING 0
#define enum_c2ats_G_KEY_FILE_ERROR_PARSE 1
#define enum_c2ats_G_KEY_FILE_ERROR_NOT_FOUND 2
#define enum_c2ats_G_KEY_FILE_ERROR_KEY_NOT_FOUND 3
#define enum_c2ats_G_KEY_FILE_ERROR_GROUP_NOT_FOUND 4
#define enum_c2ats_G_KEY_FILE_ERROR_INVALID_VALUE 5
fun fun_c2ats_g_key_file_error_quark: () -> type_c2ats_GQuark = "mac#g_key_file_error_quark"
abst@ype struct_c2ats__GKeyFile // FIXME! Forward declaration.
typedef type_c2ats_GKeyFile = struct_c2ats__GKeyFile
typedef type_c2ats_GKeyFileFlags = int
#define enum_c2ats_G_KEY_FILE_NONE 0
#define enum_c2ats_G_KEY_FILE_KEEP_COMMENTS 1 << 0
#define enum_c2ats_G_KEY_FILE_KEEP_TRANSLATIONS 1 << 1
fun fun_c2ats_g_key_file_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GKeyFile, l1) | ptr l1) = "mac#g_key_file_new"
fun fun_c2ats_g_key_file_ref: {l1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GKeyFile, l2) | ptr l2) = "mac#g_key_file_ref"
fun fun_c2ats_g_key_file_unref: {l1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1) | ptr l1) -> void = "mac#g_key_file_unref"
fun fun_c2ats_g_key_file_free: {l1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1) | ptr l1) -> void = "mac#g_key_file_free"
fun fun_c2ats_g_key_file_set_list_separator: {l1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1) | ptr l1, type_c2ats_gchar) -> void = "mac#g_key_file_set_list_separator"
fun fun_c2ats_g_key_file_load_from_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_GKeyFileFlags, ptr l3) -> type_c2ats_gboolean = "mac#g_key_file_load_from_file"
fun fun_c2ats_g_key_file_load_from_data: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gsize, type_c2ats_GKeyFileFlags, ptr l3) -> type_c2ats_gboolean = "mac#g_key_file_load_from_data"
fun fun_c2ats_g_key_file_load_from_bytes: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_GBytes, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_GKeyFileFlags, ptr l3) -> type_c2ats_gboolean = "mac#g_key_file_load_from_bytes"
fun fun_c2ats_g_key_file_load_from_dirs: {l1,l2,l3,l3_1,l4,l4_1,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1), !ptr_v_2(type_c2ats_gchar, l4, l4_1), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_GKeyFileFlags, ptr l5) -> type_c2ats_gboolean = "mac#g_key_file_load_from_dirs"
fun fun_c2ats_g_key_file_load_from_data_dirs: {l1,l2,l3,l3_1,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, type_c2ats_GKeyFileFlags, ptr l4) -> type_c2ats_gboolean = "mac#g_key_file_load_from_data_dirs"
fun fun_c2ats_g_key_file_to_data: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#g_key_file_to_data"
fun fun_c2ats_g_key_file_save_to_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_key_file_save_to_file"
fun fun_c2ats_g_key_file_get_start_group: {l1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_key_file_get_start_group"
fun fun_c2ats_g_key_file_get_groups: {l1,l2:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#g_key_file_get_groups"
fun fun_c2ats_g_key_file_get_keys: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5,l5_1:addr] (ptr_v_2(type_c2ats_gchar, l5, l5_1) | ptr l5) = "mac#g_key_file_get_keys"
fun fun_c2ats_g_key_file_has_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_key_file_has_group"
fun fun_c2ats_g_key_file_has_key: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_key_file_has_key"
fun fun_c2ats_g_key_file_get_value: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_gchar, l5) | ptr l5) = "mac#g_key_file_get_value"
fun fun_c2ats_g_key_file_set_value: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#g_key_file_set_value"
fun fun_c2ats_g_key_file_get_string: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_gchar, l5) | ptr l5) = "mac#g_key_file_get_string"
fun fun_c2ats_g_key_file_set_string: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#g_key_file_set_string"
fun fun_c2ats_g_key_file_get_locale_string: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_gchar, l6) | ptr l6) = "mac#g_key_file_get_locale_string"
fun fun_c2ats_g_key_file_set_locale_string: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gchar, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void = "mac#g_key_file_set_locale_string"
fun fun_c2ats_g_key_file_get_boolean: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_key_file_get_boolean"
fun fun_c2ats_g_key_file_set_boolean: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean) -> void = "mac#g_key_file_set_boolean"
fun fun_c2ats_g_key_file_get_integer: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gint = "mac#g_key_file_get_integer"
fun fun_c2ats_g_key_file_set_integer: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint) -> void = "mac#g_key_file_set_integer"
fun fun_c2ats_g_key_file_get_int64: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gint64 = "mac#g_key_file_get_int64"
fun fun_c2ats_g_key_file_set_int64: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint64) -> void = "mac#g_key_file_set_int64"
fun fun_c2ats_g_key_file_get_uint64: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_guint64 = "mac#g_key_file_get_uint64"
fun fun_c2ats_g_key_file_set_uint64: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_guint64) -> void = "mac#g_key_file_set_uint64"
fun fun_c2ats_g_key_file_get_double: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gdouble = "mac#g_key_file_get_double"
fun fun_c2ats_g_key_file_set_double: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gdouble) -> void = "mac#g_key_file_set_double"
fun fun_c2ats_g_key_file_get_string_list: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gsize, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> [l6,l6_1:addr] (ptr_v_2(type_c2ats_gchar, l6, l6_1) | ptr l6) = "mac#g_key_file_get_string_list"
fun fun_c2ats_g_key_file_set_string_list: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, @[cPtr0(type_c2ats_gchar)][0], type_c2ats_gsize) -> void = "mac#g_key_file_set_string_list"
fun fun_c2ats_g_key_file_get_locale_string_list: {l1,l2,l3,l4,l5,l6,l6_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gsize, l5), !ptr_v_2(type_c2ats_GError, l6, l6_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> [l7,l7_1:addr] (ptr_v_2(type_c2ats_gchar, l7, l7_1) | ptr l7) = "mac#g_key_file_get_locale_string_list"
fun fun_c2ats_g_key_file_set_locale_string_list: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4, @[cPtr0(type_c2ats_gchar)][0], type_c2ats_gsize) -> void = "mac#g_key_file_set_locale_string_list"
fun fun_c2ats_g_key_file_get_boolean_list: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gsize, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_gboolean, l6) | ptr l6) = "mac#g_key_file_get_boolean_list"
fun fun_c2ats_g_key_file_set_boolean_list: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, @[type_c2ats_gboolean][0], type_c2ats_gsize) -> void = "mac#g_key_file_set_boolean_list"
fun fun_c2ats_g_key_file_get_integer_list: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gsize, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_gint, l6) | ptr l6) = "mac#g_key_file_get_integer_list"
fun fun_c2ats_g_key_file_set_double_list: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, @[type_c2ats_gdouble][0], type_c2ats_gsize) -> void = "mac#g_key_file_set_double_list"
fun fun_c2ats_g_key_file_get_double_list: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gsize, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_gdouble, l6) | ptr l6) = "mac#g_key_file_get_double_list"
fun fun_c2ats_g_key_file_set_integer_list: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, @[type_c2ats_gint][0], type_c2ats_gsize) -> void = "mac#g_key_file_set_integer_list"
fun fun_c2ats_g_key_file_set_comment: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#g_key_file_set_comment"
fun fun_c2ats_g_key_file_get_comment: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_gchar, l5) | ptr l5) = "mac#g_key_file_get_comment"
fun fun_c2ats_g_key_file_remove_comment: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_key_file_remove_comment"
fun fun_c2ats_g_key_file_remove_key: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_key_file_remove_key"
fun fun_c2ats_g_key_file_remove_group: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_key_file_remove_group"
// File: /usr/include/glib-2.0/glib/gmappedfile.h
abst@ype struct_c2ats__GMappedFile // FIXME! Forward declaration.
typedef type_c2ats_GMappedFile = struct_c2ats__GMappedFile
fun fun_c2ats_g_mapped_file_new: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_gboolean, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GMappedFile, l3) | ptr l3) = "mac#g_mapped_file_new"
fun fun_c2ats_g_mapped_file_new_from_fd: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GError, l1, l1_1) | type_c2ats_gint, type_c2ats_gboolean, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMappedFile, l2) | ptr l2) = "mac#g_mapped_file_new_from_fd"
fun fun_c2ats_g_mapped_file_get_length: {l1:addr} (!ptr_v_1(type_c2ats_GMappedFile, l1) | ptr l1) -> type_c2ats_gsize = "mac#g_mapped_file_get_length"
fun fun_c2ats_g_mapped_file_get_contents: {l1:addr} (!ptr_v_1(type_c2ats_GMappedFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_mapped_file_get_contents"
fun fun_c2ats_g_mapped_file_get_bytes: {l1:addr} (!ptr_v_1(type_c2ats_GMappedFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GBytes, l2) | ptr l2) = "mac#g_mapped_file_get_bytes"
fun fun_c2ats_g_mapped_file_ref: {l1:addr} (!ptr_v_1(type_c2ats_GMappedFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMappedFile, l2) | ptr l2) = "mac#g_mapped_file_ref"
fun fun_c2ats_g_mapped_file_unref: {l1:addr} (!ptr_v_1(type_c2ats_GMappedFile, l1) | ptr l1) -> void = "mac#g_mapped_file_unref"
fun fun_c2ats_g_mapped_file_free: {l1:addr} (!ptr_v_1(type_c2ats_GMappedFile, l1) | ptr l1) -> void = "mac#g_mapped_file_free"
// File: /usr/include/glib-2.0/glib/gmarkup.h
typedef type_c2ats_GMarkupError = int
#define enum_c2ats_G_MARKUP_ERROR_BAD_UTF8 0
#define enum_c2ats_G_MARKUP_ERROR_EMPTY 1
#define enum_c2ats_G_MARKUP_ERROR_PARSE 2
#define enum_c2ats_G_MARKUP_ERROR_UNKNOWN_ELEMENT 3
#define enum_c2ats_G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE 4
#define enum_c2ats_G_MARKUP_ERROR_INVALID_CONTENT 5
#define enum_c2ats_G_MARKUP_ERROR_MISSING_ATTRIBUTE 6
fun fun_c2ats_g_markup_error_quark: () -> type_c2ats_GQuark = "mac#g_markup_error_quark"
typedef type_c2ats_GMarkupParseFlags = int
#define enum_c2ats_G_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG 1 << 0
#define enum_c2ats_G_MARKUP_TREAT_CDATA_AS_TEXT 1 << 1
#define enum_c2ats_G_MARKUP_PREFIX_ERROR_POSITION 1 << 2
#define enum_c2ats_G_MARKUP_IGNORE_QUALIFIED 1 << 3
abst@ype struct_c2ats__GMarkupParseContext // FIXME! Forward declaration.
typedef type_c2ats_GMarkupParseContext = struct_c2ats__GMarkupParseContext
abst@ype struct_c2ats__GMarkupParser // FIXME! Forward declaration.
typedef type_c2ats_GMarkupParser = struct_c2ats__GMarkupParser
typedef struct_c2ats__GMarkupParser = $extype_struct"struct _GMarkupParser" of {
  start_element = {l1,l2,l3,l3_1,l4,l4_1,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GMarkupParseContext, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1), !ptr_v_2(type_c2ats_gchar, l4, l4_1), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gpointer, ptr l5) -> void,
  end_element = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMarkupParseContext, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gpointer, ptr l3) -> void,
  text = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMarkupParseContext, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gsize, type_c2ats_gpointer, ptr l3) -> void,
  passthrough = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMarkupParseContext, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gsize, type_c2ats_gpointer, ptr l3) -> void,
  error = {l1,l2:addr} (!ptr_v_1(type_c2ats_GMarkupParseContext, l1), !ptr_v_1(type_c2ats_GError, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void
}
fun fun_c2ats_g_markup_parse_context_new: {l1:addr} (!ptr_v_1(type_c2ats_GMarkupParser, l1) | ptr l1, type_c2ats_GMarkupParseFlags, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> [l2:addr] (ptr_v_1(type_c2ats_GMarkupParseContext, l2) | ptr l2) = "mac#g_markup_parse_context_new"
fun fun_c2ats_g_markup_parse_context_ref: {l1:addr} (!ptr_v_1(type_c2ats_GMarkupParseContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMarkupParseContext, l2) | ptr l2) = "mac#g_markup_parse_context_ref"
fun fun_c2ats_g_markup_parse_context_unref: {l1:addr} (!ptr_v_1(type_c2ats_GMarkupParseContext, l1) | ptr l1) -> void = "mac#g_markup_parse_context_unref"
fun fun_c2ats_g_markup_parse_context_free: {l1:addr} (!ptr_v_1(type_c2ats_GMarkupParseContext, l1) | ptr l1) -> void = "mac#g_markup_parse_context_free"
fun fun_c2ats_g_markup_parse_context_parse: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMarkupParseContext, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gssize, ptr l3) -> type_c2ats_gboolean = "mac#g_markup_parse_context_parse"
fun fun_c2ats_g_markup_parse_context_push: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMarkupParseContext, l1), !ptr_v_1(type_c2ats_GMarkupParser, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void = "mac#g_markup_parse_context_push"
fun fun_c2ats_g_markup_parse_context_pop: {l1:addr} (!ptr_v_1(type_c2ats_GMarkupParseContext, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_markup_parse_context_pop"
fun fun_c2ats_g_markup_parse_context_end_parse: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GMarkupParseContext, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_markup_parse_context_end_parse"
fun fun_c2ats_g_markup_parse_context_get_element: {l1:addr} (!ptr_v_1(type_c2ats_GMarkupParseContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_markup_parse_context_get_element"
fun fun_c2ats_g_markup_parse_context_get_element_stack: {l1:addr} (!ptr_v_1(type_c2ats_GMarkupParseContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#g_markup_parse_context_get_element_stack"
fun fun_c2ats_g_markup_parse_context_get_position: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMarkupParseContext, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_markup_parse_context_get_position"
fun fun_c2ats_g_markup_parse_context_get_user_data: {l1:addr} (!ptr_v_1(type_c2ats_GMarkupParseContext, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_markup_parse_context_get_user_data"
fun fun_c2ats_g_markup_escape_text: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gssize) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_markup_escape_text"
fun fun_c2ats_g_markup_printf_escaped: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_markup_printf_escaped"
fun fun_c2ats_g_markup_vprintf_escaped: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, type_c2ats_va_list) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_markup_vprintf_escaped"
typedef type_c2ats_GMarkupCollectType = int
#define enum_c2ats_G_MARKUP_COLLECT_INVALID 0
#define enum_c2ats_G_MARKUP_COLLECT_STRING 1
#define enum_c2ats_G_MARKUP_COLLECT_STRDUP 2
#define enum_c2ats_G_MARKUP_COLLECT_BOOLEAN 3
#define enum_c2ats_G_MARKUP_COLLECT_TRISTATE 4
#define enum_c2ats_G_MARKUP_COLLECT_OPTIONAL 1 << 16
fun fun_c2ats_g_markup_collect_attributes: {l1,l2,l2_1,l3,l3_1,l4,l4_1,l5:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_2(type_c2ats_gchar, l3, l3_1), !ptr_v_2(type_c2ats_GError, l4, l4_1), !ptr_v_1(type_c2ats_gchar, l5) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_GMarkupCollectType, ptr l5) -> type_c2ats_gboolean = "mac#g_markup_collect_attributes"
// File: /usr/include/glib-2.0/glib/gvarianttype.h
abst@ype struct_c2ats__GVariantType // FIXME! Forward declaration.
typedef type_c2ats_GVariantType = struct_c2ats__GVariantType
fun fun_c2ats_g_variant_type_string_is_valid: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_variant_type_string_is_valid"
fun fun_c2ats_g_variant_type_string_scan: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_variant_type_string_scan"
fun fun_c2ats_g_variant_type_free: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> void = "mac#g_variant_type_free"
fun fun_c2ats_g_variant_type_copy: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantType, l2) | ptr l2) = "mac#g_variant_type_copy"
fun fun_c2ats_g_variant_type_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantType, l2) | ptr l2) = "mac#g_variant_type_new"
fun fun_c2ats_g_variant_type_get_string_length: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> type_c2ats_gsize = "mac#g_variant_type_get_string_length"
fun fun_c2ats_g_variant_type_peek_string: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_variant_type_peek_string"
fun fun_c2ats_g_variant_type_dup_string: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_variant_type_dup_string"
fun fun_c2ats_g_variant_type_is_definite: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_variant_type_is_definite"
fun fun_c2ats_g_variant_type_is_container: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_variant_type_is_container"
fun fun_c2ats_g_variant_type_is_basic: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_variant_type_is_basic"
fun fun_c2ats_g_variant_type_is_maybe: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_variant_type_is_maybe"
fun fun_c2ats_g_variant_type_is_array: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_variant_type_is_array"
fun fun_c2ats_g_variant_type_is_tuple: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_variant_type_is_tuple"
fun fun_c2ats_g_variant_type_is_dict_entry: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_variant_type_is_dict_entry"
fun fun_c2ats_g_variant_type_is_variant: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_variant_type_is_variant"
fun fun_c2ats_g_variant_type_hash: (type_c2ats_gconstpointer) -> type_c2ats_guint = "mac#g_variant_type_hash"
fun fun_c2ats_g_variant_type_equal: (type_c2ats_gconstpointer, type_c2ats_gconstpointer) -> type_c2ats_gboolean = "mac#g_variant_type_equal"
fun fun_c2ats_g_variant_type_is_subtype_of: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariantType, l1), !ptr_v_1(type_c2ats_GVariantType, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_variant_type_is_subtype_of"
fun fun_c2ats_g_variant_type_element: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantType, l2) | ptr l2) = "mac#g_variant_type_element"
fun fun_c2ats_g_variant_type_first: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantType, l2) | ptr l2) = "mac#g_variant_type_first"
fun fun_c2ats_g_variant_type_next: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantType, l2) | ptr l2) = "mac#g_variant_type_next"
fun fun_c2ats_g_variant_type_n_items: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> type_c2ats_gsize = "mac#g_variant_type_n_items"
fun fun_c2ats_g_variant_type_key: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantType, l2) | ptr l2) = "mac#g_variant_type_key"
fun fun_c2ats_g_variant_type_value: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantType, l2) | ptr l2) = "mac#g_variant_type_value"
fun fun_c2ats_g_variant_type_new_array: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantType, l2) | ptr l2) = "mac#g_variant_type_new_array"
fun fun_c2ats_g_variant_type_new_maybe: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantType, l2) | ptr l2) = "mac#g_variant_type_new_maybe"
fun fun_c2ats_g_variant_type_new_tuple: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GVariantType, l1, l1_1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantType, l2) | ptr l2) = "mac#g_variant_type_new_tuple"
fun fun_c2ats_g_variant_type_new_dict_entry: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariantType, l1), !ptr_v_1(type_c2ats_GVariantType, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVariantType, l3) | ptr l3) = "mac#g_variant_type_new_dict_entry"
fun fun_c2ats_g_variant_type_checked_: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantType, l2) | ptr l2) = "mac#g_variant_type_checked_"
// File: /usr/include/glib-2.0/glib/gvariant.h
abst@ype struct_c2ats__GVariant // FIXME! Forward declaration.
typedef type_c2ats_GVariant = struct_c2ats__GVariant
typedef type_c2ats_GVariantClass = int
#define enum_c2ats_G_VARIANT_CLASS_BOOLEAN 'b'
#define enum_c2ats_G_VARIANT_CLASS_BYTE 'y'
#define enum_c2ats_G_VARIANT_CLASS_INT16 'n'
#define enum_c2ats_G_VARIANT_CLASS_UINT16 'q'
#define enum_c2ats_G_VARIANT_CLASS_INT32 'i'
#define enum_c2ats_G_VARIANT_CLASS_UINT32 'u'
#define enum_c2ats_G_VARIANT_CLASS_INT64 'x'
#define enum_c2ats_G_VARIANT_CLASS_UINT64 't'
#define enum_c2ats_G_VARIANT_CLASS_HANDLE 'h'
#define enum_c2ats_G_VARIANT_CLASS_DOUBLE 'd'
#define enum_c2ats_G_VARIANT_CLASS_STRING 's'
#define enum_c2ats_G_VARIANT_CLASS_OBJECT_PATH 'o'
#define enum_c2ats_G_VARIANT_CLASS_SIGNATURE 'g'
#define enum_c2ats_G_VARIANT_CLASS_VARIANT 'v'
#define enum_c2ats_G_VARIANT_CLASS_MAYBE 'm'
#define enum_c2ats_G_VARIANT_CLASS_ARRAY 'a'
#define enum_c2ats_G_VARIANT_CLASS_TUPLE '\('
#define enum_c2ats_G_VARIANT_CLASS_DICT_ENTRY '\{'
fun fun_c2ats_g_variant_unref: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> void = "mac#g_variant_unref"
fun fun_c2ats_g_variant_ref: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_ref"
fun fun_c2ats_g_variant_ref_sink: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_ref_sink"
fun fun_c2ats_g_variant_is_floating: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_variant_is_floating"
fun fun_c2ats_g_variant_take_ref: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_take_ref"
fun fun_c2ats_g_variant_get_type: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantType, l2) | ptr l2) = "mac#g_variant_get_type"
fun fun_c2ats_g_variant_get_type_string: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_variant_get_type_string"
fun fun_c2ats_g_variant_is_of_type: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_GVariantType, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_variant_is_of_type"
fun fun_c2ats_g_variant_is_container: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_variant_is_container"
fun fun_c2ats_g_variant_classify: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> type_c2ats_GVariantClass = "mac#g_variant_classify"
fun fun_c2ats_g_variant_new_boolean: (type_c2ats_gboolean) -> [l1:addr] (ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) = "mac#g_variant_new_boolean"
fun fun_c2ats_g_variant_new_byte: (type_c2ats_guchar) -> [l1:addr] (ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) = "mac#g_variant_new_byte"
fun fun_c2ats_g_variant_new_int16: (type_c2ats_gint16) -> [l1:addr] (ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) = "mac#g_variant_new_int16"
fun fun_c2ats_g_variant_new_uint16: (type_c2ats_guint16) -> [l1:addr] (ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) = "mac#g_variant_new_uint16"
fun fun_c2ats_g_variant_new_int32: (type_c2ats_gint32) -> [l1:addr] (ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) = "mac#g_variant_new_int32"
fun fun_c2ats_g_variant_new_uint32: (type_c2ats_guint32) -> [l1:addr] (ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) = "mac#g_variant_new_uint32"
fun fun_c2ats_g_variant_new_int64: (type_c2ats_gint64) -> [l1:addr] (ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) = "mac#g_variant_new_int64"
fun fun_c2ats_g_variant_new_uint64: (type_c2ats_guint64) -> [l1:addr] (ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) = "mac#g_variant_new_uint64"
fun fun_c2ats_g_variant_new_handle: (type_c2ats_gint32) -> [l1:addr] (ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) = "mac#g_variant_new_handle"
fun fun_c2ats_g_variant_new_double: (type_c2ats_gdouble) -> [l1:addr] (ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) = "mac#g_variant_new_double"
fun fun_c2ats_g_variant_new_string: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_new_string"
fun fun_c2ats_g_variant_new_take_string: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_new_take_string"
fun fun_c2ats_g_variant_new_printf: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_new_printf"
fun fun_c2ats_g_variant_new_object_path: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_new_object_path"
fun fun_c2ats_g_variant_is_object_path: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_variant_is_object_path"
fun fun_c2ats_g_variant_new_signature: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_new_signature"
fun fun_c2ats_g_variant_is_signature: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_variant_is_signature"
fun fun_c2ats_g_variant_new_variant: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_new_variant"
fun fun_c2ats_g_variant_new_strv: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_gchar, l1, l1_1) | ptr l1, type_c2ats_gssize) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_new_strv"
fun fun_c2ats_g_variant_new_objv: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_gchar, l1, l1_1) | ptr l1, type_c2ats_gssize) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_new_objv"
fun fun_c2ats_g_variant_new_bytestring: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_new_bytestring"
fun fun_c2ats_g_variant_new_bytestring_array: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_gchar, l1, l1_1) | ptr l1, type_c2ats_gssize) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_new_bytestring_array"
fun fun_c2ats_g_variant_new_fixed_array: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1, type_c2ats_gconstpointer, type_c2ats_gsize, type_c2ats_gsize) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_new_fixed_array"
fun fun_c2ats_g_variant_get_boolean: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_variant_get_boolean"
fun fun_c2ats_g_variant_get_byte: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> type_c2ats_guchar = "mac#g_variant_get_byte"
fun fun_c2ats_g_variant_get_int16: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> type_c2ats_gint16 = "mac#g_variant_get_int16"
fun fun_c2ats_g_variant_get_uint16: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> type_c2ats_guint16 = "mac#g_variant_get_uint16"
fun fun_c2ats_g_variant_get_int32: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> type_c2ats_gint32 = "mac#g_variant_get_int32"
fun fun_c2ats_g_variant_get_uint32: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> type_c2ats_guint32 = "mac#g_variant_get_uint32"
fun fun_c2ats_g_variant_get_int64: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> type_c2ats_gint64 = "mac#g_variant_get_int64"
fun fun_c2ats_g_variant_get_uint64: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> type_c2ats_guint64 = "mac#g_variant_get_uint64"
fun fun_c2ats_g_variant_get_handle: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> type_c2ats_gint32 = "mac#g_variant_get_handle"
fun fun_c2ats_g_variant_get_double: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> type_c2ats_gdouble = "mac#g_variant_get_double"
fun fun_c2ats_g_variant_get_variant: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_get_variant"
fun fun_c2ats_g_variant_get_string: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_variant_get_string"
fun fun_c2ats_g_variant_dup_string: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_variant_dup_string"
fun fun_c2ats_g_variant_get_strv: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#g_variant_get_strv"
fun fun_c2ats_g_variant_dup_strv: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#g_variant_dup_strv"
fun fun_c2ats_g_variant_get_objv: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#g_variant_get_objv"
fun fun_c2ats_g_variant_dup_objv: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#g_variant_dup_objv"
fun fun_c2ats_g_variant_get_bytestring: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_variant_get_bytestring"
fun fun_c2ats_g_variant_dup_bytestring: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_variant_dup_bytestring"
fun fun_c2ats_g_variant_get_bytestring_array: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#g_variant_get_bytestring_array"
fun fun_c2ats_g_variant_dup_bytestring_array: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#g_variant_dup_bytestring_array"
fun fun_c2ats_g_variant_new_maybe: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariantType, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVariant, l3) | ptr l3) = "mac#g_variant_new_maybe"
fun fun_c2ats_g_variant_new_array: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1), !ptr_v_2(type_c2ats_GVariant, l2, l2_1) | ptr l1, ptr l2, type_c2ats_gsize) -> [l3:addr] (ptr_v_1(type_c2ats_GVariant, l3) | ptr l3) = "mac#g_variant_new_array"
fun fun_c2ats_g_variant_new_tuple: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GVariant, l1, l1_1) | ptr l1, type_c2ats_gsize) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_new_tuple"
fun fun_c2ats_g_variant_new_dict_entry: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVariant, l3) | ptr l3) = "mac#g_variant_new_dict_entry"
fun fun_c2ats_g_variant_get_maybe: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_get_maybe"
fun fun_c2ats_g_variant_n_children: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> type_c2ats_gsize = "mac#g_variant_n_children"
fun fun_c2ats_g_variant_get_child: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gsize, ptr l2) -> void = "mac#g_variant_get_child"
fun fun_c2ats_g_variant_get_child_value: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1, type_c2ats_gsize) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_get_child_value"
fun fun_c2ats_g_variant_lookup: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_variant_lookup"
fun fun_c2ats_g_variant_lookup_value: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariantType, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GVariant, l4) | ptr l4) = "mac#g_variant_lookup_value"
fun fun_c2ats_g_variant_get_fixed_array: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2, type_c2ats_gsize) -> type_c2ats_gconstpointer = "mac#g_variant_get_fixed_array"
fun fun_c2ats_g_variant_get_size: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> type_c2ats_gsize = "mac#g_variant_get_size"
fun fun_c2ats_g_variant_get_data: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> type_c2ats_gconstpointer = "mac#g_variant_get_data"
fun fun_c2ats_g_variant_get_data_as_bytes: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GBytes, l2) | ptr l2) = "mac#g_variant_get_data_as_bytes"
fun fun_c2ats_g_variant_store: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_variant_store"
fun fun_c2ats_g_variant_print: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1, type_c2ats_gboolean) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_variant_print"
fun fun_c2ats_g_variant_print_string: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_GString, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> [l3:addr] (ptr_v_1(type_c2ats_GString, l3) | ptr l3) = "mac#g_variant_print_string"
fun fun_c2ats_g_variant_hash: (type_c2ats_gconstpointer) -> type_c2ats_guint = "mac#g_variant_hash"
fun fun_c2ats_g_variant_equal: (type_c2ats_gconstpointer, type_c2ats_gconstpointer) -> type_c2ats_gboolean = "mac#g_variant_equal"
fun fun_c2ats_g_variant_get_normal_form: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_get_normal_form"
fun fun_c2ats_g_variant_is_normal_form: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_variant_is_normal_form"
fun fun_c2ats_g_variant_byteswap: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_byteswap"
fun fun_c2ats_g_variant_new_from_bytes: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariantType, l1), !ptr_v_1(type_c2ats_GBytes, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> [l3:addr] (ptr_v_1(type_c2ats_GVariant, l3) | ptr l3) = "mac#g_variant_new_from_bytes"
fun fun_c2ats_g_variant_new_from_data: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1, type_c2ats_gconstpointer, type_c2ats_gsize, type_c2ats_gboolean, type_c2ats_GDestroyNotify, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_new_from_data"
abst@ype struct_c2ats__GVariantIter // FIXME! Forward declaration.
typedef type_c2ats_GVariantIter = struct_c2ats__GVariantIter
typedef struct_c2ats__GVariantIter = $extype_struct"struct _GVariantIter" of {
  x = @[type_c2ats_gsize][16]
}
fun fun_c2ats_g_variant_iter_new: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantIter, l2) | ptr l2) = "mac#g_variant_iter_new"
fun fun_c2ats_g_variant_iter_init: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariantIter, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> type_c2ats_gsize = "mac#g_variant_iter_init"
fun fun_c2ats_g_variant_iter_copy: {l1:addr} (!ptr_v_1(type_c2ats_GVariantIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantIter, l2) | ptr l2) = "mac#g_variant_iter_copy"
fun fun_c2ats_g_variant_iter_n_children: {l1:addr} (!ptr_v_1(type_c2ats_GVariantIter, l1) | ptr l1) -> type_c2ats_gsize = "mac#g_variant_iter_n_children"
fun fun_c2ats_g_variant_iter_free: {l1:addr} (!ptr_v_1(type_c2ats_GVariantIter, l1) | ptr l1) -> void = "mac#g_variant_iter_free"
fun fun_c2ats_g_variant_iter_next_value: {l1:addr} (!ptr_v_1(type_c2ats_GVariantIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_iter_next_value"
fun fun_c2ats_g_variant_iter_next: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariantIter, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_variant_iter_next"
fun fun_c2ats_g_variant_iter_loop: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariantIter, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_variant_iter_loop"
abst@ype struct_c2ats__GVariantBuilder // FIXME! Forward declaration.
typedef type_c2ats_GVariantBuilder = struct_c2ats__GVariantBuilder
typedef struct_c2ats_anon_25654 = $extype_struct"struct { gsize partial_magic; GVariantType* type; gsize y[14]; }" of {
  partial_magic = type_c2ats_gsize,
  type = ptr (* cPtr0(type_c2ats_GVariantType) *),
  y = @[type_c2ats_gsize][14]
}
typedef union_c2ats_anon_25666 = $extype_struct"union { struct { gsize partial_magic; GVariantType* type; gsize y[14]; } s; gsize x[16]; }" of {
  s = struct_c2ats_anon_25654,
  x = @[type_c2ats_gsize][16]
}
typedef struct_c2ats__GVariantBuilder = $extype_struct"struct _GVariantBuilder" of {
  u = union_c2ats_anon_25666
}
typedef type_c2ats_GVariantParseError = int
#define enum_c2ats_G_VARIANT_PARSE_ERROR_FAILED 0
#define enum_c2ats_G_VARIANT_PARSE_ERROR_BASIC_TYPE_EXPECTED 1
#define enum_c2ats_G_VARIANT_PARSE_ERROR_CANNOT_INFER_TYPE 2
#define enum_c2ats_G_VARIANT_PARSE_ERROR_DEFINITE_TYPE_EXPECTED 3
#define enum_c2ats_G_VARIANT_PARSE_ERROR_INPUT_NOT_AT_END 4
#define enum_c2ats_G_VARIANT_PARSE_ERROR_INVALID_CHARACTER 5
#define enum_c2ats_G_VARIANT_PARSE_ERROR_INVALID_FORMAT_STRING 6
#define enum_c2ats_G_VARIANT_PARSE_ERROR_INVALID_OBJECT_PATH 7
#define enum_c2ats_G_VARIANT_PARSE_ERROR_INVALID_SIGNATURE 8
#define enum_c2ats_G_VARIANT_PARSE_ERROR_INVALID_TYPE_STRING 9
#define enum_c2ats_G_VARIANT_PARSE_ERROR_NO_COMMON_TYPE 10
#define enum_c2ats_G_VARIANT_PARSE_ERROR_NUMBER_OUT_OF_RANGE 11
#define enum_c2ats_G_VARIANT_PARSE_ERROR_NUMBER_TOO_BIG 12
#define enum_c2ats_G_VARIANT_PARSE_ERROR_TYPE_ERROR 13
#define enum_c2ats_G_VARIANT_PARSE_ERROR_UNEXPECTED_TOKEN 14
#define enum_c2ats_G_VARIANT_PARSE_ERROR_UNKNOWN_KEYWORD 15
#define enum_c2ats_G_VARIANT_PARSE_ERROR_UNTERMINATED_STRING_CONSTANT 16
#define enum_c2ats_G_VARIANT_PARSE_ERROR_VALUE_EXPECTED 17
fun fun_c2ats_g_variant_parser_get_error_quark: () -> type_c2ats_GQuark = "mac#g_variant_parser_get_error_quark"
fun fun_c2ats_g_variant_parse_error_quark: () -> type_c2ats_GQuark = "mac#g_variant_parse_error_quark"
fun fun_c2ats_g_variant_builder_new: {l1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantBuilder, l2) | ptr l2) = "mac#g_variant_builder_new"
fun fun_c2ats_g_variant_builder_unref: {l1:addr} (!ptr_v_1(type_c2ats_GVariantBuilder, l1) | ptr l1) -> void = "mac#g_variant_builder_unref"
fun fun_c2ats_g_variant_builder_ref: {l1:addr} (!ptr_v_1(type_c2ats_GVariantBuilder, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantBuilder, l2) | ptr l2) = "mac#g_variant_builder_ref"
fun fun_c2ats_g_variant_builder_init: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariantBuilder, l1), !ptr_v_1(type_c2ats_GVariantType, l2) | ptr l1, ptr l2) -> void = "mac#g_variant_builder_init"
fun fun_c2ats_g_variant_builder_end: {l1:addr} (!ptr_v_1(type_c2ats_GVariantBuilder, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_builder_end"
fun fun_c2ats_g_variant_builder_clear: {l1:addr} (!ptr_v_1(type_c2ats_GVariantBuilder, l1) | ptr l1) -> void = "mac#g_variant_builder_clear"
fun fun_c2ats_g_variant_builder_open: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariantBuilder, l1), !ptr_v_1(type_c2ats_GVariantType, l2) | ptr l1, ptr l2) -> void = "mac#g_variant_builder_open"
fun fun_c2ats_g_variant_builder_close: {l1:addr} (!ptr_v_1(type_c2ats_GVariantBuilder, l1) | ptr l1) -> void = "mac#g_variant_builder_close"
fun fun_c2ats_g_variant_builder_add_value: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariantBuilder, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> void = "mac#g_variant_builder_add_value"
fun fun_c2ats_g_variant_builder_add: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariantBuilder, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_variant_builder_add"
fun fun_c2ats_g_variant_builder_add_parsed: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariantBuilder, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_variant_builder_add_parsed"
fun fun_c2ats_g_variant_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_new"
fun fun_c2ats_g_variant_get: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_variant_get"
fun fun_c2ats_g_variant_new_va: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_1(type_c2ats_va_list, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GVariant, l4) | ptr l4) = "mac#g_variant_new_va"
fun fun_c2ats_g_variant_get_va: {l1,l2,l3,l3_1,l4:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1), !ptr_v_1(type_c2ats_va_list, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#g_variant_get_va"
fun fun_c2ats_g_variant_check_format_string: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#g_variant_check_format_string"
fun fun_c2ats_g_variant_parse: {l1,l2,l3,l4,l4_1,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GVariantType, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_gchar, l4, l4_1), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GVariant, l6) | ptr l6) = "mac#g_variant_parse"
fun fun_c2ats_g_variant_new_parsed: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_new_parsed"
fun fun_c2ats_g_variant_new_parsed_va: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_va_list, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVariant, l3) | ptr l3) = "mac#g_variant_new_parsed_va"
fun fun_c2ats_g_variant_parse_error_print_context: {l1,l2:addr} (!ptr_v_1(type_c2ats_GError, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_variant_parse_error_print_context"
fun fun_c2ats_g_variant_compare: (type_c2ats_gconstpointer, type_c2ats_gconstpointer) -> type_c2ats_gint = "mac#g_variant_compare"
abst@ype struct_c2ats__GVariantDict // FIXME! Forward declaration.
typedef type_c2ats_GVariantDict = struct_c2ats__GVariantDict
typedef struct_c2ats_anon_26157 = $extype_struct"struct { GVariant* asv; gsize partial_magic; gsize y[14]; }" of {
  asv = ptr (* cPtr0(type_c2ats_GVariant) *),
  partial_magic = type_c2ats_gsize,
  y = @[type_c2ats_gsize][14]
}
typedef union_c2ats_anon_26169 = $extype_struct"union { struct { GVariant* asv; gsize partial_magic; gsize y[14]; } s; gsize x[16]; }" of {
  s = struct_c2ats_anon_26157,
  x = @[type_c2ats_gsize][16]
}
typedef struct_c2ats__GVariantDict = $extype_struct"struct _GVariantDict" of {
  u = union_c2ats_anon_26169
}
fun fun_c2ats_g_variant_dict_new: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantDict, l2) | ptr l2) = "mac#g_variant_dict_new"
fun fun_c2ats_g_variant_dict_init: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariantDict, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> void = "mac#g_variant_dict_init"
fun fun_c2ats_g_variant_dict_lookup: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GVariantDict, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_variant_dict_lookup"
fun fun_c2ats_g_variant_dict_lookup_value: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GVariantDict, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariantType, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GVariant, l4) | ptr l4) = "mac#g_variant_dict_lookup_value"
fun fun_c2ats_g_variant_dict_contains: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariantDict, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_variant_dict_contains"
fun fun_c2ats_g_variant_dict_insert: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GVariantDict, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_variant_dict_insert"
fun fun_c2ats_g_variant_dict_insert_value: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GVariantDict, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_variant_dict_insert_value"
fun fun_c2ats_g_variant_dict_remove: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariantDict, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_variant_dict_remove"
fun fun_c2ats_g_variant_dict_clear: {l1:addr} (!ptr_v_1(type_c2ats_GVariantDict, l1) | ptr l1) -> void = "mac#g_variant_dict_clear"
fun fun_c2ats_g_variant_dict_end: {l1:addr} (!ptr_v_1(type_c2ats_GVariantDict, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_variant_dict_end"
fun fun_c2ats_g_variant_dict_ref: {l1:addr} (!ptr_v_1(type_c2ats_GVariantDict, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantDict, l2) | ptr l2) = "mac#g_variant_dict_ref"
fun fun_c2ats_g_variant_dict_unref: {l1:addr} (!ptr_v_1(type_c2ats_GVariantDict, l1) | ptr l1) -> void = "mac#g_variant_dict_unref"
// File: /usr/include/glib-2.0/glib/gmessages.h
fun fun_c2ats_g_printf_string_upper_bound: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_va_list) -> type_c2ats_gsize = "mac#g_printf_string_upper_bound"
typedef type_c2ats_GLogLevelFlags = int
#define enum_c2ats_G_LOG_FLAG_RECURSION 1 << 0
#define enum_c2ats_G_LOG_FLAG_FATAL 1 << 1
#define enum_c2ats_G_LOG_LEVEL_ERROR 1 << 2
#define enum_c2ats_G_LOG_LEVEL_CRITICAL 1 << 3
#define enum_c2ats_G_LOG_LEVEL_WARNING 1 << 4
#define enum_c2ats_G_LOG_LEVEL_MESSAGE 1 << 5
#define enum_c2ats_G_LOG_LEVEL_INFO 1 << 6
#define enum_c2ats_G_LOG_LEVEL_DEBUG 1 << 7
#define enum_c2ats_G_LOG_LEVEL_MASK ~(G_LOG_FLAG_RECURSION lor G_LOG_FLAG_FATAL)
typedef type_c2ats_GLogFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GLogLevelFlags, ptr l2, type_c2ats_gpointer) -> void
fun fun_c2ats_g_log_set_handler: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_GLogLevelFlags, type_c2ats_GLogFunc, type_c2ats_gpointer) -> type_c2ats_guint = "mac#g_log_set_handler"
fun fun_c2ats_g_log_set_handler_full: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_GLogLevelFlags, type_c2ats_GLogFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_guint = "mac#g_log_set_handler_full"
fun fun_c2ats_g_log_remove_handler: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_log_remove_handler"
fun fun_c2ats_g_log_default_handler: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GLogLevelFlags, ptr l2, type_c2ats_gpointer) -> void = "mac#g_log_default_handler"
fun fun_c2ats_g_log_set_default_handler: (type_c2ats_GLogFunc, type_c2ats_gpointer) -> type_c2ats_GLogFunc = "mac#g_log_set_default_handler"
fun fun_c2ats_g_log: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GLogLevelFlags, ptr l2) -> void = "mac#g_log"
fun fun_c2ats_g_logv: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GLogLevelFlags, ptr l2, type_c2ats_va_list) -> void = "mac#g_logv"
fun fun_c2ats_g_log_set_fatal_mask: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_GLogLevelFlags) -> type_c2ats_GLogLevelFlags = "mac#g_log_set_fatal_mask"
fun fun_c2ats_g_log_set_always_fatal: (type_c2ats_GLogLevelFlags) -> type_c2ats_GLogLevelFlags = "mac#g_log_set_always_fatal"
typedef type_c2ats_GLogWriterOutput = int
#define enum_c2ats_G_LOG_WRITER_HANDLED 1
#define enum_c2ats_G_LOG_WRITER_UNHANDLED 0
abst@ype struct_c2ats__GLogField // FIXME! Forward declaration.
typedef type_c2ats_GLogField = struct_c2ats__GLogField
typedef struct_c2ats__GLogField = $extype_struct"struct _GLogField" of {
  key = ptr (* cPtr0(type_c2ats_gchar) *),
  value = type_c2ats_gconstpointer,
  length = type_c2ats_gssize
}
typedef type_c2ats_GLogWriterFunc = {l1:addr} (!ptr_v_1(type_c2ats_GLogField, l1) | type_c2ats_GLogLevelFlags, ptr l1, type_c2ats_gsize, type_c2ats_gpointer) -> type_c2ats_GLogWriterOutput
fun fun_c2ats_g_log_structured: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_GLogLevelFlags) -> void = "mac#g_log_structured"
fun fun_c2ats_g_log_structured_array: {l1:addr} (!ptr_v_1(type_c2ats_GLogField, l1) | type_c2ats_GLogLevelFlags, ptr l1, type_c2ats_gsize) -> void = "mac#g_log_structured_array"
fun fun_c2ats_g_log_variant: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, type_c2ats_GLogLevelFlags, ptr l2) -> void = "mac#g_log_variant"
fun fun_c2ats_g_log_set_writer_func: (type_c2ats_GLogWriterFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#g_log_set_writer_func"
fun fun_c2ats_g_log_writer_supports_color: (type_c2ats_gint) -> type_c2ats_gboolean = "mac#g_log_writer_supports_color"
fun fun_c2ats_g_log_writer_is_journald: (type_c2ats_gint) -> type_c2ats_gboolean = "mac#g_log_writer_is_journald"
fun fun_c2ats_g_log_writer_format_fields: {l1:addr} (!ptr_v_1(type_c2ats_GLogField, l1) | type_c2ats_GLogLevelFlags, ptr l1, type_c2ats_gsize, type_c2ats_gboolean) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_log_writer_format_fields"
fun fun_c2ats_g_log_writer_journald: {l1:addr} (!ptr_v_1(type_c2ats_GLogField, l1) | type_c2ats_GLogLevelFlags, ptr l1, type_c2ats_gsize, type_c2ats_gpointer) -> type_c2ats_GLogWriterOutput = "mac#g_log_writer_journald"
fun fun_c2ats_g_log_writer_standard_streams: {l1:addr} (!ptr_v_1(type_c2ats_GLogField, l1) | type_c2ats_GLogLevelFlags, ptr l1, type_c2ats_gsize, type_c2ats_gpointer) -> type_c2ats_GLogWriterOutput = "mac#g_log_writer_standard_streams"
fun fun_c2ats_g_log_writer_default: {l1:addr} (!ptr_v_1(type_c2ats_GLogField, l1) | type_c2ats_GLogLevelFlags, ptr l1, type_c2ats_gsize, type_c2ats_gpointer) -> type_c2ats_GLogWriterOutput = "mac#g_log_writer_default"
fun fun_c2ats__g_log_fallback_handler: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GLogLevelFlags, ptr l2, type_c2ats_gpointer) -> void = "mac#_g_log_fallback_handler"
fun fun_c2ats_g_return_if_fail_warning: {l1,l2,l3:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_return_if_fail_warning"
fun fun_c2ats_g_warn_message: {l1,l2,l3,l4:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3), !ptr_v_1(char, l4) | ptr l1, ptr l2, int, ptr l3, ptr l4) -> void = "mac#g_warn_message"
fun fun_c2ats_g_assert_warning: {l1,l2,l3,l4:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3), !ptr_v_1(char, l4) | ptr l1, ptr l2, int, ptr l3, ptr l4) -> void = "mac#g_assert_warning"
typedef type_c2ats_GPrintFunc = {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void
fun fun_c2ats_g_print: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#g_print"
fun fun_c2ats_g_set_print_handler: (type_c2ats_GPrintFunc) -> type_c2ats_GPrintFunc = "mac#g_set_print_handler"
fun fun_c2ats_g_printerr: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#g_printerr"
fun fun_c2ats_g_set_printerr_handler: (type_c2ats_GPrintFunc) -> type_c2ats_GPrintFunc = "mac#g_set_printerr_handler"
// File: /usr/include/glib-2.0/glib/goption.h
abst@ype struct_c2ats__GOptionContext // FIXME! Forward declaration.
typedef type_c2ats_GOptionContext = struct_c2ats__GOptionContext
abst@ype struct_c2ats__GOptionGroup // FIXME! Forward declaration.
typedef type_c2ats_GOptionGroup = struct_c2ats__GOptionGroup
abst@ype struct_c2ats__GOptionEntry // FIXME! Forward declaration.
typedef type_c2ats_GOptionEntry = struct_c2ats__GOptionEntry
typedef type_c2ats_GOptionFlags = int
#define enum_c2ats_G_OPTION_FLAG_NONE 0
#define enum_c2ats_G_OPTION_FLAG_HIDDEN 1 << 0
#define enum_c2ats_G_OPTION_FLAG_IN_MAIN 1 << 1
#define enum_c2ats_G_OPTION_FLAG_REVERSE 1 << 2
#define enum_c2ats_G_OPTION_FLAG_NO_ARG 1 << 3
#define enum_c2ats_G_OPTION_FLAG_FILENAME 1 << 4
#define enum_c2ats_G_OPTION_FLAG_OPTIONAL_ARG 1 << 5
#define enum_c2ats_G_OPTION_FLAG_NOALIAS 1 << 6
typedef type_c2ats_GOptionArg = int
#define enum_c2ats_G_OPTION_ARG_NONE 0
#define enum_c2ats_G_OPTION_ARG_STRING 1
#define enum_c2ats_G_OPTION_ARG_INT 2
#define enum_c2ats_G_OPTION_ARG_CALLBACK 3
#define enum_c2ats_G_OPTION_ARG_FILENAME 4
#define enum_c2ats_G_OPTION_ARG_STRING_ARRAY 5
#define enum_c2ats_G_OPTION_ARG_FILENAME_ARRAY 6
#define enum_c2ats_G_OPTION_ARG_DOUBLE 7
#define enum_c2ats_G_OPTION_ARG_INT64 8
typedef type_c2ats_GOptionArgFunc = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gpointer, ptr l3) -> type_c2ats_gboolean
typedef type_c2ats_GOptionParseFunc = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1), !ptr_v_1(type_c2ats_GOptionGroup, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gpointer, ptr l3) -> type_c2ats_gboolean
typedef type_c2ats_GOptionErrorFunc = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1), !ptr_v_1(type_c2ats_GOptionGroup, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gpointer, ptr l3) -> void
typedef type_c2ats_GOptionError = int
#define enum_c2ats_G_OPTION_ERROR_UNKNOWN_OPTION 0
#define enum_c2ats_G_OPTION_ERROR_BAD_VALUE 1
#define enum_c2ats_G_OPTION_ERROR_FAILED 2
fun fun_c2ats_g_option_error_quark: () -> type_c2ats_GQuark = "mac#g_option_error_quark"
typedef struct_c2ats__GOptionEntry = $extype_struct"struct _GOptionEntry" of {
  long_name = ptr (* cPtr0(type_c2ats_gchar) *),
  short_name = type_c2ats_gchar,
  flags = type_c2ats_gint,
  arg = type_c2ats_GOptionArg,
  arg_data = type_c2ats_gpointer,
  description = ptr (* cPtr0(type_c2ats_gchar) *),
  arg_description = ptr (* cPtr0(type_c2ats_gchar) *)
}
fun fun_c2ats_g_option_context_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GOptionContext, l2) | ptr l2) = "mac#g_option_context_new"
fun fun_c2ats_g_option_context_set_summary: {l1,l2:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_option_context_set_summary"
fun fun_c2ats_g_option_context_get_summary: {l1:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_option_context_get_summary"
fun fun_c2ats_g_option_context_set_description: {l1,l2:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_option_context_set_description"
fun fun_c2ats_g_option_context_get_description: {l1:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_option_context_get_description"
fun fun_c2ats_g_option_context_free: {l1:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1) | ptr l1) -> void = "mac#g_option_context_free"
fun fun_c2ats_g_option_context_set_help_enabled: {l1:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_option_context_set_help_enabled"
fun fun_c2ats_g_option_context_get_help_enabled: {l1:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_option_context_get_help_enabled"
fun fun_c2ats_g_option_context_set_ignore_unknown_options: {l1:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_option_context_set_ignore_unknown_options"
fun fun_c2ats_g_option_context_get_ignore_unknown_options: {l1:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_option_context_get_ignore_unknown_options"
fun fun_c2ats_g_option_context_set_strict_posix: {l1:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_option_context_set_strict_posix"
fun fun_c2ats_g_option_context_get_strict_posix: {l1:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_option_context_get_strict_posix"
fun fun_c2ats_g_option_context_add_main_entries: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1), !ptr_v_1(type_c2ats_GOptionEntry, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_option_context_add_main_entries"
fun fun_c2ats_g_option_context_parse: {l1,l2,l3,l3_1,l3_2,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_3(type_c2ats_gchar, l3, l3_1, l3_2), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_option_context_parse"
fun fun_c2ats_g_option_context_parse_strv: {l1,l2,l2_1,l2_2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1), !ptr_v_3(type_c2ats_gchar, l2, l2_1, l2_2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_option_context_parse_strv"
fun fun_c2ats_g_option_context_set_translate_func: {l1:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1) | ptr l1, type_c2ats_GTranslateFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#g_option_context_set_translate_func"
fun fun_c2ats_g_option_context_set_translation_domain: {l1,l2:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_option_context_set_translation_domain"
fun fun_c2ats_g_option_context_add_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1), !ptr_v_1(type_c2ats_GOptionGroup, l2) | ptr l1, ptr l2) -> void = "mac#g_option_context_add_group"
fun fun_c2ats_g_option_context_set_main_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1), !ptr_v_1(type_c2ats_GOptionGroup, l2) | ptr l1, ptr l2) -> void = "mac#g_option_context_set_main_group"
fun fun_c2ats_g_option_context_get_main_group: {l1:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GOptionGroup, l2) | ptr l2) = "mac#g_option_context_get_main_group"
fun fun_c2ats_g_option_context_get_help: {l1,l2:addr} (!ptr_v_1(type_c2ats_GOptionContext, l1), !ptr_v_1(type_c2ats_GOptionGroup, l2) | ptr l1, type_c2ats_gboolean, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_option_context_get_help"
fun fun_c2ats_g_option_group_new: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> [l4:addr] (ptr_v_1(type_c2ats_GOptionGroup, l4) | ptr l4) = "mac#g_option_group_new"
fun fun_c2ats_g_option_group_set_parse_hooks: {l1:addr} (!ptr_v_1(type_c2ats_GOptionGroup, l1) | ptr l1, type_c2ats_GOptionParseFunc, type_c2ats_GOptionParseFunc) -> void = "mac#g_option_group_set_parse_hooks"
fun fun_c2ats_g_option_group_set_error_hook: {l1:addr} (!ptr_v_1(type_c2ats_GOptionGroup, l1) | ptr l1, type_c2ats_GOptionErrorFunc) -> void = "mac#g_option_group_set_error_hook"
fun fun_c2ats_g_option_group_free: {l1:addr} (!ptr_v_1(type_c2ats_GOptionGroup, l1) | ptr l1) -> void = "mac#g_option_group_free"
fun fun_c2ats_g_option_group_ref: {l1:addr} (!ptr_v_1(type_c2ats_GOptionGroup, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GOptionGroup, l2) | ptr l2) = "mac#g_option_group_ref"
fun fun_c2ats_g_option_group_unref: {l1:addr} (!ptr_v_1(type_c2ats_GOptionGroup, l1) | ptr l1) -> void = "mac#g_option_group_unref"
fun fun_c2ats_g_option_group_add_entries: {l1,l2:addr} (!ptr_v_1(type_c2ats_GOptionGroup, l1), !ptr_v_1(type_c2ats_GOptionEntry, l2) | ptr l1, ptr l2) -> void = "mac#g_option_group_add_entries"
fun fun_c2ats_g_option_group_set_translate_func: {l1:addr} (!ptr_v_1(type_c2ats_GOptionGroup, l1) | ptr l1, type_c2ats_GTranslateFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#g_option_group_set_translate_func"
fun fun_c2ats_g_option_group_set_translation_domain: {l1,l2:addr} (!ptr_v_1(type_c2ats_GOptionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_option_group_set_translation_domain"
// File: /usr/include/glib-2.0/glib/gpattern.h
abst@ype struct_c2ats__GPatternSpec // FIXME! Forward declaration.
typedef type_c2ats_GPatternSpec = struct_c2ats__GPatternSpec
fun fun_c2ats_g_pattern_spec_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GPatternSpec, l2) | ptr l2) = "mac#g_pattern_spec_new"
fun fun_c2ats_g_pattern_spec_free: {l1:addr} (!ptr_v_1(type_c2ats_GPatternSpec, l1) | ptr l1) -> void = "mac#g_pattern_spec_free"
fun fun_c2ats_g_pattern_spec_equal: {l1,l2:addr} (!ptr_v_1(type_c2ats_GPatternSpec, l1), !ptr_v_1(type_c2ats_GPatternSpec, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_pattern_spec_equal"
fun fun_c2ats_g_pattern_match: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GPatternSpec, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, type_c2ats_guint, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_pattern_match"
fun fun_c2ats_g_pattern_match_string: {l1,l2:addr} (!ptr_v_1(type_c2ats_GPatternSpec, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_pattern_match_string"
fun fun_c2ats_g_pattern_match_simple: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_pattern_match_simple"
// File: /usr/include/glib-2.0/glib/gprimes.h
fun fun_c2ats_g_spaced_primes_closest: (type_c2ats_guint) -> type_c2ats_guint = "mac#g_spaced_primes_closest"
// File: /usr/include/glib-2.0/glib/gqsort.h
fun fun_c2ats_g_qsort_with_data: (type_c2ats_gconstpointer, type_c2ats_gint, type_c2ats_gsize, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> void = "mac#g_qsort_with_data"
// File: /usr/include/glib-2.0/glib/gqueue.h
abst@ype struct_c2ats__GQueue // FIXME! Forward declaration.
typedef type_c2ats_GQueue = struct_c2ats__GQueue
typedef struct_c2ats__GQueue = $extype_struct"struct _GQueue" of {
  head = ptr (* cPtr0(type_c2ats_GList) *),
  tail = ptr (* cPtr0(type_c2ats_GList) *),
  length = type_c2ats_guint
}
fun fun_c2ats_g_queue_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GQueue, l1) | ptr l1) = "mac#g_queue_new"
fun fun_c2ats_g_queue_free: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1) -> void = "mac#g_queue_free"
fun fun_c2ats_g_queue_free_full: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1, type_c2ats_GDestroyNotify) -> void = "mac#g_queue_free_full"
fun fun_c2ats_g_queue_init: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1) -> void = "mac#g_queue_init"
fun fun_c2ats_g_queue_clear: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1) -> void = "mac#g_queue_clear"
fun fun_c2ats_g_queue_is_empty: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_queue_is_empty"
fun fun_c2ats_g_queue_get_length: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1) -> type_c2ats_guint = "mac#g_queue_get_length"
fun fun_c2ats_g_queue_reverse: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1) -> void = "mac#g_queue_reverse"
fun fun_c2ats_g_queue_copy: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GQueue, l2) | ptr l2) = "mac#g_queue_copy"
fun fun_c2ats_g_queue_foreach: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1, type_c2ats_GFunc, type_c2ats_gpointer) -> void = "mac#g_queue_foreach"
fun fun_c2ats_g_queue_find: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1, type_c2ats_gconstpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_queue_find"
fun fun_c2ats_g_queue_find_custom: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1, type_c2ats_gconstpointer, type_c2ats_GCompareFunc) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_queue_find_custom"
fun fun_c2ats_g_queue_sort: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> void = "mac#g_queue_sort"
fun fun_c2ats_g_queue_push_head: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_queue_push_head"
fun fun_c2ats_g_queue_push_tail: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_queue_push_tail"
fun fun_c2ats_g_queue_push_nth: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_gint) -> void = "mac#g_queue_push_nth"
fun fun_c2ats_g_queue_pop_head: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_queue_pop_head"
fun fun_c2ats_g_queue_pop_tail: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_queue_pop_tail"
fun fun_c2ats_g_queue_pop_nth: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_gpointer = "mac#g_queue_pop_nth"
fun fun_c2ats_g_queue_peek_head: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_queue_peek_head"
fun fun_c2ats_g_queue_peek_tail: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_queue_peek_tail"
fun fun_c2ats_g_queue_peek_nth: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_gpointer = "mac#g_queue_peek_nth"
fun fun_c2ats_g_queue_index: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1, type_c2ats_gconstpointer) -> type_c2ats_gint = "mac#g_queue_index"
fun fun_c2ats_g_queue_remove: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1, type_c2ats_gconstpointer) -> type_c2ats_gboolean = "mac#g_queue_remove"
fun fun_c2ats_g_queue_remove_all: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1, type_c2ats_gconstpointer) -> type_c2ats_guint = "mac#g_queue_remove_all"
fun fun_c2ats_g_queue_insert_before: {l1,l2:addr} (!ptr_v_1(type_c2ats_GQueue, l1), !ptr_v_1(type_c2ats_GList, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void = "mac#g_queue_insert_before"
fun fun_c2ats_g_queue_insert_after: {l1,l2:addr} (!ptr_v_1(type_c2ats_GQueue, l1), !ptr_v_1(type_c2ats_GList, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void = "mac#g_queue_insert_after"
fun fun_c2ats_g_queue_insert_sorted: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> void = "mac#g_queue_insert_sorted"
fun fun_c2ats_g_queue_push_head_link: {l1,l2:addr} (!ptr_v_1(type_c2ats_GQueue, l1), !ptr_v_1(type_c2ats_GList, l2) | ptr l1, ptr l2) -> void = "mac#g_queue_push_head_link"
fun fun_c2ats_g_queue_push_tail_link: {l1,l2:addr} (!ptr_v_1(type_c2ats_GQueue, l1), !ptr_v_1(type_c2ats_GList, l2) | ptr l1, ptr l2) -> void = "mac#g_queue_push_tail_link"
fun fun_c2ats_g_queue_push_nth_link: {l1,l2:addr} (!ptr_v_1(type_c2ats_GQueue, l1), !ptr_v_1(type_c2ats_GList, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#g_queue_push_nth_link"
fun fun_c2ats_g_queue_pop_head_link: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_queue_pop_head_link"
fun fun_c2ats_g_queue_pop_tail_link: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_queue_pop_tail_link"
fun fun_c2ats_g_queue_pop_nth_link: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_queue_pop_nth_link"
fun fun_c2ats_g_queue_peek_head_link: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_queue_peek_head_link"
fun fun_c2ats_g_queue_peek_tail_link: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_queue_peek_tail_link"
fun fun_c2ats_g_queue_peek_nth_link: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_queue_peek_nth_link"
fun fun_c2ats_g_queue_link_index: {l1,l2:addr} (!ptr_v_1(type_c2ats_GQueue, l1), !ptr_v_1(type_c2ats_GList, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#g_queue_link_index"
fun fun_c2ats_g_queue_unlink: {l1,l2:addr} (!ptr_v_1(type_c2ats_GQueue, l1), !ptr_v_1(type_c2ats_GList, l2) | ptr l1, ptr l2) -> void = "mac#g_queue_unlink"
fun fun_c2ats_g_queue_delete_link: {l1,l2:addr} (!ptr_v_1(type_c2ats_GQueue, l1), !ptr_v_1(type_c2ats_GList, l2) | ptr l1, ptr l2) -> void = "mac#g_queue_delete_link"
// File: /usr/include/glib-2.0/glib/grand.h
abst@ype struct_c2ats__GRand // FIXME! Forward declaration.
typedef type_c2ats_GRand = struct_c2ats__GRand
fun fun_c2ats_g_rand_new_with_seed: (type_c2ats_guint32) -> [l1:addr] (ptr_v_1(type_c2ats_GRand, l1) | ptr l1) = "mac#g_rand_new_with_seed"
fun fun_c2ats_g_rand_new_with_seed_array: {l1:addr} (!ptr_v_1(type_c2ats_guint32, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GRand, l2) | ptr l2) = "mac#g_rand_new_with_seed_array"
fun fun_c2ats_g_rand_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GRand, l1) | ptr l1) = "mac#g_rand_new"
fun fun_c2ats_g_rand_free: {l1:addr} (!ptr_v_1(type_c2ats_GRand, l1) | ptr l1) -> void = "mac#g_rand_free"
fun fun_c2ats_g_rand_copy: {l1:addr} (!ptr_v_1(type_c2ats_GRand, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GRand, l2) | ptr l2) = "mac#g_rand_copy"
fun fun_c2ats_g_rand_set_seed: {l1:addr} (!ptr_v_1(type_c2ats_GRand, l1) | ptr l1, type_c2ats_guint32) -> void = "mac#g_rand_set_seed"
fun fun_c2ats_g_rand_set_seed_array: {l1,l2:addr} (!ptr_v_1(type_c2ats_GRand, l1), !ptr_v_1(type_c2ats_guint32, l2) | ptr l1, ptr l2, type_c2ats_guint) -> void = "mac#g_rand_set_seed_array"
fun fun_c2ats_g_rand_int: {l1:addr} (!ptr_v_1(type_c2ats_GRand, l1) | ptr l1) -> type_c2ats_guint32 = "mac#g_rand_int"
fun fun_c2ats_g_rand_int_range: {l1:addr} (!ptr_v_1(type_c2ats_GRand, l1) | ptr l1, type_c2ats_gint32, type_c2ats_gint32) -> type_c2ats_gint32 = "mac#g_rand_int_range"
fun fun_c2ats_g_rand_double: {l1:addr} (!ptr_v_1(type_c2ats_GRand, l1) | ptr l1) -> type_c2ats_gdouble = "mac#g_rand_double"
fun fun_c2ats_g_rand_double_range: {l1:addr} (!ptr_v_1(type_c2ats_GRand, l1) | ptr l1, type_c2ats_gdouble, type_c2ats_gdouble) -> type_c2ats_gdouble = "mac#g_rand_double_range"
fun fun_c2ats_g_random_set_seed: (type_c2ats_guint32) -> void = "mac#g_random_set_seed"
fun fun_c2ats_g_random_int: () -> type_c2ats_guint32 = "mac#g_random_int"
fun fun_c2ats_g_random_int_range: (type_c2ats_gint32, type_c2ats_gint32) -> type_c2ats_gint32 = "mac#g_random_int_range"
fun fun_c2ats_g_random_double: () -> type_c2ats_gdouble = "mac#g_random_double"
fun fun_c2ats_g_random_double_range: (type_c2ats_gdouble, type_c2ats_gdouble) -> type_c2ats_gdouble = "mac#g_random_double_range"
// File: /usr/include/glib-2.0/glib/gregex.h
typedef type_c2ats_GRegexError = int
#define enum_c2ats_G_REGEX_ERROR_COMPILE 0
#define enum_c2ats_G_REGEX_ERROR_OPTIMIZE 1
#define enum_c2ats_G_REGEX_ERROR_REPLACE 2
#define enum_c2ats_G_REGEX_ERROR_MATCH 3
#define enum_c2ats_G_REGEX_ERROR_INTERNAL 4
#define enum_c2ats_G_REGEX_ERROR_STRAY_BACKSLASH 101
#define enum_c2ats_G_REGEX_ERROR_MISSING_CONTROL_CHAR 102
#define enum_c2ats_G_REGEX_ERROR_UNRECOGNIZED_ESCAPE 103
#define enum_c2ats_G_REGEX_ERROR_QUANTIFIERS_OUT_OF_ORDER 104
#define enum_c2ats_G_REGEX_ERROR_QUANTIFIER_TOO_BIG 105
#define enum_c2ats_G_REGEX_ERROR_UNTERMINATED_CHARACTER_CLASS 106
#define enum_c2ats_G_REGEX_ERROR_INVALID_ESCAPE_IN_CHARACTER_CLASS 107
#define enum_c2ats_G_REGEX_ERROR_RANGE_OUT_OF_ORDER 108
#define enum_c2ats_G_REGEX_ERROR_NOTHING_TO_REPEAT 109
#define enum_c2ats_G_REGEX_ERROR_UNRECOGNIZED_CHARACTER 112
#define enum_c2ats_G_REGEX_ERROR_POSIX_NAMED_CLASS_OUTSIDE_CLASS 113
#define enum_c2ats_G_REGEX_ERROR_UNMATCHED_PARENTHESIS 114
#define enum_c2ats_G_REGEX_ERROR_INEXISTENT_SUBPATTERN_REFERENCE 115
#define enum_c2ats_G_REGEX_ERROR_UNTERMINATED_COMMENT 118
#define enum_c2ats_G_REGEX_ERROR_EXPRESSION_TOO_LARGE 120
#define enum_c2ats_G_REGEX_ERROR_MEMORY_ERROR 121
#define enum_c2ats_G_REGEX_ERROR_VARIABLE_LENGTH_LOOKBEHIND 125
#define enum_c2ats_G_REGEX_ERROR_MALFORMED_CONDITION 126
#define enum_c2ats_G_REGEX_ERROR_TOO_MANY_CONDITIONAL_BRANCHES 127
#define enum_c2ats_G_REGEX_ERROR_ASSERTION_EXPECTED 128
#define enum_c2ats_G_REGEX_ERROR_UNKNOWN_POSIX_CLASS_NAME 130
#define enum_c2ats_G_REGEX_ERROR_POSIX_COLLATING_ELEMENTS_NOT_SUPPORTED 131
#define enum_c2ats_G_REGEX_ERROR_HEX_CODE_TOO_LARGE 134
#define enum_c2ats_G_REGEX_ERROR_INVALID_CONDITION 135
#define enum_c2ats_G_REGEX_ERROR_SINGLE_BYTE_MATCH_IN_LOOKBEHIND 136
#define enum_c2ats_G_REGEX_ERROR_INFINITE_LOOP 140
#define enum_c2ats_G_REGEX_ERROR_MISSING_SUBPATTERN_NAME_TERMINATOR 142
#define enum_c2ats_G_REGEX_ERROR_DUPLICATE_SUBPATTERN_NAME 143
#define enum_c2ats_G_REGEX_ERROR_MALFORMED_PROPERTY 146
#define enum_c2ats_G_REGEX_ERROR_UNKNOWN_PROPERTY 147
#define enum_c2ats_G_REGEX_ERROR_SUBPATTERN_NAME_TOO_LONG 148
#define enum_c2ats_G_REGEX_ERROR_TOO_MANY_SUBPATTERNS 149
#define enum_c2ats_G_REGEX_ERROR_INVALID_OCTAL_VALUE 151
#define enum_c2ats_G_REGEX_ERROR_TOO_MANY_BRANCHES_IN_DEFINE 154
#define enum_c2ats_G_REGEX_ERROR_DEFINE_REPETION 155
#define enum_c2ats_G_REGEX_ERROR_INCONSISTENT_NEWLINE_OPTIONS 156
#define enum_c2ats_G_REGEX_ERROR_MISSING_BACK_REFERENCE 157
#define enum_c2ats_G_REGEX_ERROR_INVALID_RELATIVE_REFERENCE 158
#define enum_c2ats_G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_FORBIDDEN 159
#define enum_c2ats_G_REGEX_ERROR_UNKNOWN_BACKTRACKING_CONTROL_VERB 160
#define enum_c2ats_G_REGEX_ERROR_NUMBER_TOO_BIG 161
#define enum_c2ats_G_REGEX_ERROR_MISSING_SUBPATTERN_NAME 162
#define enum_c2ats_G_REGEX_ERROR_MISSING_DIGIT 163
#define enum_c2ats_G_REGEX_ERROR_INVALID_DATA_CHARACTER 164
#define enum_c2ats_G_REGEX_ERROR_EXTRA_SUBPATTERN_NAME 165
#define enum_c2ats_G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_REQUIRED 166
#define enum_c2ats_G_REGEX_ERROR_INVALID_CONTROL_CHAR 168
#define enum_c2ats_G_REGEX_ERROR_MISSING_NAME 169
#define enum_c2ats_G_REGEX_ERROR_NOT_SUPPORTED_IN_CLASS 171
#define enum_c2ats_G_REGEX_ERROR_TOO_MANY_FORWARD_REFERENCES 172
#define enum_c2ats_G_REGEX_ERROR_NAME_TOO_LONG 175
#define enum_c2ats_G_REGEX_ERROR_CHARACTER_VALUE_TOO_LARGE 176
fun fun_c2ats_g_regex_error_quark: () -> type_c2ats_GQuark = "mac#g_regex_error_quark"
typedef type_c2ats_GRegexCompileFlags = int
#define enum_c2ats_G_REGEX_CASELESS 1 << 0
#define enum_c2ats_G_REGEX_MULTILINE 1 << 1
#define enum_c2ats_G_REGEX_DOTALL 1 << 2
#define enum_c2ats_G_REGEX_EXTENDED 1 << 3
#define enum_c2ats_G_REGEX_ANCHORED 1 << 4
#define enum_c2ats_G_REGEX_DOLLAR_ENDONLY 1 << 5
#define enum_c2ats_G_REGEX_UNGREEDY 1 << 9
#define enum_c2ats_G_REGEX_RAW 1 << 11
#define enum_c2ats_G_REGEX_NO_AUTO_CAPTURE 1 << 12
#define enum_c2ats_G_REGEX_OPTIMIZE 1 << 13
#define enum_c2ats_G_REGEX_FIRSTLINE 1 << 18
#define enum_c2ats_G_REGEX_DUPNAMES 1 << 19
#define enum_c2ats_G_REGEX_NEWLINE_CR 1 << 20
#define enum_c2ats_G_REGEX_NEWLINE_LF 1 << 21
#define enum_c2ats_G_REGEX_NEWLINE_CRLF G_REGEX_NEWLINE_CR lor G_REGEX_NEWLINE_LF
#define enum_c2ats_G_REGEX_NEWLINE_ANYCRLF G_REGEX_NEWLINE_CR lor 1 << 22
#define enum_c2ats_G_REGEX_BSR_ANYCRLF 1 << 23
#define enum_c2ats_G_REGEX_JAVASCRIPT_COMPAT 1 << 25
typedef type_c2ats_GRegexMatchFlags = int
#define enum_c2ats_G_REGEX_MATCH_ANCHORED 1 << 4
#define enum_c2ats_G_REGEX_MATCH_NOTBOL 1 << 7
#define enum_c2ats_G_REGEX_MATCH_NOTEOL 1 << 8
#define enum_c2ats_G_REGEX_MATCH_NOTEMPTY 1 << 10
#define enum_c2ats_G_REGEX_MATCH_PARTIAL 1 << 15
#define enum_c2ats_G_REGEX_MATCH_NEWLINE_CR 1 << 20
#define enum_c2ats_G_REGEX_MATCH_NEWLINE_LF 1 << 21
#define enum_c2ats_G_REGEX_MATCH_NEWLINE_CRLF G_REGEX_MATCH_NEWLINE_CR lor G_REGEX_MATCH_NEWLINE_LF
#define enum_c2ats_G_REGEX_MATCH_NEWLINE_ANY 1 << 22
#define enum_c2ats_G_REGEX_MATCH_NEWLINE_ANYCRLF G_REGEX_MATCH_NEWLINE_CR lor G_REGEX_MATCH_NEWLINE_ANY
#define enum_c2ats_G_REGEX_MATCH_BSR_ANYCRLF 1 << 23
#define enum_c2ats_G_REGEX_MATCH_BSR_ANY 1 << 24
#define enum_c2ats_G_REGEX_MATCH_PARTIAL_SOFT G_REGEX_MATCH_PARTIAL
#define enum_c2ats_G_REGEX_MATCH_PARTIAL_HARD 1 << 27
#define enum_c2ats_G_REGEX_MATCH_NOTEMPTY_ATSTART 1 << 28
abst@ype struct_c2ats__GRegex // FIXME! Forward declaration.
typedef type_c2ats_GRegex = struct_c2ats__GRegex
abst@ype struct_c2ats__GMatchInfo // FIXME! Forward declaration.
typedef type_c2ats_GMatchInfo = struct_c2ats__GMatchInfo
typedef type_c2ats_GRegexEvalCallback = {l1,l2:addr} (!ptr_v_1(type_c2ats_GMatchInfo, l1), !ptr_v_1(type_c2ats_GString, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> type_c2ats_gboolean
fun fun_c2ats_g_regex_new: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_GRegexCompileFlags, type_c2ats_GRegexMatchFlags, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GRegex, l3) | ptr l3) = "mac#g_regex_new"
fun fun_c2ats_g_regex_ref: {l1:addr} (!ptr_v_1(type_c2ats_GRegex, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GRegex, l2) | ptr l2) = "mac#g_regex_ref"
fun fun_c2ats_g_regex_unref: {l1:addr} (!ptr_v_1(type_c2ats_GRegex, l1) | ptr l1) -> void = "mac#g_regex_unref"
fun fun_c2ats_g_regex_get_pattern: {l1:addr} (!ptr_v_1(type_c2ats_GRegex, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_regex_get_pattern"
fun fun_c2ats_g_regex_get_max_backref: {l1:addr} (!ptr_v_1(type_c2ats_GRegex, l1) | ptr l1) -> type_c2ats_gint = "mac#g_regex_get_max_backref"
fun fun_c2ats_g_regex_get_capture_count: {l1:addr} (!ptr_v_1(type_c2ats_GRegex, l1) | ptr l1) -> type_c2ats_gint = "mac#g_regex_get_capture_count"
fun fun_c2ats_g_regex_get_has_cr_or_lf: {l1:addr} (!ptr_v_1(type_c2ats_GRegex, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_regex_get_has_cr_or_lf"
fun fun_c2ats_g_regex_get_max_lookbehind: {l1:addr} (!ptr_v_1(type_c2ats_GRegex, l1) | ptr l1) -> type_c2ats_gint = "mac#g_regex_get_max_lookbehind"
fun fun_c2ats_g_regex_get_string_number: {l1,l2:addr} (!ptr_v_1(type_c2ats_GRegex, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#g_regex_get_string_number"
fun fun_c2ats_g_regex_escape_string: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_regex_escape_string"
fun fun_c2ats_g_regex_escape_nul: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_regex_escape_nul"
fun fun_c2ats_g_regex_get_compile_flags: {l1:addr} (!ptr_v_1(type_c2ats_GRegex, l1) | ptr l1) -> type_c2ats_GRegexCompileFlags = "mac#g_regex_get_compile_flags"
fun fun_c2ats_g_regex_get_match_flags: {l1:addr} (!ptr_v_1(type_c2ats_GRegex, l1) | ptr l1) -> type_c2ats_GRegexMatchFlags = "mac#g_regex_get_match_flags"
fun fun_c2ats_g_regex_match_simple: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GRegexCompileFlags, type_c2ats_GRegexMatchFlags) -> type_c2ats_gboolean = "mac#g_regex_match_simple"
fun fun_c2ats_g_regex_match: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GRegex, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GMatchInfo, l3, l3_1) | ptr l1, ptr l2, type_c2ats_GRegexMatchFlags, ptr l3) -> type_c2ats_gboolean = "mac#g_regex_match"
fun fun_c2ats_g_regex_match_full: {l1,l2,l3,l3_1,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GRegex, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GMatchInfo, l3, l3_1), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gssize, type_c2ats_gint, type_c2ats_GRegexMatchFlags, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_regex_match_full"
fun fun_c2ats_g_regex_match_all: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GRegex, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GMatchInfo, l3, l3_1) | ptr l1, ptr l2, type_c2ats_GRegexMatchFlags, ptr l3) -> type_c2ats_gboolean = "mac#g_regex_match_all"
fun fun_c2ats_g_regex_match_all_full: {l1,l2,l3,l3_1,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GRegex, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GMatchInfo, l3, l3_1), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gssize, type_c2ats_gint, type_c2ats_GRegexMatchFlags, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_regex_match_all_full"
fun fun_c2ats_g_regex_split_simple: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GRegexCompileFlags, type_c2ats_GRegexMatchFlags) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#g_regex_split_simple"
fun fun_c2ats_g_regex_split: {l1,l2:addr} (!ptr_v_1(type_c2ats_GRegex, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GRegexMatchFlags) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#g_regex_split"
fun fun_c2ats_g_regex_split_full: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GRegex, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gssize, type_c2ats_gint, type_c2ats_GRegexMatchFlags, type_c2ats_gint, ptr l3) -> [l4,l4_1:addr] (ptr_v_2(type_c2ats_gchar, l4, l4_1) | ptr l4) = "mac#g_regex_split_full"
fun fun_c2ats_g_regex_replace: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GRegex, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gssize, type_c2ats_gint, ptr l3, type_c2ats_GRegexMatchFlags, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_gchar, l5) | ptr l5) = "mac#g_regex_replace"
fun fun_c2ats_g_regex_replace_literal: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GRegex, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gssize, type_c2ats_gint, ptr l3, type_c2ats_GRegexMatchFlags, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_gchar, l5) | ptr l5) = "mac#g_regex_replace_literal"
fun fun_c2ats_g_regex_replace_eval: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GRegex, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gssize, type_c2ats_gint, type_c2ats_GRegexMatchFlags, type_c2ats_GRegexEvalCallback, type_c2ats_gpointer, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#g_regex_replace_eval"
fun fun_c2ats_g_regex_check_replacement: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gboolean, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_regex_check_replacement"
fun fun_c2ats_g_match_info_get_regex: {l1:addr} (!ptr_v_1(type_c2ats_GMatchInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GRegex, l2) | ptr l2) = "mac#g_match_info_get_regex"
fun fun_c2ats_g_match_info_get_string: {l1:addr} (!ptr_v_1(type_c2ats_GMatchInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_match_info_get_string"
fun fun_c2ats_g_match_info_ref: {l1:addr} (!ptr_v_1(type_c2ats_GMatchInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMatchInfo, l2) | ptr l2) = "mac#g_match_info_ref"
fun fun_c2ats_g_match_info_unref: {l1:addr} (!ptr_v_1(type_c2ats_GMatchInfo, l1) | ptr l1) -> void = "mac#g_match_info_unref"
fun fun_c2ats_g_match_info_free: {l1:addr} (!ptr_v_1(type_c2ats_GMatchInfo, l1) | ptr l1) -> void = "mac#g_match_info_free"
fun fun_c2ats_g_match_info_next: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GMatchInfo, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_match_info_next"
fun fun_c2ats_g_match_info_matches: {l1:addr} (!ptr_v_1(type_c2ats_GMatchInfo, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_match_info_matches"
fun fun_c2ats_g_match_info_get_match_count: {l1:addr} (!ptr_v_1(type_c2ats_GMatchInfo, l1) | ptr l1) -> type_c2ats_gint = "mac#g_match_info_get_match_count"
fun fun_c2ats_g_match_info_is_partial_match: {l1:addr} (!ptr_v_1(type_c2ats_GMatchInfo, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_match_info_is_partial_match"
fun fun_c2ats_g_match_info_expand_references: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMatchInfo, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#g_match_info_expand_references"
fun fun_c2ats_g_match_info_fetch: {l1:addr} (!ptr_v_1(type_c2ats_GMatchInfo, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_match_info_fetch"
fun fun_c2ats_g_match_info_fetch_pos: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMatchInfo, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_match_info_fetch_pos"
fun fun_c2ats_g_match_info_fetch_named: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMatchInfo, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_match_info_fetch_named"
fun fun_c2ats_g_match_info_fetch_named_pos: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GMatchInfo, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_match_info_fetch_named_pos"
fun fun_c2ats_g_match_info_fetch_all: {l1:addr} (!ptr_v_1(type_c2ats_GMatchInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#g_match_info_fetch_all"
// File: /usr/include/glib-2.0/glib/gscanner.h
abst@ype struct_c2ats__GScanner // FIXME! Forward declaration.
typedef type_c2ats_GScanner = struct_c2ats__GScanner
abst@ype struct_c2ats__GScannerConfig // FIXME! Forward declaration.
typedef type_c2ats_GScannerConfig = struct_c2ats__GScannerConfig
abst@ype union_c2ats__GTokenValue // FIXME! Forward declaration.
typedef type_c2ats_GTokenValue = union_c2ats__GTokenValue
typedef type_c2ats_GScannerMsgFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GScanner, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void
typedef type_c2ats_GErrorType = int
#define enum_c2ats_G_ERR_UNKNOWN 0
#define enum_c2ats_G_ERR_UNEXP_EOF 1
#define enum_c2ats_G_ERR_UNEXP_EOF_IN_STRING 2
#define enum_c2ats_G_ERR_UNEXP_EOF_IN_COMMENT 3
#define enum_c2ats_G_ERR_NON_DIGIT_IN_CONST 4
#define enum_c2ats_G_ERR_DIGIT_RADIX 5
#define enum_c2ats_G_ERR_FLOAT_RADIX 6
#define enum_c2ats_G_ERR_FLOAT_MALFORMED 7
typedef type_c2ats_GTokenType = int
#define enum_c2ats_G_TOKEN_EOF 0
#define enum_c2ats_G_TOKEN_LEFT_PAREN '\('
#define enum_c2ats_G_TOKEN_RIGHT_PAREN ')'
#define enum_c2ats_G_TOKEN_LEFT_CURLY '\{'
#define enum_c2ats_G_TOKEN_RIGHT_CURLY '}'
#define enum_c2ats_G_TOKEN_LEFT_BRACE '\['
#define enum_c2ats_G_TOKEN_RIGHT_BRACE ']'
#define enum_c2ats_G_TOKEN_EQUAL_SIGN '='
#define enum_c2ats_G_TOKEN_COMMA ','
#define enum_c2ats_G_TOKEN_NONE 256
#define enum_c2ats_G_TOKEN_ERROR 256 + 1
#define enum_c2ats_G_TOKEN_CHAR 256 + 2
#define enum_c2ats_G_TOKEN_BINARY 256 + 3
#define enum_c2ats_G_TOKEN_OCTAL 256 + 4
#define enum_c2ats_G_TOKEN_INT 256 + 5
#define enum_c2ats_G_TOKEN_HEX 256 + 6
#define enum_c2ats_G_TOKEN_FLOAT 256 + 7
#define enum_c2ats_G_TOKEN_STRING 256 + 8
#define enum_c2ats_G_TOKEN_SYMBOL 256 + 9
#define enum_c2ats_G_TOKEN_IDENTIFIER 256 + 10
#define enum_c2ats_G_TOKEN_IDENTIFIER_NULL 256 + 11
#define enum_c2ats_G_TOKEN_COMMENT_SINGLE 256 + 12
#define enum_c2ats_G_TOKEN_COMMENT_MULTI 256 + 13
#define enum_c2ats_G_TOKEN_LAST 256 + 14
typedef union_c2ats__GTokenValue = $extype_struct"union _GTokenValue" of {
  v_symbol = type_c2ats_gpointer,
  v_identifier = ptr (* cPtr0(type_c2ats_gchar) *),
  v_binary = type_c2ats_gulong,
  v_octal = type_c2ats_gulong,
  v_int = type_c2ats_gulong,
  v_int64 = type_c2ats_guint64,
  v_float = type_c2ats_gdouble,
  v_hex = type_c2ats_gulong,
  v_string = ptr (* cPtr0(type_c2ats_gchar) *),
  v_comment = ptr (* cPtr0(type_c2ats_gchar) *),
  v_char = type_c2ats_guchar,
  v_error = type_c2ats_guint
}
typedef struct_c2ats__GScannerConfig = $extype_struct"struct _GScannerConfig" of {
  cset_skip_characters = ptr (* cPtr0(type_c2ats_gchar) *),
  cset_identifier_first = ptr (* cPtr0(type_c2ats_gchar) *),
  cset_identifier_nth = ptr (* cPtr0(type_c2ats_gchar) *),
  cpair_comment_single = ptr (* cPtr0(type_c2ats_gchar) *),
  case_sensitive = type_c2ats_guint,
  skip_comment_multi = type_c2ats_guint,
  skip_comment_single = type_c2ats_guint,
  scan_comment_multi = type_c2ats_guint,
  scan_identifier = type_c2ats_guint,
  scan_identifier_1char = type_c2ats_guint,
  scan_identifier_NULL = type_c2ats_guint,
  scan_symbols = type_c2ats_guint,
  scan_binary = type_c2ats_guint,
  scan_octal = type_c2ats_guint,
  scan_float = type_c2ats_guint,
  scan_hex = type_c2ats_guint,
  scan_hex_dollar = type_c2ats_guint,
  scan_string_sq = type_c2ats_guint,
  scan_string_dq = type_c2ats_guint,
  numbers_2_int = type_c2ats_guint,
  int_2_float = type_c2ats_guint,
  identifier_2_string = type_c2ats_guint,
  char_2_token = type_c2ats_guint,
  symbol_2_token = type_c2ats_guint,
  scope_0_fallback = type_c2ats_guint,
  store_int64 = type_c2ats_guint,
  padding_dummy = type_c2ats_guint
}
typedef struct_c2ats__GScanner = $extype_struct"struct _GScanner" of {
  user_data = type_c2ats_gpointer,
  max_parse_errors = type_c2ats_guint,
  parse_errors = type_c2ats_guint,
  input_name = ptr (* cPtr0(type_c2ats_gchar) *),
  qdata = ptr (* cPtr0(type_c2ats_GData) *),
  config = ptr (* cPtr0(type_c2ats_GScannerConfig) *),
  token = type_c2ats_GTokenType,
  value = type_c2ats_GTokenValue,
  line = type_c2ats_guint,
  position = type_c2ats_guint,
  next_token = type_c2ats_GTokenType,
  next_value = type_c2ats_GTokenValue,
  next_line = type_c2ats_guint,
  next_position = type_c2ats_guint,
  symbol_table = ptr (* cPtr0(type_c2ats_GHashTable) *),
  input_fd = type_c2ats_gint,
  text = ptr (* cPtr0(type_c2ats_gchar) *),
  text_end = ptr (* cPtr0(type_c2ats_gchar) *),
  buffer = ptr (* cPtr0(type_c2ats_gchar) *),
  scope_id = type_c2ats_guint,
  msg_handler = type_c2ats_GScannerMsgFunc
}
fun fun_c2ats_g_scanner_new: {l1:addr} (!ptr_v_1(type_c2ats_GScannerConfig, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GScanner, l2) | ptr l2) = "mac#g_scanner_new"
fun fun_c2ats_g_scanner_destroy: {l1:addr} (!ptr_v_1(type_c2ats_GScanner, l1) | ptr l1) -> void = "mac#g_scanner_destroy"
fun fun_c2ats_g_scanner_input_file: {l1:addr} (!ptr_v_1(type_c2ats_GScanner, l1) | ptr l1, type_c2ats_gint) -> void = "mac#g_scanner_input_file"
fun fun_c2ats_g_scanner_sync_file_offset: {l1:addr} (!ptr_v_1(type_c2ats_GScanner, l1) | ptr l1) -> void = "mac#g_scanner_sync_file_offset"
fun fun_c2ats_g_scanner_input_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GScanner, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_guint) -> void = "mac#g_scanner_input_text"
fun fun_c2ats_g_scanner_get_next_token: {l1:addr} (!ptr_v_1(type_c2ats_GScanner, l1) | ptr l1) -> type_c2ats_GTokenType = "mac#g_scanner_get_next_token"
fun fun_c2ats_g_scanner_peek_next_token: {l1:addr} (!ptr_v_1(type_c2ats_GScanner, l1) | ptr l1) -> type_c2ats_GTokenType = "mac#g_scanner_peek_next_token"
fun fun_c2ats_g_scanner_cur_token: {l1:addr} (!ptr_v_1(type_c2ats_GScanner, l1) | ptr l1) -> type_c2ats_GTokenType = "mac#g_scanner_cur_token"
fun fun_c2ats_g_scanner_cur_value: {l1:addr} (!ptr_v_1(type_c2ats_GScanner, l1) | ptr l1) -> type_c2ats_GTokenValue = "mac#g_scanner_cur_value"
fun fun_c2ats_g_scanner_cur_line: {l1:addr} (!ptr_v_1(type_c2ats_GScanner, l1) | ptr l1) -> type_c2ats_guint = "mac#g_scanner_cur_line"
fun fun_c2ats_g_scanner_cur_position: {l1:addr} (!ptr_v_1(type_c2ats_GScanner, l1) | ptr l1) -> type_c2ats_guint = "mac#g_scanner_cur_position"
fun fun_c2ats_g_scanner_eof: {l1:addr} (!ptr_v_1(type_c2ats_GScanner, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_scanner_eof"
fun fun_c2ats_g_scanner_set_scope: {l1:addr} (!ptr_v_1(type_c2ats_GScanner, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_guint = "mac#g_scanner_set_scope"
fun fun_c2ats_g_scanner_scope_add_symbol: {l1,l2:addr} (!ptr_v_1(type_c2ats_GScanner, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_guint, ptr l2, type_c2ats_gpointer) -> void = "mac#g_scanner_scope_add_symbol"
fun fun_c2ats_g_scanner_scope_remove_symbol: {l1,l2:addr} (!ptr_v_1(type_c2ats_GScanner, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_guint, ptr l2) -> void = "mac#g_scanner_scope_remove_symbol"
fun fun_c2ats_g_scanner_scope_lookup_symbol: {l1,l2:addr} (!ptr_v_1(type_c2ats_GScanner, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_guint, ptr l2) -> type_c2ats_gpointer = "mac#g_scanner_scope_lookup_symbol"
fun fun_c2ats_g_scanner_scope_foreach_symbol: {l1:addr} (!ptr_v_1(type_c2ats_GScanner, l1) | ptr l1, type_c2ats_guint, type_c2ats_GHFunc, type_c2ats_gpointer) -> void = "mac#g_scanner_scope_foreach_symbol"
fun fun_c2ats_g_scanner_lookup_symbol: {l1,l2:addr} (!ptr_v_1(type_c2ats_GScanner, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gpointer = "mac#g_scanner_lookup_symbol"
fun fun_c2ats_g_scanner_unexp_token: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GScanner, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gchar, l5) | ptr l1, type_c2ats_GTokenType, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_gint) -> void = "mac#g_scanner_unexp_token"
fun fun_c2ats_g_scanner_error: {l1,l2:addr} (!ptr_v_1(type_c2ats_GScanner, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_scanner_error"
fun fun_c2ats_g_scanner_warn: {l1,l2:addr} (!ptr_v_1(type_c2ats_GScanner, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_scanner_warn"
// File: /usr/include/glib-2.0/glib/gsequence.h
abst@ype struct_c2ats__GSequence // FIXME! Forward declaration.
typedef type_c2ats_GSequence = struct_c2ats__GSequence
abst@ype struct_c2ats__GSequenceNode // FIXME! Forward declaration.
typedef type_c2ats_GSequenceIter = struct_c2ats__GSequenceNode
typedef type_c2ats_GSequenceIterCompareFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1), !ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> type_c2ats_gint
fun fun_c2ats_g_sequence_new: (type_c2ats_GDestroyNotify) -> [l1:addr] (ptr_v_1(type_c2ats_GSequence, l1) | ptr l1) = "mac#g_sequence_new"
fun fun_c2ats_g_sequence_free: {l1:addr} (!ptr_v_1(type_c2ats_GSequence, l1) | ptr l1) -> void = "mac#g_sequence_free"
fun fun_c2ats_g_sequence_get_length: {l1:addr} (!ptr_v_1(type_c2ats_GSequence, l1) | ptr l1) -> type_c2ats_gint = "mac#g_sequence_get_length"
fun fun_c2ats_g_sequence_foreach: {l1:addr} (!ptr_v_1(type_c2ats_GSequence, l1) | ptr l1, type_c2ats_GFunc, type_c2ats_gpointer) -> void = "mac#g_sequence_foreach"
fun fun_c2ats_g_sequence_foreach_range: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1), !ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l1, ptr l2, type_c2ats_GFunc, type_c2ats_gpointer) -> void = "mac#g_sequence_foreach_range"
fun fun_c2ats_g_sequence_sort: {l1:addr} (!ptr_v_1(type_c2ats_GSequence, l1) | ptr l1, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> void = "mac#g_sequence_sort"
fun fun_c2ats_g_sequence_sort_iter: {l1:addr} (!ptr_v_1(type_c2ats_GSequence, l1) | ptr l1, type_c2ats_GSequenceIterCompareFunc, type_c2ats_gpointer) -> void = "mac#g_sequence_sort_iter"
fun fun_c2ats_g_sequence_is_empty: {l1:addr} (!ptr_v_1(type_c2ats_GSequence, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_sequence_is_empty"
fun fun_c2ats_g_sequence_get_begin_iter: {l1:addr} (!ptr_v_1(type_c2ats_GSequence, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l2) = "mac#g_sequence_get_begin_iter"
fun fun_c2ats_g_sequence_get_end_iter: {l1:addr} (!ptr_v_1(type_c2ats_GSequence, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l2) = "mac#g_sequence_get_end_iter"
fun fun_c2ats_g_sequence_get_iter_at_pos: {l1:addr} (!ptr_v_1(type_c2ats_GSequence, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l2) = "mac#g_sequence_get_iter_at_pos"
fun fun_c2ats_g_sequence_append: {l1:addr} (!ptr_v_1(type_c2ats_GSequence, l1) | ptr l1, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l2) = "mac#g_sequence_append"
fun fun_c2ats_g_sequence_prepend: {l1:addr} (!ptr_v_1(type_c2ats_GSequence, l1) | ptr l1, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l2) = "mac#g_sequence_prepend"
fun fun_c2ats_g_sequence_insert_before: {l1:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1) | ptr l1, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l2) = "mac#g_sequence_insert_before"
fun fun_c2ats_g_sequence_move: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1), !ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l1, ptr l2) -> void = "mac#g_sequence_move"
fun fun_c2ats_g_sequence_swap: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1), !ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l1, ptr l2) -> void = "mac#g_sequence_swap"
fun fun_c2ats_g_sequence_insert_sorted: {l1:addr} (!ptr_v_1(type_c2ats_GSequence, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l2) = "mac#g_sequence_insert_sorted"
fun fun_c2ats_g_sequence_insert_sorted_iter: {l1:addr} (!ptr_v_1(type_c2ats_GSequence, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GSequenceIterCompareFunc, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l2) = "mac#g_sequence_insert_sorted_iter"
fun fun_c2ats_g_sequence_sort_changed: {l1:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1) | ptr l1, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> void = "mac#g_sequence_sort_changed"
fun fun_c2ats_g_sequence_sort_changed_iter: {l1:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1) | ptr l1, type_c2ats_GSequenceIterCompareFunc, type_c2ats_gpointer) -> void = "mac#g_sequence_sort_changed_iter"
fun fun_c2ats_g_sequence_remove: {l1:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1) | ptr l1) -> void = "mac#g_sequence_remove"
fun fun_c2ats_g_sequence_remove_range: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1), !ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l1, ptr l2) -> void = "mac#g_sequence_remove_range"
fun fun_c2ats_g_sequence_move_range: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1), !ptr_v_1(type_c2ats_GSequenceIter, l2), !ptr_v_1(type_c2ats_GSequenceIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_sequence_move_range"
fun fun_c2ats_g_sequence_search: {l1:addr} (!ptr_v_1(type_c2ats_GSequence, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l2) = "mac#g_sequence_search"
fun fun_c2ats_g_sequence_search_iter: {l1:addr} (!ptr_v_1(type_c2ats_GSequence, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GSequenceIterCompareFunc, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l2) = "mac#g_sequence_search_iter"
fun fun_c2ats_g_sequence_lookup: {l1:addr} (!ptr_v_1(type_c2ats_GSequence, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l2) = "mac#g_sequence_lookup"
fun fun_c2ats_g_sequence_lookup_iter: {l1:addr} (!ptr_v_1(type_c2ats_GSequence, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GSequenceIterCompareFunc, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l2) = "mac#g_sequence_lookup_iter"
fun fun_c2ats_g_sequence_get: {l1:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_sequence_get"
fun fun_c2ats_g_sequence_set: {l1:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_sequence_set"
fun fun_c2ats_g_sequence_iter_is_begin: {l1:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_sequence_iter_is_begin"
fun fun_c2ats_g_sequence_iter_is_end: {l1:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_sequence_iter_is_end"
fun fun_c2ats_g_sequence_iter_next: {l1:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l2) = "mac#g_sequence_iter_next"
fun fun_c2ats_g_sequence_iter_prev: {l1:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l2) = "mac#g_sequence_iter_prev"
fun fun_c2ats_g_sequence_iter_get_position: {l1:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1) | ptr l1) -> type_c2ats_gint = "mac#g_sequence_iter_get_position"
fun fun_c2ats_g_sequence_iter_move: {l1:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l2) = "mac#g_sequence_iter_move"
fun fun_c2ats_g_sequence_iter_get_sequence: {l1:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSequence, l2) | ptr l2) = "mac#g_sequence_iter_get_sequence"
fun fun_c2ats_g_sequence_iter_compare: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1), !ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#g_sequence_iter_compare"
fun fun_c2ats_g_sequence_range_get_midpoint: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSequenceIter, l1), !ptr_v_1(type_c2ats_GSequenceIter, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSequenceIter, l3) | ptr l3) = "mac#g_sequence_range_get_midpoint"
// File: /usr/include/glib-2.0/glib/gshell.h
typedef type_c2ats_GShellError = int
#define enum_c2ats_G_SHELL_ERROR_BAD_QUOTING 0
#define enum_c2ats_G_SHELL_ERROR_EMPTY_STRING 1
#define enum_c2ats_G_SHELL_ERROR_FAILED 2
fun fun_c2ats_g_shell_error_quark: () -> type_c2ats_GQuark = "mac#g_shell_error_quark"
fun fun_c2ats_g_shell_quote: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_shell_quote"
fun fun_c2ats_g_shell_unquote: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_shell_unquote"
fun fun_c2ats_g_shell_parse_argv: {l1,l2,l3,l3_1,l3_2,l4,l4_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_3(type_c2ats_gchar, l3, l3_1, l3_2), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_shell_parse_argv"
// File: /usr/include/glib-2.0/glib/gslice.h
fun fun_c2ats_g_slice_alloc: (type_c2ats_gsize) -> type_c2ats_gpointer = "mac#g_slice_alloc"
fun fun_c2ats_g_slice_alloc0: (type_c2ats_gsize) -> type_c2ats_gpointer = "mac#g_slice_alloc0"
fun fun_c2ats_g_slice_copy: (type_c2ats_gsize, type_c2ats_gconstpointer) -> type_c2ats_gpointer = "mac#g_slice_copy"
fun fun_c2ats_g_slice_free1: (type_c2ats_gsize, type_c2ats_gpointer) -> void = "mac#g_slice_free1"
fun fun_c2ats_g_slice_free_chain_with_offset: (type_c2ats_gsize, type_c2ats_gpointer, type_c2ats_gsize) -> void = "mac#g_slice_free_chain_with_offset"
typedef type_c2ats_GSliceConfig = int
#define enum_c2ats_G_SLICE_CONFIG_ALWAYS_MALLOC 1
#define enum_c2ats_G_SLICE_CONFIG_BYPASS_MAGAZINES 1 + 1
#define enum_c2ats_G_SLICE_CONFIG_WORKING_SET_MSECS 1 + 2
#define enum_c2ats_G_SLICE_CONFIG_COLOR_INCREMENT 1 + 3
#define enum_c2ats_G_SLICE_CONFIG_CHUNK_SIZES 1 + 4
#define enum_c2ats_G_SLICE_CONFIG_CONTENTION_COUNTER 1 + 5
fun fun_c2ats_g_slice_set_config: (type_c2ats_GSliceConfig, type_c2ats_gint64) -> void = "mac#g_slice_set_config"
fun fun_c2ats_g_slice_get_config: (type_c2ats_GSliceConfig) -> type_c2ats_gint64 = "mac#g_slice_get_config"
fun fun_c2ats_g_slice_get_config_state: {l1:addr} (!ptr_v_1(type_c2ats_guint, l1) | type_c2ats_GSliceConfig, type_c2ats_gint64, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gint64, l2) | ptr l2) = "mac#g_slice_get_config_state"
// File: /usr/include/glib-2.0/glib/gspawn.h
typedef type_c2ats_GSpawnError = int
#define enum_c2ats_G_SPAWN_ERROR_FORK 0
#define enum_c2ats_G_SPAWN_ERROR_READ 1
#define enum_c2ats_G_SPAWN_ERROR_CHDIR 2
#define enum_c2ats_G_SPAWN_ERROR_ACCES 3
#define enum_c2ats_G_SPAWN_ERROR_PERM 4
#define enum_c2ats_G_SPAWN_ERROR_TOO_BIG 5
#define enum_c2ats_G_SPAWN_ERROR_2BIG G_SPAWN_ERROR_TOO_BIG
#define enum_c2ats_G_SPAWN_ERROR_NOEXEC G_SPAWN_ERROR_TOO_BIG + 1
#define enum_c2ats_G_SPAWN_ERROR_NAMETOOLONG G_SPAWN_ERROR_TOO_BIG + 2
#define enum_c2ats_G_SPAWN_ERROR_NOENT G_SPAWN_ERROR_TOO_BIG + 3
#define enum_c2ats_G_SPAWN_ERROR_NOMEM G_SPAWN_ERROR_TOO_BIG + 4
#define enum_c2ats_G_SPAWN_ERROR_NOTDIR G_SPAWN_ERROR_TOO_BIG + 5
#define enum_c2ats_G_SPAWN_ERROR_LOOP G_SPAWN_ERROR_TOO_BIG + 6
#define enum_c2ats_G_SPAWN_ERROR_TXTBUSY G_SPAWN_ERROR_TOO_BIG + 7
#define enum_c2ats_G_SPAWN_ERROR_IO G_SPAWN_ERROR_TOO_BIG + 8
#define enum_c2ats_G_SPAWN_ERROR_NFILE G_SPAWN_ERROR_TOO_BIG + 9
#define enum_c2ats_G_SPAWN_ERROR_MFILE G_SPAWN_ERROR_TOO_BIG + 10
#define enum_c2ats_G_SPAWN_ERROR_INVAL G_SPAWN_ERROR_TOO_BIG + 11
#define enum_c2ats_G_SPAWN_ERROR_ISDIR G_SPAWN_ERROR_TOO_BIG + 12
#define enum_c2ats_G_SPAWN_ERROR_LIBBAD G_SPAWN_ERROR_TOO_BIG + 13
#define enum_c2ats_G_SPAWN_ERROR_FAILED G_SPAWN_ERROR_TOO_BIG + 14
typedef type_c2ats_GSpawnChildSetupFunc = (type_c2ats_gpointer) -> void
typedef type_c2ats_GSpawnFlags = int
#define enum_c2ats_G_SPAWN_DEFAULT 0
#define enum_c2ats_G_SPAWN_LEAVE_DESCRIPTORS_OPEN 1 << 0
#define enum_c2ats_G_SPAWN_DO_NOT_REAP_CHILD 1 << 1
#define enum_c2ats_G_SPAWN_SEARCH_PATH 1 << 2
#define enum_c2ats_G_SPAWN_STDOUT_TO_DEV_NULL 1 << 3
#define enum_c2ats_G_SPAWN_STDERR_TO_DEV_NULL 1 << 4
#define enum_c2ats_G_SPAWN_CHILD_INHERITS_STDIN 1 << 5
#define enum_c2ats_G_SPAWN_FILE_AND_ARGV_ZERO 1 << 6
#define enum_c2ats_G_SPAWN_SEARCH_PATH_FROM_ENVP 1 << 7
#define enum_c2ats_G_SPAWN_CLOEXEC_PIPES 1 << 8
fun fun_c2ats_g_spawn_error_quark: () -> type_c2ats_GQuark = "mac#g_spawn_error_quark"
fun fun_c2ats_g_spawn_exit_error_quark: () -> type_c2ats_GQuark = "mac#g_spawn_exit_error_quark"
fun fun_c2ats_g_spawn_async: {l1,l2,l2_1,l3,l3_1,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_2(type_c2ats_gchar, l3, l3_1), !ptr_v_1(type_c2ats_GPid, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, type_c2ats_GSpawnFlags, type_c2ats_GSpawnChildSetupFunc, type_c2ats_gpointer, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#g_spawn_async"
fun fun_c2ats_g_spawn_async_with_pipes: {l1,l2,l2_1,l3,l3_1,l4,l5,l6,l7,l8,l8_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_2(type_c2ats_gchar, l3, l3_1), !ptr_v_1(type_c2ats_GPid, l4), !ptr_v_1(type_c2ats_gint, l5), !ptr_v_1(type_c2ats_gint, l6), !ptr_v_1(type_c2ats_gint, l7), !ptr_v_2(type_c2ats_GError, l8, l8_1) | ptr l1, ptr l2, ptr l3, type_c2ats_GSpawnFlags, type_c2ats_GSpawnChildSetupFunc, type_c2ats_gpointer, ptr l4, ptr l5, ptr l6, ptr l7, ptr l8) -> type_c2ats_gboolean = "mac#g_spawn_async_with_pipes"
fun fun_c2ats_g_spawn_sync: {l1,l2,l2_1,l3,l3_1,l4,l4_1,l5,l5_1,l6,l7,l7_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_2(type_c2ats_gchar, l3, l3_1), !ptr_v_2(type_c2ats_gchar, l4, l4_1), !ptr_v_2(type_c2ats_gchar, l5, l5_1), !ptr_v_1(type_c2ats_gint, l6), !ptr_v_2(type_c2ats_GError, l7, l7_1) | ptr l1, ptr l2, ptr l3, type_c2ats_GSpawnFlags, type_c2ats_GSpawnChildSetupFunc, type_c2ats_gpointer, ptr l4, ptr l5, ptr l6, ptr l7) -> type_c2ats_gboolean = "mac#g_spawn_sync"
fun fun_c2ats_g_spawn_command_line_sync: {l1,l2,l2_1,l3,l3_1,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_2(type_c2ats_gchar, l3, l3_1), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#g_spawn_command_line_sync"
fun fun_c2ats_g_spawn_command_line_async: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_spawn_command_line_async"
fun fun_c2ats_g_spawn_check_exit_status: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GError, l1, l1_1) | type_c2ats_gint, ptr l1) -> type_c2ats_gboolean = "mac#g_spawn_check_exit_status"
fun fun_c2ats_g_spawn_close_pid: (type_c2ats_GPid) -> void = "mac#g_spawn_close_pid"
// File: /usr/include/glib-2.0/glib/gstrfuncs.h
typedef type_c2ats_GAsciiType = int
#define enum_c2ats_G_ASCII_ALNUM 1 << 0
#define enum_c2ats_G_ASCII_ALPHA 1 << 1
#define enum_c2ats_G_ASCII_CNTRL 1 << 2
#define enum_c2ats_G_ASCII_DIGIT 1 << 3
#define enum_c2ats_G_ASCII_GRAPH 1 << 4
#define enum_c2ats_G_ASCII_LOWER 1 << 5
#define enum_c2ats_G_ASCII_PRINT 1 << 6
#define enum_c2ats_G_ASCII_PUNCT 1 << 7
#define enum_c2ats_G_ASCII_SPACE 1 << 8
#define enum_c2ats_G_ASCII_UPPER 1 << 9
#define enum_c2ats_G_ASCII_XDIGIT 1 << 10
macdef takeout_c2ats_g_ascii_table = $extval([l1,l1_1:addr] (ptr_v_2(type_c2ats_guint16, l1, l1_1) | ptr l1), "&g_ascii_table")
praxi addback_c2ats_g_ascii_table {l1,l1_1:addr} (ptr_v_2(type_c2ats_guint16, l1, l1_1) | ptr l1): void
fun fun_c2ats_g_ascii_tolower: (type_c2ats_gchar) -> type_c2ats_gchar = "mac#g_ascii_tolower"
fun fun_c2ats_g_ascii_toupper: (type_c2ats_gchar) -> type_c2ats_gchar = "mac#g_ascii_toupper"
fun fun_c2ats_g_ascii_digit_value: (type_c2ats_gchar) -> type_c2ats_gint = "mac#g_ascii_digit_value"
fun fun_c2ats_g_ascii_xdigit_value: (type_c2ats_gchar) -> type_c2ats_gint = "mac#g_ascii_xdigit_value"
fun fun_c2ats_g_strdelimit: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gchar) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_strdelimit"
fun fun_c2ats_g_strcanon: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gchar) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_strcanon"
fun fun_c2ats_g_strerror: (type_c2ats_gint) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_strerror"
fun fun_c2ats_g_strsignal: (type_c2ats_gint) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_strsignal"
fun fun_c2ats_g_strreverse: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_strreverse"
fun fun_c2ats_g_strlcpy: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gsize) -> type_c2ats_gsize = "mac#g_strlcpy"
fun fun_c2ats_g_strlcat: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gsize) -> type_c2ats_gsize = "mac#g_strlcat"
fun fun_c2ats_g_strstr_len: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gssize, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_strstr_len"
fun fun_c2ats_g_strrstr: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_strrstr"
fun fun_c2ats_g_strrstr_len: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gssize, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_strrstr_len"
fun fun_c2ats_g_str_has_suffix: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_str_has_suffix"
fun fun_c2ats_g_str_has_prefix: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_str_has_prefix"
fun fun_c2ats_g_strtod: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gdouble = "mac#g_strtod"
fun fun_c2ats_g_ascii_strtod: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gdouble = "mac#g_ascii_strtod"
fun fun_c2ats_g_ascii_strtoull: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l1, ptr l2, type_c2ats_guint) -> type_c2ats_guint64 = "mac#g_ascii_strtoull"
fun fun_c2ats_g_ascii_strtoll: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l1, ptr l2, type_c2ats_guint) -> type_c2ats_gint64 = "mac#g_ascii_strtoll"
fun fun_c2ats_g_ascii_dtostr: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gint, type_c2ats_gdouble) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_ascii_dtostr"
fun fun_c2ats_g_ascii_formatd: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gint, ptr l2, type_c2ats_gdouble) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_ascii_formatd"
fun fun_c2ats_g_strchug: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_strchug"
fun fun_c2ats_g_strchomp: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_strchomp"
fun fun_c2ats_g_ascii_strcasecmp: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#g_ascii_strcasecmp"
fun fun_c2ats_g_ascii_strncasecmp: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gsize) -> type_c2ats_gint = "mac#g_ascii_strncasecmp"
fun fun_c2ats_g_ascii_strdown: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gssize) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_ascii_strdown"
fun fun_c2ats_g_ascii_strup: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gssize) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_ascii_strup"
fun fun_c2ats_g_str_is_ascii: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_str_is_ascii"
fun fun_c2ats_g_strcasecmp: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#g_strcasecmp"
fun fun_c2ats_g_strncasecmp: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_guint) -> type_c2ats_gint = "mac#g_strncasecmp"
fun fun_c2ats_g_strdown: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_strdown"
fun fun_c2ats_g_strup: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_strup"
fun fun_c2ats_g_strdup: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_strdup"
fun fun_c2ats_g_strdup_printf: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_strdup_printf"
fun fun_c2ats_g_strdup_vprintf: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_va_list) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_strdup_vprintf"
fun fun_c2ats_g_strndup: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gsize) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_strndup"
fun fun_c2ats_g_strnfill: (type_c2ats_gsize, type_c2ats_gchar) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_strnfill"
fun fun_c2ats_g_strconcat: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_strconcat"
fun fun_c2ats_g_strjoin: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_strjoin"
fun fun_c2ats_g_strcompress: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_strcompress"
fun fun_c2ats_g_strescape: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_strescape"
fun fun_c2ats_g_memdup: (type_c2ats_gconstpointer, type_c2ats_guint) -> type_c2ats_gpointer = "mac#g_memdup"
typedef type_c2ats_GStrv = cPtr0(cPtr0(type_c2ats_gchar))
fun fun_c2ats_g_strsplit: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#g_strsplit"
fun fun_c2ats_g_strsplit_set: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#g_strsplit_set"
fun fun_c2ats_g_strjoinv: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_strjoinv"
fun fun_c2ats_g_strfreev: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_gchar, l1, l1_1) | ptr l1) -> void = "mac#g_strfreev"
fun fun_c2ats_g_strdupv: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_gchar, l1, l1_1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#g_strdupv"
fun fun_c2ats_g_strv_length: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_gchar, l1, l1_1) | ptr l1) -> type_c2ats_guint = "mac#g_strv_length"
fun fun_c2ats_g_stpcpy: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_stpcpy"
fun fun_c2ats_g_str_to_ascii: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_str_to_ascii"
fun fun_c2ats_g_str_tokenize_and_fold: {l1,l2,l3,l3_1,l3_2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_3(type_c2ats_gchar, l3, l3_1, l3_2) | ptr l1, ptr l2, ptr l3) -> [l4,l4_1:addr] (ptr_v_2(type_c2ats_gchar, l4, l4_1) | ptr l4) = "mac#g_str_tokenize_and_fold"
fun fun_c2ats_g_str_match_string: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#g_str_match_string"
fun fun_c2ats_g_strv_contains: {l1,l1_1,l2:addr} (!ptr_v_2(type_c2ats_gchar, l1, l1_1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_strv_contains"
// File: /usr/include/glib-2.0/glib/gstringchunk.h
abst@ype struct_c2ats__GStringChunk // FIXME! Forward declaration.
typedef type_c2ats_GStringChunk = struct_c2ats__GStringChunk
fun fun_c2ats_g_string_chunk_new: (type_c2ats_gsize) -> [l1:addr] (ptr_v_1(type_c2ats_GStringChunk, l1) | ptr l1) = "mac#g_string_chunk_new"
fun fun_c2ats_g_string_chunk_free: {l1:addr} (!ptr_v_1(type_c2ats_GStringChunk, l1) | ptr l1) -> void = "mac#g_string_chunk_free"
fun fun_c2ats_g_string_chunk_clear: {l1:addr} (!ptr_v_1(type_c2ats_GStringChunk, l1) | ptr l1) -> void = "mac#g_string_chunk_clear"
fun fun_c2ats_g_string_chunk_insert: {l1,l2:addr} (!ptr_v_1(type_c2ats_GStringChunk, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_string_chunk_insert"
fun fun_c2ats_g_string_chunk_insert_len: {l1,l2:addr} (!ptr_v_1(type_c2ats_GStringChunk, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gssize) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_string_chunk_insert_len"
fun fun_c2ats_g_string_chunk_insert_const: {l1,l2:addr} (!ptr_v_1(type_c2ats_GStringChunk, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_string_chunk_insert_const"
// File: /usr/include/glib-2.0/glib/gtestutils.h
abst@ype struct_c2ats_GTestCase // FIXME! Forward declaration.
typedef type_c2ats_GTestCase = struct_c2ats_GTestCase
abst@ype struct_c2ats_GTestSuite // FIXME! Forward declaration.
typedef type_c2ats_GTestSuite = struct_c2ats_GTestSuite
typedef type_c2ats_GTestFunc = () -> void
typedef type_c2ats_GTestDataFunc = (type_c2ats_gconstpointer) -> void
typedef type_c2ats_GTestFixtureFunc = (type_c2ats_gpointer, type_c2ats_gconstpointer) -> void
fun fun_c2ats_g_strcmp0: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> int = "mac#g_strcmp0"
fun fun_c2ats_g_test_minimized_result: {l1:addr} (!ptr_v_1(char, l1) | double, ptr l1) -> void = "mac#g_test_minimized_result"
fun fun_c2ats_g_test_maximized_result: {l1:addr} (!ptr_v_1(char, l1) | double, ptr l1) -> void = "mac#g_test_maximized_result"
fun fun_c2ats_g_test_init: {l1,l2,l2_1,l2_2:addr} (!ptr_v_1(int, l1), !ptr_v_3(char, l2, l2_1, l2_2) | ptr l1, ptr l2) -> void = "mac#g_test_init"
fun fun_c2ats_g_test_subprocess: () -> type_c2ats_gboolean = "mac#g_test_subprocess"
fun fun_c2ats_g_test_run: () -> int = "mac#g_test_run"
fun fun_c2ats_g_test_add_func: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, type_c2ats_GTestFunc) -> void = "mac#g_test_add_func"
fun fun_c2ats_g_test_add_data_func: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, type_c2ats_gconstpointer, type_c2ats_GTestDataFunc) -> void = "mac#g_test_add_data_func"
fun fun_c2ats_g_test_add_data_func_full: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GTestDataFunc, type_c2ats_GDestroyNotify) -> void = "mac#g_test_add_data_func_full"
fun fun_c2ats_g_test_fail: () -> void = "mac#g_test_fail"
fun fun_c2ats_g_test_incomplete: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#g_test_incomplete"
fun fun_c2ats_g_test_skip: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#g_test_skip"
fun fun_c2ats_g_test_failed: () -> type_c2ats_gboolean = "mac#g_test_failed"
fun fun_c2ats_g_test_set_nonfatal_assertions: () -> void = "mac#g_test_set_nonfatal_assertions"
fun fun_c2ats_g_test_message: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> void = "mac#g_test_message"
fun fun_c2ats_g_test_bug_base: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> void = "mac#g_test_bug_base"
fun fun_c2ats_g_test_bug: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> void = "mac#g_test_bug"
fun fun_c2ats_g_test_timer_start: () -> void = "mac#g_test_timer_start"
fun fun_c2ats_g_test_timer_elapsed: () -> double = "mac#g_test_timer_elapsed"
fun fun_c2ats_g_test_timer_last: () -> double = "mac#g_test_timer_last"
fun fun_c2ats_g_test_queue_free: (type_c2ats_gpointer) -> void = "mac#g_test_queue_free"
fun fun_c2ats_g_test_queue_destroy: (type_c2ats_GDestroyNotify, type_c2ats_gpointer) -> void = "mac#g_test_queue_destroy"
typedef type_c2ats_GTestTrapFlags = int
#define enum_c2ats_G_TEST_TRAP_SILENCE_STDOUT 1 << 7
#define enum_c2ats_G_TEST_TRAP_SILENCE_STDERR 1 << 8
#define enum_c2ats_G_TEST_TRAP_INHERIT_STDIN 1 << 9
fun fun_c2ats_g_test_trap_fork: (type_c2ats_guint64, type_c2ats_GTestTrapFlags) -> type_c2ats_gboolean = "mac#g_test_trap_fork"
typedef type_c2ats_GTestSubprocessFlags = int
#define enum_c2ats_G_TEST_SUBPROCESS_INHERIT_STDIN 1 << 0
#define enum_c2ats_G_TEST_SUBPROCESS_INHERIT_STDOUT 1 << 1
#define enum_c2ats_G_TEST_SUBPROCESS_INHERIT_STDERR 1 << 2
fun fun_c2ats_g_test_trap_subprocess: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, type_c2ats_guint64, type_c2ats_GTestSubprocessFlags) -> void = "mac#g_test_trap_subprocess"
fun fun_c2ats_g_test_trap_has_passed: () -> type_c2ats_gboolean = "mac#g_test_trap_has_passed"
fun fun_c2ats_g_test_trap_reached_timeout: () -> type_c2ats_gboolean = "mac#g_test_trap_reached_timeout"
fun fun_c2ats_g_test_rand_int: () -> type_c2ats_gint32 = "mac#g_test_rand_int"
fun fun_c2ats_g_test_rand_int_range: (type_c2ats_gint32, type_c2ats_gint32) -> type_c2ats_gint32 = "mac#g_test_rand_int_range"
fun fun_c2ats_g_test_rand_double: () -> double = "mac#g_test_rand_double"
fun fun_c2ats_g_test_rand_double_range: (double, double) -> double = "mac#g_test_rand_double_range"
fun fun_c2ats_g_test_create_case: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, type_c2ats_gsize, type_c2ats_gconstpointer, type_c2ats_GTestFixtureFunc, type_c2ats_GTestFixtureFunc, type_c2ats_GTestFixtureFunc) -> [l2:addr] (ptr_v_1(type_c2ats_GTestCase, l2) | ptr l2) = "mac#g_test_create_case"
fun fun_c2ats_g_test_create_suite: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTestSuite, l2) | ptr l2) = "mac#g_test_create_suite"
fun fun_c2ats_g_test_get_root: () -> [l1:addr] (ptr_v_1(type_c2ats_GTestSuite, l1) | ptr l1) = "mac#g_test_get_root"
fun fun_c2ats_g_test_suite_add: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTestSuite, l1), !ptr_v_1(type_c2ats_GTestCase, l2) | ptr l1, ptr l2) -> void = "mac#g_test_suite_add"
fun fun_c2ats_g_test_suite_add_suite: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTestSuite, l1), !ptr_v_1(type_c2ats_GTestSuite, l2) | ptr l1, ptr l2) -> void = "mac#g_test_suite_add_suite"
fun fun_c2ats_g_test_run_suite: {l1:addr} (!ptr_v_1(type_c2ats_GTestSuite, l1) | ptr l1) -> int = "mac#g_test_run_suite"
fun fun_c2ats_g_test_trap_assertions: {l1,l2,l3,l4:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3), !ptr_v_1(char, l4) | ptr l1, ptr l2, int, ptr l3, type_c2ats_guint64, ptr l4) -> void = "mac#g_test_trap_assertions"
fun fun_c2ats_g_assertion_message: {l1,l2,l3,l4:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3), !ptr_v_1(char, l4) | ptr l1, ptr l2, int, ptr l3, ptr l4) -> void = "mac#g_assertion_message"
fun fun_c2ats_g_assertion_message_expr: {l1,l2,l3,l4:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3), !ptr_v_1(char, l4) | ptr l1, ptr l2, int, ptr l3, ptr l4) -> void = "mac#g_assertion_message_expr"
fun fun_c2ats_g_assertion_message_cmpstr: {l1,l2,l3,l4,l5,l6,l7:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3), !ptr_v_1(char, l4), !ptr_v_1(char, l5), !ptr_v_1(char, l6), !ptr_v_1(char, l7) | ptr l1, ptr l2, int, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7) -> void = "mac#g_assertion_message_cmpstr"
fun fun_c2ats_g_assertion_message_cmpnum: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3), !ptr_v_1(char, l4), !ptr_v_1(char, l5) | ptr l1, ptr l2, int, ptr l3, ptr l4, ldouble, ptr l5, ldouble, char) -> void = "mac#g_assertion_message_cmpnum"
fun fun_c2ats_g_assertion_message_error: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3), !ptr_v_1(char, l4), !ptr_v_1(type_c2ats_GError, l5) | ptr l1, ptr l2, int, ptr l3, ptr l4, ptr l5, type_c2ats_GQuark, int) -> void = "mac#g_assertion_message_error"
fun fun_c2ats_g_test_add_vtable: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, type_c2ats_gsize, type_c2ats_gconstpointer, type_c2ats_GTestFixtureFunc, type_c2ats_GTestFixtureFunc, type_c2ats_GTestFixtureFunc) -> void = "mac#g_test_add_vtable"
typedef struct_c2ats_anon_35028 = $extype_struct"struct { gboolean test_initialized; gboolean test_quick; gboolean test_perf; gboolean test_verbose; gboolean test_quiet; gboolean test_undefined; }" of {
  test_initialized = type_c2ats_gboolean,
  test_quick = type_c2ats_gboolean,
  test_perf = type_c2ats_gboolean,
  test_verbose = type_c2ats_gboolean,
  test_quiet = type_c2ats_gboolean,
  test_undefined = type_c2ats_gboolean
}
typedef type_c2ats_GTestConfig = struct_c2ats_anon_35028
macdef takeout_c2ats_g_test_config_vars = $extval([l1,l1_1:addr] (ptr_v_2(type_c2ats_GTestConfig, l1, l1_1) | ptr l1), "&g_test_config_vars")
praxi addback_c2ats_g_test_config_vars {l1,l1_1:addr} (ptr_v_2(type_c2ats_GTestConfig, l1, l1_1) | ptr l1): void
typedef type_c2ats_GTestLogType = int
#define enum_c2ats_G_TEST_LOG_NONE 0
#define enum_c2ats_G_TEST_LOG_ERROR 1
#define enum_c2ats_G_TEST_LOG_START_BINARY 2
#define enum_c2ats_G_TEST_LOG_LIST_CASE 3
#define enum_c2ats_G_TEST_LOG_SKIP_CASE 4
#define enum_c2ats_G_TEST_LOG_START_CASE 5
#define enum_c2ats_G_TEST_LOG_STOP_CASE 6
#define enum_c2ats_G_TEST_LOG_MIN_RESULT 7
#define enum_c2ats_G_TEST_LOG_MAX_RESULT 8
#define enum_c2ats_G_TEST_LOG_MESSAGE 9
#define enum_c2ats_G_TEST_LOG_START_SUITE 10
#define enum_c2ats_G_TEST_LOG_STOP_SUITE 11
typedef struct_c2ats_anon_35089 = $extype_struct"struct { GTestLogType log_type; guint n_strings; gchar** strings; guint n_nums; long double* nums; }" of {
  log_type = type_c2ats_GTestLogType,
  n_strings = type_c2ats_guint,
  strings = ptr (* cPtr0(cPtr0(type_c2ats_gchar)) *),
  n_nums = type_c2ats_guint,
  nums = ptr (* cPtr0(ldouble) *)
}
typedef type_c2ats_GTestLogMsg = struct_c2ats_anon_35089
typedef struct_c2ats_anon_35107 = $extype_struct"struct { GString* data; GSList* msgs; }" of {
  data = ptr (* cPtr0(type_c2ats_GString) *),
  msgs = ptr (* cPtr0(type_c2ats_GSList) *)
}
typedef type_c2ats_GTestLogBuffer = struct_c2ats_anon_35107
fun fun_c2ats_g_test_log_type_name: (type_c2ats_GTestLogType) -> [l1:addr] (ptr_v_1(char, l1) | ptr l1) = "mac#g_test_log_type_name"
fun fun_c2ats_g_test_log_buffer_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GTestLogBuffer, l1) | ptr l1) = "mac#g_test_log_buffer_new"
fun fun_c2ats_g_test_log_buffer_free: {l1:addr} (!ptr_v_1(type_c2ats_GTestLogBuffer, l1) | ptr l1) -> void = "mac#g_test_log_buffer_free"
fun fun_c2ats_g_test_log_buffer_push: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTestLogBuffer, l1), !ptr_v_1(type_c2ats_guint8, l2) | ptr l1, type_c2ats_guint, ptr l2) -> void = "mac#g_test_log_buffer_push"
fun fun_c2ats_g_test_log_buffer_pop: {l1:addr} (!ptr_v_1(type_c2ats_GTestLogBuffer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTestLogMsg, l2) | ptr l2) = "mac#g_test_log_buffer_pop"
fun fun_c2ats_g_test_log_msg_free: {l1:addr} (!ptr_v_1(type_c2ats_GTestLogMsg, l1) | ptr l1) -> void = "mac#g_test_log_msg_free"
typedef type_c2ats_GTestLogFatalFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GLogLevelFlags, ptr l2, type_c2ats_gpointer) -> type_c2ats_gboolean
fun fun_c2ats_g_test_log_set_fatal_handler: (type_c2ats_GTestLogFatalFunc, type_c2ats_gpointer) -> void = "mac#g_test_log_set_fatal_handler"
fun fun_c2ats_g_test_expect_message: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GLogLevelFlags, ptr l2) -> void = "mac#g_test_expect_message"
fun fun_c2ats_g_test_assert_expected_messages_internal: {l1,l2,l3:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3) | ptr l1, ptr l2, int, ptr l3) -> void = "mac#g_test_assert_expected_messages_internal"
typedef type_c2ats_GTestFileType = int
#define enum_c2ats_G_TEST_DIST 0
#define enum_c2ats_G_TEST_BUILT 1
fun fun_c2ats_g_test_build_filename: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_GTestFileType, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_test_build_filename"
fun fun_c2ats_g_test_get_dir: (type_c2ats_GTestFileType) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_test_get_dir"
fun fun_c2ats_g_test_get_filename: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_GTestFileType, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_test_get_filename"
// File: /usr/include/glib-2.0/glib/gthreadpool.h
abst@ype struct_c2ats__GThreadPool // FIXME! Forward declaration.
typedef type_c2ats_GThreadPool = struct_c2ats__GThreadPool
typedef struct_c2ats__GThreadPool = $extype_struct"struct _GThreadPool" of {
  func = type_c2ats_GFunc,
  user_data = type_c2ats_gpointer,
  exclusive = type_c2ats_gboolean
}
fun fun_c2ats_g_thread_pool_new: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GError, l1, l1_1) | type_c2ats_GFunc, type_c2ats_gpointer, type_c2ats_gint, type_c2ats_gboolean, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GThreadPool, l2) | ptr l2) = "mac#g_thread_pool_new"
fun fun_c2ats_g_thread_pool_free: {l1:addr} (!ptr_v_1(type_c2ats_GThreadPool, l1) | ptr l1, type_c2ats_gboolean, type_c2ats_gboolean) -> void = "mac#g_thread_pool_free"
fun fun_c2ats_g_thread_pool_push: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GThreadPool, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_gpointer, ptr l2) -> type_c2ats_gboolean = "mac#g_thread_pool_push"
fun fun_c2ats_g_thread_pool_unprocessed: {l1:addr} (!ptr_v_1(type_c2ats_GThreadPool, l1) | ptr l1) -> type_c2ats_guint = "mac#g_thread_pool_unprocessed"
fun fun_c2ats_g_thread_pool_set_sort_function: {l1:addr} (!ptr_v_1(type_c2ats_GThreadPool, l1) | ptr l1, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> void = "mac#g_thread_pool_set_sort_function"
fun fun_c2ats_g_thread_pool_move_to_front: {l1:addr} (!ptr_v_1(type_c2ats_GThreadPool, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#g_thread_pool_move_to_front"
fun fun_c2ats_g_thread_pool_set_max_threads: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GThreadPool, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_gint, ptr l2) -> type_c2ats_gboolean = "mac#g_thread_pool_set_max_threads"
fun fun_c2ats_g_thread_pool_get_max_threads: {l1:addr} (!ptr_v_1(type_c2ats_GThreadPool, l1) | ptr l1) -> type_c2ats_gint = "mac#g_thread_pool_get_max_threads"
fun fun_c2ats_g_thread_pool_get_num_threads: {l1:addr} (!ptr_v_1(type_c2ats_GThreadPool, l1) | ptr l1) -> type_c2ats_guint = "mac#g_thread_pool_get_num_threads"
fun fun_c2ats_g_thread_pool_set_max_unused_threads: (type_c2ats_gint) -> void = "mac#g_thread_pool_set_max_unused_threads"
fun fun_c2ats_g_thread_pool_get_max_unused_threads: () -> type_c2ats_gint = "mac#g_thread_pool_get_max_unused_threads"
fun fun_c2ats_g_thread_pool_get_num_unused_threads: () -> type_c2ats_guint = "mac#g_thread_pool_get_num_unused_threads"
fun fun_c2ats_g_thread_pool_stop_unused_threads: () -> void = "mac#g_thread_pool_stop_unused_threads"
fun fun_c2ats_g_thread_pool_set_max_idle_time: (type_c2ats_guint) -> void = "mac#g_thread_pool_set_max_idle_time"
fun fun_c2ats_g_thread_pool_get_max_idle_time: () -> type_c2ats_guint = "mac#g_thread_pool_get_max_idle_time"
// File: /usr/include/glib-2.0/glib/gtimer.h
abst@ype struct_c2ats__GTimer // FIXME! Forward declaration.
typedef type_c2ats_GTimer = struct_c2ats__GTimer
fun fun_c2ats_g_timer_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GTimer, l1) | ptr l1) = "mac#g_timer_new"
fun fun_c2ats_g_timer_destroy: {l1:addr} (!ptr_v_1(type_c2ats_GTimer, l1) | ptr l1) -> void = "mac#g_timer_destroy"
fun fun_c2ats_g_timer_start: {l1:addr} (!ptr_v_1(type_c2ats_GTimer, l1) | ptr l1) -> void = "mac#g_timer_start"
fun fun_c2ats_g_timer_stop: {l1:addr} (!ptr_v_1(type_c2ats_GTimer, l1) | ptr l1) -> void = "mac#g_timer_stop"
fun fun_c2ats_g_timer_reset: {l1:addr} (!ptr_v_1(type_c2ats_GTimer, l1) | ptr l1) -> void = "mac#g_timer_reset"
fun fun_c2ats_g_timer_continue: {l1:addr} (!ptr_v_1(type_c2ats_GTimer, l1) | ptr l1) -> void = "mac#g_timer_continue"
fun fun_c2ats_g_timer_elapsed: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTimer, l1), !ptr_v_1(type_c2ats_gulong, l2) | ptr l1, ptr l2) -> type_c2ats_gdouble = "mac#g_timer_elapsed"
fun fun_c2ats_g_usleep: (type_c2ats_gulong) -> void = "mac#g_usleep"
fun fun_c2ats_g_time_val_add: {l1:addr} (!ptr_v_1(type_c2ats_GTimeVal, l1) | ptr l1, type_c2ats_glong) -> void = "mac#g_time_val_add"
fun fun_c2ats_g_time_val_from_iso8601: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GTimeVal, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_time_val_from_iso8601"
fun fun_c2ats_g_time_val_to_iso8601: {l1:addr} (!ptr_v_1(type_c2ats_GTimeVal, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_time_val_to_iso8601"
// File: /usr/include/glib-2.0/glib/gtrashstack.h
abst@ype struct_c2ats__GTrashStack // FIXME! Forward declaration.
typedef type_c2ats_GTrashStack = struct_c2ats__GTrashStack
typedef struct_c2ats__GTrashStack = $extype_struct"struct _GTrashStack" of {
  next = ptr (* cPtr0(type_c2ats_GTrashStack) *)
}
fun fun_c2ats_g_trash_stack_push: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTrashStack, l1, l1_1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_trash_stack_push"
fun fun_c2ats_g_trash_stack_pop: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTrashStack, l1, l1_1) | ptr l1) -> type_c2ats_gpointer = "mac#g_trash_stack_pop"
fun fun_c2ats_g_trash_stack_peek: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTrashStack, l1, l1_1) | ptr l1) -> type_c2ats_gpointer = "mac#g_trash_stack_peek"
fun fun_c2ats_g_trash_stack_height: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTrashStack, l1, l1_1) | ptr l1) -> type_c2ats_guint = "mac#g_trash_stack_height"
// File: /usr/include/glib-2.0/glib/gtree.h
abst@ype struct_c2ats__GTree // FIXME! Forward declaration.
typedef type_c2ats_GTree = struct_c2ats__GTree
typedef type_c2ats_GTraverseFunc = (type_c2ats_gpointer, type_c2ats_gpointer, type_c2ats_gpointer) -> type_c2ats_gboolean
fun fun_c2ats_g_tree_new: (type_c2ats_GCompareFunc) -> [l1:addr] (ptr_v_1(type_c2ats_GTree, l1) | ptr l1) = "mac#g_tree_new"
fun fun_c2ats_g_tree_new_with_data: (type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> [l1:addr] (ptr_v_1(type_c2ats_GTree, l1) | ptr l1) = "mac#g_tree_new_with_data"
fun fun_c2ats_g_tree_new_full: (type_c2ats_GCompareDataFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify, type_c2ats_GDestroyNotify) -> [l1:addr] (ptr_v_1(type_c2ats_GTree, l1) | ptr l1) = "mac#g_tree_new_full"
fun fun_c2ats_g_tree_ref: {l1:addr} (!ptr_v_1(type_c2ats_GTree, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTree, l2) | ptr l2) = "mac#g_tree_ref"
fun fun_c2ats_g_tree_unref: {l1:addr} (!ptr_v_1(type_c2ats_GTree, l1) | ptr l1) -> void = "mac#g_tree_unref"
fun fun_c2ats_g_tree_destroy: {l1:addr} (!ptr_v_1(type_c2ats_GTree, l1) | ptr l1) -> void = "mac#g_tree_destroy"
fun fun_c2ats_g_tree_insert: {l1:addr} (!ptr_v_1(type_c2ats_GTree, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_tree_insert"
fun fun_c2ats_g_tree_replace: {l1:addr} (!ptr_v_1(type_c2ats_GTree, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_tree_replace"
fun fun_c2ats_g_tree_remove: {l1:addr} (!ptr_v_1(type_c2ats_GTree, l1) | ptr l1, type_c2ats_gconstpointer) -> type_c2ats_gboolean = "mac#g_tree_remove"
fun fun_c2ats_g_tree_steal: {l1:addr} (!ptr_v_1(type_c2ats_GTree, l1) | ptr l1, type_c2ats_gconstpointer) -> type_c2ats_gboolean = "mac#g_tree_steal"
fun fun_c2ats_g_tree_lookup: {l1:addr} (!ptr_v_1(type_c2ats_GTree, l1) | ptr l1, type_c2ats_gconstpointer) -> type_c2ats_gpointer = "mac#g_tree_lookup"
fun fun_c2ats_g_tree_lookup_extended: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GTree, l1), !ptr_v_1(type_c2ats_gpointer, l2), !ptr_v_1(type_c2ats_gpointer, l3) | ptr l1, type_c2ats_gconstpointer, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_tree_lookup_extended"
fun fun_c2ats_g_tree_foreach: {l1:addr} (!ptr_v_1(type_c2ats_GTree, l1) | ptr l1, type_c2ats_GTraverseFunc, type_c2ats_gpointer) -> void = "mac#g_tree_foreach"
fun fun_c2ats_g_tree_traverse: {l1:addr} (!ptr_v_1(type_c2ats_GTree, l1) | ptr l1, type_c2ats_GTraverseFunc, type_c2ats_GTraverseType, type_c2ats_gpointer) -> void = "mac#g_tree_traverse"
fun fun_c2ats_g_tree_search: {l1:addr} (!ptr_v_1(type_c2ats_GTree, l1) | ptr l1, type_c2ats_GCompareFunc, type_c2ats_gconstpointer) -> type_c2ats_gpointer = "mac#g_tree_search"
fun fun_c2ats_g_tree_height: {l1:addr} (!ptr_v_1(type_c2ats_GTree, l1) | ptr l1) -> type_c2ats_gint = "mac#g_tree_height"
fun fun_c2ats_g_tree_nnodes: {l1:addr} (!ptr_v_1(type_c2ats_GTree, l1) | ptr l1) -> type_c2ats_gint = "mac#g_tree_nnodes"
// File: /usr/include/glib-2.0/glib/gurifuncs.h
fun fun_c2ats_g_uri_unescape_string: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(char, l3) | ptr l3) = "mac#g_uri_unescape_string"
fun fun_c2ats_g_uri_unescape_segment: {l1,l2,l3:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(char, l4) | ptr l4) = "mac#g_uri_unescape_segment"
fun fun_c2ats_g_uri_parse_scheme: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_uri_parse_scheme"
fun fun_c2ats_g_uri_escape_string: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> [l3:addr] (ptr_v_1(char, l3) | ptr l3) = "mac#g_uri_escape_string"
// File: /usr/include/glib-2.0/glib/gversion.h
macdef takeout_c2ats_glib_major_version = $extval([l1:addr] (ptr_v_1(type_c2ats_guint, l1) | ptr l1), "&glib_major_version")
praxi addback_c2ats_glib_major_version {l1:addr} (ptr_v_1(type_c2ats_guint, l1) | ptr l1): void
macdef takeout_c2ats_glib_minor_version = $extval([l1:addr] (ptr_v_1(type_c2ats_guint, l1) | ptr l1), "&glib_minor_version")
praxi addback_c2ats_glib_minor_version {l1:addr} (ptr_v_1(type_c2ats_guint, l1) | ptr l1): void
macdef takeout_c2ats_glib_micro_version = $extval([l1:addr] (ptr_v_1(type_c2ats_guint, l1) | ptr l1), "&glib_micro_version")
praxi addback_c2ats_glib_micro_version {l1:addr} (ptr_v_1(type_c2ats_guint, l1) | ptr l1): void
macdef takeout_c2ats_glib_interface_age = $extval([l1:addr] (ptr_v_1(type_c2ats_guint, l1) | ptr l1), "&glib_interface_age")
praxi addback_c2ats_glib_interface_age {l1:addr} (ptr_v_1(type_c2ats_guint, l1) | ptr l1): void
macdef takeout_c2ats_glib_binary_age = $extval([l1:addr] (ptr_v_1(type_c2ats_guint, l1) | ptr l1), "&glib_binary_age")
praxi addback_c2ats_glib_binary_age {l1:addr} (ptr_v_1(type_c2ats_guint, l1) | ptr l1): void
fun fun_c2ats_glib_check_version: (type_c2ats_guint, type_c2ats_guint, type_c2ats_guint) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#glib_check_version"
// File: /usr/include/glib-2.0/glib/deprecated/gallocator.h
abst@ype struct_c2ats__GAllocator // FIXME! Forward declaration.
typedef type_c2ats_GAllocator = struct_c2ats__GAllocator
abst@ype struct_c2ats__GMemChunk // FIXME! Forward declaration.
typedef type_c2ats_GMemChunk = struct_c2ats__GMemChunk
fun fun_c2ats_g_mem_chunk_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gint, type_c2ats_gsize, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GMemChunk, l2) | ptr l2) = "mac#g_mem_chunk_new"
fun fun_c2ats_g_mem_chunk_destroy: {l1:addr} (!ptr_v_1(type_c2ats_GMemChunk, l1) | ptr l1) -> void = "mac#g_mem_chunk_destroy"
fun fun_c2ats_g_mem_chunk_alloc: {l1:addr} (!ptr_v_1(type_c2ats_GMemChunk, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_mem_chunk_alloc"
fun fun_c2ats_g_mem_chunk_alloc0: {l1:addr} (!ptr_v_1(type_c2ats_GMemChunk, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_mem_chunk_alloc0"
fun fun_c2ats_g_mem_chunk_free: {l1:addr} (!ptr_v_1(type_c2ats_GMemChunk, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_mem_chunk_free"
fun fun_c2ats_g_mem_chunk_clean: {l1:addr} (!ptr_v_1(type_c2ats_GMemChunk, l1) | ptr l1) -> void = "mac#g_mem_chunk_clean"
fun fun_c2ats_g_mem_chunk_reset: {l1:addr} (!ptr_v_1(type_c2ats_GMemChunk, l1) | ptr l1) -> void = "mac#g_mem_chunk_reset"
fun fun_c2ats_g_mem_chunk_print: {l1:addr} (!ptr_v_1(type_c2ats_GMemChunk, l1) | ptr l1) -> void = "mac#g_mem_chunk_print"
fun fun_c2ats_g_mem_chunk_info: () -> void = "mac#g_mem_chunk_info"
fun fun_c2ats_g_blow_chunks: () -> void = "mac#g_blow_chunks"
fun fun_c2ats_g_allocator_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GAllocator, l2) | ptr l2) = "mac#g_allocator_new"
fun fun_c2ats_g_allocator_free: {l1:addr} (!ptr_v_1(type_c2ats_GAllocator, l1) | ptr l1) -> void = "mac#g_allocator_free"
fun fun_c2ats_g_list_push_allocator: {l1:addr} (!ptr_v_1(type_c2ats_GAllocator, l1) | ptr l1) -> void = "mac#g_list_push_allocator"
fun fun_c2ats_g_list_pop_allocator: () -> void = "mac#g_list_pop_allocator"
fun fun_c2ats_g_slist_push_allocator: {l1:addr} (!ptr_v_1(type_c2ats_GAllocator, l1) | ptr l1) -> void = "mac#g_slist_push_allocator"
fun fun_c2ats_g_slist_pop_allocator: () -> void = "mac#g_slist_pop_allocator"
fun fun_c2ats_g_node_push_allocator: {l1:addr} (!ptr_v_1(type_c2ats_GAllocator, l1) | ptr l1) -> void = "mac#g_node_push_allocator"
fun fun_c2ats_g_node_pop_allocator: () -> void = "mac#g_node_pop_allocator"
// File: /usr/include/glib-2.0/glib/deprecated/gcache.h
abst@ype struct_c2ats__GCache // FIXME! Forward declaration.
typedef type_c2ats_GCache = struct_c2ats__GCache
typedef type_c2ats_GCacheNewFunc = (type_c2ats_gpointer) -> type_c2ats_gpointer
typedef type_c2ats_GCacheDupFunc = (type_c2ats_gpointer) -> type_c2ats_gpointer
typedef type_c2ats_GCacheDestroyFunc = (type_c2ats_gpointer) -> void
fun fun_c2ats_g_cache_new: (type_c2ats_GCacheNewFunc, type_c2ats_GCacheDestroyFunc, type_c2ats_GCacheDupFunc, type_c2ats_GCacheDestroyFunc, type_c2ats_GHashFunc, type_c2ats_GHashFunc, type_c2ats_GEqualFunc) -> [l1:addr] (ptr_v_1(type_c2ats_GCache, l1) | ptr l1) = "mac#g_cache_new"
fun fun_c2ats_g_cache_destroy: {l1:addr} (!ptr_v_1(type_c2ats_GCache, l1) | ptr l1) -> void = "mac#g_cache_destroy"
fun fun_c2ats_g_cache_insert: {l1:addr} (!ptr_v_1(type_c2ats_GCache, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gpointer = "mac#g_cache_insert"
fun fun_c2ats_g_cache_remove: {l1:addr} (!ptr_v_1(type_c2ats_GCache, l1) | ptr l1, type_c2ats_gconstpointer) -> void = "mac#g_cache_remove"
fun fun_c2ats_g_cache_key_foreach: {l1:addr} (!ptr_v_1(type_c2ats_GCache, l1) | ptr l1, type_c2ats_GHFunc, type_c2ats_gpointer) -> void = "mac#g_cache_key_foreach"
fun fun_c2ats_g_cache_value_foreach: {l1:addr} (!ptr_v_1(type_c2ats_GCache, l1) | ptr l1, type_c2ats_GHFunc, type_c2ats_gpointer) -> void = "mac#g_cache_value_foreach"
// File: /usr/include/glib-2.0/glib/deprecated/gcompletion.h
abst@ype struct_c2ats__GCompletion // FIXME! Forward declaration.
typedef type_c2ats_GCompletion = struct_c2ats__GCompletion
typedef type_c2ats_GCompletionFunc = (type_c2ats_gpointer) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1)
typedef type_c2ats_GCompletionStrncmpFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gsize) -> type_c2ats_gint
typedef struct_c2ats__GCompletion = $extype_struct"struct _GCompletion" of {
  items = ptr (* cPtr0(type_c2ats_GList) *),
  func = type_c2ats_GCompletionFunc,
  cache = ptr (* cPtr0(type_c2ats_GList) *),
  strncmp_func = type_c2ats_GCompletionStrncmpFunc
}
fun fun_c2ats_g_completion_new: (type_c2ats_GCompletionFunc) -> [l1:addr] (ptr_v_1(type_c2ats_GCompletion, l1) | ptr l1) = "mac#g_completion_new"
fun fun_c2ats_g_completion_add_items: {l1,l2:addr} (!ptr_v_1(type_c2ats_GCompletion, l1), !ptr_v_1(type_c2ats_GList, l2) | ptr l1, ptr l2) -> void = "mac#g_completion_add_items"
fun fun_c2ats_g_completion_remove_items: {l1,l2:addr} (!ptr_v_1(type_c2ats_GCompletion, l1), !ptr_v_1(type_c2ats_GList, l2) | ptr l1, ptr l2) -> void = "mac#g_completion_remove_items"
fun fun_c2ats_g_completion_clear_items: {l1:addr} (!ptr_v_1(type_c2ats_GCompletion, l1) | ptr l1) -> void = "mac#g_completion_clear_items"
fun fun_c2ats_g_completion_complete: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GCompletion, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GList, l4) | ptr l4) = "mac#g_completion_complete"
fun fun_c2ats_g_completion_complete_utf8: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GCompletion, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GList, l4) | ptr l4) = "mac#g_completion_complete_utf8"
fun fun_c2ats_g_completion_set_compare: {l1:addr} (!ptr_v_1(type_c2ats_GCompletion, l1) | ptr l1, type_c2ats_GCompletionStrncmpFunc) -> void = "mac#g_completion_set_compare"
fun fun_c2ats_g_completion_free: {l1:addr} (!ptr_v_1(type_c2ats_GCompletion, l1) | ptr l1) -> void = "mac#g_completion_free"
// File: /usr/include/glib-2.0/glib/deprecated/grel.h
abst@ype struct_c2ats__GRelation // FIXME! Forward declaration.
typedef type_c2ats_GRelation = struct_c2ats__GRelation
abst@ype struct_c2ats__GTuples // FIXME! Forward declaration.
typedef type_c2ats_GTuples = struct_c2ats__GTuples
typedef struct_c2ats__GTuples = $extype_struct"struct _GTuples" of {
  len = type_c2ats_guint
}
fun fun_c2ats_g_relation_new: (type_c2ats_gint) -> [l1:addr] (ptr_v_1(type_c2ats_GRelation, l1) | ptr l1) = "mac#g_relation_new"
fun fun_c2ats_g_relation_destroy: {l1:addr} (!ptr_v_1(type_c2ats_GRelation, l1) | ptr l1) -> void = "mac#g_relation_destroy"
fun fun_c2ats_g_relation_index: {l1:addr} (!ptr_v_1(type_c2ats_GRelation, l1) | ptr l1, type_c2ats_gint, type_c2ats_GHashFunc, type_c2ats_GEqualFunc) -> void = "mac#g_relation_index"
fun fun_c2ats_g_relation_insert: {l1:addr} (!ptr_v_1(type_c2ats_GRelation, l1) | ptr l1) -> void = "mac#g_relation_insert"
fun fun_c2ats_g_relation_delete: {l1:addr} (!ptr_v_1(type_c2ats_GRelation, l1) | ptr l1, type_c2ats_gconstpointer, type_c2ats_gint) -> type_c2ats_gint = "mac#g_relation_delete"
fun fun_c2ats_g_relation_select: {l1:addr} (!ptr_v_1(type_c2ats_GRelation, l1) | ptr l1, type_c2ats_gconstpointer, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GTuples, l2) | ptr l2) = "mac#g_relation_select"
fun fun_c2ats_g_relation_count: {l1:addr} (!ptr_v_1(type_c2ats_GRelation, l1) | ptr l1, type_c2ats_gconstpointer, type_c2ats_gint) -> type_c2ats_gint = "mac#g_relation_count"
fun fun_c2ats_g_relation_exists: {l1:addr} (!ptr_v_1(type_c2ats_GRelation, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_relation_exists"
fun fun_c2ats_g_relation_print: {l1:addr} (!ptr_v_1(type_c2ats_GRelation, l1) | ptr l1) -> void = "mac#g_relation_print"
fun fun_c2ats_g_tuples_destroy: {l1:addr} (!ptr_v_1(type_c2ats_GTuples, l1) | ptr l1) -> void = "mac#g_tuples_destroy"
fun fun_c2ats_g_tuples_index: {l1:addr} (!ptr_v_1(type_c2ats_GTuples, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gpointer = "mac#g_tuples_index"
// File: /usr/include/glib-2.0/glib/deprecated/gthread.h
typedef type_c2ats_GThreadPriority = int
#define enum_c2ats_G_THREAD_PRIORITY_LOW 0
#define enum_c2ats_G_THREAD_PRIORITY_NORMAL 1
#define enum_c2ats_G_THREAD_PRIORITY_HIGH 2
#define enum_c2ats_G_THREAD_PRIORITY_URGENT 3
typedef struct_c2ats__GThread = $extype_struct"struct _GThread" of {
  func = type_c2ats_GThreadFunc,
  data = type_c2ats_gpointer,
  joinable = type_c2ats_gboolean,
  priority = type_c2ats_GThreadPriority
}
abst@ype struct_c2ats__GThreadFunctions // FIXME! Forward declaration.
typedef type_c2ats_GThreadFunctions = struct_c2ats__GThreadFunctions
typedef struct_c2ats__GThreadFunctions = $extype_struct"struct _GThreadFunctions" of {
  mutex_new = () -> [l1:addr] (ptr_v_1(type_c2ats_GMutex, l1) | ptr l1),
  mutex_lock = {l1:addr} (!ptr_v_1(type_c2ats_GMutex, l1) | ptr l1) -> void,
  mutex_trylock = {l1:addr} (!ptr_v_1(type_c2ats_GMutex, l1) | ptr l1) -> type_c2ats_gboolean,
  mutex_unlock = {l1:addr} (!ptr_v_1(type_c2ats_GMutex, l1) | ptr l1) -> void,
  mutex_free = {l1:addr} (!ptr_v_1(type_c2ats_GMutex, l1) | ptr l1) -> void,
  cond_new = () -> [l1:addr] (ptr_v_1(type_c2ats_GCond, l1) | ptr l1),
  cond_signal = {l1:addr} (!ptr_v_1(type_c2ats_GCond, l1) | ptr l1) -> void,
  cond_broadcast = {l1:addr} (!ptr_v_1(type_c2ats_GCond, l1) | ptr l1) -> void,
  cond_wait = {l1,l2:addr} (!ptr_v_1(type_c2ats_GCond, l1), !ptr_v_1(type_c2ats_GMutex, l2) | ptr l1, ptr l2) -> void,
  cond_timed_wait = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GCond, l1), !ptr_v_1(type_c2ats_GMutex, l2), !ptr_v_1(type_c2ats_GTimeVal, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  cond_free = {l1:addr} (!ptr_v_1(type_c2ats_GCond, l1) | ptr l1) -> void,
  private_new = (type_c2ats_GDestroyNotify) -> [l1:addr] (ptr_v_1(type_c2ats_GPrivate, l1) | ptr l1),
  private_get = {l1:addr} (!ptr_v_1(type_c2ats_GPrivate, l1) | ptr l1) -> type_c2ats_gpointer,
  private_set = {l1:addr} (!ptr_v_1(type_c2ats_GPrivate, l1) | ptr l1, type_c2ats_gpointer) -> void,
  thread_create = {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GError, l1, l1_1) | type_c2ats_GThreadFunc, type_c2ats_gpointer, type_c2ats_gulong, type_c2ats_gboolean, type_c2ats_gboolean, type_c2ats_GThreadPriority, type_c2ats_gpointer, ptr l1) -> void,
  thread_yield = () -> void,
  thread_join = (type_c2ats_gpointer) -> void,
  thread_exit = () -> void,
  thread_set_priority = (type_c2ats_gpointer, type_c2ats_GThreadPriority) -> void,
  thread_self = (type_c2ats_gpointer) -> void,
  thread_equal = (type_c2ats_gpointer, type_c2ats_gpointer) -> type_c2ats_gboolean
}
macdef takeout_c2ats_g_thread_functions_for_glib_use = $extval([l1:addr] (ptr_v_1(type_c2ats_GThreadFunctions, l1) | ptr l1), "&g_thread_functions_for_glib_use")
praxi addback_c2ats_g_thread_functions_for_glib_use {l1:addr} (ptr_v_1(type_c2ats_GThreadFunctions, l1) | ptr l1): void
macdef takeout_c2ats_g_thread_use_default_impl = $extval([l1:addr] (ptr_v_1(type_c2ats_gboolean, l1) | ptr l1), "&g_thread_use_default_impl")
praxi addback_c2ats_g_thread_use_default_impl {l1:addr} (ptr_v_1(type_c2ats_gboolean, l1) | ptr l1): void
macdef takeout_c2ats_g_thread_gettime = $extval([l1:addr] (ptr_v_1(() -> type_c2ats_guint64, l1) | ptr l1), "&g_thread_gettime")
praxi addback_c2ats_g_thread_gettime {l1:addr} (ptr_v_1(() -> type_c2ats_guint64, l1) | ptr l1): void
fun fun_c2ats_g_thread_create: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GError, l1, l1_1) | type_c2ats_GThreadFunc, type_c2ats_gpointer, type_c2ats_gboolean, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GThread, l2) | ptr l2) = "mac#g_thread_create"
fun fun_c2ats_g_thread_create_full: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GError, l1, l1_1) | type_c2ats_GThreadFunc, type_c2ats_gpointer, type_c2ats_gulong, type_c2ats_gboolean, type_c2ats_gboolean, type_c2ats_GThreadPriority, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GThread, l2) | ptr l2) = "mac#g_thread_create_full"
fun fun_c2ats_g_thread_set_priority: {l1:addr} (!ptr_v_1(type_c2ats_GThread, l1) | ptr l1, type_c2ats_GThreadPriority) -> void = "mac#g_thread_set_priority"
fun fun_c2ats_g_thread_foreach: (type_c2ats_GFunc, type_c2ats_gpointer) -> void = "mac#g_thread_foreach"
abst@ype type_c2ats_pthread_mutex_t // FIXME! Forward declaration.
typedef struct_c2ats_anon_40086 = $extype_struct"struct { GMutex* mutex; pthread_mutex_t unused; }" of {
  mutex = ptr (* cPtr0(type_c2ats_GMutex) *),
  unused = type_c2ats_pthread_mutex_t
}
typedef type_c2ats_GStaticMutex = struct_c2ats_anon_40086
fun fun_c2ats_g_static_mutex_init: {l1:addr} (!ptr_v_1(type_c2ats_GStaticMutex, l1) | ptr l1) -> void = "mac#g_static_mutex_init"
fun fun_c2ats_g_static_mutex_free: {l1:addr} (!ptr_v_1(type_c2ats_GStaticMutex, l1) | ptr l1) -> void = "mac#g_static_mutex_free"
fun fun_c2ats_g_static_mutex_get_mutex_impl: {l1:addr} (!ptr_v_1(type_c2ats_GStaticMutex, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMutex, l2) | ptr l2) = "mac#g_static_mutex_get_mutex_impl"
abst@ype struct_c2ats__GStaticRecMutex // FIXME! Forward declaration.
typedef type_c2ats_GStaticRecMutex = struct_c2ats__GStaticRecMutex
abst@ype type_c2ats_pthread_t // FIXME! Forward declaration.
typedef union_c2ats_anon_40166 = $extype_struct"union { pthread_t owner; gdouble dummy; }" of {
  owner = type_c2ats_pthread_t,
  dummy = type_c2ats_gdouble
}
typedef struct_c2ats__GStaticRecMutex = $extype_struct"struct _GStaticRecMutex" of {
  mutex = type_c2ats_GStaticMutex,
  depth = type_c2ats_guint,
  unused = union_c2ats_anon_40166
}
fun fun_c2ats_g_static_rec_mutex_init: {l1:addr} (!ptr_v_1(type_c2ats_GStaticRecMutex, l1) | ptr l1) -> void = "mac#g_static_rec_mutex_init"
fun fun_c2ats_g_static_rec_mutex_lock: {l1:addr} (!ptr_v_1(type_c2ats_GStaticRecMutex, l1) | ptr l1) -> void = "mac#g_static_rec_mutex_lock"
fun fun_c2ats_g_static_rec_mutex_trylock: {l1:addr} (!ptr_v_1(type_c2ats_GStaticRecMutex, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_static_rec_mutex_trylock"
fun fun_c2ats_g_static_rec_mutex_unlock: {l1:addr} (!ptr_v_1(type_c2ats_GStaticRecMutex, l1) | ptr l1) -> void = "mac#g_static_rec_mutex_unlock"
fun fun_c2ats_g_static_rec_mutex_lock_full: {l1:addr} (!ptr_v_1(type_c2ats_GStaticRecMutex, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_static_rec_mutex_lock_full"
fun fun_c2ats_g_static_rec_mutex_unlock_full: {l1:addr} (!ptr_v_1(type_c2ats_GStaticRecMutex, l1) | ptr l1) -> type_c2ats_guint = "mac#g_static_rec_mutex_unlock_full"
fun fun_c2ats_g_static_rec_mutex_free: {l1:addr} (!ptr_v_1(type_c2ats_GStaticRecMutex, l1) | ptr l1) -> void = "mac#g_static_rec_mutex_free"
abst@ype struct_c2ats__GStaticRWLock // FIXME! Forward declaration.
typedef type_c2ats_GStaticRWLock = struct_c2ats__GStaticRWLock
typedef struct_c2ats__GStaticRWLock = $extype_struct"struct _GStaticRWLock" of {
  mutex = type_c2ats_GStaticMutex,
  read_cond = ptr (* cPtr0(type_c2ats_GCond) *),
  write_cond = ptr (* cPtr0(type_c2ats_GCond) *),
  read_counter = type_c2ats_guint,
  have_writer = type_c2ats_gboolean,
  want_to_read = type_c2ats_guint,
  want_to_write = type_c2ats_guint
}
fun fun_c2ats_g_static_rw_lock_init: {l1:addr} (!ptr_v_1(type_c2ats_GStaticRWLock, l1) | ptr l1) -> void = "mac#g_static_rw_lock_init"
fun fun_c2ats_g_static_rw_lock_reader_lock: {l1:addr} (!ptr_v_1(type_c2ats_GStaticRWLock, l1) | ptr l1) -> void = "mac#g_static_rw_lock_reader_lock"
fun fun_c2ats_g_static_rw_lock_reader_trylock: {l1:addr} (!ptr_v_1(type_c2ats_GStaticRWLock, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_static_rw_lock_reader_trylock"
fun fun_c2ats_g_static_rw_lock_reader_unlock: {l1:addr} (!ptr_v_1(type_c2ats_GStaticRWLock, l1) | ptr l1) -> void = "mac#g_static_rw_lock_reader_unlock"
fun fun_c2ats_g_static_rw_lock_writer_lock: {l1:addr} (!ptr_v_1(type_c2ats_GStaticRWLock, l1) | ptr l1) -> void = "mac#g_static_rw_lock_writer_lock"
fun fun_c2ats_g_static_rw_lock_writer_trylock: {l1:addr} (!ptr_v_1(type_c2ats_GStaticRWLock, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_static_rw_lock_writer_trylock"
fun fun_c2ats_g_static_rw_lock_writer_unlock: {l1:addr} (!ptr_v_1(type_c2ats_GStaticRWLock, l1) | ptr l1) -> void = "mac#g_static_rw_lock_writer_unlock"
fun fun_c2ats_g_static_rw_lock_free: {l1:addr} (!ptr_v_1(type_c2ats_GStaticRWLock, l1) | ptr l1) -> void = "mac#g_static_rw_lock_free"
fun fun_c2ats_g_private_new: (type_c2ats_GDestroyNotify) -> [l1:addr] (ptr_v_1(type_c2ats_GPrivate, l1) | ptr l1) = "mac#g_private_new"
abst@ype struct_c2ats__GStaticPrivate // FIXME! Forward declaration.
typedef type_c2ats_GStaticPrivate = struct_c2ats__GStaticPrivate
typedef struct_c2ats__GStaticPrivate = $extype_struct"struct _GStaticPrivate" of {
  index = type_c2ats_guint
}
fun fun_c2ats_g_static_private_init: {l1:addr} (!ptr_v_1(type_c2ats_GStaticPrivate, l1) | ptr l1) -> void = "mac#g_static_private_init"
fun fun_c2ats_g_static_private_get: {l1:addr} (!ptr_v_1(type_c2ats_GStaticPrivate, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_static_private_get"
fun fun_c2ats_g_static_private_set: {l1:addr} (!ptr_v_1(type_c2ats_GStaticPrivate, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#g_static_private_set"
fun fun_c2ats_g_static_private_free: {l1:addr} (!ptr_v_1(type_c2ats_GStaticPrivate, l1) | ptr l1) -> void = "mac#g_static_private_free"
fun fun_c2ats_g_once_init_enter_impl: {l1:addr} (!ptr_v_1(type_c2ats_gsize, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_once_init_enter_impl"
fun fun_c2ats_g_thread_init: (type_c2ats_gpointer) -> void = "mac#g_thread_init"
fun fun_c2ats_g_thread_init_with_errorcheck_mutexes: (type_c2ats_gpointer) -> void = "mac#g_thread_init_with_errorcheck_mutexes"
fun fun_c2ats_g_thread_get_initialized: () -> type_c2ats_gboolean = "mac#g_thread_get_initialized"
macdef takeout_c2ats_g_threads_got_initialized = $extval([l1:addr] (ptr_v_1(type_c2ats_gboolean, l1) | ptr l1), "&g_threads_got_initialized")
praxi addback_c2ats_g_threads_got_initialized {l1:addr} (ptr_v_1(type_c2ats_gboolean, l1) | ptr l1): void
fun fun_c2ats_g_mutex_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GMutex, l1) | ptr l1) = "mac#g_mutex_new"
fun fun_c2ats_g_mutex_free: {l1:addr} (!ptr_v_1(type_c2ats_GMutex, l1) | ptr l1) -> void = "mac#g_mutex_free"
fun fun_c2ats_g_cond_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GCond, l1) | ptr l1) = "mac#g_cond_new"
fun fun_c2ats_g_cond_free: {l1:addr} (!ptr_v_1(type_c2ats_GCond, l1) | ptr l1) -> void = "mac#g_cond_free"
fun fun_c2ats_g_cond_timed_wait: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GCond, l1), !ptr_v_1(type_c2ats_GMutex, l2), !ptr_v_1(type_c2ats_GTimeVal, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_cond_timed_wait"
// File: /usr/include/x86_64-linux-gnu/sys/types.h
typedef type_c2ats_loff_t = type_c2ats___loff_t
typedef type_c2ats_dev_t = type_c2ats___dev_t
typedef type_c2ats_gid_t = type_c2ats___gid_t
typedef type_c2ats_mode_t = type_c2ats___mode_t
typedef type_c2ats_nlink_t = type_c2ats___nlink_t
typedef type_c2ats_off_t = type_c2ats___off_t
typedef type_c2ats_id_t = type_c2ats___id_t
typedef type_c2ats_ssize_t = type_c2ats___ssize_t
typedef type_c2ats_key_t = type_c2ats___key_t
typedef type_c2ats_useconds_t = type_c2ats___useconds_t
typedef type_c2ats_suseconds_t = type_c2ats___suseconds_t
typedef type_c2ats_int8_t = int
typedef type_c2ats_int16_t = int
typedef type_c2ats_int32_t = int
typedef type_c2ats_int64_t = int
typedef type_c2ats_u_int8_t = uint
typedef type_c2ats_u_int16_t = uint
typedef type_c2ats_u_int32_t = uint
typedef type_c2ats_u_int64_t = uint
typedef type_c2ats_register_t = int
typedef type_c2ats_blkcnt_t = type_c2ats___blkcnt_t
typedef type_c2ats_fsblkcnt_t = type_c2ats___fsblkcnt_t
typedef type_c2ats_fsfilcnt_t = type_c2ats___fsfilcnt_t
// File: /usr/include/x86_64-linux-gnu/bits/sched.h
typedef struct_c2ats_sched_param = $extype_struct"struct sched_param" of {
  __sched_priority = int
}
typedef struct_c2ats___sched_param = $extype_struct"struct __sched_param" of {
  __sched_priority = int
}
typedef type_c2ats___cpu_mask = ulint
typedef struct_c2ats_anon_38025 = $extype_struct"struct { __cpu_mask __bits[1024 / (8 * sizeof(__cpu_mask))]; }" of {
  __bits = @[type_c2ats___cpu_mask][1024 / (8 * sizeof(type_c2ats___cpu_mask))]
}
typedef type_c2ats_cpu_set_t = struct_c2ats_anon_38025
fun fun_c2ats___sched_cpucount: {l1:addr} (!ptr_v_1(type_c2ats_cpu_set_t, l1) | type_c2ats_size_t, ptr l1) -> int = "mac#__sched_cpucount"
fun fun_c2ats___sched_cpualloc: (type_c2ats_size_t) -> [l1:addr] (ptr_v_1(type_c2ats_cpu_set_t, l1) | ptr l1) = "mac#__sched_cpualloc"
fun fun_c2ats___sched_cpufree: {l1:addr} (!ptr_v_1(type_c2ats_cpu_set_t, l1) | ptr l1) -> void = "mac#__sched_cpufree"
// File: /usr/include/sched.h
fun fun_c2ats_sched_setparam: {l1:addr} (!ptr_v_1(struct_c2ats_sched_param, l1) | type_c2ats___pid_t, ptr l1) -> int = "mac#sched_setparam"
fun fun_c2ats_sched_getparam: {l1:addr} (!ptr_v_1(struct_c2ats_sched_param, l1) | type_c2ats___pid_t, ptr l1) -> int = "mac#sched_getparam"
fun fun_c2ats_sched_setscheduler: {l1:addr} (!ptr_v_1(struct_c2ats_sched_param, l1) | type_c2ats___pid_t, int, ptr l1) -> int = "mac#sched_setscheduler"
fun fun_c2ats_sched_getscheduler: (type_c2ats___pid_t) -> int = "mac#sched_getscheduler"
fun fun_c2ats_sched_yield: () -> int = "mac#sched_yield"
fun fun_c2ats_sched_get_priority_max: (int) -> int = "mac#sched_get_priority_max"
fun fun_c2ats_sched_get_priority_min: (int) -> int = "mac#sched_get_priority_min"
fun fun_c2ats_sched_rr_get_interval: {l1:addr} (!ptr_v_1(struct_c2ats_timespec, l1) | type_c2ats___pid_t, ptr l1) -> int = "mac#sched_rr_get_interval"
// File: /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h
typedef type_c2ats_pthread_t = ulint
typedef union_c2ats_pthread_attr_t = $extype_struct"union pthread_attr_t" of {
  __size = @[char][56],
  __align = lint
}
typedef type_c2ats_pthread_attr_t = union_c2ats_pthread_attr_t
abst@ype struct_c2ats___pthread_internal_list // FIXME! Forward declaration.
typedef type_c2ats___pthread_list_t = struct_c2ats___pthread_internal_list
typedef struct_c2ats___pthread_internal_list = $extype_struct"struct __pthread_internal_list" of {
  __prev = ptr (* cPtr0(struct_c2ats___pthread_internal_list) *),
  __next = ptr (* cPtr0(struct_c2ats___pthread_internal_list) *)
}
abst@ype struct_c2ats___pthread_mutex_s // FIXME! Forward declaration.
typedef union_c2ats_anon_38337 = $extype_struct"union { struct __pthread_mutex_s __data; char __size[40]; long int __align; }" of {
  __data = struct_c2ats___pthread_mutex_s,
  __size = @[char][40],
  __align = lint
}
typedef type_c2ats_pthread_mutex_t = union_c2ats_anon_38337
typedef struct_c2ats___pthread_mutex_s = $extype_struct"struct __pthread_mutex_s" of {
  __lock = int,
  __count = uint,
  __owner = int,
  __nusers = uint,
  __kind = int,
  __spins = sint,
  __elision = sint,
  __list = type_c2ats___pthread_list_t
}
typedef union_c2ats_anon_38353 = $extype_struct"union { char __size[4]; int __align; }" of {
  __size = @[char][4],
  __align = int
}
typedef type_c2ats_pthread_mutexattr_t = union_c2ats_anon_38353
typedef struct_c2ats_anon_38404 = $extype_struct"struct { int __lock; unsigned int __futex; unsigned long long int __total_seq; unsigned long long int __wakeup_seq; unsigned long long int __woken_seq; void* __mutex; unsigned int __nwaiters; unsigned int __broadcast_seq; }" of {
  __lock = int,
  __futex = uint,
  __total_seq = ullint,
  __wakeup_seq = ullint,
  __woken_seq = ullint,
  __mutex = ptr (* cPtr0(void) *),
  __nwaiters = uint,
  __broadcast_seq = uint
}
typedef union_c2ats_anon_38421 = $extype_struct"union { struct { int __lock; unsigned int __futex; unsigned long long int __total_seq; unsigned long long int __wakeup_seq; unsigned long long int __woken_seq; void* __mutex; unsigned int __nwaiters; unsigned int __broadcast_seq; } __data; char __size[48]; long long int __align; }" of {
  __data = struct_c2ats_anon_38404,
  __size = @[char][48],
  __align = llint
}
typedef type_c2ats_pthread_cond_t = union_c2ats_anon_38421
typedef union_c2ats_anon_38437 = $extype_struct"union { char __size[4]; int __align; }" of {
  __size = @[char][4],
  __align = int
}
typedef type_c2ats_pthread_condattr_t = union_c2ats_anon_38437
typedef type_c2ats_pthread_key_t = uint
typedef type_c2ats_pthread_once_t = int
// File: /usr/include/x86_64-linux-gnu/bits/setjmp.h
typedef type_c2ats___jmp_buf = @[lint][8]
// File: /usr/include/pthread.h
#define enum_c2ats_PTHREAD_CREATE_JOINABLE 0
#define enum_c2ats_PTHREAD_CREATE_DETACHED 1
#define enum_c2ats_PTHREAD_MUTEX_TIMED_NP 0
#define enum_c2ats_PTHREAD_MUTEX_RECURSIVE_NP 1
#define enum_c2ats_PTHREAD_MUTEX_ERRORCHECK_NP 2
#define enum_c2ats_PTHREAD_MUTEX_ADAPTIVE_NP 3
#define enum_c2ats_PTHREAD_INHERIT_SCHED 0
#define enum_c2ats_PTHREAD_EXPLICIT_SCHED 1
#define enum_c2ats_PTHREAD_SCOPE_SYSTEM 0
#define enum_c2ats_PTHREAD_SCOPE_PROCESS 1
#define enum_c2ats_PTHREAD_PROCESS_PRIVATE 0
#define enum_c2ats_PTHREAD_PROCESS_SHARED 1
typedef struct_c2ats__pthread_cleanup_buffer = $extype_struct"struct _pthread_cleanup_buffer" of {
  __routine = (ptr) -> void,
  __arg = ptr (* cPtr0(void) *),
  __canceltype = int,
  __prev = ptr (* cPtr0(struct_c2ats__pthread_cleanup_buffer) *)
}
#define enum_c2ats_PTHREAD_CANCEL_ENABLE 0
#define enum_c2ats_PTHREAD_CANCEL_DISABLE 1
#define enum_c2ats_PTHREAD_CANCEL_DEFERRED 0
#define enum_c2ats_PTHREAD_CANCEL_ASYNCHRONOUS 1
fun fun_c2ats_pthread_create: {l1,l2:addr} (!ptr_v_1(type_c2ats_pthread_t, l1), !ptr_v_1(type_c2ats_pthread_attr_t, l2) | ptr l1, ptr l2, (ptr) -> ptr, ptr) -> int = "mac#pthread_create"
fun fun_c2ats_pthread_exit: (ptr) -> void = "mac#pthread_exit"
fun fun_c2ats_pthread_join: {l1:addr} (!ptr_v_1(ptr, l1) | type_c2ats_pthread_t, ptr l1) -> int = "mac#pthread_join"
fun fun_c2ats_pthread_detach: (type_c2ats_pthread_t) -> int = "mac#pthread_detach"
fun fun_c2ats_pthread_self: () -> type_c2ats_pthread_t = "mac#pthread_self"
fun fun_c2ats_pthread_equal: (type_c2ats_pthread_t, type_c2ats_pthread_t) -> int = "mac#pthread_equal"
fun fun_c2ats_pthread_attr_init: {l1:addr} (!ptr_v_1(type_c2ats_pthread_attr_t, l1) | ptr l1) -> int = "mac#pthread_attr_init"
fun fun_c2ats_pthread_attr_destroy: {l1:addr} (!ptr_v_1(type_c2ats_pthread_attr_t, l1) | ptr l1) -> int = "mac#pthread_attr_destroy"
fun fun_c2ats_pthread_attr_getdetachstate: {l1,l2:addr} (!ptr_v_1(type_c2ats_pthread_attr_t, l1), !ptr_v_1(int, l2) | ptr l1, ptr l2) -> int = "mac#pthread_attr_getdetachstate"
fun fun_c2ats_pthread_attr_setdetachstate: {l1:addr} (!ptr_v_1(type_c2ats_pthread_attr_t, l1) | ptr l1, int) -> int = "mac#pthread_attr_setdetachstate"
fun fun_c2ats_pthread_attr_getguardsize: {l1,l2:addr} (!ptr_v_1(type_c2ats_pthread_attr_t, l1), !ptr_v_1(type_c2ats_size_t, l2) | ptr l1, ptr l2) -> int = "mac#pthread_attr_getguardsize"
fun fun_c2ats_pthread_attr_setguardsize: {l1:addr} (!ptr_v_1(type_c2ats_pthread_attr_t, l1) | ptr l1, type_c2ats_size_t) -> int = "mac#pthread_attr_setguardsize"
fun fun_c2ats_pthread_attr_getschedparam: {l1,l2:addr} (!ptr_v_1(type_c2ats_pthread_attr_t, l1), !ptr_v_1(struct_c2ats_sched_param, l2) | ptr l1, ptr l2) -> int = "mac#pthread_attr_getschedparam"
fun fun_c2ats_pthread_attr_setschedparam: {l1,l2:addr} (!ptr_v_1(type_c2ats_pthread_attr_t, l1), !ptr_v_1(struct_c2ats_sched_param, l2) | ptr l1, ptr l2) -> int = "mac#pthread_attr_setschedparam"
fun fun_c2ats_pthread_attr_getschedpolicy: {l1,l2:addr} (!ptr_v_1(type_c2ats_pthread_attr_t, l1), !ptr_v_1(int, l2) | ptr l1, ptr l2) -> int = "mac#pthread_attr_getschedpolicy"
fun fun_c2ats_pthread_attr_setschedpolicy: {l1:addr} (!ptr_v_1(type_c2ats_pthread_attr_t, l1) | ptr l1, int) -> int = "mac#pthread_attr_setschedpolicy"
fun fun_c2ats_pthread_attr_getinheritsched: {l1,l2:addr} (!ptr_v_1(type_c2ats_pthread_attr_t, l1), !ptr_v_1(int, l2) | ptr l1, ptr l2) -> int = "mac#pthread_attr_getinheritsched"
fun fun_c2ats_pthread_attr_setinheritsched: {l1:addr} (!ptr_v_1(type_c2ats_pthread_attr_t, l1) | ptr l1, int) -> int = "mac#pthread_attr_setinheritsched"
fun fun_c2ats_pthread_attr_getscope: {l1,l2:addr} (!ptr_v_1(type_c2ats_pthread_attr_t, l1), !ptr_v_1(int, l2) | ptr l1, ptr l2) -> int = "mac#pthread_attr_getscope"
fun fun_c2ats_pthread_attr_setscope: {l1:addr} (!ptr_v_1(type_c2ats_pthread_attr_t, l1) | ptr l1, int) -> int = "mac#pthread_attr_setscope"
fun fun_c2ats_pthread_attr_getstackaddr: {l1,l2:addr} (!ptr_v_1(type_c2ats_pthread_attr_t, l1), !ptr_v_1(ptr, l2) | ptr l1, ptr l2) -> int = "mac#pthread_attr_getstackaddr"
fun fun_c2ats_pthread_attr_setstackaddr: {l1:addr} (!ptr_v_1(type_c2ats_pthread_attr_t, l1) | ptr l1, ptr) -> int = "mac#pthread_attr_setstackaddr"
fun fun_c2ats_pthread_attr_getstacksize: {l1,l2:addr} (!ptr_v_1(type_c2ats_pthread_attr_t, l1), !ptr_v_1(type_c2ats_size_t, l2) | ptr l1, ptr l2) -> int = "mac#pthread_attr_getstacksize"
fun fun_c2ats_pthread_attr_setstacksize: {l1:addr} (!ptr_v_1(type_c2ats_pthread_attr_t, l1) | ptr l1, type_c2ats_size_t) -> int = "mac#pthread_attr_setstacksize"
fun fun_c2ats_pthread_setschedparam: {l1:addr} (!ptr_v_1(struct_c2ats_sched_param, l1) | type_c2ats_pthread_t, int, ptr l1) -> int = "mac#pthread_setschedparam"
fun fun_c2ats_pthread_getschedparam: {l1,l2:addr} (!ptr_v_1(int, l1), !ptr_v_1(struct_c2ats_sched_param, l2) | type_c2ats_pthread_t, ptr l1, ptr l2) -> int = "mac#pthread_getschedparam"
fun fun_c2ats_pthread_setschedprio: (type_c2ats_pthread_t, int) -> int = "mac#pthread_setschedprio"
fun fun_c2ats_pthread_once: {l1:addr} (!ptr_v_1(type_c2ats_pthread_once_t, l1) | ptr l1, () -> void) -> int = "mac#pthread_once"
fun fun_c2ats_pthread_setcancelstate: {l1:addr} (!ptr_v_1(int, l1) | int, ptr l1) -> int = "mac#pthread_setcancelstate"
fun fun_c2ats_pthread_setcanceltype: {l1:addr} (!ptr_v_1(int, l1) | int, ptr l1) -> int = "mac#pthread_setcanceltype"
fun fun_c2ats_pthread_cancel: (type_c2ats_pthread_t) -> int = "mac#pthread_cancel"
fun fun_c2ats_pthread_testcancel: () -> void = "mac#pthread_testcancel"
typedef struct_c2ats_anon_39276 = $extype_struct"struct { __jmp_buf __cancel_jmp_buf; int __mask_was_saved; }" of {
  __cancel_jmp_buf = type_c2ats___jmp_buf,
  __mask_was_saved = int
}
typedef struct_c2ats_anon_39290 = $extype_struct"struct { struct { __jmp_buf __cancel_jmp_buf; int __mask_was_saved; } __cancel_jmp_buf[1]; void* __pad[4]; }" of {
  __cancel_jmp_buf = @[struct_c2ats_anon_39276][1],
  __pad = @[ptr][4]
}
typedef type_c2ats___pthread_unwind_buf_t = struct_c2ats_anon_39290
typedef struct_c2ats___pthread_cleanup_frame = $extype_struct"struct __pthread_cleanup_frame" of {
  __cancel_routine = (ptr) -> void,
  __cancel_arg = ptr (* cPtr0(void) *),
  __do_it = int,
  __cancel_type = int
}
fun fun_c2ats___pthread_register_cancel: {l1:addr} (!ptr_v_1(type_c2ats___pthread_unwind_buf_t, l1) | ptr l1) -> void = "mac#__pthread_register_cancel"
fun fun_c2ats___pthread_unregister_cancel: {l1:addr} (!ptr_v_1(type_c2ats___pthread_unwind_buf_t, l1) | ptr l1) -> void = "mac#__pthread_unregister_cancel"
fun fun_c2ats___pthread_unwind_next: {l1:addr} (!ptr_v_1(type_c2ats___pthread_unwind_buf_t, l1) | ptr l1) -> void = "mac#__pthread_unwind_next"
abst@ype struct_c2ats___jmp_buf_tag // FIXME! Forward declaration.
fun fun_c2ats___sigsetjmp: {l1:addr} (!ptr_v_1(struct_c2ats___jmp_buf_tag, l1) | ptr l1, int) -> int = "mac#__sigsetjmp"
fun fun_c2ats_pthread_mutex_init: {l1,l2:addr} (!ptr_v_1(type_c2ats_pthread_mutex_t, l1), !ptr_v_1(type_c2ats_pthread_mutexattr_t, l2) | ptr l1, ptr l2) -> int = "mac#pthread_mutex_init"
fun fun_c2ats_pthread_mutex_destroy: {l1:addr} (!ptr_v_1(type_c2ats_pthread_mutex_t, l1) | ptr l1) -> int = "mac#pthread_mutex_destroy"
fun fun_c2ats_pthread_mutex_trylock: {l1:addr} (!ptr_v_1(type_c2ats_pthread_mutex_t, l1) | ptr l1) -> int = "mac#pthread_mutex_trylock"
fun fun_c2ats_pthread_mutex_lock: {l1:addr} (!ptr_v_1(type_c2ats_pthread_mutex_t, l1) | ptr l1) -> int = "mac#pthread_mutex_lock"
fun fun_c2ats_pthread_mutex_unlock: {l1:addr} (!ptr_v_1(type_c2ats_pthread_mutex_t, l1) | ptr l1) -> int = "mac#pthread_mutex_unlock"
fun fun_c2ats_pthread_mutex_getprioceiling: {l1,l2:addr} (!ptr_v_1(type_c2ats_pthread_mutex_t, l1), !ptr_v_1(int, l2) | ptr l1, ptr l2) -> int = "mac#pthread_mutex_getprioceiling"
fun fun_c2ats_pthread_mutex_setprioceiling: {l1,l2:addr} (!ptr_v_1(type_c2ats_pthread_mutex_t, l1), !ptr_v_1(int, l2) | ptr l1, int, ptr l2) -> int = "mac#pthread_mutex_setprioceiling"
fun fun_c2ats_pthread_mutexattr_init: {l1:addr} (!ptr_v_1(type_c2ats_pthread_mutexattr_t, l1) | ptr l1) -> int = "mac#pthread_mutexattr_init"
fun fun_c2ats_pthread_mutexattr_destroy: {l1:addr} (!ptr_v_1(type_c2ats_pthread_mutexattr_t, l1) | ptr l1) -> int = "mac#pthread_mutexattr_destroy"
fun fun_c2ats_pthread_mutexattr_getpshared: {l1,l2:addr} (!ptr_v_1(type_c2ats_pthread_mutexattr_t, l1), !ptr_v_1(int, l2) | ptr l1, ptr l2) -> int = "mac#pthread_mutexattr_getpshared"
fun fun_c2ats_pthread_mutexattr_setpshared: {l1:addr} (!ptr_v_1(type_c2ats_pthread_mutexattr_t, l1) | ptr l1, int) -> int = "mac#pthread_mutexattr_setpshared"
fun fun_c2ats_pthread_mutexattr_getprotocol: {l1,l2:addr} (!ptr_v_1(type_c2ats_pthread_mutexattr_t, l1), !ptr_v_1(int, l2) | ptr l1, ptr l2) -> int = "mac#pthread_mutexattr_getprotocol"
fun fun_c2ats_pthread_mutexattr_setprotocol: {l1:addr} (!ptr_v_1(type_c2ats_pthread_mutexattr_t, l1) | ptr l1, int) -> int = "mac#pthread_mutexattr_setprotocol"
fun fun_c2ats_pthread_mutexattr_getprioceiling: {l1,l2:addr} (!ptr_v_1(type_c2ats_pthread_mutexattr_t, l1), !ptr_v_1(int, l2) | ptr l1, ptr l2) -> int = "mac#pthread_mutexattr_getprioceiling"
fun fun_c2ats_pthread_mutexattr_setprioceiling: {l1:addr} (!ptr_v_1(type_c2ats_pthread_mutexattr_t, l1) | ptr l1, int) -> int = "mac#pthread_mutexattr_setprioceiling"
fun fun_c2ats_pthread_cond_init: {l1,l2:addr} (!ptr_v_1(type_c2ats_pthread_cond_t, l1), !ptr_v_1(type_c2ats_pthread_condattr_t, l2) | ptr l1, ptr l2) -> int = "mac#pthread_cond_init"
fun fun_c2ats_pthread_cond_destroy: {l1:addr} (!ptr_v_1(type_c2ats_pthread_cond_t, l1) | ptr l1) -> int = "mac#pthread_cond_destroy"
fun fun_c2ats_pthread_cond_signal: {l1:addr} (!ptr_v_1(type_c2ats_pthread_cond_t, l1) | ptr l1) -> int = "mac#pthread_cond_signal"
fun fun_c2ats_pthread_cond_broadcast: {l1:addr} (!ptr_v_1(type_c2ats_pthread_cond_t, l1) | ptr l1) -> int = "mac#pthread_cond_broadcast"
fun fun_c2ats_pthread_cond_wait: {l1,l2:addr} (!ptr_v_1(type_c2ats_pthread_cond_t, l1), !ptr_v_1(type_c2ats_pthread_mutex_t, l2) | ptr l1, ptr l2) -> int = "mac#pthread_cond_wait"
fun fun_c2ats_pthread_cond_timedwait: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_pthread_cond_t, l1), !ptr_v_1(type_c2ats_pthread_mutex_t, l2), !ptr_v_1(struct_c2ats_timespec, l3) | ptr l1, ptr l2, ptr l3) -> int = "mac#pthread_cond_timedwait"
fun fun_c2ats_pthread_condattr_init: {l1:addr} (!ptr_v_1(type_c2ats_pthread_condattr_t, l1) | ptr l1) -> int = "mac#pthread_condattr_init"
fun fun_c2ats_pthread_condattr_destroy: {l1:addr} (!ptr_v_1(type_c2ats_pthread_condattr_t, l1) | ptr l1) -> int = "mac#pthread_condattr_destroy"
fun fun_c2ats_pthread_condattr_getpshared: {l1,l2:addr} (!ptr_v_1(type_c2ats_pthread_condattr_t, l1), !ptr_v_1(int, l2) | ptr l1, ptr l2) -> int = "mac#pthread_condattr_getpshared"
fun fun_c2ats_pthread_condattr_setpshared: {l1:addr} (!ptr_v_1(type_c2ats_pthread_condattr_t, l1) | ptr l1, int) -> int = "mac#pthread_condattr_setpshared"
fun fun_c2ats_pthread_key_create: {l1:addr} (!ptr_v_1(type_c2ats_pthread_key_t, l1) | ptr l1, (ptr) -> void) -> int = "mac#pthread_key_create"
fun fun_c2ats_pthread_key_delete: (type_c2ats_pthread_key_t) -> int = "mac#pthread_key_delete"
fun fun_c2ats_pthread_getspecific: (type_c2ats_pthread_key_t) -> ptr = "mac#pthread_getspecific"
fun fun_c2ats_pthread_setspecific: (type_c2ats_pthread_key_t, ptr) -> int = "mac#pthread_setspecific"
fun fun_c2ats_pthread_atfork: (() -> void, () -> void, () -> void) -> int = "mac#pthread_atfork"
// File: /usr/include/glib-2.0/glib/glib-autocleanups.h
fun fun_c2ats_g_autoptr_cleanup_generic_gfree: (ptr) -> void = "mac#g_autoptr_cleanup_generic_gfree"
fun fun_c2ats_g_autoptr_cleanup_gstring_free: {l1:addr} (!ptr_v_1(type_c2ats_GString, l1) | ptr l1) -> void = "mac#g_autoptr_cleanup_gstring_free"
typedef type_c2ats_GAsyncQueue_autoptr = cPtr0(type_c2ats_GAsyncQueue)
fun fun_c2ats_glib_autoptr_cleanup_GAsyncQueue: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GAsyncQueue, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GAsyncQueue"
typedef type_c2ats_GBookmarkFile_autoptr = cPtr0(type_c2ats_GBookmarkFile)
fun fun_c2ats_glib_autoptr_cleanup_GBookmarkFile: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GBookmarkFile, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GBookmarkFile"
typedef type_c2ats_GBytes_autoptr = cPtr0(type_c2ats_GBytes)
fun fun_c2ats_glib_autoptr_cleanup_GBytes: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GBytes, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GBytes"
typedef type_c2ats_GChecksum_autoptr = cPtr0(type_c2ats_GChecksum)
fun fun_c2ats_glib_autoptr_cleanup_GChecksum: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GChecksum, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GChecksum"
typedef type_c2ats_GDateTime_autoptr = cPtr0(type_c2ats_GDateTime)
fun fun_c2ats_glib_autoptr_cleanup_GDateTime: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDateTime, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDateTime"
typedef type_c2ats_GDir_autoptr = cPtr0(type_c2ats_GDir)
fun fun_c2ats_glib_autoptr_cleanup_GDir: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDir, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDir"
typedef type_c2ats_GError_autoptr = cPtr0(type_c2ats_GError)
fun fun_c2ats_glib_autoptr_cleanup_GError: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GError, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GError"
typedef type_c2ats_GHashTable_autoptr = cPtr0(type_c2ats_GHashTable)
fun fun_c2ats_glib_autoptr_cleanup_GHashTable: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GHashTable, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GHashTable"
typedef type_c2ats_GHmac_autoptr = cPtr0(type_c2ats_GHmac)
fun fun_c2ats_glib_autoptr_cleanup_GHmac: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GHmac, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GHmac"
typedef type_c2ats_GIOChannel_autoptr = cPtr0(type_c2ats_GIOChannel)
fun fun_c2ats_glib_autoptr_cleanup_GIOChannel: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GIOChannel, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GIOChannel"
typedef type_c2ats_GKeyFile_autoptr = cPtr0(type_c2ats_GKeyFile)
fun fun_c2ats_glib_autoptr_cleanup_GKeyFile: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GKeyFile, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GKeyFile"
typedef type_c2ats_GList_autoptr = cPtr0(type_c2ats_GList)
fun fun_c2ats_glib_autoptr_cleanup_GList: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GList, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GList"
typedef type_c2ats_GArray_autoptr = cPtr0(type_c2ats_GArray)
fun fun_c2ats_glib_autoptr_cleanup_GArray: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GArray, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GArray"
typedef type_c2ats_GPtrArray_autoptr = cPtr0(type_c2ats_GPtrArray)
fun fun_c2ats_glib_autoptr_cleanup_GPtrArray: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GPtrArray, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GPtrArray"
typedef type_c2ats_GByteArray_autoptr = cPtr0(type_c2ats_GByteArray)
fun fun_c2ats_glib_autoptr_cleanup_GByteArray: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GByteArray, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GByteArray"
typedef type_c2ats_GMainContext_autoptr = cPtr0(type_c2ats_GMainContext)
fun fun_c2ats_glib_autoptr_cleanup_GMainContext: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GMainContext, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GMainContext"
typedef type_c2ats_GMainLoop_autoptr = cPtr0(type_c2ats_GMainLoop)
fun fun_c2ats_glib_autoptr_cleanup_GMainLoop: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GMainLoop, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GMainLoop"
typedef type_c2ats_GSource_autoptr = cPtr0(type_c2ats_GSource)
fun fun_c2ats_glib_autoptr_cleanup_GSource: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSource, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSource"
typedef type_c2ats_GMappedFile_autoptr = cPtr0(type_c2ats_GMappedFile)
fun fun_c2ats_glib_autoptr_cleanup_GMappedFile: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GMappedFile, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GMappedFile"
typedef type_c2ats_GMarkupParseContext_autoptr = cPtr0(type_c2ats_GMarkupParseContext)
fun fun_c2ats_glib_autoptr_cleanup_GMarkupParseContext: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GMarkupParseContext, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GMarkupParseContext"
typedef type_c2ats_GNode_autoptr = cPtr0(type_c2ats_GNode)
fun fun_c2ats_glib_autoptr_cleanup_GNode: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GNode, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GNode"
typedef type_c2ats_GOptionContext_autoptr = cPtr0(type_c2ats_GOptionContext)
fun fun_c2ats_glib_autoptr_cleanup_GOptionContext: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GOptionContext, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GOptionContext"
typedef type_c2ats_GOptionGroup_autoptr = cPtr0(type_c2ats_GOptionGroup)
fun fun_c2ats_glib_autoptr_cleanup_GOptionGroup: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GOptionGroup, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GOptionGroup"
typedef type_c2ats_GPatternSpec_autoptr = cPtr0(type_c2ats_GPatternSpec)
fun fun_c2ats_glib_autoptr_cleanup_GPatternSpec: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GPatternSpec, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GPatternSpec"
typedef type_c2ats_GQueue_autoptr = cPtr0(type_c2ats_GQueue)
fun fun_c2ats_glib_autoptr_cleanup_GQueue: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GQueue, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GQueue"
fun fun_c2ats_glib_auto_cleanup_GQueue: {l1:addr} (!ptr_v_1(type_c2ats_GQueue, l1) | ptr l1) -> void = "mac#glib_auto_cleanup_GQueue"
typedef type_c2ats_GRand_autoptr = cPtr0(type_c2ats_GRand)
fun fun_c2ats_glib_autoptr_cleanup_GRand: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GRand, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GRand"
typedef type_c2ats_GRegex_autoptr = cPtr0(type_c2ats_GRegex)
fun fun_c2ats_glib_autoptr_cleanup_GRegex: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GRegex, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GRegex"
typedef type_c2ats_GMatchInfo_autoptr = cPtr0(type_c2ats_GMatchInfo)
fun fun_c2ats_glib_autoptr_cleanup_GMatchInfo: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GMatchInfo, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GMatchInfo"
typedef type_c2ats_GScanner_autoptr = cPtr0(type_c2ats_GScanner)
fun fun_c2ats_glib_autoptr_cleanup_GScanner: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GScanner, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GScanner"
typedef type_c2ats_GSequence_autoptr = cPtr0(type_c2ats_GSequence)
fun fun_c2ats_glib_autoptr_cleanup_GSequence: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSequence, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSequence"
typedef type_c2ats_GSList_autoptr = cPtr0(type_c2ats_GSList)
fun fun_c2ats_glib_autoptr_cleanup_GSList: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSList, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSList"
typedef type_c2ats_GString_autoptr = cPtr0(type_c2ats_GString)
fun fun_c2ats_glib_autoptr_cleanup_GString: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GString, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GString"
typedef type_c2ats_GStringChunk_autoptr = cPtr0(type_c2ats_GStringChunk)
fun fun_c2ats_glib_autoptr_cleanup_GStringChunk: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GStringChunk, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GStringChunk"
typedef type_c2ats_GThread_autoptr = cPtr0(type_c2ats_GThread)
fun fun_c2ats_glib_autoptr_cleanup_GThread: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GThread, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GThread"
fun fun_c2ats_glib_auto_cleanup_GMutex: {l1:addr} (!ptr_v_1(type_c2ats_GMutex, l1) | ptr l1) -> void = "mac#glib_auto_cleanup_GMutex"
typedef type_c2ats_GMutexLocker_autoptr = cPtr0(type_c2ats_GMutexLocker)
fun fun_c2ats_glib_autoptr_cleanup_GMutexLocker: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GMutexLocker, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GMutexLocker"
fun fun_c2ats_glib_auto_cleanup_GCond: {l1:addr} (!ptr_v_1(type_c2ats_GCond, l1) | ptr l1) -> void = "mac#glib_auto_cleanup_GCond"
typedef type_c2ats_GTimer_autoptr = cPtr0(type_c2ats_GTimer)
fun fun_c2ats_glib_autoptr_cleanup_GTimer: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTimer, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GTimer"
typedef type_c2ats_GTimeZone_autoptr = cPtr0(type_c2ats_GTimeZone)
fun fun_c2ats_glib_autoptr_cleanup_GTimeZone: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTimeZone, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GTimeZone"
typedef type_c2ats_GTree_autoptr = cPtr0(type_c2ats_GTree)
fun fun_c2ats_glib_autoptr_cleanup_GTree: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTree, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GTree"
typedef type_c2ats_GVariant_autoptr = cPtr0(type_c2ats_GVariant)
fun fun_c2ats_glib_autoptr_cleanup_GVariant: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GVariant, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GVariant"
typedef type_c2ats_GVariantBuilder_autoptr = cPtr0(type_c2ats_GVariantBuilder)
fun fun_c2ats_glib_autoptr_cleanup_GVariantBuilder: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GVariantBuilder, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GVariantBuilder"
fun fun_c2ats_glib_auto_cleanup_GVariantBuilder: {l1:addr} (!ptr_v_1(type_c2ats_GVariantBuilder, l1) | ptr l1) -> void = "mac#glib_auto_cleanup_GVariantBuilder"
typedef type_c2ats_GVariantIter_autoptr = cPtr0(type_c2ats_GVariantIter)
fun fun_c2ats_glib_autoptr_cleanup_GVariantIter: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GVariantIter, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GVariantIter"
typedef type_c2ats_GVariantDict_autoptr = cPtr0(type_c2ats_GVariantDict)
fun fun_c2ats_glib_autoptr_cleanup_GVariantDict: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GVariantDict, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GVariantDict"
fun fun_c2ats_glib_auto_cleanup_GVariantDict: {l1:addr} (!ptr_v_1(type_c2ats_GVariantDict, l1) | ptr l1) -> void = "mac#glib_auto_cleanup_GVariantDict"
typedef type_c2ats_GVariantType_autoptr = cPtr0(type_c2ats_GVariantType)
fun fun_c2ats_glib_autoptr_cleanup_GVariantType: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GVariantType, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GVariantType"
fun fun_c2ats_glib_auto_cleanup_GStrv: {l1:addr} (!ptr_v_1(type_c2ats_GStrv, l1) | ptr l1) -> void = "mac#glib_auto_cleanup_GStrv"
// File: /usr/include/glib-2.0/gobject/gtype.h
typedef type_c2ats_GType = type_c2ats_gsize
abst@ype struct_c2ats__GValue // FIXME! Forward declaration.
typedef type_c2ats_GValue = struct_c2ats__GValue
abst@ype union_c2ats__GTypeCValue // FIXME! Forward declaration.
typedef type_c2ats_GTypeCValue = union_c2ats__GTypeCValue
abst@ype struct_c2ats__GTypePlugin // FIXME! Forward declaration.
typedef type_c2ats_GTypePlugin = struct_c2ats__GTypePlugin
abst@ype struct_c2ats__GTypeClass // FIXME! Forward declaration.
typedef type_c2ats_GTypeClass = struct_c2ats__GTypeClass
abst@ype struct_c2ats__GTypeInterface // FIXME! Forward declaration.
typedef type_c2ats_GTypeInterface = struct_c2ats__GTypeInterface
abst@ype struct_c2ats__GTypeInstance // FIXME! Forward declaration.
typedef type_c2ats_GTypeInstance = struct_c2ats__GTypeInstance
abst@ype struct_c2ats__GTypeInfo // FIXME! Forward declaration.
typedef type_c2ats_GTypeInfo = struct_c2ats__GTypeInfo
abst@ype struct_c2ats__GTypeFundamentalInfo // FIXME! Forward declaration.
typedef type_c2ats_GTypeFundamentalInfo = struct_c2ats__GTypeFundamentalInfo
abst@ype struct_c2ats__GInterfaceInfo // FIXME! Forward declaration.
typedef type_c2ats_GInterfaceInfo = struct_c2ats__GInterfaceInfo
abst@ype struct_c2ats__GTypeValueTable // FIXME! Forward declaration.
typedef type_c2ats_GTypeValueTable = struct_c2ats__GTypeValueTable
abst@ype struct_c2ats__GTypeQuery // FIXME! Forward declaration.
typedef type_c2ats_GTypeQuery = struct_c2ats__GTypeQuery
typedef struct_c2ats__GTypeClass = $extype_struct"struct _GTypeClass" of {
  g_type = type_c2ats_GType
}
typedef struct_c2ats__GTypeInstance = $extype_struct"struct _GTypeInstance" of {
  g_class = ptr (* cPtr0(type_c2ats_GTypeClass) *)
}
typedef struct_c2ats__GTypeInterface = $extype_struct"struct _GTypeInterface" of {
  g_type = type_c2ats_GType,
  g_instance_type = type_c2ats_GType
}
typedef struct_c2ats__GTypeQuery = $extype_struct"struct _GTypeQuery" of {
  type = type_c2ats_GType,
  type_name = ptr (* cPtr0(type_c2ats_gchar) *),
  class_size = type_c2ats_guint,
  instance_size = type_c2ats_guint
}
typedef type_c2ats_GTypeDebugFlags = int
#define enum_c2ats_G_TYPE_DEBUG_NONE 0
#define enum_c2ats_G_TYPE_DEBUG_OBJECTS 1 << 0
#define enum_c2ats_G_TYPE_DEBUG_SIGNALS 1 << 1
#define enum_c2ats_G_TYPE_DEBUG_INSTANCE_COUNT 1 << 2
#define enum_c2ats_G_TYPE_DEBUG_MASK 0x7
fun fun_c2ats_g_type_init: () -> void = "mac#g_type_init"
fun fun_c2ats_g_type_init_with_debug_flags: (type_c2ats_GTypeDebugFlags) -> void = "mac#g_type_init_with_debug_flags"
fun fun_c2ats_g_type_name: (type_c2ats_GType) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_type_name"
fun fun_c2ats_g_type_qname: (type_c2ats_GType) -> type_c2ats_GQuark = "mac#g_type_qname"
fun fun_c2ats_g_type_from_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_GType = "mac#g_type_from_name"
fun fun_c2ats_g_type_parent: (type_c2ats_GType) -> type_c2ats_GType = "mac#g_type_parent"
fun fun_c2ats_g_type_depth: (type_c2ats_GType) -> type_c2ats_guint = "mac#g_type_depth"
fun fun_c2ats_g_type_next_base: (type_c2ats_GType, type_c2ats_GType) -> type_c2ats_GType = "mac#g_type_next_base"
fun fun_c2ats_g_type_is_a: (type_c2ats_GType, type_c2ats_GType) -> type_c2ats_gboolean = "mac#g_type_is_a"
fun fun_c2ats_g_type_class_ref: (type_c2ats_GType) -> type_c2ats_gpointer = "mac#g_type_class_ref"
fun fun_c2ats_g_type_class_peek: (type_c2ats_GType) -> type_c2ats_gpointer = "mac#g_type_class_peek"
fun fun_c2ats_g_type_class_peek_static: (type_c2ats_GType) -> type_c2ats_gpointer = "mac#g_type_class_peek_static"
fun fun_c2ats_g_type_class_unref: (type_c2ats_gpointer) -> void = "mac#g_type_class_unref"
fun fun_c2ats_g_type_class_peek_parent: (type_c2ats_gpointer) -> type_c2ats_gpointer = "mac#g_type_class_peek_parent"
fun fun_c2ats_g_type_interface_peek: (type_c2ats_gpointer, type_c2ats_GType) -> type_c2ats_gpointer = "mac#g_type_interface_peek"
fun fun_c2ats_g_type_interface_peek_parent: (type_c2ats_gpointer) -> type_c2ats_gpointer = "mac#g_type_interface_peek_parent"
fun fun_c2ats_g_type_default_interface_ref: (type_c2ats_GType) -> type_c2ats_gpointer = "mac#g_type_default_interface_ref"
fun fun_c2ats_g_type_default_interface_peek: (type_c2ats_GType) -> type_c2ats_gpointer = "mac#g_type_default_interface_peek"
fun fun_c2ats_g_type_default_interface_unref: (type_c2ats_gpointer) -> void = "mac#g_type_default_interface_unref"
fun fun_c2ats_g_type_children: {l1:addr} (!ptr_v_1(type_c2ats_guint, l1) | type_c2ats_GType, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GType, l2) | ptr l2) = "mac#g_type_children"
fun fun_c2ats_g_type_interfaces: {l1:addr} (!ptr_v_1(type_c2ats_guint, l1) | type_c2ats_GType, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GType, l2) | ptr l2) = "mac#g_type_interfaces"
fun fun_c2ats_g_type_set_qdata: (type_c2ats_GType, type_c2ats_GQuark, type_c2ats_gpointer) -> void = "mac#g_type_set_qdata"
fun fun_c2ats_g_type_get_qdata: (type_c2ats_GType, type_c2ats_GQuark) -> type_c2ats_gpointer = "mac#g_type_get_qdata"
fun fun_c2ats_g_type_query: {l1:addr} (!ptr_v_1(type_c2ats_GTypeQuery, l1) | type_c2ats_GType, ptr l1) -> void = "mac#g_type_query"
fun fun_c2ats_g_type_get_instance_count: (type_c2ats_GType) -> int = "mac#g_type_get_instance_count"
typedef type_c2ats_GBaseInitFunc = (type_c2ats_gpointer) -> void
typedef type_c2ats_GBaseFinalizeFunc = (type_c2ats_gpointer) -> void
typedef type_c2ats_GClassInitFunc = (type_c2ats_gpointer, type_c2ats_gpointer) -> void
typedef type_c2ats_GClassFinalizeFunc = (type_c2ats_gpointer, type_c2ats_gpointer) -> void
typedef type_c2ats_GInstanceInitFunc = {l1:addr} (!ptr_v_1(type_c2ats_GTypeInstance, l1) | ptr l1, type_c2ats_gpointer) -> void
typedef type_c2ats_GInterfaceInitFunc = (type_c2ats_gpointer, type_c2ats_gpointer) -> void
typedef type_c2ats_GInterfaceFinalizeFunc = (type_c2ats_gpointer, type_c2ats_gpointer) -> void
typedef type_c2ats_GTypeClassCacheFunc = {l1:addr} (!ptr_v_1(type_c2ats_GTypeClass, l1) | type_c2ats_gpointer, ptr l1) -> type_c2ats_gboolean
typedef type_c2ats_GTypeInterfaceCheckFunc = (type_c2ats_gpointer, type_c2ats_gpointer) -> void
typedef type_c2ats_GTypeFundamentalFlags = int
#define enum_c2ats_G_TYPE_FLAG_CLASSED 1 << 0
#define enum_c2ats_G_TYPE_FLAG_INSTANTIATABLE 1 << 1
#define enum_c2ats_G_TYPE_FLAG_DERIVABLE 1 << 2
#define enum_c2ats_G_TYPE_FLAG_DEEP_DERIVABLE 1 << 3
typedef type_c2ats_GTypeFlags = int
#define enum_c2ats_G_TYPE_FLAG_ABSTRACT 1 << 4
#define enum_c2ats_G_TYPE_FLAG_VALUE_ABSTRACT 1 << 5
typedef struct_c2ats__GTypeInfo = $extype_struct"struct _GTypeInfo" of {
  class_size = type_c2ats_guint16,
  base_init = type_c2ats_GBaseInitFunc,
  base_finalize = type_c2ats_GBaseFinalizeFunc,
  class_init = type_c2ats_GClassInitFunc,
  class_finalize = type_c2ats_GClassFinalizeFunc,
  class_data = type_c2ats_gconstpointer,
  instance_size = type_c2ats_guint16,
  n_preallocs = type_c2ats_guint16,
  instance_init = type_c2ats_GInstanceInitFunc,
  value_table = ptr (* cPtr0(type_c2ats_GTypeValueTable) *)
}
typedef struct_c2ats__GTypeFundamentalInfo = $extype_struct"struct _GTypeFundamentalInfo" of {
  type_flags = type_c2ats_GTypeFundamentalFlags
}
typedef struct_c2ats__GInterfaceInfo = $extype_struct"struct _GInterfaceInfo" of {
  interface_init = type_c2ats_GInterfaceInitFunc,
  interface_finalize = type_c2ats_GInterfaceFinalizeFunc,
  interface_data = type_c2ats_gpointer
}
typedef struct_c2ats__GTypeValueTable = $extype_struct"struct _GTypeValueTable" of {
  value_init = {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> void,
  value_free = {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> void,
  value_copy = {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> void,
  value_peek_pointer = {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_gpointer,
  collect_format = ptr (* cPtr0(type_c2ats_gchar) *),
  collect_value = {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_GTypeCValue, l2) | ptr l1, type_c2ats_guint, ptr l2, type_c2ats_guint) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3),
  lcopy_format = ptr (* cPtr0(type_c2ats_gchar) *),
  lcopy_value = {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_GTypeCValue, l2) | ptr l1, type_c2ats_guint, ptr l2, type_c2ats_guint) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3)
}
fun fun_c2ats_g_type_register_static: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GTypeInfo, l2) | type_c2ats_GType, ptr l1, ptr l2, type_c2ats_GTypeFlags) -> type_c2ats_GType = "mac#g_type_register_static"
fun fun_c2ats_g_type_register_static_simple: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_GType, ptr l1, type_c2ats_guint, type_c2ats_GClassInitFunc, type_c2ats_guint, type_c2ats_GInstanceInitFunc, type_c2ats_GTypeFlags) -> type_c2ats_GType = "mac#g_type_register_static_simple"
fun fun_c2ats_g_type_register_dynamic: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GTypePlugin, l2) | type_c2ats_GType, ptr l1, ptr l2, type_c2ats_GTypeFlags) -> type_c2ats_GType = "mac#g_type_register_dynamic"
fun fun_c2ats_g_type_register_fundamental: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GTypeInfo, l2), !ptr_v_1(type_c2ats_GTypeFundamentalInfo, l3) | type_c2ats_GType, ptr l1, ptr l2, ptr l3, type_c2ats_GTypeFlags) -> type_c2ats_GType = "mac#g_type_register_fundamental"
fun fun_c2ats_g_type_add_interface_static: {l1:addr} (!ptr_v_1(type_c2ats_GInterfaceInfo, l1) | type_c2ats_GType, type_c2ats_GType, ptr l1) -> void = "mac#g_type_add_interface_static"
fun fun_c2ats_g_type_add_interface_dynamic: {l1:addr} (!ptr_v_1(type_c2ats_GTypePlugin, l1) | type_c2ats_GType, type_c2ats_GType, ptr l1) -> void = "mac#g_type_add_interface_dynamic"
fun fun_c2ats_g_type_interface_add_prerequisite: (type_c2ats_GType, type_c2ats_GType) -> void = "mac#g_type_interface_add_prerequisite"
fun fun_c2ats_g_type_interface_prerequisites: {l1:addr} (!ptr_v_1(type_c2ats_guint, l1) | type_c2ats_GType, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GType, l2) | ptr l2) = "mac#g_type_interface_prerequisites"
fun fun_c2ats_g_type_class_add_private: (type_c2ats_gpointer, type_c2ats_gsize) -> void = "mac#g_type_class_add_private"
fun fun_c2ats_g_type_add_instance_private: (type_c2ats_GType, type_c2ats_gsize) -> type_c2ats_gint = "mac#g_type_add_instance_private"
fun fun_c2ats_g_type_instance_get_private: {l1:addr} (!ptr_v_1(type_c2ats_GTypeInstance, l1) | ptr l1, type_c2ats_GType) -> type_c2ats_gpointer = "mac#g_type_instance_get_private"
fun fun_c2ats_g_type_class_adjust_private_offset: {l1:addr} (!ptr_v_1(type_c2ats_gint, l1) | type_c2ats_gpointer, ptr l1) -> void = "mac#g_type_class_adjust_private_offset"
fun fun_c2ats_g_type_add_class_private: (type_c2ats_GType, type_c2ats_gsize) -> void = "mac#g_type_add_class_private"
fun fun_c2ats_g_type_class_get_private: {l1:addr} (!ptr_v_1(type_c2ats_GTypeClass, l1) | ptr l1, type_c2ats_GType) -> type_c2ats_gpointer = "mac#g_type_class_get_private"
fun fun_c2ats_g_type_class_get_instance_private_offset: (type_c2ats_gpointer) -> type_c2ats_gint = "mac#g_type_class_get_instance_private_offset"
fun fun_c2ats_g_type_ensure: (type_c2ats_GType) -> void = "mac#g_type_ensure"
fun fun_c2ats_g_type_get_type_registration_serial: () -> type_c2ats_guint = "mac#g_type_get_type_registration_serial"
fun fun_c2ats_g_type_get_plugin: (type_c2ats_GType) -> [l1:addr] (ptr_v_1(type_c2ats_GTypePlugin, l1) | ptr l1) = "mac#g_type_get_plugin"
fun fun_c2ats_g_type_interface_get_plugin: (type_c2ats_GType, type_c2ats_GType) -> [l1:addr] (ptr_v_1(type_c2ats_GTypePlugin, l1) | ptr l1) = "mac#g_type_interface_get_plugin"
fun fun_c2ats_g_type_fundamental_next: () -> type_c2ats_GType = "mac#g_type_fundamental_next"
fun fun_c2ats_g_type_fundamental: (type_c2ats_GType) -> type_c2ats_GType = "mac#g_type_fundamental"
fun fun_c2ats_g_type_create_instance: (type_c2ats_GType) -> [l1:addr] (ptr_v_1(type_c2ats_GTypeInstance, l1) | ptr l1) = "mac#g_type_create_instance"
fun fun_c2ats_g_type_free_instance: {l1:addr} (!ptr_v_1(type_c2ats_GTypeInstance, l1) | ptr l1) -> void = "mac#g_type_free_instance"
fun fun_c2ats_g_type_add_class_cache_func: (type_c2ats_gpointer, type_c2ats_GTypeClassCacheFunc) -> void = "mac#g_type_add_class_cache_func"
fun fun_c2ats_g_type_remove_class_cache_func: (type_c2ats_gpointer, type_c2ats_GTypeClassCacheFunc) -> void = "mac#g_type_remove_class_cache_func"
fun fun_c2ats_g_type_class_unref_uncached: (type_c2ats_gpointer) -> void = "mac#g_type_class_unref_uncached"
fun fun_c2ats_g_type_add_interface_check: (type_c2ats_gpointer, type_c2ats_GTypeInterfaceCheckFunc) -> void = "mac#g_type_add_interface_check"
fun fun_c2ats_g_type_remove_interface_check: (type_c2ats_gpointer, type_c2ats_GTypeInterfaceCheckFunc) -> void = "mac#g_type_remove_interface_check"
fun fun_c2ats_g_type_value_table_peek: (type_c2ats_GType) -> [l1:addr] (ptr_v_1(type_c2ats_GTypeValueTable, l1) | ptr l1) = "mac#g_type_value_table_peek"
fun fun_c2ats_g_type_check_instance: {l1:addr} (!ptr_v_1(type_c2ats_GTypeInstance, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_type_check_instance"
fun fun_c2ats_g_type_check_instance_cast: {l1:addr} (!ptr_v_1(type_c2ats_GTypeInstance, l1) | ptr l1, type_c2ats_GType) -> [l2:addr] (ptr_v_1(type_c2ats_GTypeInstance, l2) | ptr l2) = "mac#g_type_check_instance_cast"
fun fun_c2ats_g_type_check_instance_is_a: {l1:addr} (!ptr_v_1(type_c2ats_GTypeInstance, l1) | ptr l1, type_c2ats_GType) -> type_c2ats_gboolean = "mac#g_type_check_instance_is_a"
fun fun_c2ats_g_type_check_instance_is_fundamentally_a: {l1:addr} (!ptr_v_1(type_c2ats_GTypeInstance, l1) | ptr l1, type_c2ats_GType) -> type_c2ats_gboolean = "mac#g_type_check_instance_is_fundamentally_a"
fun fun_c2ats_g_type_check_class_cast: {l1:addr} (!ptr_v_1(type_c2ats_GTypeClass, l1) | ptr l1, type_c2ats_GType) -> [l2:addr] (ptr_v_1(type_c2ats_GTypeClass, l2) | ptr l2) = "mac#g_type_check_class_cast"
fun fun_c2ats_g_type_check_class_is_a: {l1:addr} (!ptr_v_1(type_c2ats_GTypeClass, l1) | ptr l1, type_c2ats_GType) -> type_c2ats_gboolean = "mac#g_type_check_class_is_a"
fun fun_c2ats_g_type_check_is_value_type: (type_c2ats_GType) -> type_c2ats_gboolean = "mac#g_type_check_is_value_type"
fun fun_c2ats_g_type_check_value: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_type_check_value"
fun fun_c2ats_g_type_check_value_holds: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_GType) -> type_c2ats_gboolean = "mac#g_type_check_value_holds"
fun fun_c2ats_g_type_test_flags: (type_c2ats_GType, type_c2ats_guint) -> type_c2ats_gboolean = "mac#g_type_test_flags"
fun fun_c2ats_g_type_name_from_instance: {l1:addr} (!ptr_v_1(type_c2ats_GTypeInstance, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_type_name_from_instance"
fun fun_c2ats_g_type_name_from_class: {l1:addr} (!ptr_v_1(type_c2ats_GTypeClass, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_type_name_from_class"
// File: /usr/include/glib-2.0/gobject/gvalue.h
typedef type_c2ats_GValueTransform = {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> void
typedef union_c2ats_anon_44017 = $extype_struct"union { gint v_int; guint v_uint; glong v_long; gulong v_ulong; gint64 v_int64; guint64 v_uint64; gfloat v_float; gdouble v_double; gpointer v_pointer; }" of {
  v_int = type_c2ats_gint,
  v_uint = type_c2ats_guint,
  v_long = type_c2ats_glong,
  v_ulong = type_c2ats_gulong,
  v_int64 = type_c2ats_gint64,
  v_uint64 = type_c2ats_guint64,
  v_float = type_c2ats_gfloat,
  v_double = type_c2ats_gdouble,
  v_pointer = type_c2ats_gpointer
}
typedef struct_c2ats__GValue = $extype_struct"struct _GValue" of {
  g_type = type_c2ats_GType,
  data = @[union_c2ats_anon_44017][2]
}
fun fun_c2ats_g_value_init: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_GType) -> [l2:addr] (ptr_v_1(type_c2ats_GValue, l2) | ptr l2) = "mac#g_value_init"
fun fun_c2ats_g_value_copy: {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> void = "mac#g_value_copy"
fun fun_c2ats_g_value_reset: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GValue, l2) | ptr l2) = "mac#g_value_reset"
fun fun_c2ats_g_value_unset: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> void = "mac#g_value_unset"
fun fun_c2ats_g_value_set_instance: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_value_set_instance"
fun fun_c2ats_g_value_init_from_instance: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_value_init_from_instance"
fun fun_c2ats_g_value_fits_pointer: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_value_fits_pointer"
fun fun_c2ats_g_value_peek_pointer: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_value_peek_pointer"
fun fun_c2ats_g_value_type_compatible: (type_c2ats_GType, type_c2ats_GType) -> type_c2ats_gboolean = "mac#g_value_type_compatible"
fun fun_c2ats_g_value_type_transformable: (type_c2ats_GType, type_c2ats_GType) -> type_c2ats_gboolean = "mac#g_value_type_transformable"
fun fun_c2ats_g_value_transform: {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_value_transform"
fun fun_c2ats_g_value_register_transform_func: (type_c2ats_GType, type_c2ats_GType, type_c2ats_GValueTransform) -> void = "mac#g_value_register_transform_func"
// File: /usr/include/glib-2.0/gobject/gparam.h
typedef type_c2ats_GParamFlags = int
#define enum_c2ats_G_PARAM_READABLE 1 << 0
#define enum_c2ats_G_PARAM_WRITABLE 1 << 1
#define enum_c2ats_G_PARAM_READWRITE G_PARAM_READABLE lor G_PARAM_WRITABLE
#define enum_c2ats_G_PARAM_CONSTRUCT 1 << 2
#define enum_c2ats_G_PARAM_CONSTRUCT_ONLY 1 << 3
#define enum_c2ats_G_PARAM_LAX_VALIDATION 1 << 4
#define enum_c2ats_G_PARAM_STATIC_NAME 1 << 5
#define enum_c2ats_G_PARAM_PRIVATE G_PARAM_STATIC_NAME
#define enum_c2ats_G_PARAM_STATIC_NICK 1 << 6
#define enum_c2ats_G_PARAM_STATIC_BLURB 1 << 7
#define enum_c2ats_G_PARAM_EXPLICIT_NOTIFY 1 << 30
#define enum_c2ats_G_PARAM_DEPRECATED (1u << 31)
abst@ype struct_c2ats__GParamSpec // FIXME! Forward declaration.
typedef type_c2ats_GParamSpec = struct_c2ats__GParamSpec
abst@ype struct_c2ats__GParamSpecClass // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecClass = struct_c2ats__GParamSpecClass
abst@ype struct_c2ats__GParameter // FIXME! Forward declaration.
typedef type_c2ats_GParameter = struct_c2ats__GParameter
abst@ype struct_c2ats__GParamSpecPool // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecPool = struct_c2ats__GParamSpecPool
typedef struct_c2ats__GParamSpec = $extype_struct"struct _GParamSpec" of {
  g_type_instance = type_c2ats_GTypeInstance,
  name = ptr (* cPtr0(type_c2ats_gchar) *),
  flags = type_c2ats_GParamFlags,
  value_type = type_c2ats_GType,
  owner_type = type_c2ats_GType,
  _nick = ptr (* cPtr0(type_c2ats_gchar) *),
  _blurb = ptr (* cPtr0(type_c2ats_gchar) *),
  qdata = ptr (* cPtr0(type_c2ats_GData) *),
  ref_count = type_c2ats_guint,
  param_id = type_c2ats_guint
}
typedef struct_c2ats__GParamSpecClass = $extype_struct"struct _GParamSpecClass" of {
  g_type_class = type_c2ats_GTypeClass,
  value_type = type_c2ats_GType,
  finalize = {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | ptr l1) -> void,
  value_set_default = {l1,l2:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> void,
  value_validate = {l1,l2:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  values_cmp = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gint,
  dummy = @[type_c2ats_gpointer][4]
}
typedef struct_c2ats__GParameter = $extype_struct"struct _GParameter" of {
  name = ptr (* cPtr0(type_c2ats_gchar) *),
  value = type_c2ats_GValue
}
fun fun_c2ats_g_param_spec_ref: {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l2) = "mac#g_param_spec_ref"
fun fun_c2ats_g_param_spec_unref: {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | ptr l1) -> void = "mac#g_param_spec_unref"
fun fun_c2ats_g_param_spec_sink: {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | ptr l1) -> void = "mac#g_param_spec_sink"
fun fun_c2ats_g_param_spec_ref_sink: {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l2) = "mac#g_param_spec_ref_sink"
fun fun_c2ats_g_param_spec_get_qdata: {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | ptr l1, type_c2ats_GQuark) -> type_c2ats_gpointer = "mac#g_param_spec_get_qdata"
fun fun_c2ats_g_param_spec_set_qdata: {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | ptr l1, type_c2ats_GQuark, type_c2ats_gpointer) -> void = "mac#g_param_spec_set_qdata"
fun fun_c2ats_g_param_spec_set_qdata_full: {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | ptr l1, type_c2ats_GQuark, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#g_param_spec_set_qdata_full"
fun fun_c2ats_g_param_spec_steal_qdata: {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | ptr l1, type_c2ats_GQuark) -> type_c2ats_gpointer = "mac#g_param_spec_steal_qdata"
fun fun_c2ats_g_param_spec_get_redirect_target: {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l2) = "mac#g_param_spec_get_redirect_target"
fun fun_c2ats_g_param_value_set_default: {l1,l2:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> void = "mac#g_param_value_set_default"
fun fun_c2ats_g_param_value_defaults: {l1,l2:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_param_value_defaults"
fun fun_c2ats_g_param_value_validate: {l1,l2:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_param_value_validate"
fun fun_c2ats_g_param_value_convert: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#g_param_value_convert"
fun fun_c2ats_g_param_values_cmp: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gint = "mac#g_param_values_cmp"
fun fun_c2ats_g_param_spec_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_param_spec_get_name"
fun fun_c2ats_g_param_spec_get_nick: {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_param_spec_get_nick"
fun fun_c2ats_g_param_spec_get_blurb: {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_param_spec_get_blurb"
fun fun_c2ats_g_value_set_param: {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l1, ptr l2) -> void = "mac#g_value_set_param"
fun fun_c2ats_g_value_get_param: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l2) = "mac#g_value_get_param"
fun fun_c2ats_g_value_dup_param: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l2) = "mac#g_value_dup_param"
fun fun_c2ats_g_value_take_param: {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l1, ptr l2) -> void = "mac#g_value_take_param"
fun fun_c2ats_g_value_set_param_take_ownership: {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l1, ptr l2) -> void = "mac#g_value_set_param_take_ownership"
fun fun_c2ats_g_param_spec_get_default_value: {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GValue, l2) | ptr l2) = "mac#g_param_spec_get_default_value"
fun fun_c2ats_g_param_spec_get_name_quark: {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | ptr l1) -> type_c2ats_GQuark = "mac#g_param_spec_get_name_quark"
abst@ype struct_c2ats__GParamSpecTypeInfo // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecTypeInfo = struct_c2ats__GParamSpecTypeInfo
typedef struct_c2ats__GParamSpecTypeInfo = $extype_struct"struct _GParamSpecTypeInfo" of {
  instance_size = type_c2ats_guint16,
  n_preallocs = type_c2ats_guint16,
  instance_init = {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | ptr l1) -> void,
  value_type = type_c2ats_GType,
  finalize = {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | ptr l1) -> void,
  value_set_default = {l1,l2:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> void,
  value_validate = {l1,l2:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  values_cmp = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gint
}
fun fun_c2ats_g_param_type_register_static: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GParamSpecTypeInfo, l2) | ptr l1, ptr l2) -> type_c2ats_GType = "mac#g_param_type_register_static"
fun fun_c2ats__g_param_type_register_static_constant: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GParamSpecTypeInfo, l2) | ptr l1, ptr l2, type_c2ats_GType) -> type_c2ats_GType = "mac#_g_param_type_register_static_constant"
fun fun_c2ats_g_param_spec_internal: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | type_c2ats_GType, ptr l1, ptr l2, ptr l3, type_c2ats_GParamFlags) -> type_c2ats_gpointer = "mac#g_param_spec_internal"
fun fun_c2ats_g_param_spec_pool_new: (type_c2ats_gboolean) -> [l1:addr] (ptr_v_1(type_c2ats_GParamSpecPool, l1) | ptr l1) = "mac#g_param_spec_pool_new"
fun fun_c2ats_g_param_spec_pool_insert: {l1,l2:addr} (!ptr_v_1(type_c2ats_GParamSpecPool, l1), !ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l1, ptr l2, type_c2ats_GType) -> void = "mac#g_param_spec_pool_insert"
fun fun_c2ats_g_param_spec_pool_remove: {l1,l2:addr} (!ptr_v_1(type_c2ats_GParamSpecPool, l1), !ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l1, ptr l2) -> void = "mac#g_param_spec_pool_remove"
fun fun_c2ats_g_param_spec_pool_lookup: {l1,l2:addr} (!ptr_v_1(type_c2ats_GParamSpecPool, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GType, type_c2ats_gboolean) -> [l3:addr] (ptr_v_1(type_c2ats_GParamSpec, l3) | ptr l3) = "mac#g_param_spec_pool_lookup"
fun fun_c2ats_g_param_spec_pool_list_owned: {l1:addr} (!ptr_v_1(type_c2ats_GParamSpecPool, l1) | ptr l1, type_c2ats_GType) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_param_spec_pool_list_owned"
fun fun_c2ats_g_param_spec_pool_list: {l1,l2:addr} (!ptr_v_1(type_c2ats_GParamSpecPool, l1), !ptr_v_1(type_c2ats_guint, l2) | ptr l1, type_c2ats_GType, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_GParamSpec, l3, l3_1) | ptr l3) = "mac#g_param_spec_pool_list"
// File: /usr/include/glib-2.0/gobject/gclosure.h
abst@ype struct_c2ats__GClosure // FIXME! Forward declaration.
typedef type_c2ats_GClosure = struct_c2ats__GClosure
abst@ype struct_c2ats__GClosureNotifyData // FIXME! Forward declaration.
typedef type_c2ats_GClosureNotifyData = struct_c2ats__GClosureNotifyData
typedef type_c2ats_GCallback = () -> void
typedef type_c2ats_GClosureNotify = {l1:addr} (!ptr_v_1(type_c2ats_GClosure, l1) | type_c2ats_gpointer, ptr l1) -> void
typedef type_c2ats_GClosureMarshal = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void
typedef type_c2ats_GVaClosureMarshal = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void
abst@ype struct_c2ats__GCClosure // FIXME! Forward declaration.
typedef type_c2ats_GCClosure = struct_c2ats__GCClosure
typedef struct_c2ats__GClosureNotifyData = $extype_struct"struct _GClosureNotifyData" of {
  data = type_c2ats_gpointer,
  notify = type_c2ats_GClosureNotify
}
typedef struct_c2ats__GClosure = $extype_struct"struct _GClosure" of {
  ref_count = type_c2ats_guint,
  meta_marshal_nouse = type_c2ats_guint,
  n_guards = type_c2ats_guint,
  n_fnotifiers = type_c2ats_guint,
  n_inotifiers = type_c2ats_guint,
  in_inotify = type_c2ats_guint,
  floating = type_c2ats_guint,
  derivative_flag = type_c2ats_guint,
  in_marshal = type_c2ats_guint,
  is_invalid = type_c2ats_guint,
  marshal = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void,
  data = type_c2ats_gpointer,
  notifiers = ptr (* cPtr0(type_c2ats_GClosureNotifyData) *)
}
typedef struct_c2ats__GCClosure = $extype_struct"struct _GCClosure" of {
  closure = type_c2ats_GClosure,
  callback = type_c2ats_gpointer
}
fun fun_c2ats_g_cclosure_new: (type_c2ats_GCallback, type_c2ats_gpointer, type_c2ats_GClosureNotify) -> [l1:addr] (ptr_v_1(type_c2ats_GClosure, l1) | ptr l1) = "mac#g_cclosure_new"
fun fun_c2ats_g_cclosure_new_swap: (type_c2ats_GCallback, type_c2ats_gpointer, type_c2ats_GClosureNotify) -> [l1:addr] (ptr_v_1(type_c2ats_GClosure, l1) | ptr l1) = "mac#g_cclosure_new_swap"
fun fun_c2ats_g_signal_type_cclosure_new: (type_c2ats_GType, type_c2ats_guint) -> [l1:addr] (ptr_v_1(type_c2ats_GClosure, l1) | ptr l1) = "mac#g_signal_type_cclosure_new"
fun fun_c2ats_g_closure_ref: {l1:addr} (!ptr_v_1(type_c2ats_GClosure, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GClosure, l2) | ptr l2) = "mac#g_closure_ref"
fun fun_c2ats_g_closure_sink: {l1:addr} (!ptr_v_1(type_c2ats_GClosure, l1) | ptr l1) -> void = "mac#g_closure_sink"
fun fun_c2ats_g_closure_unref: {l1:addr} (!ptr_v_1(type_c2ats_GClosure, l1) | ptr l1) -> void = "mac#g_closure_unref"
fun fun_c2ats_g_closure_new_simple: (type_c2ats_guint, type_c2ats_gpointer) -> [l1:addr] (ptr_v_1(type_c2ats_GClosure, l1) | ptr l1) = "mac#g_closure_new_simple"
fun fun_c2ats_g_closure_add_finalize_notifier: {l1:addr} (!ptr_v_1(type_c2ats_GClosure, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GClosureNotify) -> void = "mac#g_closure_add_finalize_notifier"
fun fun_c2ats_g_closure_remove_finalize_notifier: {l1:addr} (!ptr_v_1(type_c2ats_GClosure, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GClosureNotify) -> void = "mac#g_closure_remove_finalize_notifier"
fun fun_c2ats_g_closure_add_invalidate_notifier: {l1:addr} (!ptr_v_1(type_c2ats_GClosure, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GClosureNotify) -> void = "mac#g_closure_add_invalidate_notifier"
fun fun_c2ats_g_closure_remove_invalidate_notifier: {l1:addr} (!ptr_v_1(type_c2ats_GClosure, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GClosureNotify) -> void = "mac#g_closure_remove_invalidate_notifier"
fun fun_c2ats_g_closure_add_marshal_guards: {l1:addr} (!ptr_v_1(type_c2ats_GClosure, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GClosureNotify, type_c2ats_gpointer, type_c2ats_GClosureNotify) -> void = "mac#g_closure_add_marshal_guards"
fun fun_c2ats_g_closure_set_marshal: {l1:addr} (!ptr_v_1(type_c2ats_GClosure, l1) | ptr l1, type_c2ats_GClosureMarshal) -> void = "mac#g_closure_set_marshal"
fun fun_c2ats_g_closure_set_meta_marshal: {l1:addr} (!ptr_v_1(type_c2ats_GClosure, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GClosureMarshal) -> void = "mac#g_closure_set_meta_marshal"
fun fun_c2ats_g_closure_invalidate: {l1:addr} (!ptr_v_1(type_c2ats_GClosure, l1) | ptr l1) -> void = "mac#g_closure_invalidate"
fun fun_c2ats_g_closure_invoke: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer) -> void = "mac#g_closure_invoke"
fun fun_c2ats_g_cclosure_marshal_generic: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_generic"
fun fun_c2ats_g_cclosure_marshal_generic_va: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_generic_va"
// File: /usr/include/glib-2.0/gobject/gmarshal.h
fun fun_c2ats_g_cclosure_marshal_VOID__VOID: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_VOID__VOID"
fun fun_c2ats_g_cclosure_marshal_VOID__VOIDv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_VOID__VOIDv"
fun fun_c2ats_g_cclosure_marshal_VOID__BOOLEAN: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_VOID__BOOLEAN"
fun fun_c2ats_g_cclosure_marshal_VOID__BOOLEANv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_VOID__BOOLEANv"
fun fun_c2ats_g_cclosure_marshal_VOID__CHAR: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_VOID__CHAR"
fun fun_c2ats_g_cclosure_marshal_VOID__CHARv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_VOID__CHARv"
fun fun_c2ats_g_cclosure_marshal_VOID__UCHAR: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_VOID__UCHAR"
fun fun_c2ats_g_cclosure_marshal_VOID__UCHARv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_VOID__UCHARv"
fun fun_c2ats_g_cclosure_marshal_VOID__INT: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_VOID__INT"
fun fun_c2ats_g_cclosure_marshal_VOID__INTv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_VOID__INTv"
fun fun_c2ats_g_cclosure_marshal_VOID__UINT: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_VOID__UINT"
fun fun_c2ats_g_cclosure_marshal_VOID__UINTv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_VOID__UINTv"
fun fun_c2ats_g_cclosure_marshal_VOID__LONG: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_VOID__LONG"
fun fun_c2ats_g_cclosure_marshal_VOID__LONGv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_VOID__LONGv"
fun fun_c2ats_g_cclosure_marshal_VOID__ULONG: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_VOID__ULONG"
fun fun_c2ats_g_cclosure_marshal_VOID__ULONGv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_VOID__ULONGv"
fun fun_c2ats_g_cclosure_marshal_VOID__ENUM: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_VOID__ENUM"
fun fun_c2ats_g_cclosure_marshal_VOID__ENUMv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_VOID__ENUMv"
fun fun_c2ats_g_cclosure_marshal_VOID__FLAGS: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_VOID__FLAGS"
fun fun_c2ats_g_cclosure_marshal_VOID__FLAGSv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_VOID__FLAGSv"
fun fun_c2ats_g_cclosure_marshal_VOID__FLOAT: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_VOID__FLOAT"
fun fun_c2ats_g_cclosure_marshal_VOID__FLOATv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_VOID__FLOATv"
fun fun_c2ats_g_cclosure_marshal_VOID__DOUBLE: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_VOID__DOUBLE"
fun fun_c2ats_g_cclosure_marshal_VOID__DOUBLEv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_VOID__DOUBLEv"
fun fun_c2ats_g_cclosure_marshal_VOID__STRING: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_VOID__STRING"
fun fun_c2ats_g_cclosure_marshal_VOID__STRINGv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_VOID__STRINGv"
fun fun_c2ats_g_cclosure_marshal_VOID__PARAM: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_VOID__PARAM"
fun fun_c2ats_g_cclosure_marshal_VOID__PARAMv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_VOID__PARAMv"
fun fun_c2ats_g_cclosure_marshal_VOID__BOXED: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_VOID__BOXED"
fun fun_c2ats_g_cclosure_marshal_VOID__BOXEDv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_VOID__BOXEDv"
fun fun_c2ats_g_cclosure_marshal_VOID__POINTER: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_VOID__POINTER"
fun fun_c2ats_g_cclosure_marshal_VOID__POINTERv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_VOID__POINTERv"
fun fun_c2ats_g_cclosure_marshal_VOID__OBJECT: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_VOID__OBJECT"
fun fun_c2ats_g_cclosure_marshal_VOID__OBJECTv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_VOID__OBJECTv"
fun fun_c2ats_g_cclosure_marshal_VOID__VARIANT: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_VOID__VARIANT"
fun fun_c2ats_g_cclosure_marshal_VOID__VARIANTv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_VOID__VARIANTv"
fun fun_c2ats_g_cclosure_marshal_VOID__UINT_POINTER: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_VOID__UINT_POINTER"
fun fun_c2ats_g_cclosure_marshal_VOID__UINT_POINTERv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_VOID__UINT_POINTERv"
fun fun_c2ats_g_cclosure_marshal_BOOLEAN__FLAGS: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_BOOLEAN__FLAGS"
fun fun_c2ats_g_cclosure_marshal_BOOLEAN__FLAGSv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_BOOLEAN__FLAGSv"
fun fun_c2ats_g_cclosure_marshal_STRING__OBJECT_POINTER: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_STRING__OBJECT_POINTER"
fun fun_c2ats_g_cclosure_marshal_STRING__OBJECT_POINTERv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_STRING__OBJECT_POINTERv"
fun fun_c2ats_g_cclosure_marshal_BOOLEAN__BOXED_BOXED: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, type_c2ats_gpointer, type_c2ats_gpointer) -> void = "mac#g_cclosure_marshal_BOOLEAN__BOXED_BOXED"
fun fun_c2ats_g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GClosure, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_va_list, type_c2ats_gpointer, int, ptr l3) -> void = "mac#g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv"
// File: /usr/include/glib-2.0/gobject/gsignal.h
abst@ype struct_c2ats__GSignalQuery // FIXME! Forward declaration.
typedef type_c2ats_GSignalQuery = struct_c2ats__GSignalQuery
abst@ype struct_c2ats__GSignalInvocationHint // FIXME! Forward declaration.
typedef type_c2ats_GSignalInvocationHint = struct_c2ats__GSignalInvocationHint
typedef type_c2ats_GSignalCMarshaller = type_c2ats_GClosureMarshal
typedef type_c2ats_GSignalCVaMarshaller = type_c2ats_GVaClosureMarshal
typedef type_c2ats_GSignalEmissionHook = {l1,l2:addr} (!ptr_v_1(type_c2ats_GSignalInvocationHint, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, type_c2ats_guint, ptr l2, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GSignalAccumulator = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSignalInvocationHint, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GSignalFlags = int
#define enum_c2ats_G_SIGNAL_RUN_FIRST 1 << 0
#define enum_c2ats_G_SIGNAL_RUN_LAST 1 << 1
#define enum_c2ats_G_SIGNAL_RUN_CLEANUP 1 << 2
#define enum_c2ats_G_SIGNAL_NO_RECURSE 1 << 3
#define enum_c2ats_G_SIGNAL_DETAILED 1 << 4
#define enum_c2ats_G_SIGNAL_ACTION 1 << 5
#define enum_c2ats_G_SIGNAL_NO_HOOKS 1 << 6
#define enum_c2ats_G_SIGNAL_MUST_COLLECT 1 << 7
#define enum_c2ats_G_SIGNAL_DEPRECATED 1 << 8
typedef type_c2ats_GConnectFlags = int
#define enum_c2ats_G_CONNECT_AFTER 1 << 0
#define enum_c2ats_G_CONNECT_SWAPPED 1 << 1
typedef type_c2ats_GSignalMatchType = int
#define enum_c2ats_G_SIGNAL_MATCH_ID 1 << 0
#define enum_c2ats_G_SIGNAL_MATCH_DETAIL 1 << 1
#define enum_c2ats_G_SIGNAL_MATCH_CLOSURE 1 << 2
#define enum_c2ats_G_SIGNAL_MATCH_FUNC 1 << 3
#define enum_c2ats_G_SIGNAL_MATCH_DATA 1 << 4
#define enum_c2ats_G_SIGNAL_MATCH_UNBLOCKED 1 << 5
typedef struct_c2ats__GSignalInvocationHint = $extype_struct"struct _GSignalInvocationHint" of {
  signal_id = type_c2ats_guint,
  detail = type_c2ats_GQuark,
  run_type = type_c2ats_GSignalFlags
}
typedef struct_c2ats__GSignalQuery = $extype_struct"struct _GSignalQuery" of {
  signal_id = type_c2ats_guint,
  signal_name = ptr (* cPtr0(type_c2ats_gchar) *),
  itype = type_c2ats_GType,
  signal_flags = type_c2ats_GSignalFlags,
  return_type = type_c2ats_GType,
  n_params = type_c2ats_guint,
  param_types = ptr (* cPtr0(type_c2ats_GType) *)
}
fun fun_c2ats_g_signal_newv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GClosure, l2), !ptr_v_1(type_c2ats_GType, l3) | ptr l1, type_c2ats_GType, type_c2ats_GSignalFlags, ptr l2, type_c2ats_GSignalAccumulator, type_c2ats_gpointer, type_c2ats_GSignalCMarshaller, type_c2ats_GType, type_c2ats_guint, ptr l3) -> type_c2ats_guint = "mac#g_signal_newv"
fun fun_c2ats_g_signal_new_valist: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GClosure, l2) | ptr l1, type_c2ats_GType, type_c2ats_GSignalFlags, ptr l2, type_c2ats_GSignalAccumulator, type_c2ats_gpointer, type_c2ats_GSignalCMarshaller, type_c2ats_GType, type_c2ats_guint, type_c2ats_va_list) -> type_c2ats_guint = "mac#g_signal_new_valist"
fun fun_c2ats_g_signal_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_GType, type_c2ats_GSignalFlags, type_c2ats_guint, type_c2ats_GSignalAccumulator, type_c2ats_gpointer, type_c2ats_GSignalCMarshaller, type_c2ats_GType, type_c2ats_guint) -> type_c2ats_guint = "mac#g_signal_new"
fun fun_c2ats_g_signal_new_class_handler: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_GType, type_c2ats_GSignalFlags, type_c2ats_GCallback, type_c2ats_GSignalAccumulator, type_c2ats_gpointer, type_c2ats_GSignalCMarshaller, type_c2ats_GType, type_c2ats_guint) -> type_c2ats_guint = "mac#g_signal_new_class_handler"
fun fun_c2ats_g_signal_set_va_marshaller: (type_c2ats_guint, type_c2ats_GType, type_c2ats_GSignalCVaMarshaller) -> void = "mac#g_signal_set_va_marshaller"
fun fun_c2ats_g_signal_emitv: {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, type_c2ats_guint, type_c2ats_GQuark, ptr l2) -> void = "mac#g_signal_emitv"
fun fun_c2ats_g_signal_emit_valist: (type_c2ats_gpointer, type_c2ats_guint, type_c2ats_GQuark, type_c2ats_va_list) -> void = "mac#g_signal_emit_valist"
fun fun_c2ats_g_signal_emit: (type_c2ats_gpointer, type_c2ats_guint, type_c2ats_GQuark) -> void = "mac#g_signal_emit"
fun fun_c2ats_g_signal_emit_by_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_gpointer, ptr l1) -> void = "mac#g_signal_emit_by_name"
fun fun_c2ats_g_signal_lookup: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_GType) -> type_c2ats_guint = "mac#g_signal_lookup"
fun fun_c2ats_g_signal_name: (type_c2ats_guint) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_signal_name"
fun fun_c2ats_g_signal_query: {l1:addr} (!ptr_v_1(type_c2ats_GSignalQuery, l1) | type_c2ats_guint, ptr l1) -> void = "mac#g_signal_query"
fun fun_c2ats_g_signal_list_ids: {l1:addr} (!ptr_v_1(type_c2ats_guint, l1) | type_c2ats_GType, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_guint, l2) | ptr l2) = "mac#g_signal_list_ids"
fun fun_c2ats_g_signal_parse_name: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_guint, l2), !ptr_v_1(type_c2ats_GQuark, l3) | ptr l1, type_c2ats_GType, ptr l2, ptr l3, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#g_signal_parse_name"
fun fun_c2ats_g_signal_get_invocation_hint: (type_c2ats_gpointer) -> [l1:addr] (ptr_v_1(type_c2ats_GSignalInvocationHint, l1) | ptr l1) = "mac#g_signal_get_invocation_hint"
fun fun_c2ats_g_signal_stop_emission: (type_c2ats_gpointer, type_c2ats_guint, type_c2ats_GQuark) -> void = "mac#g_signal_stop_emission"
fun fun_c2ats_g_signal_stop_emission_by_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_gpointer, ptr l1) -> void = "mac#g_signal_stop_emission_by_name"
fun fun_c2ats_g_signal_add_emission_hook: (type_c2ats_guint, type_c2ats_GQuark, type_c2ats_GSignalEmissionHook, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_gulong = "mac#g_signal_add_emission_hook"
fun fun_c2ats_g_signal_remove_emission_hook: (type_c2ats_guint, type_c2ats_gulong) -> void = "mac#g_signal_remove_emission_hook"
fun fun_c2ats_g_signal_has_handler_pending: (type_c2ats_gpointer, type_c2ats_guint, type_c2ats_GQuark, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#g_signal_has_handler_pending"
fun fun_c2ats_g_signal_connect_closure_by_id: {l1:addr} (!ptr_v_1(type_c2ats_GClosure, l1) | type_c2ats_gpointer, type_c2ats_guint, type_c2ats_GQuark, ptr l1, type_c2ats_gboolean) -> type_c2ats_gulong = "mac#g_signal_connect_closure_by_id"
fun fun_c2ats_g_signal_connect_closure: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GClosure, l2) | type_c2ats_gpointer, ptr l1, ptr l2, type_c2ats_gboolean) -> type_c2ats_gulong = "mac#g_signal_connect_closure"
fun fun_c2ats_g_signal_connect_data: (type_c2ats_gpointer, string, type_c2ats_GCallback, type_c2ats_gpointer, type_c2ats_GClosureNotify, type_c2ats_GConnectFlags) -> type_c2ats_gulong = "mac#g_signal_connect_data"
fun fun_c2ats_g_signal_handler_block: (type_c2ats_gpointer, type_c2ats_gulong) -> void = "mac#g_signal_handler_block"
fun fun_c2ats_g_signal_handler_unblock: (type_c2ats_gpointer, type_c2ats_gulong) -> void = "mac#g_signal_handler_unblock"
fun fun_c2ats_g_signal_handler_disconnect: (type_c2ats_gpointer, type_c2ats_gulong) -> void = "mac#g_signal_handler_disconnect"
fun fun_c2ats_g_signal_handler_is_connected: (type_c2ats_gpointer, type_c2ats_gulong) -> type_c2ats_gboolean = "mac#g_signal_handler_is_connected"
fun fun_c2ats_g_signal_handler_find: {l1:addr} (!ptr_v_1(type_c2ats_GClosure, l1) | type_c2ats_gpointer, type_c2ats_GSignalMatchType, type_c2ats_guint, type_c2ats_GQuark, ptr l1, type_c2ats_gpointer, type_c2ats_gpointer) -> type_c2ats_gulong = "mac#g_signal_handler_find"
fun fun_c2ats_g_signal_handlers_block_matched: {l1:addr} (!ptr_v_1(type_c2ats_GClosure, l1) | type_c2ats_gpointer, type_c2ats_GSignalMatchType, type_c2ats_guint, type_c2ats_GQuark, ptr l1, type_c2ats_gpointer, type_c2ats_gpointer) -> type_c2ats_guint = "mac#g_signal_handlers_block_matched"
fun fun_c2ats_g_signal_handlers_unblock_matched: {l1:addr} (!ptr_v_1(type_c2ats_GClosure, l1) | type_c2ats_gpointer, type_c2ats_GSignalMatchType, type_c2ats_guint, type_c2ats_GQuark, ptr l1, type_c2ats_gpointer, type_c2ats_gpointer) -> type_c2ats_guint = "mac#g_signal_handlers_unblock_matched"
fun fun_c2ats_g_signal_handlers_disconnect_matched: {l1:addr} (!ptr_v_1(type_c2ats_GClosure, l1) | type_c2ats_gpointer, type_c2ats_GSignalMatchType, type_c2ats_guint, type_c2ats_GQuark, ptr l1, type_c2ats_gpointer, type_c2ats_gpointer) -> type_c2ats_guint = "mac#g_signal_handlers_disconnect_matched"
fun fun_c2ats_g_signal_override_class_closure: {l1:addr} (!ptr_v_1(type_c2ats_GClosure, l1) | type_c2ats_guint, type_c2ats_GType, ptr l1) -> void = "mac#g_signal_override_class_closure"
fun fun_c2ats_g_signal_override_class_handler: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_GType, type_c2ats_GCallback) -> void = "mac#g_signal_override_class_handler"
fun fun_c2ats_g_signal_chain_from_overridden: {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> void = "mac#g_signal_chain_from_overridden"
fun fun_c2ats_g_signal_chain_from_overridden_handler: (type_c2ats_gpointer) -> void = "mac#g_signal_chain_from_overridden_handler"
fun fun_c2ats_g_signal_accumulator_true_handled: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSignalInvocationHint, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#g_signal_accumulator_true_handled"
fun fun_c2ats_g_signal_accumulator_first_wins: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSignalInvocationHint, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#g_signal_accumulator_first_wins"
fun fun_c2ats_g_signal_handlers_destroy: (type_c2ats_gpointer) -> void = "mac#g_signal_handlers_destroy"
fun fun_c2ats__g_signals_destroy: (type_c2ats_GType) -> void = "mac#_g_signals_destroy"
// File: /usr/include/glib-2.0/gobject/glib-types.h
fun fun_c2ats_g_date_get_type: () -> type_c2ats_GType = "mac#g_date_get_type"
fun fun_c2ats_g_strv_get_type: () -> type_c2ats_GType = "mac#g_strv_get_type"
fun fun_c2ats_g_gstring_get_type: () -> type_c2ats_GType = "mac#g_gstring_get_type"
fun fun_c2ats_g_hash_table_get_type: () -> type_c2ats_GType = "mac#g_hash_table_get_type"
fun fun_c2ats_g_array_get_type: () -> type_c2ats_GType = "mac#g_array_get_type"
fun fun_c2ats_g_byte_array_get_type: () -> type_c2ats_GType = "mac#g_byte_array_get_type"
fun fun_c2ats_g_ptr_array_get_type: () -> type_c2ats_GType = "mac#g_ptr_array_get_type"
fun fun_c2ats_g_bytes_get_type: () -> type_c2ats_GType = "mac#g_bytes_get_type"
fun fun_c2ats_g_variant_type_get_gtype: () -> type_c2ats_GType = "mac#g_variant_type_get_gtype"
fun fun_c2ats_g_regex_get_type: () -> type_c2ats_GType = "mac#g_regex_get_type"
fun fun_c2ats_g_match_info_get_type: () -> type_c2ats_GType = "mac#g_match_info_get_type"
fun fun_c2ats_g_error_get_type: () -> type_c2ats_GType = "mac#g_error_get_type"
fun fun_c2ats_g_date_time_get_type: () -> type_c2ats_GType = "mac#g_date_time_get_type"
fun fun_c2ats_g_time_zone_get_type: () -> type_c2ats_GType = "mac#g_time_zone_get_type"
fun fun_c2ats_g_io_channel_get_type: () -> type_c2ats_GType = "mac#g_io_channel_get_type"
fun fun_c2ats_g_io_condition_get_type: () -> type_c2ats_GType = "mac#g_io_condition_get_type"
fun fun_c2ats_g_variant_builder_get_type: () -> type_c2ats_GType = "mac#g_variant_builder_get_type"
fun fun_c2ats_g_variant_dict_get_type: () -> type_c2ats_GType = "mac#g_variant_dict_get_type"
fun fun_c2ats_g_key_file_get_type: () -> type_c2ats_GType = "mac#g_key_file_get_type"
fun fun_c2ats_g_main_loop_get_type: () -> type_c2ats_GType = "mac#g_main_loop_get_type"
fun fun_c2ats_g_main_context_get_type: () -> type_c2ats_GType = "mac#g_main_context_get_type"
fun fun_c2ats_g_source_get_type: () -> type_c2ats_GType = "mac#g_source_get_type"
fun fun_c2ats_g_pollfd_get_type: () -> type_c2ats_GType = "mac#g_pollfd_get_type"
fun fun_c2ats_g_thread_get_type: () -> type_c2ats_GType = "mac#g_thread_get_type"
fun fun_c2ats_g_checksum_get_type: () -> type_c2ats_GType = "mac#g_checksum_get_type"
fun fun_c2ats_g_markup_parse_context_get_type: () -> type_c2ats_GType = "mac#g_markup_parse_context_get_type"
fun fun_c2ats_g_mapped_file_get_type: () -> type_c2ats_GType = "mac#g_mapped_file_get_type"
fun fun_c2ats_g_option_group_get_type: () -> type_c2ats_GType = "mac#g_option_group_get_type"
fun fun_c2ats_g_variant_get_gtype: () -> type_c2ats_GType = "mac#g_variant_get_gtype"
// File: /usr/include/glib-2.0/gobject/gboxed.h
typedef type_c2ats_GBoxedCopyFunc = (type_c2ats_gpointer) -> type_c2ats_gpointer
typedef type_c2ats_GBoxedFreeFunc = (type_c2ats_gpointer) -> void
fun fun_c2ats_g_boxed_copy: (type_c2ats_GType, type_c2ats_gconstpointer) -> type_c2ats_gpointer = "mac#g_boxed_copy"
fun fun_c2ats_g_boxed_free: (type_c2ats_GType, type_c2ats_gpointer) -> void = "mac#g_boxed_free"
fun fun_c2ats_g_value_set_boxed: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_gconstpointer) -> void = "mac#g_value_set_boxed"
fun fun_c2ats_g_value_set_static_boxed: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_gconstpointer) -> void = "mac#g_value_set_static_boxed"
fun fun_c2ats_g_value_take_boxed: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_gconstpointer) -> void = "mac#g_value_take_boxed"
fun fun_c2ats_g_value_set_boxed_take_ownership: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_gconstpointer) -> void = "mac#g_value_set_boxed_take_ownership"
fun fun_c2ats_g_value_get_boxed: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_value_get_boxed"
fun fun_c2ats_g_value_dup_boxed: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_value_dup_boxed"
fun fun_c2ats_g_boxed_type_register_static: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_GBoxedCopyFunc, type_c2ats_GBoxedFreeFunc) -> type_c2ats_GType = "mac#g_boxed_type_register_static"
fun fun_c2ats_g_closure_get_type: () -> type_c2ats_GType = "mac#g_closure_get_type"
fun fun_c2ats_g_value_get_type: () -> type_c2ats_GType = "mac#g_value_get_type"
// File: /usr/include/glib-2.0/gobject/gobject.h
abst@ype struct_c2ats__GObject // FIXME! Forward declaration.
typedef type_c2ats_GObject = struct_c2ats__GObject
abst@ype struct_c2ats__GObjectClass // FIXME! Forward declaration.
typedef type_c2ats_GObjectClass = struct_c2ats__GObjectClass
typedef type_c2ats_GInitiallyUnowned = struct_c2ats__GObject
typedef type_c2ats_GInitiallyUnownedClass = struct_c2ats__GObjectClass
abst@ype struct_c2ats__GObjectConstructParam // FIXME! Forward declaration.
typedef type_c2ats_GObjectConstructParam = struct_c2ats__GObjectConstructParam
typedef type_c2ats_GObjectGetPropertyFunc = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GParamSpec, l3) | ptr l1, type_c2ats_guint, ptr l2, ptr l3) -> void
typedef type_c2ats_GObjectSetPropertyFunc = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GParamSpec, l3) | ptr l1, type_c2ats_guint, ptr l2, ptr l3) -> void
typedef type_c2ats_GObjectFinalizeFunc = {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1) -> void
typedef type_c2ats_GWeakNotify = {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | type_c2ats_gpointer, ptr l1) -> void
typedef struct_c2ats__GObject = $extype_struct"struct _GObject" of {
  g_type_instance = type_c2ats_GTypeInstance,
  ref_count = type_c2ats_guint,
  qdata = ptr (* cPtr0(type_c2ats_GData) *)
}
typedef struct_c2ats__GObjectClass = $extype_struct"struct _GObjectClass" of {
  g_type_class = type_c2ats_GTypeClass,
  construct_properties = ptr (* cPtr0(type_c2ats_GSList) *),
  constructor = {l1:addr} (!ptr_v_1(type_c2ats_GObjectConstructParam, l1) | type_c2ats_GType, type_c2ats_guint, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GObject, l2) | ptr l2),
  set_property = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GParamSpec, l3) | ptr l1, type_c2ats_guint, ptr l2, ptr l3) -> void,
  get_property = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GParamSpec, l3) | ptr l1, type_c2ats_guint, ptr l2, ptr l3) -> void,
  dispose = {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1) -> void,
  finalize = {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1) -> void,
  dispatch_properties_changed = {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_2(type_c2ats_GParamSpec, l2, l2_1) | ptr l1, type_c2ats_guint, ptr l2) -> void,
  notify = {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l1, ptr l2) -> void,
  constructed = {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1) -> void,
  flags = type_c2ats_gsize,
  pdummy = @[type_c2ats_gpointer][6]
}
typedef struct_c2ats__GObjectConstructParam = $extype_struct"struct _GObjectConstructParam" of {
  pspec = ptr (* cPtr0(type_c2ats_GParamSpec) *),
  value = ptr (* cPtr0(type_c2ats_GValue) *)
}
fun fun_c2ats_g_initially_unowned_get_type: () -> type_c2ats_GType = "mac#g_initially_unowned_get_type"
fun fun_c2ats_g_object_class_install_property: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObjectClass, l1), !ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l1, type_c2ats_guint, ptr l2) -> void = "mac#g_object_class_install_property"
fun fun_c2ats_g_object_class_find_property: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObjectClass, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GParamSpec, l3) | ptr l3) = "mac#g_object_class_find_property"
fun fun_c2ats_g_object_class_list_properties: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObjectClass, l1), !ptr_v_1(type_c2ats_guint, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_GParamSpec, l3, l3_1) | ptr l3) = "mac#g_object_class_list_properties"
fun fun_c2ats_g_object_class_override_property: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObjectClass, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_guint, ptr l2) -> void = "mac#g_object_class_override_property"
fun fun_c2ats_g_object_class_install_properties: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GObjectClass, l1), !ptr_v_2(type_c2ats_GParamSpec, l2, l2_1) | ptr l1, type_c2ats_guint, ptr l2) -> void = "mac#g_object_class_install_properties"
fun fun_c2ats_g_object_interface_install_property: {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | type_c2ats_gpointer, ptr l1) -> void = "mac#g_object_interface_install_property"
fun fun_c2ats_g_object_interface_find_property: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_gpointer, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l2) = "mac#g_object_interface_find_property"
fun fun_c2ats_g_object_interface_list_properties: {l1:addr} (!ptr_v_1(type_c2ats_guint, l1) | type_c2ats_gpointer, ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_GParamSpec, l2, l2_1) | ptr l2) = "mac#g_object_interface_list_properties"
fun fun_c2ats_g_object_get_type: () -> type_c2ats_GType = "mac#g_object_get_type"
fun fun_c2ats_g_object_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_GType, ptr l1) -> type_c2ats_gpointer = "mac#g_object_new"
fun fun_c2ats_g_object_newv: {l1:addr} (!ptr_v_1(type_c2ats_GParameter, l1) | type_c2ats_GType, type_c2ats_guint, ptr l1) -> type_c2ats_gpointer = "mac#g_object_newv"
fun fun_c2ats_g_object_new_valist: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_GType, ptr l1, type_c2ats_va_list) -> [l2:addr] (ptr_v_1(type_c2ats_GObject, l2) | ptr l2) = "mac#g_object_new_valist"
fun fun_c2ats_g_object_set: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_gpointer, ptr l1) -> void = "mac#g_object_set"
fun fun_c2ats_g_object_get: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_gpointer, ptr l1) -> void = "mac#g_object_get"
fun fun_c2ats_g_object_connect: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_gpointer, ptr l1) -> type_c2ats_gpointer = "mac#g_object_connect"
fun fun_c2ats_g_object_disconnect: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_gpointer, ptr l1) -> void = "mac#g_object_disconnect"
fun fun_c2ats_g_object_set_valist: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_va_list) -> void = "mac#g_object_set_valist"
fun fun_c2ats_g_object_get_valist: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_va_list) -> void = "mac#g_object_get_valist"
fun fun_c2ats_g_object_set_property: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_object_set_property"
fun fun_c2ats_g_object_get_property: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_object_get_property"
fun fun_c2ats_g_object_freeze_notify: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1) -> void = "mac#g_object_freeze_notify"
fun fun_c2ats_g_object_notify: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_object_notify"
fun fun_c2ats_g_object_notify_by_pspec: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l1, ptr l2) -> void = "mac#g_object_notify_by_pspec"
fun fun_c2ats_g_object_thaw_notify: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1) -> void = "mac#g_object_thaw_notify"
fun fun_c2ats_g_object_is_floating: (type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#g_object_is_floating"
fun fun_c2ats_g_object_ref_sink: (type_c2ats_gpointer) -> type_c2ats_gpointer = "mac#g_object_ref_sink"
fun fun_c2ats_g_object_ref: (type_c2ats_gpointer) -> type_c2ats_gpointer = "mac#g_object_ref"
fun fun_c2ats_g_object_unref: (type_c2ats_gpointer) -> void = "mac#g_object_unref"
fun fun_c2ats_g_object_weak_ref: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1, type_c2ats_GWeakNotify, type_c2ats_gpointer) -> void = "mac#g_object_weak_ref"
fun fun_c2ats_g_object_weak_unref: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1, type_c2ats_GWeakNotify, type_c2ats_gpointer) -> void = "mac#g_object_weak_unref"
fun fun_c2ats_g_object_add_weak_pointer: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_gpointer, l2) | ptr l1, ptr l2) -> void = "mac#g_object_add_weak_pointer"
fun fun_c2ats_g_object_remove_weak_pointer: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_gpointer, l2) | ptr l1, ptr l2) -> void = "mac#g_object_remove_weak_pointer"
typedef type_c2ats_GToggleNotify = {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | type_c2ats_gpointer, ptr l1, type_c2ats_gboolean) -> void
fun fun_c2ats_g_object_add_toggle_ref: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1, type_c2ats_GToggleNotify, type_c2ats_gpointer) -> void = "mac#g_object_add_toggle_ref"
fun fun_c2ats_g_object_remove_toggle_ref: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1, type_c2ats_GToggleNotify, type_c2ats_gpointer) -> void = "mac#g_object_remove_toggle_ref"
fun fun_c2ats_g_object_get_qdata: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1, type_c2ats_GQuark) -> type_c2ats_gpointer = "mac#g_object_get_qdata"
fun fun_c2ats_g_object_set_qdata: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1, type_c2ats_GQuark, type_c2ats_gpointer) -> void = "mac#g_object_set_qdata"
fun fun_c2ats_g_object_set_qdata_full: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1, type_c2ats_GQuark, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#g_object_set_qdata_full"
fun fun_c2ats_g_object_steal_qdata: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1, type_c2ats_GQuark) -> type_c2ats_gpointer = "mac#g_object_steal_qdata"
fun fun_c2ats_g_object_dup_qdata: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1, type_c2ats_GQuark, type_c2ats_GDuplicateFunc, type_c2ats_gpointer) -> type_c2ats_gpointer = "mac#g_object_dup_qdata"
fun fun_c2ats_g_object_replace_qdata: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_GDestroyNotify, l2) | ptr l1, type_c2ats_GQuark, type_c2ats_gpointer, type_c2ats_gpointer, type_c2ats_GDestroyNotify, ptr l2) -> type_c2ats_gboolean = "mac#g_object_replace_qdata"
fun fun_c2ats_g_object_get_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gpointer = "mac#g_object_get_data"
fun fun_c2ats_g_object_set_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void = "mac#g_object_set_data"
fun fun_c2ats_g_object_set_data_full: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#g_object_set_data_full"
fun fun_c2ats_g_object_steal_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gpointer = "mac#g_object_steal_data"
fun fun_c2ats_g_object_dup_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GDuplicateFunc, type_c2ats_gpointer) -> type_c2ats_gpointer = "mac#g_object_dup_data"
fun fun_c2ats_g_object_replace_data: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GDestroyNotify, l3) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_gpointer, type_c2ats_GDestroyNotify, ptr l3) -> type_c2ats_gboolean = "mac#g_object_replace_data"
fun fun_c2ats_g_object_watch_closure: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_GClosure, l2) | ptr l1, ptr l2) -> void = "mac#g_object_watch_closure"
fun fun_c2ats_g_cclosure_new_object: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | type_c2ats_GCallback, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GClosure, l2) | ptr l2) = "mac#g_cclosure_new_object"
fun fun_c2ats_g_cclosure_new_object_swap: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | type_c2ats_GCallback, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GClosure, l2) | ptr l2) = "mac#g_cclosure_new_object_swap"
fun fun_c2ats_g_closure_new_object: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | type_c2ats_guint, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GClosure, l2) | ptr l2) = "mac#g_closure_new_object"
fun fun_c2ats_g_value_set_object: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_value_set_object"
fun fun_c2ats_g_value_get_object: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_value_get_object"
fun fun_c2ats_g_value_dup_object: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_value_dup_object"
fun fun_c2ats_g_signal_connect_object: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_gpointer, ptr l1, type_c2ats_GCallback, type_c2ats_gpointer, type_c2ats_GConnectFlags) -> type_c2ats_gulong = "mac#g_signal_connect_object"
fun fun_c2ats_g_object_force_floating: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1) -> void = "mac#g_object_force_floating"
fun fun_c2ats_g_object_run_dispose: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1) -> void = "mac#g_object_run_dispose"
fun fun_c2ats_g_value_take_object: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_value_take_object"
fun fun_c2ats_g_value_set_object_take_ownership: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_value_set_object_take_ownership"
fun fun_c2ats_g_object_compat_control: (type_c2ats_gsize, type_c2ats_gpointer) -> type_c2ats_gsize = "mac#g_object_compat_control"
fun fun_c2ats_g_clear_object: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GObject, l1, l1_1) | ptr l1) -> void = "mac#g_clear_object"
fun fun_c2ats_g_set_object: {l1,l1_1,l2:addr} (!ptr_v_2(type_c2ats_GObject, l1, l1_1), !ptr_v_1(type_c2ats_GObject, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_set_object"
typedef union_c2ats_anon_51258 = $extype_struct"union { gpointer p; }" of {
  p = type_c2ats_gpointer
}
typedef struct_c2ats_anon_51263 = $extype_struct"struct { union { gpointer p; } priv; }" of {
  priv = union_c2ats_anon_51258
}
typedef type_c2ats_GWeakRef = struct_c2ats_anon_51263
fun fun_c2ats_g_weak_ref_init: {l1:addr} (!ptr_v_1(type_c2ats_GWeakRef, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_weak_ref_init"
fun fun_c2ats_g_weak_ref_clear: {l1:addr} (!ptr_v_1(type_c2ats_GWeakRef, l1) | ptr l1) -> void = "mac#g_weak_ref_clear"
fun fun_c2ats_g_weak_ref_get: {l1:addr} (!ptr_v_1(type_c2ats_GWeakRef, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_weak_ref_get"
fun fun_c2ats_g_weak_ref_set: {l1:addr} (!ptr_v_1(type_c2ats_GWeakRef, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_weak_ref_set"
// File: /usr/include/glib-2.0/gobject/gbinding.h
abst@ype struct_c2ats__GBinding // FIXME! Forward declaration.
typedef type_c2ats_GBinding = struct_c2ats__GBinding
typedef type_c2ats_GBindingTransformFunc = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GBinding, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GBindingFlags = int
#define enum_c2ats_G_BINDING_DEFAULT 0
#define enum_c2ats_G_BINDING_BIDIRECTIONAL 1 << 0
#define enum_c2ats_G_BINDING_SYNC_CREATE 1 << 1
#define enum_c2ats_G_BINDING_INVERT_BOOLEAN 1 << 2
fun fun_c2ats_g_binding_flags_get_type: () -> type_c2ats_GType = "mac#g_binding_flags_get_type"
fun fun_c2ats_g_binding_get_type: () -> type_c2ats_GType = "mac#g_binding_get_type"
fun fun_c2ats_g_binding_get_flags: {l1:addr} (!ptr_v_1(type_c2ats_GBinding, l1) | ptr l1) -> type_c2ats_GBindingFlags = "mac#g_binding_get_flags"
fun fun_c2ats_g_binding_get_source: {l1:addr} (!ptr_v_1(type_c2ats_GBinding, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GObject, l2) | ptr l2) = "mac#g_binding_get_source"
fun fun_c2ats_g_binding_get_target: {l1:addr} (!ptr_v_1(type_c2ats_GBinding, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GObject, l2) | ptr l2) = "mac#g_binding_get_target"
fun fun_c2ats_g_binding_get_source_property: {l1:addr} (!ptr_v_1(type_c2ats_GBinding, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_binding_get_source_property"
fun fun_c2ats_g_binding_get_target_property: {l1:addr} (!ptr_v_1(type_c2ats_GBinding, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_binding_get_target_property"
fun fun_c2ats_g_binding_unbind: {l1:addr} (!ptr_v_1(type_c2ats_GBinding, l1) | ptr l1) -> void = "mac#g_binding_unbind"
fun fun_c2ats_g_object_bind_property: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | type_c2ats_gpointer, ptr l1, type_c2ats_gpointer, ptr l2, type_c2ats_GBindingFlags) -> [l3:addr] (ptr_v_1(type_c2ats_GBinding, l3) | ptr l3) = "mac#g_object_bind_property"
fun fun_c2ats_g_object_bind_property_full: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | type_c2ats_gpointer, ptr l1, type_c2ats_gpointer, ptr l2, type_c2ats_GBindingFlags, type_c2ats_GBindingTransformFunc, type_c2ats_GBindingTransformFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> [l3:addr] (ptr_v_1(type_c2ats_GBinding, l3) | ptr l3) = "mac#g_object_bind_property_full"
fun fun_c2ats_g_object_bind_property_with_closures: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GClosure, l3), !ptr_v_1(type_c2ats_GClosure, l4) | type_c2ats_gpointer, ptr l1, type_c2ats_gpointer, ptr l2, type_c2ats_GBindingFlags, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GBinding, l5) | ptr l5) = "mac#g_object_bind_property_with_closures"
// File: /usr/include/glib-2.0/gobject/genums.h
abst@ype struct_c2ats__GEnumClass // FIXME! Forward declaration.
typedef type_c2ats_GEnumClass = struct_c2ats__GEnumClass
abst@ype struct_c2ats__GFlagsClass // FIXME! Forward declaration.
typedef type_c2ats_GFlagsClass = struct_c2ats__GFlagsClass
abst@ype struct_c2ats__GEnumValue // FIXME! Forward declaration.
typedef type_c2ats_GEnumValue = struct_c2ats__GEnumValue
abst@ype struct_c2ats__GFlagsValue // FIXME! Forward declaration.
typedef type_c2ats_GFlagsValue = struct_c2ats__GFlagsValue
typedef struct_c2ats__GEnumClass = $extype_struct"struct _GEnumClass" of {
  g_type_class = type_c2ats_GTypeClass,
  minimum = type_c2ats_gint,
  maximum = type_c2ats_gint,
  n_values = type_c2ats_guint,
  values = ptr (* cPtr0(type_c2ats_GEnumValue) *)
}
typedef struct_c2ats__GFlagsClass = $extype_struct"struct _GFlagsClass" of {
  g_type_class = type_c2ats_GTypeClass,
  mask = type_c2ats_guint,
  n_values = type_c2ats_guint,
  values = ptr (* cPtr0(type_c2ats_GFlagsValue) *)
}
typedef struct_c2ats__GEnumValue = $extype_struct"struct _GEnumValue" of {
  value = type_c2ats_gint,
  value_name = ptr (* cPtr0(type_c2ats_gchar) *),
  value_nick = ptr (* cPtr0(type_c2ats_gchar) *)
}
typedef struct_c2ats__GFlagsValue = $extype_struct"struct _GFlagsValue" of {
  value = type_c2ats_guint,
  value_name = ptr (* cPtr0(type_c2ats_gchar) *),
  value_nick = ptr (* cPtr0(type_c2ats_gchar) *)
}
fun fun_c2ats_g_enum_get_value: {l1:addr} (!ptr_v_1(type_c2ats_GEnumClass, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GEnumValue, l2) | ptr l2) = "mac#g_enum_get_value"
fun fun_c2ats_g_enum_get_value_by_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GEnumClass, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GEnumValue, l3) | ptr l3) = "mac#g_enum_get_value_by_name"
fun fun_c2ats_g_enum_get_value_by_nick: {l1,l2:addr} (!ptr_v_1(type_c2ats_GEnumClass, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GEnumValue, l3) | ptr l3) = "mac#g_enum_get_value_by_nick"
fun fun_c2ats_g_flags_get_first_value: {l1:addr} (!ptr_v_1(type_c2ats_GFlagsClass, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GFlagsValue, l2) | ptr l2) = "mac#g_flags_get_first_value"
fun fun_c2ats_g_flags_get_value_by_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFlagsClass, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GFlagsValue, l3) | ptr l3) = "mac#g_flags_get_value_by_name"
fun fun_c2ats_g_flags_get_value_by_nick: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFlagsClass, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GFlagsValue, l3) | ptr l3) = "mac#g_flags_get_value_by_nick"
fun fun_c2ats_g_value_set_enum: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_gint) -> void = "mac#g_value_set_enum"
fun fun_c2ats_g_value_get_enum: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_gint = "mac#g_value_get_enum"
fun fun_c2ats_g_value_set_flags: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_value_set_flags"
fun fun_c2ats_g_value_get_flags: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_guint = "mac#g_value_get_flags"
fun fun_c2ats_g_enum_register_static: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GEnumValue, l2) | ptr l1, ptr l2) -> type_c2ats_GType = "mac#g_enum_register_static"
fun fun_c2ats_g_flags_register_static: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GFlagsValue, l2) | ptr l1, ptr l2) -> type_c2ats_GType = "mac#g_flags_register_static"
fun fun_c2ats_g_enum_complete_type_info: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTypeInfo, l1), !ptr_v_1(type_c2ats_GEnumValue, l2) | type_c2ats_GType, ptr l1, ptr l2) -> void = "mac#g_enum_complete_type_info"
fun fun_c2ats_g_flags_complete_type_info: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTypeInfo, l1), !ptr_v_1(type_c2ats_GFlagsValue, l2) | type_c2ats_GType, ptr l1, ptr l2) -> void = "mac#g_flags_complete_type_info"
// File: /usr/include/glib-2.0/gobject/gparamspecs.h
abst@ype struct_c2ats__GParamSpecChar // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecChar = struct_c2ats__GParamSpecChar
abst@ype struct_c2ats__GParamSpecUChar // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecUChar = struct_c2ats__GParamSpecUChar
abst@ype struct_c2ats__GParamSpecBoolean // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecBoolean = struct_c2ats__GParamSpecBoolean
abst@ype struct_c2ats__GParamSpecInt // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecInt = struct_c2ats__GParamSpecInt
abst@ype struct_c2ats__GParamSpecUInt // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecUInt = struct_c2ats__GParamSpecUInt
abst@ype struct_c2ats__GParamSpecLong // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecLong = struct_c2ats__GParamSpecLong
abst@ype struct_c2ats__GParamSpecULong // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecULong = struct_c2ats__GParamSpecULong
abst@ype struct_c2ats__GParamSpecInt64 // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecInt64 = struct_c2ats__GParamSpecInt64
abst@ype struct_c2ats__GParamSpecUInt64 // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecUInt64 = struct_c2ats__GParamSpecUInt64
abst@ype struct_c2ats__GParamSpecUnichar // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecUnichar = struct_c2ats__GParamSpecUnichar
abst@ype struct_c2ats__GParamSpecEnum // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecEnum = struct_c2ats__GParamSpecEnum
abst@ype struct_c2ats__GParamSpecFlags // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecFlags = struct_c2ats__GParamSpecFlags
abst@ype struct_c2ats__GParamSpecFloat // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecFloat = struct_c2ats__GParamSpecFloat
abst@ype struct_c2ats__GParamSpecDouble // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecDouble = struct_c2ats__GParamSpecDouble
abst@ype struct_c2ats__GParamSpecString // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecString = struct_c2ats__GParamSpecString
abst@ype struct_c2ats__GParamSpecParam // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecParam = struct_c2ats__GParamSpecParam
abst@ype struct_c2ats__GParamSpecBoxed // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecBoxed = struct_c2ats__GParamSpecBoxed
abst@ype struct_c2ats__GParamSpecPointer // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecPointer = struct_c2ats__GParamSpecPointer
abst@ype struct_c2ats__GParamSpecValueArray // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecValueArray = struct_c2ats__GParamSpecValueArray
abst@ype struct_c2ats__GParamSpecObject // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecObject = struct_c2ats__GParamSpecObject
abst@ype struct_c2ats__GParamSpecOverride // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecOverride = struct_c2ats__GParamSpecOverride
abst@ype struct_c2ats__GParamSpecGType // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecGType = struct_c2ats__GParamSpecGType
abst@ype struct_c2ats__GParamSpecVariant // FIXME! Forward declaration.
typedef type_c2ats_GParamSpecVariant = struct_c2ats__GParamSpecVariant
typedef struct_c2ats__GParamSpecChar = $extype_struct"struct _GParamSpecChar" of {
  parent_instance = type_c2ats_GParamSpec,
  minimum = type_c2ats_gint8,
  maximum = type_c2ats_gint8,
  default_value = type_c2ats_gint8
}
typedef struct_c2ats__GParamSpecUChar = $extype_struct"struct _GParamSpecUChar" of {
  parent_instance = type_c2ats_GParamSpec,
  minimum = type_c2ats_guint8,
  maximum = type_c2ats_guint8,
  default_value = type_c2ats_guint8
}
typedef struct_c2ats__GParamSpecBoolean = $extype_struct"struct _GParamSpecBoolean" of {
  parent_instance = type_c2ats_GParamSpec,
  default_value = type_c2ats_gboolean
}
typedef struct_c2ats__GParamSpecInt = $extype_struct"struct _GParamSpecInt" of {
  parent_instance = type_c2ats_GParamSpec,
  minimum = type_c2ats_gint,
  maximum = type_c2ats_gint,
  default_value = type_c2ats_gint
}
typedef struct_c2ats__GParamSpecUInt = $extype_struct"struct _GParamSpecUInt" of {
  parent_instance = type_c2ats_GParamSpec,
  minimum = type_c2ats_guint,
  maximum = type_c2ats_guint,
  default_value = type_c2ats_guint
}
typedef struct_c2ats__GParamSpecLong = $extype_struct"struct _GParamSpecLong" of {
  parent_instance = type_c2ats_GParamSpec,
  minimum = type_c2ats_glong,
  maximum = type_c2ats_glong,
  default_value = type_c2ats_glong
}
typedef struct_c2ats__GParamSpecULong = $extype_struct"struct _GParamSpecULong" of {
  parent_instance = type_c2ats_GParamSpec,
  minimum = type_c2ats_gulong,
  maximum = type_c2ats_gulong,
  default_value = type_c2ats_gulong
}
typedef struct_c2ats__GParamSpecInt64 = $extype_struct"struct _GParamSpecInt64" of {
  parent_instance = type_c2ats_GParamSpec,
  minimum = type_c2ats_gint64,
  maximum = type_c2ats_gint64,
  default_value = type_c2ats_gint64
}
typedef struct_c2ats__GParamSpecUInt64 = $extype_struct"struct _GParamSpecUInt64" of {
  parent_instance = type_c2ats_GParamSpec,
  minimum = type_c2ats_guint64,
  maximum = type_c2ats_guint64,
  default_value = type_c2ats_guint64
}
typedef struct_c2ats__GParamSpecUnichar = $extype_struct"struct _GParamSpecUnichar" of {
  parent_instance = type_c2ats_GParamSpec,
  default_value = type_c2ats_gunichar
}
typedef struct_c2ats__GParamSpecEnum = $extype_struct"struct _GParamSpecEnum" of {
  parent_instance = type_c2ats_GParamSpec,
  enum_class = ptr (* cPtr0(type_c2ats_GEnumClass) *),
  default_value = type_c2ats_gint
}
typedef struct_c2ats__GParamSpecFlags = $extype_struct"struct _GParamSpecFlags" of {
  parent_instance = type_c2ats_GParamSpec,
  flags_class = ptr (* cPtr0(type_c2ats_GFlagsClass) *),
  default_value = type_c2ats_guint
}
typedef struct_c2ats__GParamSpecFloat = $extype_struct"struct _GParamSpecFloat" of {
  parent_instance = type_c2ats_GParamSpec,
  minimum = type_c2ats_gfloat,
  maximum = type_c2ats_gfloat,
  default_value = type_c2ats_gfloat,
  epsilon = type_c2ats_gfloat
}
typedef struct_c2ats__GParamSpecDouble = $extype_struct"struct _GParamSpecDouble" of {
  parent_instance = type_c2ats_GParamSpec,
  minimum = type_c2ats_gdouble,
  maximum = type_c2ats_gdouble,
  default_value = type_c2ats_gdouble,
  epsilon = type_c2ats_gdouble
}
typedef struct_c2ats__GParamSpecString = $extype_struct"struct _GParamSpecString" of {
  parent_instance = type_c2ats_GParamSpec,
  default_value = ptr (* cPtr0(type_c2ats_gchar) *),
  cset_first = ptr (* cPtr0(type_c2ats_gchar) *),
  cset_nth = ptr (* cPtr0(type_c2ats_gchar) *),
  substitutor = type_c2ats_gchar,
  null_fold_if_empty = type_c2ats_guint,
  ensure_non_null = type_c2ats_guint
}
typedef struct_c2ats__GParamSpecParam = $extype_struct"struct _GParamSpecParam" of {
  parent_instance = type_c2ats_GParamSpec
}
typedef struct_c2ats__GParamSpecBoxed = $extype_struct"struct _GParamSpecBoxed" of {
  parent_instance = type_c2ats_GParamSpec
}
typedef struct_c2ats__GParamSpecPointer = $extype_struct"struct _GParamSpecPointer" of {
  parent_instance = type_c2ats_GParamSpec
}
typedef struct_c2ats__GParamSpecValueArray = $extype_struct"struct _GParamSpecValueArray" of {
  parent_instance = type_c2ats_GParamSpec,
  element_spec = ptr (* cPtr0(type_c2ats_GParamSpec) *),
  fixed_n_elements = type_c2ats_guint
}
typedef struct_c2ats__GParamSpecObject = $extype_struct"struct _GParamSpecObject" of {
  parent_instance = type_c2ats_GParamSpec
}
typedef struct_c2ats__GParamSpecOverride = $extype_struct"struct _GParamSpecOverride" of {
  parent_instance = type_c2ats_GParamSpec,
  overridden = ptr (* cPtr0(type_c2ats_GParamSpec) *)
}
typedef struct_c2ats__GParamSpecGType = $extype_struct"struct _GParamSpecGType" of {
  parent_instance = type_c2ats_GParamSpec,
  is_a_type = type_c2ats_GType
}
typedef struct_c2ats__GParamSpecVariant = $extype_struct"struct _GParamSpecVariant" of {
  parent_instance = type_c2ats_GParamSpec,
  type = ptr (* cPtr0(type_c2ats_GVariantType) *),
  default_value = ptr (* cPtr0(type_c2ats_GVariant) *),
  padding = @[type_c2ats_gpointer][4]
}
fun fun_c2ats_g_param_spec_char: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint8, type_c2ats_gint8, type_c2ats_gint8, type_c2ats_GParamFlags) -> [l4:addr] (ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l4) = "mac#g_param_spec_char"
fun fun_c2ats_g_param_spec_uchar: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_guint8, type_c2ats_guint8, type_c2ats_guint8, type_c2ats_GParamFlags) -> [l4:addr] (ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l4) = "mac#g_param_spec_uchar"
fun fun_c2ats_g_param_spec_boolean: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean, type_c2ats_GParamFlags) -> [l4:addr] (ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l4) = "mac#g_param_spec_boolean"
fun fun_c2ats_g_param_spec_int: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_GParamFlags) -> [l4:addr] (ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l4) = "mac#g_param_spec_int"
fun fun_c2ats_g_param_spec_uint: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_guint, type_c2ats_guint, type_c2ats_guint, type_c2ats_GParamFlags) -> [l4:addr] (ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l4) = "mac#g_param_spec_uint"
fun fun_c2ats_g_param_spec_long: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_glong, type_c2ats_glong, type_c2ats_glong, type_c2ats_GParamFlags) -> [l4:addr] (ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l4) = "mac#g_param_spec_long"
fun fun_c2ats_g_param_spec_ulong: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gulong, type_c2ats_gulong, type_c2ats_gulong, type_c2ats_GParamFlags) -> [l4:addr] (ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l4) = "mac#g_param_spec_ulong"
fun fun_c2ats_g_param_spec_int64: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint64, type_c2ats_gint64, type_c2ats_gint64, type_c2ats_GParamFlags) -> [l4:addr] (ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l4) = "mac#g_param_spec_int64"
fun fun_c2ats_g_param_spec_uint64: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_guint64, type_c2ats_guint64, type_c2ats_guint64, type_c2ats_GParamFlags) -> [l4:addr] (ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l4) = "mac#g_param_spec_uint64"
fun fun_c2ats_g_param_spec_unichar: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gunichar, type_c2ats_GParamFlags) -> [l4:addr] (ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l4) = "mac#g_param_spec_unichar"
fun fun_c2ats_g_param_spec_enum: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GType, type_c2ats_gint, type_c2ats_GParamFlags) -> [l4:addr] (ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l4) = "mac#g_param_spec_enum"
fun fun_c2ats_g_param_spec_flags: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GType, type_c2ats_guint, type_c2ats_GParamFlags) -> [l4:addr] (ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l4) = "mac#g_param_spec_flags"
fun fun_c2ats_g_param_spec_float: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gfloat, type_c2ats_gfloat, type_c2ats_gfloat, type_c2ats_GParamFlags) -> [l4:addr] (ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l4) = "mac#g_param_spec_float"
fun fun_c2ats_g_param_spec_double: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_GParamFlags) -> [l4:addr] (ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l4) = "mac#g_param_spec_double"
fun fun_c2ats_g_param_spec_string: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_GParamFlags) -> [l5:addr] (ptr_v_1(type_c2ats_GParamSpec, l5) | ptr l5) = "mac#g_param_spec_string"
fun fun_c2ats_g_param_spec_param: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GType, type_c2ats_GParamFlags) -> [l4:addr] (ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l4) = "mac#g_param_spec_param"
fun fun_c2ats_g_param_spec_boxed: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GType, type_c2ats_GParamFlags) -> [l4:addr] (ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l4) = "mac#g_param_spec_boxed"
fun fun_c2ats_g_param_spec_pointer: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GParamFlags) -> [l4:addr] (ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l4) = "mac#g_param_spec_pointer"
fun fun_c2ats_g_param_spec_value_array: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_GParamFlags) -> [l5:addr] (ptr_v_1(type_c2ats_GParamSpec, l5) | ptr l5) = "mac#g_param_spec_value_array"
fun fun_c2ats_g_param_spec_object: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GType, type_c2ats_GParamFlags) -> [l4:addr] (ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l4) = "mac#g_param_spec_object"
fun fun_c2ats_g_param_spec_override: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GParamSpec, l3) | ptr l3) = "mac#g_param_spec_override"
fun fun_c2ats_g_param_spec_gtype: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GType, type_c2ats_GParamFlags) -> [l4:addr] (ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l4) = "mac#g_param_spec_gtype"
fun fun_c2ats_g_param_spec_variant: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GVariantType, l4), !ptr_v_1(type_c2ats_GVariant, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_GParamFlags) -> [l6:addr] (ptr_v_1(type_c2ats_GParamSpec, l6) | ptr l6) = "mac#g_param_spec_variant"
macdef takeout_c2ats_g_param_spec_types = $extval([l1,l1_1:addr] (ptr_v_2(type_c2ats_GType, l1, l1_1) | ptr l1), "&g_param_spec_types")
praxi addback_c2ats_g_param_spec_types {l1,l1_1:addr} (ptr_v_2(type_c2ats_GType, l1, l1_1) | ptr l1): void
// File: /usr/include/glib-2.0/gobject/gsourceclosure.h
fun fun_c2ats_g_source_set_closure: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSource, l1), !ptr_v_1(type_c2ats_GClosure, l2) | ptr l1, ptr l2) -> void = "mac#g_source_set_closure"
fun fun_c2ats_g_source_set_dummy_callback: {l1:addr} (!ptr_v_1(type_c2ats_GSource, l1) | ptr l1) -> void = "mac#g_source_set_dummy_callback"
// File: /usr/include/glib-2.0/gobject/gtypemodule.h
abst@ype struct_c2ats__GTypeModule // FIXME! Forward declaration.
typedef type_c2ats_GTypeModule = struct_c2ats__GTypeModule
abst@ype struct_c2ats__GTypeModuleClass // FIXME! Forward declaration.
typedef type_c2ats_GTypeModuleClass = struct_c2ats__GTypeModuleClass
typedef type_c2ats_GTypeModule_autoptr = cPtr0(type_c2ats_GTypeModule)
fun fun_c2ats_glib_autoptr_cleanup_GTypeModule: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTypeModule, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GTypeModule"
typedef struct_c2ats__GTypeModule = $extype_struct"struct _GTypeModule" of {
  parent_instance = type_c2ats_GObject,
  use_count = type_c2ats_guint,
  type_infos = ptr (* cPtr0(type_c2ats_GSList) *),
  interface_infos = ptr (* cPtr0(type_c2ats_GSList) *),
  name = ptr (* cPtr0(type_c2ats_gchar) *)
}
typedef struct_c2ats__GTypeModuleClass = $extype_struct"struct _GTypeModuleClass" of {
  parent_class = type_c2ats_GObjectClass,
  load = {l1:addr} (!ptr_v_1(type_c2ats_GTypeModule, l1) | ptr l1) -> type_c2ats_gboolean,
  unload = {l1:addr} (!ptr_v_1(type_c2ats_GTypeModule, l1) | ptr l1) -> void,
  reserved1 = () -> void,
  reserved2 = () -> void,
  reserved3 = () -> void,
  reserved4 = () -> void
}
fun fun_c2ats_g_type_module_get_type: () -> type_c2ats_GType = "mac#g_type_module_get_type"
fun fun_c2ats_g_type_module_use: {l1:addr} (!ptr_v_1(type_c2ats_GTypeModule, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_type_module_use"
fun fun_c2ats_g_type_module_unuse: {l1:addr} (!ptr_v_1(type_c2ats_GTypeModule, l1) | ptr l1) -> void = "mac#g_type_module_unuse"
fun fun_c2ats_g_type_module_set_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTypeModule, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_type_module_set_name"
fun fun_c2ats_g_type_module_register_type: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GTypeModule, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GTypeInfo, l3) | ptr l1, type_c2ats_GType, ptr l2, ptr l3, type_c2ats_GTypeFlags) -> type_c2ats_GType = "mac#g_type_module_register_type"
fun fun_c2ats_g_type_module_add_interface: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTypeModule, l1), !ptr_v_1(type_c2ats_GInterfaceInfo, l2) | ptr l1, type_c2ats_GType, type_c2ats_GType, ptr l2) -> void = "mac#g_type_module_add_interface"
fun fun_c2ats_g_type_module_register_enum: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GTypeModule, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GEnumValue, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_GType = "mac#g_type_module_register_enum"
fun fun_c2ats_g_type_module_register_flags: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GTypeModule, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GFlagsValue, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_GType = "mac#g_type_module_register_flags"
// File: /usr/include/glib-2.0/gobject/gtypeplugin.h
abst@ype struct_c2ats__GTypePluginClass // FIXME! Forward declaration.
typedef type_c2ats_GTypePluginClass = struct_c2ats__GTypePluginClass
typedef type_c2ats_GTypePluginUse = {l1:addr} (!ptr_v_1(type_c2ats_GTypePlugin, l1) | ptr l1) -> void
typedef type_c2ats_GTypePluginUnuse = {l1:addr} (!ptr_v_1(type_c2ats_GTypePlugin, l1) | ptr l1) -> void
typedef type_c2ats_GTypePluginCompleteTypeInfo = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GTypePlugin, l1), !ptr_v_1(type_c2ats_GTypeInfo, l2), !ptr_v_1(type_c2ats_GTypeValueTable, l3) | ptr l1, type_c2ats_GType, ptr l2, ptr l3) -> void
typedef type_c2ats_GTypePluginCompleteInterfaceInfo = {l1,l2:addr} (!ptr_v_1(type_c2ats_GTypePlugin, l1), !ptr_v_1(type_c2ats_GInterfaceInfo, l2) | ptr l1, type_c2ats_GType, type_c2ats_GType, ptr l2) -> void
typedef struct_c2ats__GTypePluginClass = $extype_struct"struct _GTypePluginClass" of {
  base_iface = type_c2ats_GTypeInterface,
  use_plugin = type_c2ats_GTypePluginUse,
  unuse_plugin = type_c2ats_GTypePluginUnuse,
  complete_type_info = type_c2ats_GTypePluginCompleteTypeInfo,
  complete_interface_info = type_c2ats_GTypePluginCompleteInterfaceInfo
}
fun fun_c2ats_g_type_plugin_get_type: () -> type_c2ats_GType = "mac#g_type_plugin_get_type"
fun fun_c2ats_g_type_plugin_use: {l1:addr} (!ptr_v_1(type_c2ats_GTypePlugin, l1) | ptr l1) -> void = "mac#g_type_plugin_use"
fun fun_c2ats_g_type_plugin_unuse: {l1:addr} (!ptr_v_1(type_c2ats_GTypePlugin, l1) | ptr l1) -> void = "mac#g_type_plugin_unuse"
fun fun_c2ats_g_type_plugin_complete_type_info: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GTypePlugin, l1), !ptr_v_1(type_c2ats_GTypeInfo, l2), !ptr_v_1(type_c2ats_GTypeValueTable, l3) | ptr l1, type_c2ats_GType, ptr l2, ptr l3) -> void = "mac#g_type_plugin_complete_type_info"
fun fun_c2ats_g_type_plugin_complete_interface_info: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTypePlugin, l1), !ptr_v_1(type_c2ats_GInterfaceInfo, l2) | ptr l1, type_c2ats_GType, type_c2ats_GType, ptr l2) -> void = "mac#g_type_plugin_complete_interface_info"
// File: /usr/include/glib-2.0/gobject/gvaluearray.h
abst@ype struct_c2ats__GValueArray // FIXME! Forward declaration.
typedef type_c2ats_GValueArray = struct_c2ats__GValueArray
typedef struct_c2ats__GValueArray = $extype_struct"struct _GValueArray" of {
  n_values = type_c2ats_guint,
  values = ptr (* cPtr0(type_c2ats_GValue) *),
  n_prealloced = type_c2ats_guint
}
fun fun_c2ats_g_value_array_get_type: () -> type_c2ats_GType = "mac#g_value_array_get_type"
fun fun_c2ats_g_value_array_get_nth: {l1:addr} (!ptr_v_1(type_c2ats_GValueArray, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GValue, l2) | ptr l2) = "mac#g_value_array_get_nth"
fun fun_c2ats_g_value_array_new: (type_c2ats_guint) -> [l1:addr] (ptr_v_1(type_c2ats_GValueArray, l1) | ptr l1) = "mac#g_value_array_new"
fun fun_c2ats_g_value_array_free: {l1:addr} (!ptr_v_1(type_c2ats_GValueArray, l1) | ptr l1) -> void = "mac#g_value_array_free"
fun fun_c2ats_g_value_array_copy: {l1:addr} (!ptr_v_1(type_c2ats_GValueArray, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GValueArray, l2) | ptr l2) = "mac#g_value_array_copy"
fun fun_c2ats_g_value_array_prepend: {l1,l2:addr} (!ptr_v_1(type_c2ats_GValueArray, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GValueArray, l3) | ptr l3) = "mac#g_value_array_prepend"
fun fun_c2ats_g_value_array_append: {l1,l2:addr} (!ptr_v_1(type_c2ats_GValueArray, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GValueArray, l3) | ptr l3) = "mac#g_value_array_append"
fun fun_c2ats_g_value_array_insert: {l1,l2:addr} (!ptr_v_1(type_c2ats_GValueArray, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, type_c2ats_guint, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GValueArray, l3) | ptr l3) = "mac#g_value_array_insert"
fun fun_c2ats_g_value_array_remove: {l1:addr} (!ptr_v_1(type_c2ats_GValueArray, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GValueArray, l2) | ptr l2) = "mac#g_value_array_remove"
fun fun_c2ats_g_value_array_sort: {l1:addr} (!ptr_v_1(type_c2ats_GValueArray, l1) | ptr l1, type_c2ats_GCompareFunc) -> [l2:addr] (ptr_v_1(type_c2ats_GValueArray, l2) | ptr l2) = "mac#g_value_array_sort"
fun fun_c2ats_g_value_array_sort_with_data: {l1:addr} (!ptr_v_1(type_c2ats_GValueArray, l1) | ptr l1, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GValueArray, l2) | ptr l2) = "mac#g_value_array_sort_with_data"
// File: /usr/include/glib-2.0/gobject/gvaluetypes.h
fun fun_c2ats_g_value_set_char: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_gchar) -> void = "mac#g_value_set_char"
fun fun_c2ats_g_value_get_char: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_gchar = "mac#g_value_get_char"
fun fun_c2ats_g_value_set_schar: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_gint8) -> void = "mac#g_value_set_schar"
fun fun_c2ats_g_value_get_schar: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_gint8 = "mac#g_value_get_schar"
fun fun_c2ats_g_value_set_uchar: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_guchar) -> void = "mac#g_value_set_uchar"
fun fun_c2ats_g_value_get_uchar: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_guchar = "mac#g_value_get_uchar"
fun fun_c2ats_g_value_set_boolean: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_value_set_boolean"
fun fun_c2ats_g_value_get_boolean: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_value_get_boolean"
fun fun_c2ats_g_value_set_int: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_gint) -> void = "mac#g_value_set_int"
fun fun_c2ats_g_value_get_int: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_gint = "mac#g_value_get_int"
fun fun_c2ats_g_value_set_uint: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_value_set_uint"
fun fun_c2ats_g_value_get_uint: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_guint = "mac#g_value_get_uint"
fun fun_c2ats_g_value_set_long: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_glong) -> void = "mac#g_value_set_long"
fun fun_c2ats_g_value_get_long: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_glong = "mac#g_value_get_long"
fun fun_c2ats_g_value_set_ulong: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_gulong) -> void = "mac#g_value_set_ulong"
fun fun_c2ats_g_value_get_ulong: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_gulong = "mac#g_value_get_ulong"
fun fun_c2ats_g_value_set_int64: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_gint64) -> void = "mac#g_value_set_int64"
fun fun_c2ats_g_value_get_int64: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_gint64 = "mac#g_value_get_int64"
fun fun_c2ats_g_value_set_uint64: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_guint64) -> void = "mac#g_value_set_uint64"
fun fun_c2ats_g_value_get_uint64: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_guint64 = "mac#g_value_get_uint64"
fun fun_c2ats_g_value_set_float: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_gfloat) -> void = "mac#g_value_set_float"
fun fun_c2ats_g_value_get_float: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_gfloat = "mac#g_value_get_float"
fun fun_c2ats_g_value_set_double: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#g_value_set_double"
fun fun_c2ats_g_value_get_double: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_gdouble = "mac#g_value_get_double"
fun fun_c2ats_g_value_set_string: {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_value_set_string"
fun fun_c2ats_g_value_set_static_string: {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_value_set_static_string"
fun fun_c2ats_g_value_get_string: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_value_get_string"
fun fun_c2ats_g_value_dup_string: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_value_dup_string"
fun fun_c2ats_g_value_set_pointer: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_value_set_pointer"
fun fun_c2ats_g_value_get_pointer: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_value_get_pointer"
fun fun_c2ats_g_gtype_get_type: () -> type_c2ats_GType = "mac#g_gtype_get_type"
fun fun_c2ats_g_value_set_gtype: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1, type_c2ats_GType) -> void = "mac#g_value_set_gtype"
fun fun_c2ats_g_value_get_gtype: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> type_c2ats_GType = "mac#g_value_get_gtype"
fun fun_c2ats_g_value_set_variant: {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> void = "mac#g_value_set_variant"
fun fun_c2ats_g_value_take_variant: {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> void = "mac#g_value_take_variant"
fun fun_c2ats_g_value_get_variant: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_value_get_variant"
fun fun_c2ats_g_value_dup_variant: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_value_dup_variant"
fun fun_c2ats_g_pointer_type_register_static: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_GType = "mac#g_pointer_type_register_static"
fun fun_c2ats_g_strdup_value_contents: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_strdup_value_contents"
fun fun_c2ats_g_value_take_string: {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_value_take_string"
fun fun_c2ats_g_value_set_string_take_ownership: {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_value_set_string_take_ownership"
typedef type_c2ats_gchararray = cPtr0(type_c2ats_gchar)
// File: /usr/include/glib-2.0/gobject/gobject-autocleanups.h
typedef type_c2ats_GObject_autoptr = cPtr0(type_c2ats_GObject)
fun fun_c2ats_glib_autoptr_cleanup_GObject: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GObject, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GObject"
typedef type_c2ats_GInitiallyUnowned_autoptr = cPtr0(type_c2ats_GInitiallyUnowned)
fun fun_c2ats_glib_autoptr_cleanup_GInitiallyUnowned: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GInitiallyUnowned, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GInitiallyUnowned"
fun fun_c2ats_glib_auto_cleanup_GValue: {l1:addr} (!ptr_v_1(type_c2ats_GValue, l1) | ptr l1) -> void = "mac#glib_auto_cleanup_GValue"
// File: /usr/include/glib-2.0/gio/gioenums.h
typedef type_c2ats_GAppInfoCreateFlags = int
#define enum_c2ats_G_APP_INFO_CREATE_NONE 0
#define enum_c2ats_G_APP_INFO_CREATE_NEEDS_TERMINAL 1 << 0
#define enum_c2ats_G_APP_INFO_CREATE_SUPPORTS_URIS 1 << 1
#define enum_c2ats_G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION 1 << 2
typedef type_c2ats_GConverterFlags = int
#define enum_c2ats_G_CONVERTER_NO_FLAGS 0
#define enum_c2ats_G_CONVERTER_INPUT_AT_END 1 << 0
#define enum_c2ats_G_CONVERTER_FLUSH 1 << 1
typedef type_c2ats_GConverterResult = int
#define enum_c2ats_G_CONVERTER_ERROR 0
#define enum_c2ats_G_CONVERTER_CONVERTED 1
#define enum_c2ats_G_CONVERTER_FINISHED 2
#define enum_c2ats_G_CONVERTER_FLUSHED 3
typedef type_c2ats_GDataStreamByteOrder = int
#define enum_c2ats_G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN 0
#define enum_c2ats_G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN 1
#define enum_c2ats_G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN 2
typedef type_c2ats_GDataStreamNewlineType = int
#define enum_c2ats_G_DATA_STREAM_NEWLINE_TYPE_LF 0
#define enum_c2ats_G_DATA_STREAM_NEWLINE_TYPE_CR 1
#define enum_c2ats_G_DATA_STREAM_NEWLINE_TYPE_CR_LF 2
#define enum_c2ats_G_DATA_STREAM_NEWLINE_TYPE_ANY 3
typedef type_c2ats_GFileAttributeType = int
#define enum_c2ats_G_FILE_ATTRIBUTE_TYPE_INVALID 0
#define enum_c2ats_G_FILE_ATTRIBUTE_TYPE_STRING 0 + 1
#define enum_c2ats_G_FILE_ATTRIBUTE_TYPE_BYTE_STRING 0 + 2
#define enum_c2ats_G_FILE_ATTRIBUTE_TYPE_BOOLEAN 0 + 3
#define enum_c2ats_G_FILE_ATTRIBUTE_TYPE_UINT32 0 + 4
#define enum_c2ats_G_FILE_ATTRIBUTE_TYPE_INT32 0 + 5
#define enum_c2ats_G_FILE_ATTRIBUTE_TYPE_UINT64 0 + 6
#define enum_c2ats_G_FILE_ATTRIBUTE_TYPE_INT64 0 + 7
#define enum_c2ats_G_FILE_ATTRIBUTE_TYPE_OBJECT 0 + 8
#define enum_c2ats_G_FILE_ATTRIBUTE_TYPE_STRINGV 0 + 9
typedef type_c2ats_GFileAttributeInfoFlags = int
#define enum_c2ats_G_FILE_ATTRIBUTE_INFO_NONE 0
#define enum_c2ats_G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE 1 << 0
#define enum_c2ats_G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED 1 << 1
typedef type_c2ats_GFileAttributeStatus = int
#define enum_c2ats_G_FILE_ATTRIBUTE_STATUS_UNSET 0
#define enum_c2ats_G_FILE_ATTRIBUTE_STATUS_SET 0 + 1
#define enum_c2ats_G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING 0 + 2
typedef type_c2ats_GFileQueryInfoFlags = int
#define enum_c2ats_G_FILE_QUERY_INFO_NONE 0
#define enum_c2ats_G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS 1 << 0
typedef type_c2ats_GFileCreateFlags = int
#define enum_c2ats_G_FILE_CREATE_NONE 0
#define enum_c2ats_G_FILE_CREATE_PRIVATE 1 << 0
#define enum_c2ats_G_FILE_CREATE_REPLACE_DESTINATION 1 << 1
typedef type_c2ats_GFileMeasureFlags = int
#define enum_c2ats_G_FILE_MEASURE_NONE 0
#define enum_c2ats_G_FILE_MEASURE_REPORT_ANY_ERROR 1 << 1
#define enum_c2ats_G_FILE_MEASURE_APPARENT_SIZE 1 << 2
#define enum_c2ats_G_FILE_MEASURE_NO_XDEV 1 << 3
typedef type_c2ats_GMountMountFlags = int
#define enum_c2ats_G_MOUNT_MOUNT_NONE 0
typedef type_c2ats_GMountUnmountFlags = int
#define enum_c2ats_G_MOUNT_UNMOUNT_NONE 0
#define enum_c2ats_G_MOUNT_UNMOUNT_FORCE 1 << 0
typedef type_c2ats_GDriveStartFlags = int
#define enum_c2ats_G_DRIVE_START_NONE 0
typedef type_c2ats_GDriveStartStopType = int
#define enum_c2ats_G_DRIVE_START_STOP_TYPE_UNKNOWN 0
#define enum_c2ats_G_DRIVE_START_STOP_TYPE_SHUTDOWN 1
#define enum_c2ats_G_DRIVE_START_STOP_TYPE_NETWORK 2
#define enum_c2ats_G_DRIVE_START_STOP_TYPE_MULTIDISK 3
#define enum_c2ats_G_DRIVE_START_STOP_TYPE_PASSWORD 4
typedef type_c2ats_GFileCopyFlags = int
#define enum_c2ats_G_FILE_COPY_NONE 0
#define enum_c2ats_G_FILE_COPY_OVERWRITE 1 << 0
#define enum_c2ats_G_FILE_COPY_BACKUP 1 << 1
#define enum_c2ats_G_FILE_COPY_NOFOLLOW_SYMLINKS 1 << 2
#define enum_c2ats_G_FILE_COPY_ALL_METADATA 1 << 3
#define enum_c2ats_G_FILE_COPY_NO_FALLBACK_FOR_MOVE 1 << 4
#define enum_c2ats_G_FILE_COPY_TARGET_DEFAULT_PERMS 1 << 5
typedef type_c2ats_GFileMonitorFlags = int
#define enum_c2ats_G_FILE_MONITOR_NONE 0
#define enum_c2ats_G_FILE_MONITOR_WATCH_MOUNTS 1 << 0
#define enum_c2ats_G_FILE_MONITOR_SEND_MOVED 1 << 1
#define enum_c2ats_G_FILE_MONITOR_WATCH_HARD_LINKS 1 << 2
#define enum_c2ats_G_FILE_MONITOR_WATCH_MOVES 1 << 3
typedef type_c2ats_GFileType = int
#define enum_c2ats_G_FILE_TYPE_UNKNOWN 0
#define enum_c2ats_G_FILE_TYPE_REGULAR 0 + 1
#define enum_c2ats_G_FILE_TYPE_DIRECTORY 0 + 2
#define enum_c2ats_G_FILE_TYPE_SYMBOLIC_LINK 0 + 3
#define enum_c2ats_G_FILE_TYPE_SPECIAL 0 + 4
#define enum_c2ats_G_FILE_TYPE_SHORTCUT 0 + 5
#define enum_c2ats_G_FILE_TYPE_MOUNTABLE 0 + 6
typedef type_c2ats_GFilesystemPreviewType = int
#define enum_c2ats_G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS 0
#define enum_c2ats_G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL 0 + 1
#define enum_c2ats_G_FILESYSTEM_PREVIEW_TYPE_NEVER 0 + 2
typedef type_c2ats_GFileMonitorEvent = int
#define enum_c2ats_G_FILE_MONITOR_EVENT_CHANGED 0
#define enum_c2ats_G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT 1
#define enum_c2ats_G_FILE_MONITOR_EVENT_DELETED 2
#define enum_c2ats_G_FILE_MONITOR_EVENT_CREATED 3
#define enum_c2ats_G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED 4
#define enum_c2ats_G_FILE_MONITOR_EVENT_PRE_UNMOUNT 5
#define enum_c2ats_G_FILE_MONITOR_EVENT_UNMOUNTED 6
#define enum_c2ats_G_FILE_MONITOR_EVENT_MOVED 7
#define enum_c2ats_G_FILE_MONITOR_EVENT_RENAMED 8
#define enum_c2ats_G_FILE_MONITOR_EVENT_MOVED_IN 9
#define enum_c2ats_G_FILE_MONITOR_EVENT_MOVED_OUT 10
typedef type_c2ats_GIOErrorEnum = int
#define enum_c2ats_G_IO_ERROR_FAILED 0
#define enum_c2ats_G_IO_ERROR_NOT_FOUND 1
#define enum_c2ats_G_IO_ERROR_EXISTS 2
#define enum_c2ats_G_IO_ERROR_IS_DIRECTORY 3
#define enum_c2ats_G_IO_ERROR_NOT_DIRECTORY 4
#define enum_c2ats_G_IO_ERROR_NOT_EMPTY 5
#define enum_c2ats_G_IO_ERROR_NOT_REGULAR_FILE 6
#define enum_c2ats_G_IO_ERROR_NOT_SYMBOLIC_LINK 7
#define enum_c2ats_G_IO_ERROR_NOT_MOUNTABLE_FILE 8
#define enum_c2ats_G_IO_ERROR_FILENAME_TOO_LONG 9
#define enum_c2ats_G_IO_ERROR_INVALID_FILENAME 10
#define enum_c2ats_G_IO_ERROR_TOO_MANY_LINKS 11
#define enum_c2ats_G_IO_ERROR_NO_SPACE 12
#define enum_c2ats_G_IO_ERROR_INVALID_ARGUMENT 13
#define enum_c2ats_G_IO_ERROR_PERMISSION_DENIED 14
#define enum_c2ats_G_IO_ERROR_NOT_SUPPORTED 15
#define enum_c2ats_G_IO_ERROR_NOT_MOUNTED 16
#define enum_c2ats_G_IO_ERROR_ALREADY_MOUNTED 17
#define enum_c2ats_G_IO_ERROR_CLOSED 18
#define enum_c2ats_G_IO_ERROR_CANCELLED 19
#define enum_c2ats_G_IO_ERROR_PENDING 20
#define enum_c2ats_G_IO_ERROR_READ_ONLY 21
#define enum_c2ats_G_IO_ERROR_CANT_CREATE_BACKUP 22
#define enum_c2ats_G_IO_ERROR_WRONG_ETAG 23
#define enum_c2ats_G_IO_ERROR_TIMED_OUT 24
#define enum_c2ats_G_IO_ERROR_WOULD_RECURSE 25
#define enum_c2ats_G_IO_ERROR_BUSY 26
#define enum_c2ats_G_IO_ERROR_WOULD_BLOCK 27
#define enum_c2ats_G_IO_ERROR_HOST_NOT_FOUND 28
#define enum_c2ats_G_IO_ERROR_WOULD_MERGE 29
#define enum_c2ats_G_IO_ERROR_FAILED_HANDLED 30
#define enum_c2ats_G_IO_ERROR_TOO_MANY_OPEN_FILES 31
#define enum_c2ats_G_IO_ERROR_NOT_INITIALIZED 32
#define enum_c2ats_G_IO_ERROR_ADDRESS_IN_USE 33
#define enum_c2ats_G_IO_ERROR_PARTIAL_INPUT 34
#define enum_c2ats_G_IO_ERROR_INVALID_DATA 35
#define enum_c2ats_G_IO_ERROR_DBUS_ERROR 36
#define enum_c2ats_G_IO_ERROR_HOST_UNREACHABLE 37
#define enum_c2ats_G_IO_ERROR_NETWORK_UNREACHABLE 38
#define enum_c2ats_G_IO_ERROR_CONNECTION_REFUSED 39
#define enum_c2ats_G_IO_ERROR_PROXY_FAILED 40
#define enum_c2ats_G_IO_ERROR_PROXY_AUTH_FAILED 41
#define enum_c2ats_G_IO_ERROR_PROXY_NEED_AUTH 42
#define enum_c2ats_G_IO_ERROR_PROXY_NOT_ALLOWED 43
#define enum_c2ats_G_IO_ERROR_BROKEN_PIPE 44
#define enum_c2ats_G_IO_ERROR_CONNECTION_CLOSED G_IO_ERROR_BROKEN_PIPE
#define enum_c2ats_G_IO_ERROR_NOT_CONNECTED G_IO_ERROR_BROKEN_PIPE + 1
#define enum_c2ats_G_IO_ERROR_MESSAGE_TOO_LARGE G_IO_ERROR_BROKEN_PIPE + 2
typedef type_c2ats_GAskPasswordFlags = int
#define enum_c2ats_G_ASK_PASSWORD_NEED_PASSWORD 1 << 0
#define enum_c2ats_G_ASK_PASSWORD_NEED_USERNAME 1 << 1
#define enum_c2ats_G_ASK_PASSWORD_NEED_DOMAIN 1 << 2
#define enum_c2ats_G_ASK_PASSWORD_SAVING_SUPPORTED 1 << 3
#define enum_c2ats_G_ASK_PASSWORD_ANONYMOUS_SUPPORTED 1 << 4
typedef type_c2ats_GPasswordSave = int
#define enum_c2ats_G_PASSWORD_SAVE_NEVER 0
#define enum_c2ats_G_PASSWORD_SAVE_FOR_SESSION 1
#define enum_c2ats_G_PASSWORD_SAVE_PERMANENTLY 2
typedef type_c2ats_GMountOperationResult = int
#define enum_c2ats_G_MOUNT_OPERATION_HANDLED 0
#define enum_c2ats_G_MOUNT_OPERATION_ABORTED 1
#define enum_c2ats_G_MOUNT_OPERATION_UNHANDLED 2
typedef type_c2ats_GOutputStreamSpliceFlags = int
#define enum_c2ats_G_OUTPUT_STREAM_SPLICE_NONE 0
#define enum_c2ats_G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE 1 << 0
#define enum_c2ats_G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET 1 << 1
typedef type_c2ats_GIOStreamSpliceFlags = int
#define enum_c2ats_G_IO_STREAM_SPLICE_NONE 0
#define enum_c2ats_G_IO_STREAM_SPLICE_CLOSE_STREAM1 1 << 0
#define enum_c2ats_G_IO_STREAM_SPLICE_CLOSE_STREAM2 1 << 1
#define enum_c2ats_G_IO_STREAM_SPLICE_WAIT_FOR_BOTH 1 << 2
typedef type_c2ats_GEmblemOrigin = int
#define enum_c2ats_G_EMBLEM_ORIGIN_UNKNOWN 0
#define enum_c2ats_G_EMBLEM_ORIGIN_DEVICE 1
#define enum_c2ats_G_EMBLEM_ORIGIN_LIVEMETADATA 2
#define enum_c2ats_G_EMBLEM_ORIGIN_TAG 3
typedef type_c2ats_GResolverError = int
#define enum_c2ats_G_RESOLVER_ERROR_NOT_FOUND 0
#define enum_c2ats_G_RESOLVER_ERROR_TEMPORARY_FAILURE 1
#define enum_c2ats_G_RESOLVER_ERROR_INTERNAL 2
typedef type_c2ats_GResolverRecordType = int
#define enum_c2ats_G_RESOLVER_RECORD_SRV 1
#define enum_c2ats_G_RESOLVER_RECORD_MX 1 + 1
#define enum_c2ats_G_RESOLVER_RECORD_TXT 1 + 2
#define enum_c2ats_G_RESOLVER_RECORD_SOA 1 + 3
#define enum_c2ats_G_RESOLVER_RECORD_NS 1 + 4
typedef type_c2ats_GResourceError = int
#define enum_c2ats_G_RESOURCE_ERROR_NOT_FOUND 0
#define enum_c2ats_G_RESOURCE_ERROR_INTERNAL 1
typedef type_c2ats_GResourceFlags = int
#define enum_c2ats_G_RESOURCE_FLAGS_NONE 0
#define enum_c2ats_G_RESOURCE_FLAGS_COMPRESSED 1 << 0
typedef type_c2ats_GResourceLookupFlags = int
#define enum_c2ats_G_RESOURCE_LOOKUP_FLAGS_NONE 0
typedef type_c2ats_GSocketFamily = int
#define enum_c2ats_G_SOCKET_FAMILY_INVALID 0
#define enum_c2ats_G_SOCKET_FAMILY_UNIX 1
#define enum_c2ats_G_SOCKET_FAMILY_IPV4 2
#define enum_c2ats_G_SOCKET_FAMILY_IPV6 10
typedef type_c2ats_GSocketType = int
#define enum_c2ats_G_SOCKET_TYPE_INVALID 0
#define enum_c2ats_G_SOCKET_TYPE_STREAM 1
#define enum_c2ats_G_SOCKET_TYPE_DATAGRAM 2
#define enum_c2ats_G_SOCKET_TYPE_SEQPACKET 3
typedef type_c2ats_GSocketMsgFlags = int
#define enum_c2ats_G_SOCKET_MSG_NONE 0
#define enum_c2ats_G_SOCKET_MSG_OOB 1
#define enum_c2ats_G_SOCKET_MSG_PEEK 2
#define enum_c2ats_G_SOCKET_MSG_DONTROUTE 4
typedef type_c2ats_GSocketProtocol = int
#define enum_c2ats_G_SOCKET_PROTOCOL_UNKNOWN ~1
#define enum_c2ats_G_SOCKET_PROTOCOL_DEFAULT 0
#define enum_c2ats_G_SOCKET_PROTOCOL_TCP 6
#define enum_c2ats_G_SOCKET_PROTOCOL_UDP 17
#define enum_c2ats_G_SOCKET_PROTOCOL_SCTP 132
typedef type_c2ats_GZlibCompressorFormat = int
#define enum_c2ats_G_ZLIB_COMPRESSOR_FORMAT_ZLIB 0
#define enum_c2ats_G_ZLIB_COMPRESSOR_FORMAT_GZIP 1
#define enum_c2ats_G_ZLIB_COMPRESSOR_FORMAT_RAW 2
typedef type_c2ats_GUnixSocketAddressType = int
#define enum_c2ats_G_UNIX_SOCKET_ADDRESS_INVALID 0
#define enum_c2ats_G_UNIX_SOCKET_ADDRESS_ANONYMOUS 1
#define enum_c2ats_G_UNIX_SOCKET_ADDRESS_PATH 2
#define enum_c2ats_G_UNIX_SOCKET_ADDRESS_ABSTRACT 3
#define enum_c2ats_G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED 4
typedef type_c2ats_GBusType = int
#define enum_c2ats_G_BUS_TYPE_STARTER ~1
#define enum_c2ats_G_BUS_TYPE_NONE 0
#define enum_c2ats_G_BUS_TYPE_SYSTEM 1
#define enum_c2ats_G_BUS_TYPE_SESSION 2
typedef type_c2ats_GBusNameOwnerFlags = int
#define enum_c2ats_G_BUS_NAME_OWNER_FLAGS_NONE 0
#define enum_c2ats_G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT 1 << 0
#define enum_c2ats_G_BUS_NAME_OWNER_FLAGS_REPLACE 1 << 1
typedef type_c2ats_GBusNameWatcherFlags = int
#define enum_c2ats_G_BUS_NAME_WATCHER_FLAGS_NONE 0
#define enum_c2ats_G_BUS_NAME_WATCHER_FLAGS_AUTO_START 1 << 0
typedef type_c2ats_GDBusProxyFlags = int
#define enum_c2ats_G_DBUS_PROXY_FLAGS_NONE 0
#define enum_c2ats_G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES 1 << 0
#define enum_c2ats_G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS 1 << 1
#define enum_c2ats_G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START 1 << 2
#define enum_c2ats_G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES 1 << 3
#define enum_c2ats_G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START_AT_CONSTRUCTION 1 << 4
typedef type_c2ats_GDBusError = int
#define enum_c2ats_G_DBUS_ERROR_FAILED 0
#define enum_c2ats_G_DBUS_ERROR_NO_MEMORY 1
#define enum_c2ats_G_DBUS_ERROR_SERVICE_UNKNOWN 2
#define enum_c2ats_G_DBUS_ERROR_NAME_HAS_NO_OWNER 3
#define enum_c2ats_G_DBUS_ERROR_NO_REPLY 4
#define enum_c2ats_G_DBUS_ERROR_IO_ERROR 5
#define enum_c2ats_G_DBUS_ERROR_BAD_ADDRESS 6
#define enum_c2ats_G_DBUS_ERROR_NOT_SUPPORTED 7
#define enum_c2ats_G_DBUS_ERROR_LIMITS_EXCEEDED 8
#define enum_c2ats_G_DBUS_ERROR_ACCESS_DENIED 9
#define enum_c2ats_G_DBUS_ERROR_AUTH_FAILED 10
#define enum_c2ats_G_DBUS_ERROR_NO_SERVER 11
#define enum_c2ats_G_DBUS_ERROR_TIMEOUT 12
#define enum_c2ats_G_DBUS_ERROR_NO_NETWORK 13
#define enum_c2ats_G_DBUS_ERROR_ADDRESS_IN_USE 14
#define enum_c2ats_G_DBUS_ERROR_DISCONNECTED 15
#define enum_c2ats_G_DBUS_ERROR_INVALID_ARGS 16
#define enum_c2ats_G_DBUS_ERROR_FILE_NOT_FOUND 17
#define enum_c2ats_G_DBUS_ERROR_FILE_EXISTS 18
#define enum_c2ats_G_DBUS_ERROR_UNKNOWN_METHOD 19
#define enum_c2ats_G_DBUS_ERROR_TIMED_OUT 20
#define enum_c2ats_G_DBUS_ERROR_MATCH_RULE_NOT_FOUND 21
#define enum_c2ats_G_DBUS_ERROR_MATCH_RULE_INVALID 22
#define enum_c2ats_G_DBUS_ERROR_SPAWN_EXEC_FAILED 23
#define enum_c2ats_G_DBUS_ERROR_SPAWN_FORK_FAILED 24
#define enum_c2ats_G_DBUS_ERROR_SPAWN_CHILD_EXITED 25
#define enum_c2ats_G_DBUS_ERROR_SPAWN_CHILD_SIGNALED 26
#define enum_c2ats_G_DBUS_ERROR_SPAWN_FAILED 27
#define enum_c2ats_G_DBUS_ERROR_SPAWN_SETUP_FAILED 28
#define enum_c2ats_G_DBUS_ERROR_SPAWN_CONFIG_INVALID 29
#define enum_c2ats_G_DBUS_ERROR_SPAWN_SERVICE_INVALID 30
#define enum_c2ats_G_DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND 31
#define enum_c2ats_G_DBUS_ERROR_SPAWN_PERMISSIONS_INVALID 32
#define enum_c2ats_G_DBUS_ERROR_SPAWN_FILE_INVALID 33
#define enum_c2ats_G_DBUS_ERROR_SPAWN_NO_MEMORY 34
#define enum_c2ats_G_DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN 35
#define enum_c2ats_G_DBUS_ERROR_INVALID_SIGNATURE 36
#define enum_c2ats_G_DBUS_ERROR_INVALID_FILE_CONTENT 37
#define enum_c2ats_G_DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN 38
#define enum_c2ats_G_DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN 39
#define enum_c2ats_G_DBUS_ERROR_OBJECT_PATH_IN_USE 40
#define enum_c2ats_G_DBUS_ERROR_UNKNOWN_OBJECT 41
#define enum_c2ats_G_DBUS_ERROR_UNKNOWN_INTERFACE 42
#define enum_c2ats_G_DBUS_ERROR_UNKNOWN_PROPERTY 43
#define enum_c2ats_G_DBUS_ERROR_PROPERTY_READ_ONLY 44
typedef type_c2ats_GDBusConnectionFlags = int
#define enum_c2ats_G_DBUS_CONNECTION_FLAGS_NONE 0
#define enum_c2ats_G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT 1 << 0
#define enum_c2ats_G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER 1 << 1
#define enum_c2ats_G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS 1 << 2
#define enum_c2ats_G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION 1 << 3
#define enum_c2ats_G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING 1 << 4
typedef type_c2ats_GDBusCapabilityFlags = int
#define enum_c2ats_G_DBUS_CAPABILITY_FLAGS_NONE 0
#define enum_c2ats_G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING 1 << 0
typedef type_c2ats_GDBusCallFlags = int
#define enum_c2ats_G_DBUS_CALL_FLAGS_NONE 0
#define enum_c2ats_G_DBUS_CALL_FLAGS_NO_AUTO_START 1 << 0
#define enum_c2ats_G_DBUS_CALL_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION 1 << 1
typedef type_c2ats_GDBusMessageType = int
#define enum_c2ats_G_DBUS_MESSAGE_TYPE_INVALID 0
#define enum_c2ats_G_DBUS_MESSAGE_TYPE_METHOD_CALL 1
#define enum_c2ats_G_DBUS_MESSAGE_TYPE_METHOD_RETURN 2
#define enum_c2ats_G_DBUS_MESSAGE_TYPE_ERROR 3
#define enum_c2ats_G_DBUS_MESSAGE_TYPE_SIGNAL 4
typedef type_c2ats_GDBusMessageFlags = int
#define enum_c2ats_G_DBUS_MESSAGE_FLAGS_NONE 0
#define enum_c2ats_G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED 1 << 0
#define enum_c2ats_G_DBUS_MESSAGE_FLAGS_NO_AUTO_START 1 << 1
#define enum_c2ats_G_DBUS_MESSAGE_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION 1 << 2
typedef type_c2ats_GDBusMessageHeaderField = int
#define enum_c2ats_G_DBUS_MESSAGE_HEADER_FIELD_INVALID 0
#define enum_c2ats_G_DBUS_MESSAGE_HEADER_FIELD_PATH 1
#define enum_c2ats_G_DBUS_MESSAGE_HEADER_FIELD_INTERFACE 2
#define enum_c2ats_G_DBUS_MESSAGE_HEADER_FIELD_MEMBER 3
#define enum_c2ats_G_DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME 4
#define enum_c2ats_G_DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL 5
#define enum_c2ats_G_DBUS_MESSAGE_HEADER_FIELD_DESTINATION 6
#define enum_c2ats_G_DBUS_MESSAGE_HEADER_FIELD_SENDER 7
#define enum_c2ats_G_DBUS_MESSAGE_HEADER_FIELD_SIGNATURE 8
#define enum_c2ats_G_DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS 9
typedef type_c2ats_GDBusPropertyInfoFlags = int
#define enum_c2ats_G_DBUS_PROPERTY_INFO_FLAGS_NONE 0
#define enum_c2ats_G_DBUS_PROPERTY_INFO_FLAGS_READABLE 1 << 0
#define enum_c2ats_G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE 1 << 1
typedef type_c2ats_GDBusSubtreeFlags = int
#define enum_c2ats_G_DBUS_SUBTREE_FLAGS_NONE 0
#define enum_c2ats_G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES 1 << 0
typedef type_c2ats_GDBusServerFlags = int
#define enum_c2ats_G_DBUS_SERVER_FLAGS_NONE 0
#define enum_c2ats_G_DBUS_SERVER_FLAGS_RUN_IN_THREAD 1 << 0
#define enum_c2ats_G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS 1 << 1
typedef type_c2ats_GDBusSignalFlags = int
#define enum_c2ats_G_DBUS_SIGNAL_FLAGS_NONE 0
#define enum_c2ats_G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE 1 << 0
#define enum_c2ats_G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_NAMESPACE 1 << 1
#define enum_c2ats_G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_PATH 1 << 2
typedef type_c2ats_GDBusSendMessageFlags = int
#define enum_c2ats_G_DBUS_SEND_MESSAGE_FLAGS_NONE 0
#define enum_c2ats_G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL 1 << 0
typedef type_c2ats_GCredentialsType = int
#define enum_c2ats_G_CREDENTIALS_TYPE_INVALID 0
#define enum_c2ats_G_CREDENTIALS_TYPE_LINUX_UCRED 1
#define enum_c2ats_G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED 2
#define enum_c2ats_G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED 3
#define enum_c2ats_G_CREDENTIALS_TYPE_SOLARIS_UCRED 4
#define enum_c2ats_G_CREDENTIALS_TYPE_NETBSD_UNPCBID 5
typedef type_c2ats_GDBusMessageByteOrder = int
#define enum_c2ats_G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN 'B'
#define enum_c2ats_G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN 'l'
typedef type_c2ats_GApplicationFlags = int
#define enum_c2ats_G_APPLICATION_FLAGS_NONE 0
#define enum_c2ats_G_APPLICATION_IS_SERVICE 1 << 0
#define enum_c2ats_G_APPLICATION_IS_LAUNCHER 1 << 1
#define enum_c2ats_G_APPLICATION_HANDLES_OPEN 1 << 2
#define enum_c2ats_G_APPLICATION_HANDLES_COMMAND_LINE 1 << 3
#define enum_c2ats_G_APPLICATION_SEND_ENVIRONMENT 1 << 4
#define enum_c2ats_G_APPLICATION_NON_UNIQUE 1 << 5
#define enum_c2ats_G_APPLICATION_CAN_OVERRIDE_APP_ID 1 << 6
typedef type_c2ats_GTlsError = int
#define enum_c2ats_G_TLS_ERROR_UNAVAILABLE 0
#define enum_c2ats_G_TLS_ERROR_MISC 1
#define enum_c2ats_G_TLS_ERROR_BAD_CERTIFICATE 2
#define enum_c2ats_G_TLS_ERROR_NOT_TLS 3
#define enum_c2ats_G_TLS_ERROR_HANDSHAKE 4
#define enum_c2ats_G_TLS_ERROR_CERTIFICATE_REQUIRED 5
#define enum_c2ats_G_TLS_ERROR_EOF 6
typedef type_c2ats_GTlsCertificateFlags = int
#define enum_c2ats_G_TLS_CERTIFICATE_UNKNOWN_CA 1 << 0
#define enum_c2ats_G_TLS_CERTIFICATE_BAD_IDENTITY 1 << 1
#define enum_c2ats_G_TLS_CERTIFICATE_NOT_ACTIVATED 1 << 2
#define enum_c2ats_G_TLS_CERTIFICATE_EXPIRED 1 << 3
#define enum_c2ats_G_TLS_CERTIFICATE_REVOKED 1 << 4
#define enum_c2ats_G_TLS_CERTIFICATE_INSECURE 1 << 5
#define enum_c2ats_G_TLS_CERTIFICATE_GENERIC_ERROR 1 << 6
#define enum_c2ats_G_TLS_CERTIFICATE_VALIDATE_ALL 0x7f
typedef type_c2ats_GTlsAuthenticationMode = int
#define enum_c2ats_G_TLS_AUTHENTICATION_NONE 0
#define enum_c2ats_G_TLS_AUTHENTICATION_REQUESTED 1
#define enum_c2ats_G_TLS_AUTHENTICATION_REQUIRED 2
typedef type_c2ats_GTlsRehandshakeMode = int
#define enum_c2ats_G_TLS_REHANDSHAKE_NEVER 0
#define enum_c2ats_G_TLS_REHANDSHAKE_SAFELY 1
#define enum_c2ats_G_TLS_REHANDSHAKE_UNSAFELY 2
typedef type_c2ats_GTlsPasswordFlags = int
#define enum_c2ats_G_TLS_PASSWORD_NONE 0
#define enum_c2ats_G_TLS_PASSWORD_RETRY 1 << 1
#define enum_c2ats_G_TLS_PASSWORD_MANY_TRIES 1 << 2
#define enum_c2ats_G_TLS_PASSWORD_FINAL_TRY 1 << 3
typedef type_c2ats_GTlsInteractionResult = int
#define enum_c2ats_G_TLS_INTERACTION_UNHANDLED 0
#define enum_c2ats_G_TLS_INTERACTION_HANDLED 1
#define enum_c2ats_G_TLS_INTERACTION_FAILED 2
typedef type_c2ats_GDBusInterfaceSkeletonFlags = int
#define enum_c2ats_G_DBUS_INTERFACE_SKELETON_FLAGS_NONE 0
#define enum_c2ats_G_DBUS_INTERFACE_SKELETON_FLAGS_HANDLE_METHOD_INVOCATIONS_IN_THREAD 1 << 0
typedef type_c2ats_GDBusObjectManagerClientFlags = int
#define enum_c2ats_G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE 0
#define enum_c2ats_G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_DO_NOT_AUTO_START 1 << 0
typedef type_c2ats_GTlsDatabaseVerifyFlags = int
#define enum_c2ats_G_TLS_DATABASE_VERIFY_NONE 0
typedef type_c2ats_GTlsDatabaseLookupFlags = int
#define enum_c2ats_G_TLS_DATABASE_LOOKUP_NONE 0
#define enum_c2ats_G_TLS_DATABASE_LOOKUP_KEYPAIR 1
typedef type_c2ats_GTlsCertificateRequestFlags = int
#define enum_c2ats_G_TLS_CERTIFICATE_REQUEST_NONE 0
typedef type_c2ats_GIOModuleScopeFlags = int
#define enum_c2ats_G_IO_MODULE_SCOPE_NONE 0
#define enum_c2ats_G_IO_MODULE_SCOPE_BLOCK_DUPLICATES 1
typedef type_c2ats_GSocketClientEvent = int
#define enum_c2ats_G_SOCKET_CLIENT_RESOLVING 0
#define enum_c2ats_G_SOCKET_CLIENT_RESOLVED 1
#define enum_c2ats_G_SOCKET_CLIENT_CONNECTING 2
#define enum_c2ats_G_SOCKET_CLIENT_CONNECTED 3
#define enum_c2ats_G_SOCKET_CLIENT_PROXY_NEGOTIATING 4
#define enum_c2ats_G_SOCKET_CLIENT_PROXY_NEGOTIATED 5
#define enum_c2ats_G_SOCKET_CLIENT_TLS_HANDSHAKING 6
#define enum_c2ats_G_SOCKET_CLIENT_TLS_HANDSHAKED 7
#define enum_c2ats_G_SOCKET_CLIENT_COMPLETE 8
typedef type_c2ats_GSocketListenerEvent = int
#define enum_c2ats_G_SOCKET_LISTENER_BINDING 0
#define enum_c2ats_G_SOCKET_LISTENER_BOUND 1
#define enum_c2ats_G_SOCKET_LISTENER_LISTENING 2
#define enum_c2ats_G_SOCKET_LISTENER_LISTENED 3
typedef type_c2ats_GTestDBusFlags = int
#define enum_c2ats_G_TEST_DBUS_NONE 0
typedef type_c2ats_GSubprocessFlags = int
#define enum_c2ats_G_SUBPROCESS_FLAGS_NONE 0
#define enum_c2ats_G_SUBPROCESS_FLAGS_STDIN_PIPE 1u << 0
#define enum_c2ats_G_SUBPROCESS_FLAGS_STDIN_INHERIT 1u << 1
#define enum_c2ats_G_SUBPROCESS_FLAGS_STDOUT_PIPE 1u << 2
#define enum_c2ats_G_SUBPROCESS_FLAGS_STDOUT_SILENCE 1u << 3
#define enum_c2ats_G_SUBPROCESS_FLAGS_STDERR_PIPE 1u << 4
#define enum_c2ats_G_SUBPROCESS_FLAGS_STDERR_SILENCE 1u << 5
#define enum_c2ats_G_SUBPROCESS_FLAGS_STDERR_MERGE 1u << 6
#define enum_c2ats_G_SUBPROCESS_FLAGS_INHERIT_FDS 1u << 7
typedef type_c2ats_GNotificationPriority = int
#define enum_c2ats_G_NOTIFICATION_PRIORITY_NORMAL 0
#define enum_c2ats_G_NOTIFICATION_PRIORITY_LOW 1
#define enum_c2ats_G_NOTIFICATION_PRIORITY_HIGH 2
#define enum_c2ats_G_NOTIFICATION_PRIORITY_URGENT 3
typedef type_c2ats_GNetworkConnectivity = int
#define enum_c2ats_G_NETWORK_CONNECTIVITY_LOCAL 1
#define enum_c2ats_G_NETWORK_CONNECTIVITY_LIMITED 2
#define enum_c2ats_G_NETWORK_CONNECTIVITY_PORTAL 3
#define enum_c2ats_G_NETWORK_CONNECTIVITY_FULL 4
// File: /usr/include/glib-2.0/gio/giotypes.h
abst@ype struct_c2ats__GAppLaunchContext // FIXME! Forward declaration.
typedef type_c2ats_GAppLaunchContext = struct_c2ats__GAppLaunchContext
abst@ype struct_c2ats__GAppInfo // FIXME! Forward declaration.
typedef type_c2ats_GAppInfo = struct_c2ats__GAppInfo
abst@ype struct_c2ats__GAsyncResult // FIXME! Forward declaration.
typedef type_c2ats_GAsyncResult = struct_c2ats__GAsyncResult
abst@ype struct_c2ats__GAsyncInitable // FIXME! Forward declaration.
typedef type_c2ats_GAsyncInitable = struct_c2ats__GAsyncInitable
abst@ype struct_c2ats__GBufferedInputStream // FIXME! Forward declaration.
typedef type_c2ats_GBufferedInputStream = struct_c2ats__GBufferedInputStream
abst@ype struct_c2ats__GBufferedOutputStream // FIXME! Forward declaration.
typedef type_c2ats_GBufferedOutputStream = struct_c2ats__GBufferedOutputStream
abst@ype struct_c2ats__GCancellable // FIXME! Forward declaration.
typedef type_c2ats_GCancellable = struct_c2ats__GCancellable
abst@ype struct_c2ats__GCharsetConverter // FIXME! Forward declaration.
typedef type_c2ats_GCharsetConverter = struct_c2ats__GCharsetConverter
abst@ype struct_c2ats__GConverter // FIXME! Forward declaration.
typedef type_c2ats_GConverter = struct_c2ats__GConverter
abst@ype struct_c2ats__GConverterInputStream // FIXME! Forward declaration.
typedef type_c2ats_GConverterInputStream = struct_c2ats__GConverterInputStream
abst@ype struct_c2ats__GConverterOutputStream // FIXME! Forward declaration.
typedef type_c2ats_GConverterOutputStream = struct_c2ats__GConverterOutputStream
abst@ype struct_c2ats__GDatagramBased // FIXME! Forward declaration.
typedef type_c2ats_GDatagramBased = struct_c2ats__GDatagramBased
abst@ype struct_c2ats__GDataInputStream // FIXME! Forward declaration.
typedef type_c2ats_GDataInputStream = struct_c2ats__GDataInputStream
abst@ype struct_c2ats__GSimplePermission // FIXME! Forward declaration.
typedef type_c2ats_GSimplePermission = struct_c2ats__GSimplePermission
abst@ype struct_c2ats__GZlibCompressor // FIXME! Forward declaration.
typedef type_c2ats_GZlibCompressor = struct_c2ats__GZlibCompressor
abst@ype struct_c2ats__GZlibDecompressor // FIXME! Forward declaration.
typedef type_c2ats_GZlibDecompressor = struct_c2ats__GZlibDecompressor
abst@ype struct_c2ats__GSimpleActionGroup // FIXME! Forward declaration.
typedef type_c2ats_GSimpleActionGroup = struct_c2ats__GSimpleActionGroup
abst@ype struct_c2ats__GRemoteActionGroup // FIXME! Forward declaration.
typedef type_c2ats_GRemoteActionGroup = struct_c2ats__GRemoteActionGroup
abst@ype struct_c2ats__GDBusActionGroup // FIXME! Forward declaration.
typedef type_c2ats_GDBusActionGroup = struct_c2ats__GDBusActionGroup
abst@ype struct_c2ats__GActionMap // FIXME! Forward declaration.
typedef type_c2ats_GActionMap = struct_c2ats__GActionMap
abst@ype struct_c2ats__GActionGroup // FIXME! Forward declaration.
typedef type_c2ats_GActionGroup = struct_c2ats__GActionGroup
abst@ype struct_c2ats__GPropertyAction // FIXME! Forward declaration.
typedef type_c2ats_GPropertyAction = struct_c2ats__GPropertyAction
abst@ype struct_c2ats__GSimpleAction // FIXME! Forward declaration.
typedef type_c2ats_GSimpleAction = struct_c2ats__GSimpleAction
abst@ype struct_c2ats__GAction // FIXME! Forward declaration.
typedef type_c2ats_GAction = struct_c2ats__GAction
abst@ype struct_c2ats__GApplication // FIXME! Forward declaration.
typedef type_c2ats_GApplication = struct_c2ats__GApplication
abst@ype struct_c2ats__GApplicationCommandLine // FIXME! Forward declaration.
typedef type_c2ats_GApplicationCommandLine = struct_c2ats__GApplicationCommandLine
abst@ype struct_c2ats__GSettingsBackend // FIXME! Forward declaration.
typedef type_c2ats_GSettingsBackend = struct_c2ats__GSettingsBackend
abst@ype struct_c2ats__GSettings // FIXME! Forward declaration.
typedef type_c2ats_GSettings = struct_c2ats__GSettings
abst@ype struct_c2ats__GPermission // FIXME! Forward declaration.
typedef type_c2ats_GPermission = struct_c2ats__GPermission
abst@ype struct_c2ats__GMenuModel // FIXME! Forward declaration.
typedef type_c2ats_GMenuModel = struct_c2ats__GMenuModel
abst@ype struct_c2ats__GNotification // FIXME! Forward declaration.
typedef type_c2ats_GNotification = struct_c2ats__GNotification
abst@ype struct_c2ats__GDrive // FIXME! Forward declaration.
typedef type_c2ats_GDrive = struct_c2ats__GDrive
abst@ype struct_c2ats__GFileEnumerator // FIXME! Forward declaration.
typedef type_c2ats_GFileEnumerator = struct_c2ats__GFileEnumerator
abst@ype struct_c2ats__GFileMonitor // FIXME! Forward declaration.
typedef type_c2ats_GFileMonitor = struct_c2ats__GFileMonitor
abst@ype struct_c2ats__GFilterInputStream // FIXME! Forward declaration.
typedef type_c2ats_GFilterInputStream = struct_c2ats__GFilterInputStream
abst@ype struct_c2ats__GFilterOutputStream // FIXME! Forward declaration.
typedef type_c2ats_GFilterOutputStream = struct_c2ats__GFilterOutputStream
abst@ype struct_c2ats__GFile // FIXME! Forward declaration.
typedef type_c2ats_GFile = struct_c2ats__GFile
abst@ype struct_c2ats__GFileInfo // FIXME! Forward declaration.
typedef type_c2ats_GFileInfo = struct_c2ats__GFileInfo
abst@ype struct_c2ats__GFileAttributeMatcher // FIXME! Forward declaration.
typedef type_c2ats_GFileAttributeMatcher = struct_c2ats__GFileAttributeMatcher
abst@ype struct_c2ats__GFileAttributeInfo // FIXME! Forward declaration.
typedef type_c2ats_GFileAttributeInfo = struct_c2ats__GFileAttributeInfo
abst@ype struct_c2ats__GFileAttributeInfoList // FIXME! Forward declaration.
typedef type_c2ats_GFileAttributeInfoList = struct_c2ats__GFileAttributeInfoList
abst@ype struct_c2ats__GFileDescriptorBased // FIXME! Forward declaration.
typedef type_c2ats_GFileDescriptorBased = struct_c2ats__GFileDescriptorBased
abst@ype struct_c2ats__GFileInputStream // FIXME! Forward declaration.
typedef type_c2ats_GFileInputStream = struct_c2ats__GFileInputStream
abst@ype struct_c2ats__GFileOutputStream // FIXME! Forward declaration.
typedef type_c2ats_GFileOutputStream = struct_c2ats__GFileOutputStream
abst@ype struct_c2ats__GFileIOStream // FIXME! Forward declaration.
typedef type_c2ats_GFileIOStream = struct_c2ats__GFileIOStream
abst@ype struct_c2ats__GFileIcon // FIXME! Forward declaration.
typedef type_c2ats_GFileIcon = struct_c2ats__GFileIcon
abst@ype struct_c2ats__GFilenameCompleter // FIXME! Forward declaration.
typedef type_c2ats_GFilenameCompleter = struct_c2ats__GFilenameCompleter
abst@ype struct_c2ats__GIcon // FIXME! Forward declaration.
typedef type_c2ats_GIcon = struct_c2ats__GIcon
abst@ype struct_c2ats__GInetAddress // FIXME! Forward declaration.
typedef type_c2ats_GInetAddress = struct_c2ats__GInetAddress
abst@ype struct_c2ats__GInetAddressMask // FIXME! Forward declaration.
typedef type_c2ats_GInetAddressMask = struct_c2ats__GInetAddressMask
abst@ype struct_c2ats__GInetSocketAddress // FIXME! Forward declaration.
typedef type_c2ats_GInetSocketAddress = struct_c2ats__GInetSocketAddress
abst@ype struct_c2ats__GNativeSocketAddress // FIXME! Forward declaration.
typedef type_c2ats_GNativeSocketAddress = struct_c2ats__GNativeSocketAddress
abst@ype struct_c2ats__GInputStream // FIXME! Forward declaration.
typedef type_c2ats_GInputStream = struct_c2ats__GInputStream
abst@ype struct_c2ats__GInitable // FIXME! Forward declaration.
typedef type_c2ats_GInitable = struct_c2ats__GInitable
abst@ype struct_c2ats__GIOModule // FIXME! Forward declaration.
typedef type_c2ats_GIOModule = struct_c2ats__GIOModule
abst@ype struct_c2ats__GIOExtensionPoint // FIXME! Forward declaration.
typedef type_c2ats_GIOExtensionPoint = struct_c2ats__GIOExtensionPoint
abst@ype struct_c2ats__GIOExtension // FIXME! Forward declaration.
typedef type_c2ats_GIOExtension = struct_c2ats__GIOExtension
abst@ype struct_c2ats__GIOSchedulerJob // FIXME! Forward declaration.
typedef type_c2ats_GIOSchedulerJob = struct_c2ats__GIOSchedulerJob
abst@ype struct_c2ats__GIOStreamAdapter // FIXME! Forward declaration.
typedef type_c2ats_GIOStreamAdapter = struct_c2ats__GIOStreamAdapter
abst@ype struct_c2ats__GLoadableIcon // FIXME! Forward declaration.
typedef type_c2ats_GLoadableIcon = struct_c2ats__GLoadableIcon
abst@ype struct_c2ats__GBytesIcon // FIXME! Forward declaration.
typedef type_c2ats_GBytesIcon = struct_c2ats__GBytesIcon
abst@ype struct_c2ats__GMemoryInputStream // FIXME! Forward declaration.
typedef type_c2ats_GMemoryInputStream = struct_c2ats__GMemoryInputStream
abst@ype struct_c2ats__GMemoryOutputStream // FIXME! Forward declaration.
typedef type_c2ats_GMemoryOutputStream = struct_c2ats__GMemoryOutputStream
abst@ype struct_c2ats__GMount // FIXME! Forward declaration.
typedef type_c2ats_GMount = struct_c2ats__GMount
abst@ype struct_c2ats__GMountOperation // FIXME! Forward declaration.
typedef type_c2ats_GMountOperation = struct_c2ats__GMountOperation
abst@ype struct_c2ats__GNetworkAddress // FIXME! Forward declaration.
typedef type_c2ats_GNetworkAddress = struct_c2ats__GNetworkAddress
abst@ype struct_c2ats__GNetworkMonitor // FIXME! Forward declaration.
typedef type_c2ats_GNetworkMonitor = struct_c2ats__GNetworkMonitor
abst@ype struct_c2ats__GNetworkService // FIXME! Forward declaration.
typedef type_c2ats_GNetworkService = struct_c2ats__GNetworkService
abst@ype struct_c2ats__GOutputStream // FIXME! Forward declaration.
typedef type_c2ats_GOutputStream = struct_c2ats__GOutputStream
abst@ype struct_c2ats__GIOStream // FIXME! Forward declaration.
typedef type_c2ats_GIOStream = struct_c2ats__GIOStream
abst@ype struct_c2ats__GSimpleIOStream // FIXME! Forward declaration.
typedef type_c2ats_GSimpleIOStream = struct_c2ats__GSimpleIOStream
abst@ype struct_c2ats__GPollableInputStream // FIXME! Forward declaration.
typedef type_c2ats_GPollableInputStream = struct_c2ats__GPollableInputStream
abst@ype struct_c2ats__GPollableOutputStream // FIXME! Forward declaration.
typedef type_c2ats_GPollableOutputStream = struct_c2ats__GPollableOutputStream
abst@ype struct_c2ats__GResolver // FIXME! Forward declaration.
typedef type_c2ats_GResolver = struct_c2ats__GResolver
abst@ype struct_c2ats__GResource // FIXME! Forward declaration.
typedef type_c2ats_GResource = struct_c2ats__GResource
abst@ype struct_c2ats__GSeekable // FIXME! Forward declaration.
typedef type_c2ats_GSeekable = struct_c2ats__GSeekable
abst@ype struct_c2ats__GSimpleAsyncResult // FIXME! Forward declaration.
typedef type_c2ats_GSimpleAsyncResult = struct_c2ats__GSimpleAsyncResult
abst@ype struct_c2ats__GSocket // FIXME! Forward declaration.
typedef type_c2ats_GSocket = struct_c2ats__GSocket
abst@ype struct_c2ats__GSocketControlMessage // FIXME! Forward declaration.
typedef type_c2ats_GSocketControlMessage = struct_c2ats__GSocketControlMessage
abst@ype struct_c2ats__GSocketClient // FIXME! Forward declaration.
typedef type_c2ats_GSocketClient = struct_c2ats__GSocketClient
abst@ype struct_c2ats__GSocketConnection // FIXME! Forward declaration.
typedef type_c2ats_GSocketConnection = struct_c2ats__GSocketConnection
abst@ype struct_c2ats__GSocketListener // FIXME! Forward declaration.
typedef type_c2ats_GSocketListener = struct_c2ats__GSocketListener
abst@ype struct_c2ats__GSocketService // FIXME! Forward declaration.
typedef type_c2ats_GSocketService = struct_c2ats__GSocketService
abst@ype struct_c2ats__GSocketAddress // FIXME! Forward declaration.
typedef type_c2ats_GSocketAddress = struct_c2ats__GSocketAddress
abst@ype struct_c2ats__GSocketAddressEnumerator // FIXME! Forward declaration.
typedef type_c2ats_GSocketAddressEnumerator = struct_c2ats__GSocketAddressEnumerator
abst@ype struct_c2ats__GSocketConnectable // FIXME! Forward declaration.
typedef type_c2ats_GSocketConnectable = struct_c2ats__GSocketConnectable
abst@ype struct_c2ats__GSrvTarget // FIXME! Forward declaration.
typedef type_c2ats_GSrvTarget = struct_c2ats__GSrvTarget
abst@ype struct_c2ats__GTask // FIXME! Forward declaration.
typedef type_c2ats_GTask = struct_c2ats__GTask
abst@ype struct_c2ats__GTcpConnection // FIXME! Forward declaration.
typedef type_c2ats_GTcpConnection = struct_c2ats__GTcpConnection
abst@ype struct_c2ats__GTcpWrapperConnection // FIXME! Forward declaration.
typedef type_c2ats_GTcpWrapperConnection = struct_c2ats__GTcpWrapperConnection
abst@ype struct_c2ats__GThreadedSocketService // FIXME! Forward declaration.
typedef type_c2ats_GThreadedSocketService = struct_c2ats__GThreadedSocketService
abst@ype struct_c2ats__GDtlsConnection // FIXME! Forward declaration.
typedef type_c2ats_GDtlsConnection = struct_c2ats__GDtlsConnection
abst@ype struct_c2ats__GDtlsClientConnection // FIXME! Forward declaration.
typedef type_c2ats_GDtlsClientConnection = struct_c2ats__GDtlsClientConnection
abst@ype struct_c2ats__GDtlsServerConnection // FIXME! Forward declaration.
typedef type_c2ats_GDtlsServerConnection = struct_c2ats__GDtlsServerConnection
abst@ype struct_c2ats__GThemedIcon // FIXME! Forward declaration.
typedef type_c2ats_GThemedIcon = struct_c2ats__GThemedIcon
abst@ype struct_c2ats__GTlsCertificate // FIXME! Forward declaration.
typedef type_c2ats_GTlsCertificate = struct_c2ats__GTlsCertificate
abst@ype struct_c2ats__GTlsClientConnection // FIXME! Forward declaration.
typedef type_c2ats_GTlsClientConnection = struct_c2ats__GTlsClientConnection
abst@ype struct_c2ats__GTlsConnection // FIXME! Forward declaration.
typedef type_c2ats_GTlsConnection = struct_c2ats__GTlsConnection
abst@ype struct_c2ats__GTlsDatabase // FIXME! Forward declaration.
typedef type_c2ats_GTlsDatabase = struct_c2ats__GTlsDatabase
abst@ype struct_c2ats__GTlsFileDatabase // FIXME! Forward declaration.
typedef type_c2ats_GTlsFileDatabase = struct_c2ats__GTlsFileDatabase
abst@ype struct_c2ats__GTlsInteraction // FIXME! Forward declaration.
typedef type_c2ats_GTlsInteraction = struct_c2ats__GTlsInteraction
abst@ype struct_c2ats__GTlsPassword // FIXME! Forward declaration.
typedef type_c2ats_GTlsPassword = struct_c2ats__GTlsPassword
abst@ype struct_c2ats__GTlsServerConnection // FIXME! Forward declaration.
typedef type_c2ats_GTlsServerConnection = struct_c2ats__GTlsServerConnection
abst@ype struct_c2ats__GVfs // FIXME! Forward declaration.
typedef type_c2ats_GVfs = struct_c2ats__GVfs
abst@ype struct_c2ats__GProxyResolver // FIXME! Forward declaration.
typedef type_c2ats_GProxyResolver = struct_c2ats__GProxyResolver
abst@ype struct_c2ats__GProxy // FIXME! Forward declaration.
typedef type_c2ats_GProxy = struct_c2ats__GProxy
abst@ype struct_c2ats__GProxyAddress // FIXME! Forward declaration.
typedef type_c2ats_GProxyAddress = struct_c2ats__GProxyAddress
abst@ype struct_c2ats__GProxyAddressEnumerator // FIXME! Forward declaration.
typedef type_c2ats_GProxyAddressEnumerator = struct_c2ats__GProxyAddressEnumerator
abst@ype struct_c2ats__GVolume // FIXME! Forward declaration.
typedef type_c2ats_GVolume = struct_c2ats__GVolume
abst@ype struct_c2ats__GVolumeMonitor // FIXME! Forward declaration.
typedef type_c2ats_GVolumeMonitor = struct_c2ats__GVolumeMonitor
typedef type_c2ats_GAsyncReadyCallback = {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void
typedef type_c2ats_GFileProgressCallback = (type_c2ats_goffset, type_c2ats_goffset, type_c2ats_gpointer) -> void
typedef type_c2ats_GFileReadMoreCallback = {l1:addr} (!ptr_v_1(char, l1) | ptr l1, type_c2ats_goffset, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GFileMeasureProgressCallback = (type_c2ats_gboolean, type_c2ats_guint64, type_c2ats_guint64, type_c2ats_guint64, type_c2ats_gpointer) -> void
typedef type_c2ats_GIOSchedulerJobFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GIOSchedulerJob, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GSimpleAsyncThreadFunc = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSimpleAsyncResult, l1), !ptr_v_1(type_c2ats_GObject, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, ptr l3) -> void
typedef type_c2ats_GSocketSourceFunc = {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1, type_c2ats_GIOCondition, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GDatagramBasedSourceFunc = {l1:addr} (!ptr_v_1(type_c2ats_GDatagramBased, l1) | ptr l1, type_c2ats_GIOCondition, type_c2ats_gpointer) -> type_c2ats_gboolean
abst@ype struct_c2ats__GInputVector // FIXME! Forward declaration.
typedef type_c2ats_GInputVector = struct_c2ats__GInputVector
typedef struct_c2ats__GInputVector = $extype_struct"struct _GInputVector" of {
  buffer = type_c2ats_gpointer,
  size = type_c2ats_gsize
}
abst@ype struct_c2ats__GInputMessage // FIXME! Forward declaration.
typedef type_c2ats_GInputMessage = struct_c2ats__GInputMessage
typedef struct_c2ats__GInputMessage = $extype_struct"struct _GInputMessage" of {
  address = ptr (* cPtr0(cPtr0(type_c2ats_GSocketAddress)) *),
  vectors = ptr (* cPtr0(type_c2ats_GInputVector) *),
  num_vectors = type_c2ats_guint,
  bytes_received = type_c2ats_gsize,
  flags = type_c2ats_gint,
  control_messages = ptr (* cPtr0(cPtr0(cPtr0(type_c2ats_GSocketControlMessage))) *),
  num_control_messages = ptr (* cPtr0(type_c2ats_guint) *)
}
abst@ype struct_c2ats__GOutputVector // FIXME! Forward declaration.
typedef type_c2ats_GOutputVector = struct_c2ats__GOutputVector
typedef struct_c2ats__GOutputVector = $extype_struct"struct _GOutputVector" of {
  buffer = type_c2ats_gconstpointer,
  size = type_c2ats_gsize
}
abst@ype struct_c2ats__GOutputMessage // FIXME! Forward declaration.
typedef type_c2ats_GOutputMessage = struct_c2ats__GOutputMessage
typedef struct_c2ats__GOutputMessage = $extype_struct"struct _GOutputMessage" of {
  address = ptr (* cPtr0(type_c2ats_GSocketAddress) *),
  vectors = ptr (* cPtr0(type_c2ats_GOutputVector) *),
  num_vectors = type_c2ats_guint,
  bytes_sent = type_c2ats_guint,
  control_messages = ptr (* cPtr0(cPtr0(type_c2ats_GSocketControlMessage)) *),
  num_control_messages = type_c2ats_guint
}
abst@ype struct_c2ats__GCredentials // FIXME! Forward declaration.
typedef type_c2ats_GCredentials = struct_c2ats__GCredentials
abst@ype struct_c2ats__GUnixCredentialsMessage // FIXME! Forward declaration.
typedef type_c2ats_GUnixCredentialsMessage = struct_c2ats__GUnixCredentialsMessage
abst@ype struct_c2ats__GUnixFDList // FIXME! Forward declaration.
typedef type_c2ats_GUnixFDList = struct_c2ats__GUnixFDList
abst@ype struct_c2ats__GDBusMessage // FIXME! Forward declaration.
typedef type_c2ats_GDBusMessage = struct_c2ats__GDBusMessage
abst@ype struct_c2ats__GDBusConnection // FIXME! Forward declaration.
typedef type_c2ats_GDBusConnection = struct_c2ats__GDBusConnection
abst@ype struct_c2ats__GDBusProxy // FIXME! Forward declaration.
typedef type_c2ats_GDBusProxy = struct_c2ats__GDBusProxy
abst@ype struct_c2ats__GDBusMethodInvocation // FIXME! Forward declaration.
typedef type_c2ats_GDBusMethodInvocation = struct_c2ats__GDBusMethodInvocation
abst@ype struct_c2ats__GDBusServer // FIXME! Forward declaration.
typedef type_c2ats_GDBusServer = struct_c2ats__GDBusServer
abst@ype struct_c2ats__GDBusAuthObserver // FIXME! Forward declaration.
typedef type_c2ats_GDBusAuthObserver = struct_c2ats__GDBusAuthObserver
abst@ype struct_c2ats__GDBusErrorEntry // FIXME! Forward declaration.
typedef type_c2ats_GDBusErrorEntry = struct_c2ats__GDBusErrorEntry
abst@ype struct_c2ats__GDBusInterfaceVTable // FIXME! Forward declaration.
typedef type_c2ats_GDBusInterfaceVTable = struct_c2ats__GDBusInterfaceVTable
abst@ype struct_c2ats__GDBusSubtreeVTable // FIXME! Forward declaration.
typedef type_c2ats_GDBusSubtreeVTable = struct_c2ats__GDBusSubtreeVTable
abst@ype struct_c2ats__GDBusAnnotationInfo // FIXME! Forward declaration.
typedef type_c2ats_GDBusAnnotationInfo = struct_c2ats__GDBusAnnotationInfo
abst@ype struct_c2ats__GDBusArgInfo // FIXME! Forward declaration.
typedef type_c2ats_GDBusArgInfo = struct_c2ats__GDBusArgInfo
abst@ype struct_c2ats__GDBusMethodInfo // FIXME! Forward declaration.
typedef type_c2ats_GDBusMethodInfo = struct_c2ats__GDBusMethodInfo
abst@ype struct_c2ats__GDBusSignalInfo // FIXME! Forward declaration.
typedef type_c2ats_GDBusSignalInfo = struct_c2ats__GDBusSignalInfo
abst@ype struct_c2ats__GDBusPropertyInfo // FIXME! Forward declaration.
typedef type_c2ats_GDBusPropertyInfo = struct_c2ats__GDBusPropertyInfo
abst@ype struct_c2ats__GDBusInterfaceInfo // FIXME! Forward declaration.
typedef type_c2ats_GDBusInterfaceInfo = struct_c2ats__GDBusInterfaceInfo
abst@ype struct_c2ats__GDBusNodeInfo // FIXME! Forward declaration.
typedef type_c2ats_GDBusNodeInfo = struct_c2ats__GDBusNodeInfo
typedef type_c2ats_GCancellableSourceFunc = {l1:addr} (!ptr_v_1(type_c2ats_GCancellable, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GPollableSourceFunc = {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean
abst@ype struct_c2ats__GDBusInterface // FIXME! Forward declaration.
typedef type_c2ats_GDBusInterface = struct_c2ats__GDBusInterface
abst@ype struct_c2ats__GDBusInterfaceSkeleton // FIXME! Forward declaration.
typedef type_c2ats_GDBusInterfaceSkeleton = struct_c2ats__GDBusInterfaceSkeleton
abst@ype struct_c2ats__GDBusObject // FIXME! Forward declaration.
typedef type_c2ats_GDBusObject = struct_c2ats__GDBusObject
abst@ype struct_c2ats__GDBusObjectSkeleton // FIXME! Forward declaration.
typedef type_c2ats_GDBusObjectSkeleton = struct_c2ats__GDBusObjectSkeleton
abst@ype struct_c2ats__GDBusObjectProxy // FIXME! Forward declaration.
typedef type_c2ats_GDBusObjectProxy = struct_c2ats__GDBusObjectProxy
abst@ype struct_c2ats__GDBusObjectManager // FIXME! Forward declaration.
typedef type_c2ats_GDBusObjectManager = struct_c2ats__GDBusObjectManager
abst@ype struct_c2ats__GDBusObjectManagerClient // FIXME! Forward declaration.
typedef type_c2ats_GDBusObjectManagerClient = struct_c2ats__GDBusObjectManagerClient
abst@ype struct_c2ats__GDBusObjectManagerServer // FIXME! Forward declaration.
typedef type_c2ats_GDBusObjectManagerServer = struct_c2ats__GDBusObjectManagerServer
typedef type_c2ats_GDBusProxyTypeFunc = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDBusObjectManagerClient, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gpointer) -> type_c2ats_GType
abst@ype struct_c2ats__GTestDBus // FIXME! Forward declaration.
typedef type_c2ats_GTestDBus = struct_c2ats__GTestDBus
abst@ype struct_c2ats__GSubprocess // FIXME! Forward declaration.
typedef type_c2ats_GSubprocess = struct_c2ats__GSubprocess
abst@ype struct_c2ats__GSubprocessLauncher // FIXME! Forward declaration.
typedef type_c2ats_GSubprocessLauncher = struct_c2ats__GSubprocessLauncher
// File: /usr/include/glib-2.0/gio/gaction.h
abst@ype struct_c2ats__GActionInterface // FIXME! Forward declaration.
typedef type_c2ats_GActionInterface = struct_c2ats__GActionInterface
typedef struct_c2ats__GActionInterface = $extype_struct"struct _GActionInterface" of {
  g_iface = type_c2ats_GTypeInterface,
  get_name = {l1:addr} (!ptr_v_1(type_c2ats_GAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  get_parameter_type = {l1:addr} (!ptr_v_1(type_c2ats_GAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantType, l2) | ptr l2),
  get_state_type = {l1:addr} (!ptr_v_1(type_c2ats_GAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantType, l2) | ptr l2),
  get_state_hint = {l1:addr} (!ptr_v_1(type_c2ats_GAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2),
  get_enabled = {l1:addr} (!ptr_v_1(type_c2ats_GAction, l1) | ptr l1) -> type_c2ats_gboolean,
  get_state = {l1:addr} (!ptr_v_1(type_c2ats_GAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2),
  change_state = {l1,l2:addr} (!ptr_v_1(type_c2ats_GAction, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> void,
  activate = {l1,l2:addr} (!ptr_v_1(type_c2ats_GAction, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> void
}
fun fun_c2ats_g_action_get_type: () -> type_c2ats_GType = "mac#g_action_get_type"
fun fun_c2ats_g_action_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_action_get_name"
fun fun_c2ats_g_action_get_parameter_type: {l1:addr} (!ptr_v_1(type_c2ats_GAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantType, l2) | ptr l2) = "mac#g_action_get_parameter_type"
fun fun_c2ats_g_action_get_state_type: {l1:addr} (!ptr_v_1(type_c2ats_GAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantType, l2) | ptr l2) = "mac#g_action_get_state_type"
fun fun_c2ats_g_action_get_state_hint: {l1:addr} (!ptr_v_1(type_c2ats_GAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_action_get_state_hint"
fun fun_c2ats_g_action_get_enabled: {l1:addr} (!ptr_v_1(type_c2ats_GAction, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_action_get_enabled"
fun fun_c2ats_g_action_get_state: {l1:addr} (!ptr_v_1(type_c2ats_GAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_action_get_state"
fun fun_c2ats_g_action_change_state: {l1,l2:addr} (!ptr_v_1(type_c2ats_GAction, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> void = "mac#g_action_change_state"
fun fun_c2ats_g_action_activate: {l1,l2:addr} (!ptr_v_1(type_c2ats_GAction, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> void = "mac#g_action_activate"
fun fun_c2ats_g_action_name_is_valid: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_action_name_is_valid"
fun fun_c2ats_g_action_parse_detailed_name: {l1,l2,l2_1,l3,l3_1,l4,l4_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_2(type_c2ats_GVariant, l3, l3_1), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_action_parse_detailed_name"
fun fun_c2ats_g_action_print_detailed_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_action_print_detailed_name"
// File: /usr/include/glib-2.0/gio/gactiongroup.h
abst@ype struct_c2ats__GActionGroupInterface // FIXME! Forward declaration.
typedef type_c2ats_GActionGroupInterface = struct_c2ats__GActionGroupInterface
typedef struct_c2ats__GActionGroupInterface = $extype_struct"struct _GActionGroupInterface" of {
  g_iface = type_c2ats_GTypeInterface,
  has_action = {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  list_actions = {l1:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2),
  get_action_enabled = {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  get_action_parameter_type = {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVariantType, l3) | ptr l3),
  get_action_state_type = {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVariantType, l3) | ptr l3),
  get_action_state_hint = {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVariant, l3) | ptr l3),
  get_action_state = {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVariant, l3) | ptr l3),
  change_action_state = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3) | ptr l1, ptr l2, ptr l3) -> void,
  activate_action = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3) | ptr l1, ptr l2, ptr l3) -> void,
  action_added = {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  action_removed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  action_enabled_changed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void,
  action_state_changed = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3) | ptr l1, ptr l2, ptr l3) -> void,
  query_action = {l1,l2,l3,l4,l4_1,l5,l5_1,l6,l6_1,l7,l7_1:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gboolean, l3), !ptr_v_2(type_c2ats_GVariantType, l4, l4_1), !ptr_v_2(type_c2ats_GVariantType, l5, l5_1), !ptr_v_2(type_c2ats_GVariant, l6, l6_1), !ptr_v_2(type_c2ats_GVariant, l7, l7_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7) -> type_c2ats_gboolean
}
fun fun_c2ats_g_action_group_get_type: () -> type_c2ats_GType = "mac#g_action_group_get_type"
fun fun_c2ats_g_action_group_has_action: {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_action_group_has_action"
fun fun_c2ats_g_action_group_list_actions: {l1:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#g_action_group_list_actions"
fun fun_c2ats_g_action_group_get_action_parameter_type: {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVariantType, l3) | ptr l3) = "mac#g_action_group_get_action_parameter_type"
fun fun_c2ats_g_action_group_get_action_state_type: {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVariantType, l3) | ptr l3) = "mac#g_action_group_get_action_state_type"
fun fun_c2ats_g_action_group_get_action_state_hint: {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVariant, l3) | ptr l3) = "mac#g_action_group_get_action_state_hint"
fun fun_c2ats_g_action_group_get_action_enabled: {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_action_group_get_action_enabled"
fun fun_c2ats_g_action_group_get_action_state: {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVariant, l3) | ptr l3) = "mac#g_action_group_get_action_state"
fun fun_c2ats_g_action_group_change_action_state: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_action_group_change_action_state"
fun fun_c2ats_g_action_group_activate_action: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_action_group_activate_action"
fun fun_c2ats_g_action_group_action_added: {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_action_group_action_added"
fun fun_c2ats_g_action_group_action_removed: {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_action_group_action_removed"
fun fun_c2ats_g_action_group_action_enabled_changed: {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#g_action_group_action_enabled_changed"
fun fun_c2ats_g_action_group_action_state_changed: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_action_group_action_state_changed"
fun fun_c2ats_g_action_group_query_action: {l1,l2,l3,l4,l4_1,l5,l5_1,l6,l6_1,l7,l7_1:addr} (!ptr_v_1(type_c2ats_GActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gboolean, l3), !ptr_v_2(type_c2ats_GVariantType, l4, l4_1), !ptr_v_2(type_c2ats_GVariantType, l5, l5_1), !ptr_v_2(type_c2ats_GVariant, l6, l6_1), !ptr_v_2(type_c2ats_GVariant, l7, l7_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7) -> type_c2ats_gboolean = "mac#g_action_group_query_action"
// File: /usr/include/glib-2.0/gio/gactiongroupexporter.h
fun fun_c2ats_g_dbus_connection_export_action_group: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GActionGroup, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_guint = "mac#g_dbus_connection_export_action_group"
fun fun_c2ats_g_dbus_connection_unexport_action_group: {l1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_dbus_connection_unexport_action_group"
// File: /usr/include/glib-2.0/gio/gactionmap.h
abst@ype struct_c2ats__GActionMapInterface // FIXME! Forward declaration.
typedef type_c2ats_GActionMapInterface = struct_c2ats__GActionMapInterface
abst@ype struct_c2ats__GActionEntry // FIXME! Forward declaration.
typedef type_c2ats_GActionEntry = struct_c2ats__GActionEntry
typedef struct_c2ats__GActionMapInterface = $extype_struct"struct _GActionMapInterface" of {
  g_iface = type_c2ats_GTypeInterface,
  lookup_action = {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionMap, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GAction, l3) | ptr l3),
  add_action = {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionMap, l1), !ptr_v_1(type_c2ats_GAction, l2) | ptr l1, ptr l2) -> void,
  remove_action = {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionMap, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void
}
typedef struct_c2ats__GActionEntry = $extype_struct"struct _GActionEntry" of {
  name = ptr (* cPtr0(type_c2ats_gchar) *),
  activate = {l1,l2:addr} (!ptr_v_1(type_c2ats_GSimpleAction, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void,
  parameter_type = ptr (* cPtr0(type_c2ats_gchar) *),
  state = ptr (* cPtr0(type_c2ats_gchar) *),
  change_state = {l1,l2:addr} (!ptr_v_1(type_c2ats_GSimpleAction, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void,
  padding = @[type_c2ats_gsize][3]
}
fun fun_c2ats_g_action_map_get_type: () -> type_c2ats_GType = "mac#g_action_map_get_type"
fun fun_c2ats_g_action_map_lookup_action: {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionMap, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GAction, l3) | ptr l3) = "mac#g_action_map_lookup_action"
fun fun_c2ats_g_action_map_add_action: {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionMap, l1), !ptr_v_1(type_c2ats_GAction, l2) | ptr l1, ptr l2) -> void = "mac#g_action_map_add_action"
fun fun_c2ats_g_action_map_remove_action: {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionMap, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_action_map_remove_action"
fun fun_c2ats_g_action_map_add_action_entries: {l1,l2:addr} (!ptr_v_1(type_c2ats_GActionMap, l1), !ptr_v_1(type_c2ats_GActionEntry, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gpointer) -> void = "mac#g_action_map_add_action_entries"
// File: /usr/include/glib-2.0/gio/gappinfo.h
abst@ype struct_c2ats__GAppLaunchContextClass // FIXME! Forward declaration.
typedef type_c2ats_GAppLaunchContextClass = struct_c2ats__GAppLaunchContextClass
abst@ype struct_c2ats__GAppLaunchContextPrivate // FIXME! Forward declaration.
typedef type_c2ats_GAppLaunchContextPrivate = struct_c2ats__GAppLaunchContextPrivate
abst@ype struct_c2ats__GAppInfoIface // FIXME! Forward declaration.
typedef type_c2ats_GAppInfoIface = struct_c2ats__GAppInfoIface
typedef struct_c2ats__GAppInfoIface = $extype_struct"struct _GAppInfoIface" of {
  g_iface = type_c2ats_GTypeInterface,
  dup = {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GAppInfo, l2) | ptr l2),
  equal = {l1,l2:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1), !ptr_v_1(type_c2ats_GAppInfo, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  get_id = {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2),
  get_name = {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2),
  get_description = {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2),
  get_executable = {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2),
  get_icon = {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2),
  launch = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1), !ptr_v_1(type_c2ats_GList, l2), !ptr_v_1(type_c2ats_GAppLaunchContext, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean,
  supports_uris = {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> type_c2ats_gboolean,
  supports_files = {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> type_c2ats_gboolean,
  launch_uris = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1), !ptr_v_1(type_c2ats_GList, l2), !ptr_v_1(type_c2ats_GAppLaunchContext, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean,
  should_show = {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> type_c2ats_gboolean,
  set_as_default_for_type = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  set_as_default_for_extension = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  add_supports_type = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  can_remove_supports_type = {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> type_c2ats_gboolean,
  remove_supports_type = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  can_delete = {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> type_c2ats_gboolean,
  do_delete = {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> type_c2ats_gboolean,
  get_commandline = {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2),
  get_display_name = {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2),
  set_as_last_used_for_type = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  get_supported_types = {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(char, l2, l2_1) | ptr l2)
}
fun fun_c2ats_g_app_info_get_type: () -> type_c2ats_GType = "mac#g_app_info_get_type"
fun fun_c2ats_g_app_info_create_from_commandline: {l1,l2,l3,l3_1:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_GAppInfoCreateFlags, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GAppInfo, l4) | ptr l4) = "mac#g_app_info_create_from_commandline"
fun fun_c2ats_g_app_info_dup: {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GAppInfo, l2) | ptr l2) = "mac#g_app_info_dup"
fun fun_c2ats_g_app_info_equal: {l1,l2:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1), !ptr_v_1(type_c2ats_GAppInfo, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_app_info_equal"
fun fun_c2ats_g_app_info_get_id: {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_app_info_get_id"
fun fun_c2ats_g_app_info_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_app_info_get_name"
fun fun_c2ats_g_app_info_get_display_name: {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_app_info_get_display_name"
fun fun_c2ats_g_app_info_get_description: {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_app_info_get_description"
fun fun_c2ats_g_app_info_get_executable: {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_app_info_get_executable"
fun fun_c2ats_g_app_info_get_commandline: {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_app_info_get_commandline"
fun fun_c2ats_g_app_info_get_icon: {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#g_app_info_get_icon"
fun fun_c2ats_g_app_info_launch: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1), !ptr_v_1(type_c2ats_GList, l2), !ptr_v_1(type_c2ats_GAppLaunchContext, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_app_info_launch"
fun fun_c2ats_g_app_info_supports_uris: {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_app_info_supports_uris"
fun fun_c2ats_g_app_info_supports_files: {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_app_info_supports_files"
fun fun_c2ats_g_app_info_launch_uris: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1), !ptr_v_1(type_c2ats_GList, l2), !ptr_v_1(type_c2ats_GAppLaunchContext, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_app_info_launch_uris"
fun fun_c2ats_g_app_info_should_show: {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_app_info_should_show"
fun fun_c2ats_g_app_info_set_as_default_for_type: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_app_info_set_as_default_for_type"
fun fun_c2ats_g_app_info_set_as_default_for_extension: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_app_info_set_as_default_for_extension"
fun fun_c2ats_g_app_info_add_supports_type: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_app_info_add_supports_type"
fun fun_c2ats_g_app_info_can_remove_supports_type: {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_app_info_can_remove_supports_type"
fun fun_c2ats_g_app_info_remove_supports_type: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_app_info_remove_supports_type"
fun fun_c2ats_g_app_info_get_supported_types: {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(char, l2, l2_1) | ptr l2) = "mac#g_app_info_get_supported_types"
fun fun_c2ats_g_app_info_can_delete: {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_app_info_can_delete"
fun fun_c2ats_g_app_info_delete: {l1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_app_info_delete"
fun fun_c2ats_g_app_info_set_as_last_used_for_type: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GAppInfo, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_app_info_set_as_last_used_for_type"
fun fun_c2ats_g_app_info_get_all: () -> [l1:addr] (ptr_v_1(type_c2ats_GList, l1) | ptr l1) = "mac#g_app_info_get_all"
fun fun_c2ats_g_app_info_get_all_for_type: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_app_info_get_all_for_type"
fun fun_c2ats_g_app_info_get_recommended_for_type: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_app_info_get_recommended_for_type"
fun fun_c2ats_g_app_info_get_fallback_for_type: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_app_info_get_fallback_for_type"
fun fun_c2ats_g_app_info_reset_type_associations: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> void = "mac#g_app_info_reset_type_associations"
fun fun_c2ats_g_app_info_get_default_for_type: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, type_c2ats_gboolean) -> [l2:addr] (ptr_v_1(type_c2ats_GAppInfo, l2) | ptr l2) = "mac#g_app_info_get_default_for_type"
fun fun_c2ats_g_app_info_get_default_for_uri_scheme: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GAppInfo, l2) | ptr l2) = "mac#g_app_info_get_default_for_uri_scheme"
fun fun_c2ats_g_app_info_launch_default_for_uri: {l1,l2,l3,l3_1:addr} (!ptr_v_1(char, l1), !ptr_v_1(type_c2ats_GAppLaunchContext, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_app_info_launch_default_for_uri"
fun fun_c2ats_g_app_info_launch_default_for_uri_async: {l1,l2,l3:addr} (!ptr_v_1(char, l1), !ptr_v_1(type_c2ats_GAppLaunchContext, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_app_info_launch_default_for_uri_async"
fun fun_c2ats_g_app_info_launch_default_for_uri_finish: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_app_info_launch_default_for_uri_finish"
typedef struct_c2ats__GAppLaunchContext = $extype_struct"struct _GAppLaunchContext" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GAppLaunchContextPrivate) *)
}
typedef struct_c2ats__GAppLaunchContextClass = $extype_struct"struct _GAppLaunchContextClass" of {
  parent_class = type_c2ats_GObjectClass,
  get_display = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GAppLaunchContext, l1), !ptr_v_1(type_c2ats_GAppInfo, l2), !ptr_v_1(type_c2ats_GList, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(char, l4) | ptr l4),
  get_startup_notify_id = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GAppLaunchContext, l1), !ptr_v_1(type_c2ats_GAppInfo, l2), !ptr_v_1(type_c2ats_GList, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(char, l4) | ptr l4),
  launch_failed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GAppLaunchContext, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void,
  launched = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GAppLaunchContext, l1), !ptr_v_1(type_c2ats_GAppInfo, l2), !ptr_v_1(type_c2ats_GVariant, l3) | ptr l1, ptr l2, ptr l3) -> void,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void
}
fun fun_c2ats_g_app_launch_context_get_type: () -> type_c2ats_GType = "mac#g_app_launch_context_get_type"
fun fun_c2ats_g_app_launch_context_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GAppLaunchContext, l1) | ptr l1) = "mac#g_app_launch_context_new"
fun fun_c2ats_g_app_launch_context_setenv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GAppLaunchContext, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_app_launch_context_setenv"
fun fun_c2ats_g_app_launch_context_unsetenv: {l1,l2:addr} (!ptr_v_1(type_c2ats_GAppLaunchContext, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#g_app_launch_context_unsetenv"
fun fun_c2ats_g_app_launch_context_get_environment: {l1:addr} (!ptr_v_1(type_c2ats_GAppLaunchContext, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(char, l2, l2_1) | ptr l2) = "mac#g_app_launch_context_get_environment"
fun fun_c2ats_g_app_launch_context_get_display: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GAppLaunchContext, l1), !ptr_v_1(type_c2ats_GAppInfo, l2), !ptr_v_1(type_c2ats_GList, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(char, l4) | ptr l4) = "mac#g_app_launch_context_get_display"
fun fun_c2ats_g_app_launch_context_get_startup_notify_id: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GAppLaunchContext, l1), !ptr_v_1(type_c2ats_GAppInfo, l2), !ptr_v_1(type_c2ats_GList, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(char, l4) | ptr l4) = "mac#g_app_launch_context_get_startup_notify_id"
fun fun_c2ats_g_app_launch_context_launch_failed: {l1,l2:addr} (!ptr_v_1(type_c2ats_GAppLaunchContext, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#g_app_launch_context_launch_failed"
abst@ype struct_c2ats__GAppInfoMonitor // FIXME! Forward declaration.
typedef type_c2ats_GAppInfoMonitor = struct_c2ats__GAppInfoMonitor
fun fun_c2ats_g_app_info_monitor_get_type: () -> type_c2ats_GType = "mac#g_app_info_monitor_get_type"
fun fun_c2ats_g_app_info_monitor_get: () -> [l1:addr] (ptr_v_1(type_c2ats_GAppInfoMonitor, l1) | ptr l1) = "mac#g_app_info_monitor_get"
// File: /usr/include/glib-2.0/gio/gapplication.h
abst@ype struct_c2ats__GApplicationPrivate // FIXME! Forward declaration.
typedef type_c2ats_GApplicationPrivate = struct_c2ats__GApplicationPrivate
abst@ype struct_c2ats__GApplicationClass // FIXME! Forward declaration.
typedef type_c2ats_GApplicationClass = struct_c2ats__GApplicationClass
typedef struct_c2ats__GApplication = $extype_struct"struct _GApplication" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GApplicationPrivate) *)
}
typedef struct_c2ats__GApplicationClass = $extype_struct"struct _GApplicationClass" of {
  parent_class = type_c2ats_GObjectClass,
  startup = {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> void,
  activate = {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> void,
  open = {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_2(type_c2ats_GFile, l2, l2_1), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, type_c2ats_gint, ptr l3) -> void,
  command_line = {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_1(type_c2ats_GApplicationCommandLine, l2) | ptr l1, ptr l2) -> int,
  local_command_line = {l1,l2,l2_1,l2_2,l3:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_3(type_c2ats_gchar, l2, l2_1, l2_2), !ptr_v_1(int, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  before_emit = {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> void,
  after_emit = {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> void,
  add_platform_data = {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_1(type_c2ats_GVariantBuilder, l2) | ptr l1, ptr l2) -> void,
  quit_mainloop = {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> void,
  run_mainloop = {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> void,
  shutdown = {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> void,
  dbus_register = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_1(type_c2ats_GDBusConnection, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean,
  dbus_unregister = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_1(type_c2ats_GDBusConnection, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void,
  handle_local_options = {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_1(type_c2ats_GVariantDict, l2) | ptr l1, ptr l2) -> type_c2ats_gint,
  padding = @[type_c2ats_gpointer][8]
}
fun fun_c2ats_g_application_get_type: () -> type_c2ats_GType = "mac#g_application_get_type"
fun fun_c2ats_g_application_id_is_valid: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_application_id_is_valid"
fun fun_c2ats_g_application_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_GApplicationFlags) -> [l2:addr] (ptr_v_1(type_c2ats_GApplication, l2) | ptr l2) = "mac#g_application_new"
fun fun_c2ats_g_application_get_application_id: {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_application_get_application_id"
fun fun_c2ats_g_application_set_application_id: {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_application_set_application_id"
fun fun_c2ats_g_application_get_dbus_connection: {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusConnection, l2) | ptr l2) = "mac#g_application_get_dbus_connection"
fun fun_c2ats_g_application_get_dbus_object_path: {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_application_get_dbus_object_path"
fun fun_c2ats_g_application_get_inactivity_timeout: {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> type_c2ats_guint = "mac#g_application_get_inactivity_timeout"
fun fun_c2ats_g_application_set_inactivity_timeout: {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_application_set_inactivity_timeout"
fun fun_c2ats_g_application_get_flags: {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> type_c2ats_GApplicationFlags = "mac#g_application_get_flags"
fun fun_c2ats_g_application_set_flags: {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1, type_c2ats_GApplicationFlags) -> void = "mac#g_application_set_flags"
fun fun_c2ats_g_application_get_resource_base_path: {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_application_get_resource_base_path"
fun fun_c2ats_g_application_set_resource_base_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_application_set_resource_base_path"
fun fun_c2ats_g_application_set_action_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_1(type_c2ats_GActionGroup, l2) | ptr l1, ptr l2) -> void = "mac#g_application_set_action_group"
fun fun_c2ats_g_application_add_main_option_entries: {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_1(type_c2ats_GOptionEntry, l2) | ptr l1, ptr l2) -> void = "mac#g_application_add_main_option_entries"
fun fun_c2ats_g_application_add_main_option: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3), !ptr_v_1(char, l4) | ptr l1, ptr l2, char, type_c2ats_GOptionFlags, type_c2ats_GOptionArg, ptr l3, ptr l4) -> void = "mac#g_application_add_main_option"
fun fun_c2ats_g_application_add_option_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_1(type_c2ats_GOptionGroup, l2) | ptr l1, ptr l2) -> void = "mac#g_application_add_option_group"
fun fun_c2ats_g_application_get_is_registered: {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_application_get_is_registered"
fun fun_c2ats_g_application_get_is_remote: {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_application_get_is_remote"
fun fun_c2ats_g_application_register: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_application_register"
fun fun_c2ats_g_application_hold: {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> void = "mac#g_application_hold"
fun fun_c2ats_g_application_release: {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> void = "mac#g_application_release"
fun fun_c2ats_g_application_activate: {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> void = "mac#g_application_activate"
fun fun_c2ats_g_application_open: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_2(type_c2ats_GFile, l2, l2_1), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, type_c2ats_gint, ptr l3) -> void = "mac#g_application_open"
fun fun_c2ats_g_application_run: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_2(char, l2, l2_1) | ptr l1, int, ptr l2) -> int = "mac#g_application_run"
fun fun_c2ats_g_application_quit: {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> void = "mac#g_application_quit"
fun fun_c2ats_g_application_get_default: () -> [l1:addr] (ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) = "mac#g_application_get_default"
fun fun_c2ats_g_application_set_default: {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> void = "mac#g_application_set_default"
fun fun_c2ats_g_application_mark_busy: {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> void = "mac#g_application_mark_busy"
fun fun_c2ats_g_application_unmark_busy: {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> void = "mac#g_application_unmark_busy"
fun fun_c2ats_g_application_get_is_busy: {l1:addr} (!ptr_v_1(type_c2ats_GApplication, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_application_get_is_busy"
fun fun_c2ats_g_application_send_notification: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GNotification, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_application_send_notification"
fun fun_c2ats_g_application_withdraw_notification: {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_application_withdraw_notification"
fun fun_c2ats_g_application_bind_busy_property: {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gpointer, ptr l2) -> void = "mac#g_application_bind_busy_property"
fun fun_c2ats_g_application_unbind_busy_property: {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplication, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gpointer, ptr l2) -> void = "mac#g_application_unbind_busy_property"
// File: /usr/include/glib-2.0/gio/gapplicationcommandline.h
abst@ype struct_c2ats__GApplicationCommandLinePrivate // FIXME! Forward declaration.
typedef type_c2ats_GApplicationCommandLinePrivate = struct_c2ats__GApplicationCommandLinePrivate
abst@ype struct_c2ats__GApplicationCommandLineClass // FIXME! Forward declaration.
typedef type_c2ats_GApplicationCommandLineClass = struct_c2ats__GApplicationCommandLineClass
typedef struct_c2ats__GApplicationCommandLine = $extype_struct"struct _GApplicationCommandLine" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GApplicationCommandLinePrivate) *)
}
typedef struct_c2ats__GApplicationCommandLineClass = $extype_struct"struct _GApplicationCommandLineClass" of {
  parent_class = type_c2ats_GObjectClass,
  print_literal = {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplicationCommandLine, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  printerr_literal = {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplicationCommandLine, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  get_stdin = {l1:addr} (!ptr_v_1(type_c2ats_GApplicationCommandLine, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GInputStream, l2) | ptr l2),
  padding = @[type_c2ats_gpointer][11]
}
fun fun_c2ats_g_application_command_line_get_type: () -> type_c2ats_GType = "mac#g_application_command_line_get_type"
fun fun_c2ats_g_application_command_line_get_arguments: {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplicationCommandLine, l1), !ptr_v_1(int, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#g_application_command_line_get_arguments"
fun fun_c2ats_g_application_command_line_get_options_dict: {l1:addr} (!ptr_v_1(type_c2ats_GApplicationCommandLine, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantDict, l2) | ptr l2) = "mac#g_application_command_line_get_options_dict"
fun fun_c2ats_g_application_command_line_get_stdin: {l1:addr} (!ptr_v_1(type_c2ats_GApplicationCommandLine, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GInputStream, l2) | ptr l2) = "mac#g_application_command_line_get_stdin"
fun fun_c2ats_g_application_command_line_get_environ: {l1:addr} (!ptr_v_1(type_c2ats_GApplicationCommandLine, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#g_application_command_line_get_environ"
fun fun_c2ats_g_application_command_line_getenv: {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplicationCommandLine, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_application_command_line_getenv"
fun fun_c2ats_g_application_command_line_get_cwd: {l1:addr} (!ptr_v_1(type_c2ats_GApplicationCommandLine, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_application_command_line_get_cwd"
fun fun_c2ats_g_application_command_line_get_is_remote: {l1:addr} (!ptr_v_1(type_c2ats_GApplicationCommandLine, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_application_command_line_get_is_remote"
fun fun_c2ats_g_application_command_line_print: {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplicationCommandLine, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_application_command_line_print"
fun fun_c2ats_g_application_command_line_printerr: {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplicationCommandLine, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_application_command_line_printerr"
fun fun_c2ats_g_application_command_line_get_exit_status: {l1:addr} (!ptr_v_1(type_c2ats_GApplicationCommandLine, l1) | ptr l1) -> int = "mac#g_application_command_line_get_exit_status"
fun fun_c2ats_g_application_command_line_set_exit_status: {l1:addr} (!ptr_v_1(type_c2ats_GApplicationCommandLine, l1) | ptr l1, int) -> void = "mac#g_application_command_line_set_exit_status"
fun fun_c2ats_g_application_command_line_get_platform_data: {l1:addr} (!ptr_v_1(type_c2ats_GApplicationCommandLine, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_application_command_line_get_platform_data"
fun fun_c2ats_g_application_command_line_create_file_for_arg: {l1,l2:addr} (!ptr_v_1(type_c2ats_GApplicationCommandLine, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GFile, l3) | ptr l3) = "mac#g_application_command_line_create_file_for_arg"
// File: /usr/include/glib-2.0/gio/ginitable.h
abst@ype struct_c2ats__GInitableIface // FIXME! Forward declaration.
typedef type_c2ats_GInitableIface = struct_c2ats__GInitableIface
typedef struct_c2ats__GInitableIface = $extype_struct"struct _GInitableIface" of {
  g_iface = type_c2ats_GTypeInterface,
  init = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInitable, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean
}
fun fun_c2ats_g_initable_get_type: () -> type_c2ats_GType = "mac#g_initable_get_type"
fun fun_c2ats_g_initable_init: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInitable, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_initable_init"
fun fun_c2ats_g_initable_new: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GCancellable, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1), !ptr_v_1(type_c2ats_gchar, l3) | type_c2ats_GType, ptr l1, ptr l2, ptr l3) -> type_c2ats_gpointer = "mac#g_initable_new"
fun fun_c2ats_g_initable_newv: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GParameter, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | type_c2ats_GType, type_c2ats_guint, ptr l1, ptr l2, ptr l3) -> type_c2ats_gpointer = "mac#g_initable_newv"
fun fun_c2ats_g_initable_new_valist: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | type_c2ats_GType, ptr l1, type_c2ats_va_list, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GObject, l4) | ptr l4) = "mac#g_initable_new_valist"
// File: /usr/include/glib-2.0/gio/gasyncinitable.h
abst@ype struct_c2ats__GAsyncInitableIface // FIXME! Forward declaration.
typedef type_c2ats_GAsyncInitableIface = struct_c2ats__GAsyncInitableIface
typedef struct_c2ats__GAsyncInitableIface = $extype_struct"struct _GAsyncInitableIface" of {
  g_iface = type_c2ats_GTypeInterface,
  init_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GAsyncInitable, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  init_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GAsyncInitable, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean
}
fun fun_c2ats_g_async_initable_get_type: () -> type_c2ats_GType = "mac#g_async_initable_get_type"
fun fun_c2ats_g_async_initable_init_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GAsyncInitable, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_async_initable_init_async"
fun fun_c2ats_g_async_initable_init_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GAsyncInitable, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_async_initable_init_finish"
fun fun_c2ats_g_async_initable_new_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GCancellable, l1), !ptr_v_1(type_c2ats_gchar, l2) | type_c2ats_GType, int, ptr l1, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer, ptr l2) -> void = "mac#g_async_initable_new_async"
fun fun_c2ats_g_async_initable_newv_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GParameter, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | type_c2ats_GType, type_c2ats_guint, ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_async_initable_newv_async"
fun fun_c2ats_g_async_initable_new_valist_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | type_c2ats_GType, ptr l1, type_c2ats_va_list, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_async_initable_new_valist_async"
fun fun_c2ats_g_async_initable_new_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GAsyncInitable, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GObject, l4) | ptr l4) = "mac#g_async_initable_new_finish"
// File: /usr/include/glib-2.0/gio/gasyncresult.h
abst@ype struct_c2ats__GAsyncResultIface // FIXME! Forward declaration.
typedef type_c2ats_GAsyncResultIface = struct_c2ats__GAsyncResultIface
typedef struct_c2ats__GAsyncResultIface = $extype_struct"struct _GAsyncResultIface" of {
  g_iface = type_c2ats_GTypeInterface,
  get_user_data = {l1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1) | ptr l1) -> type_c2ats_gpointer,
  get_source_object = {l1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GObject, l2) | ptr l2),
  is_tagged = {l1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean
}
fun fun_c2ats_g_async_result_get_type: () -> type_c2ats_GType = "mac#g_async_result_get_type"
fun fun_c2ats_g_async_result_get_user_data: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_async_result_get_user_data"
fun fun_c2ats_g_async_result_get_source_object: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GObject, l2) | ptr l2) = "mac#g_async_result_get_source_object"
fun fun_c2ats_g_async_result_legacy_propagate_error: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_async_result_legacy_propagate_error"
fun fun_c2ats_g_async_result_is_tagged: {l1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#g_async_result_is_tagged"
// File: /usr/include/glib-2.0/gio/ginputstream.h
abst@ype struct_c2ats__GInputStreamClass // FIXME! Forward declaration.
typedef type_c2ats_GInputStreamClass = struct_c2ats__GInputStreamClass
abst@ype struct_c2ats__GInputStreamPrivate // FIXME! Forward declaration.
typedef type_c2ats_GInputStreamPrivate = struct_c2ats__GInputStreamPrivate
typedef struct_c2ats__GInputStream = $extype_struct"struct _GInputStream" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GInputStreamPrivate) *)
}
typedef struct_c2ats__GInputStreamClass = $extype_struct"struct _GInputStreamClass" of {
  parent_class = type_c2ats_GObjectClass,
  read_fn = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr, type_c2ats_gsize, ptr l2, ptr l3) -> type_c2ats_gssize,
  skip = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_gsize, ptr l2, ptr l3) -> type_c2ats_gssize,
  close_fn = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  read_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr, type_c2ats_gsize, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  read_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gssize,
  skip_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_gsize, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  skip_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gssize,
  close_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  close_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void
}
fun fun_c2ats_g_input_stream_get_type: () -> type_c2ats_GType = "mac#g_input_stream_get_type"
fun fun_c2ats_g_input_stream_read: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr, type_c2ats_gsize, ptr l2, ptr l3) -> type_c2ats_gssize = "mac#g_input_stream_read"
fun fun_c2ats_g_input_stream_read_all: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr, type_c2ats_gsize, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_input_stream_read_all"
fun fun_c2ats_g_input_stream_read_bytes: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_gsize, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GBytes, l4) | ptr l4) = "mac#g_input_stream_read_bytes"
fun fun_c2ats_g_input_stream_skip: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_gsize, ptr l2, ptr l3) -> type_c2ats_gssize = "mac#g_input_stream_skip"
fun fun_c2ats_g_input_stream_close: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_input_stream_close"
fun fun_c2ats_g_input_stream_read_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr, type_c2ats_gsize, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_input_stream_read_async"
fun fun_c2ats_g_input_stream_read_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gssize = "mac#g_input_stream_read_finish"
fun fun_c2ats_g_input_stream_read_all_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr, type_c2ats_gsize, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_input_stream_read_all_async"
fun fun_c2ats_g_input_stream_read_all_finish: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_input_stream_read_all_finish"
fun fun_c2ats_g_input_stream_read_bytes_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_gsize, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_input_stream_read_bytes_async"
fun fun_c2ats_g_input_stream_read_bytes_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GBytes, l4) | ptr l4) = "mac#g_input_stream_read_bytes_finish"
fun fun_c2ats_g_input_stream_skip_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_gsize, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_input_stream_skip_async"
fun fun_c2ats_g_input_stream_skip_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gssize = "mac#g_input_stream_skip_finish"
fun fun_c2ats_g_input_stream_close_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_input_stream_close_async"
fun fun_c2ats_g_input_stream_close_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_input_stream_close_finish"
fun fun_c2ats_g_input_stream_is_closed: {l1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_input_stream_is_closed"
fun fun_c2ats_g_input_stream_has_pending: {l1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_input_stream_has_pending"
fun fun_c2ats_g_input_stream_set_pending: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_input_stream_set_pending"
fun fun_c2ats_g_input_stream_clear_pending: {l1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1) | ptr l1) -> void = "mac#g_input_stream_clear_pending"
// File: /usr/include/glib-2.0/gio/gfilterinputstream.h
abst@ype struct_c2ats__GFilterInputStreamClass // FIXME! Forward declaration.
typedef type_c2ats_GFilterInputStreamClass = struct_c2ats__GFilterInputStreamClass
typedef struct_c2ats__GFilterInputStream = $extype_struct"struct _GFilterInputStream" of {
  parent_instance = type_c2ats_GInputStream,
  base_stream = ptr (* cPtr0(type_c2ats_GInputStream) *)
}
typedef struct_c2ats__GFilterInputStreamClass = $extype_struct"struct _GFilterInputStreamClass" of {
  parent_class = type_c2ats_GInputStreamClass,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void
}
fun fun_c2ats_g_filter_input_stream_get_type: () -> type_c2ats_GType = "mac#g_filter_input_stream_get_type"
fun fun_c2ats_g_filter_input_stream_get_base_stream: {l1:addr} (!ptr_v_1(type_c2ats_GFilterInputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GInputStream, l2) | ptr l2) = "mac#g_filter_input_stream_get_base_stream"
fun fun_c2ats_g_filter_input_stream_get_close_base_stream: {l1:addr} (!ptr_v_1(type_c2ats_GFilterInputStream, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_filter_input_stream_get_close_base_stream"
fun fun_c2ats_g_filter_input_stream_set_close_base_stream: {l1:addr} (!ptr_v_1(type_c2ats_GFilterInputStream, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_filter_input_stream_set_close_base_stream"
// File: /usr/include/glib-2.0/gio/gbufferedinputstream.h
abst@ype struct_c2ats__GBufferedInputStreamClass // FIXME! Forward declaration.
typedef type_c2ats_GBufferedInputStreamClass = struct_c2ats__GBufferedInputStreamClass
abst@ype struct_c2ats__GBufferedInputStreamPrivate // FIXME! Forward declaration.
typedef type_c2ats_GBufferedInputStreamPrivate = struct_c2ats__GBufferedInputStreamPrivate
typedef struct_c2ats__GBufferedInputStream = $extype_struct"struct _GBufferedInputStream" of {
  parent_instance = type_c2ats_GFilterInputStream,
  priv = ptr (* cPtr0(type_c2ats_GBufferedInputStreamPrivate) *)
}
typedef struct_c2ats__GBufferedInputStreamClass = $extype_struct"struct _GBufferedInputStreamClass" of {
  parent_class = type_c2ats_GFilterInputStreamClass,
  fill = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GBufferedInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_gssize, ptr l2, ptr l3) -> type_c2ats_gssize,
  fill_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GBufferedInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_gssize, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  fill_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GBufferedInputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gssize,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void
}
fun fun_c2ats_g_buffered_input_stream_get_type: () -> type_c2ats_GType = "mac#g_buffered_input_stream_get_type"
fun fun_c2ats_g_buffered_input_stream_new: {l1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GInputStream, l2) | ptr l2) = "mac#g_buffered_input_stream_new"
fun fun_c2ats_g_buffered_input_stream_new_sized: {l1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1) | ptr l1, type_c2ats_gsize) -> [l2:addr] (ptr_v_1(type_c2ats_GInputStream, l2) | ptr l2) = "mac#g_buffered_input_stream_new_sized"
fun fun_c2ats_g_buffered_input_stream_get_buffer_size: {l1:addr} (!ptr_v_1(type_c2ats_GBufferedInputStream, l1) | ptr l1) -> type_c2ats_gsize = "mac#g_buffered_input_stream_get_buffer_size"
fun fun_c2ats_g_buffered_input_stream_set_buffer_size: {l1:addr} (!ptr_v_1(type_c2ats_GBufferedInputStream, l1) | ptr l1, type_c2ats_gsize) -> void = "mac#g_buffered_input_stream_set_buffer_size"
fun fun_c2ats_g_buffered_input_stream_get_available: {l1:addr} (!ptr_v_1(type_c2ats_GBufferedInputStream, l1) | ptr l1) -> type_c2ats_gsize = "mac#g_buffered_input_stream_get_available"
fun fun_c2ats_g_buffered_input_stream_peek: {l1:addr} (!ptr_v_1(type_c2ats_GBufferedInputStream, l1) | ptr l1, ptr, type_c2ats_gsize, type_c2ats_gsize) -> type_c2ats_gsize = "mac#g_buffered_input_stream_peek"
fun fun_c2ats_g_buffered_input_stream_peek_buffer: {l1,l2:addr} (!ptr_v_1(type_c2ats_GBufferedInputStream, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> ptr = "mac#g_buffered_input_stream_peek_buffer"
fun fun_c2ats_g_buffered_input_stream_fill: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GBufferedInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_gssize, ptr l2, ptr l3) -> type_c2ats_gssize = "mac#g_buffered_input_stream_fill"
fun fun_c2ats_g_buffered_input_stream_fill_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GBufferedInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_gssize, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_buffered_input_stream_fill_async"
fun fun_c2ats_g_buffered_input_stream_fill_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GBufferedInputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gssize = "mac#g_buffered_input_stream_fill_finish"
fun fun_c2ats_g_buffered_input_stream_read_byte: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GBufferedInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> int = "mac#g_buffered_input_stream_read_byte"
// File: /usr/include/glib-2.0/gio/goutputstream.h
abst@ype struct_c2ats__GOutputStreamClass // FIXME! Forward declaration.
typedef type_c2ats_GOutputStreamClass = struct_c2ats__GOutputStreamClass
abst@ype struct_c2ats__GOutputStreamPrivate // FIXME! Forward declaration.
typedef type_c2ats_GOutputStreamPrivate = struct_c2ats__GOutputStreamPrivate
typedef struct_c2ats__GOutputStream = $extype_struct"struct _GOutputStream" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GOutputStreamPrivate) *)
}
typedef struct_c2ats__GOutputStreamClass = $extype_struct"struct _GOutputStreamClass" of {
  parent_class = type_c2ats_GObjectClass,
  write_fn = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr, type_c2ats_gsize, ptr l2, ptr l3) -> type_c2ats_gssize,
  splice = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GInputStream, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GOutputStreamSpliceFlags, ptr l3, ptr l4) -> type_c2ats_gssize,
  flush = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  close_fn = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  write_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr, type_c2ats_gsize, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  write_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gssize,
  splice_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GInputStream, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_GOutputStreamSpliceFlags, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  splice_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gssize,
  flush_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  flush_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  close_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  close_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void,
  _g_reserved6 = () -> void,
  _g_reserved7 = () -> void,
  _g_reserved8 = () -> void
}
fun fun_c2ats_g_output_stream_get_type: () -> type_c2ats_GType = "mac#g_output_stream_get_type"
fun fun_c2ats_g_output_stream_write: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr, type_c2ats_gsize, ptr l2, ptr l3) -> type_c2ats_gssize = "mac#g_output_stream_write"
fun fun_c2ats_g_output_stream_write_all: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr, type_c2ats_gsize, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_output_stream_write_all"
fun fun_c2ats_g_output_stream_printf: {l1,l2,l3,l4,l4_1,l5:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1), !ptr_v_1(type_c2ats_gchar, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#g_output_stream_printf"
fun fun_c2ats_g_output_stream_vprintf: {l1,l2,l3,l4,l4_1,l5:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1), !ptr_v_1(type_c2ats_gchar, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_va_list) -> type_c2ats_gboolean = "mac#g_output_stream_vprintf"
fun fun_c2ats_g_output_stream_write_bytes: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GBytes, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gssize = "mac#g_output_stream_write_bytes"
fun fun_c2ats_g_output_stream_splice: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GInputStream, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GOutputStreamSpliceFlags, ptr l3, ptr l4) -> type_c2ats_gssize = "mac#g_output_stream_splice"
fun fun_c2ats_g_output_stream_flush: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_output_stream_flush"
fun fun_c2ats_g_output_stream_close: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_output_stream_close"
fun fun_c2ats_g_output_stream_write_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr, type_c2ats_gsize, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_output_stream_write_async"
fun fun_c2ats_g_output_stream_write_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gssize = "mac#g_output_stream_write_finish"
fun fun_c2ats_g_output_stream_write_all_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr, type_c2ats_gsize, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_output_stream_write_all_async"
fun fun_c2ats_g_output_stream_write_all_finish: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_output_stream_write_all_finish"
fun fun_c2ats_g_output_stream_write_bytes_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GBytes, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_output_stream_write_bytes_async"
fun fun_c2ats_g_output_stream_write_bytes_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gssize = "mac#g_output_stream_write_bytes_finish"
fun fun_c2ats_g_output_stream_splice_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GInputStream, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_GOutputStreamSpliceFlags, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_output_stream_splice_async"
fun fun_c2ats_g_output_stream_splice_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gssize = "mac#g_output_stream_splice_finish"
fun fun_c2ats_g_output_stream_flush_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_output_stream_flush_async"
fun fun_c2ats_g_output_stream_flush_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_output_stream_flush_finish"
fun fun_c2ats_g_output_stream_close_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_output_stream_close_async"
fun fun_c2ats_g_output_stream_close_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_output_stream_close_finish"
fun fun_c2ats_g_output_stream_is_closed: {l1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_output_stream_is_closed"
fun fun_c2ats_g_output_stream_is_closing: {l1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_output_stream_is_closing"
fun fun_c2ats_g_output_stream_has_pending: {l1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_output_stream_has_pending"
fun fun_c2ats_g_output_stream_set_pending: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_output_stream_set_pending"
fun fun_c2ats_g_output_stream_clear_pending: {l1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1) | ptr l1) -> void = "mac#g_output_stream_clear_pending"
// File: /usr/include/glib-2.0/gio/gfilteroutputstream.h
abst@ype struct_c2ats__GFilterOutputStreamClass // FIXME! Forward declaration.
typedef type_c2ats_GFilterOutputStreamClass = struct_c2ats__GFilterOutputStreamClass
typedef struct_c2ats__GFilterOutputStream = $extype_struct"struct _GFilterOutputStream" of {
  parent_instance = type_c2ats_GOutputStream,
  base_stream = ptr (* cPtr0(type_c2ats_GOutputStream) *)
}
typedef struct_c2ats__GFilterOutputStreamClass = $extype_struct"struct _GFilterOutputStreamClass" of {
  parent_class = type_c2ats_GOutputStreamClass,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void
}
fun fun_c2ats_g_filter_output_stream_get_type: () -> type_c2ats_GType = "mac#g_filter_output_stream_get_type"
fun fun_c2ats_g_filter_output_stream_get_base_stream: {l1:addr} (!ptr_v_1(type_c2ats_GFilterOutputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GOutputStream, l2) | ptr l2) = "mac#g_filter_output_stream_get_base_stream"
fun fun_c2ats_g_filter_output_stream_get_close_base_stream: {l1:addr} (!ptr_v_1(type_c2ats_GFilterOutputStream, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_filter_output_stream_get_close_base_stream"
fun fun_c2ats_g_filter_output_stream_set_close_base_stream: {l1:addr} (!ptr_v_1(type_c2ats_GFilterOutputStream, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_filter_output_stream_set_close_base_stream"
// File: /usr/include/glib-2.0/gio/gbufferedoutputstream.h
abst@ype struct_c2ats__GBufferedOutputStreamClass // FIXME! Forward declaration.
typedef type_c2ats_GBufferedOutputStreamClass = struct_c2ats__GBufferedOutputStreamClass
abst@ype struct_c2ats__GBufferedOutputStreamPrivate // FIXME! Forward declaration.
typedef type_c2ats_GBufferedOutputStreamPrivate = struct_c2ats__GBufferedOutputStreamPrivate
typedef struct_c2ats__GBufferedOutputStream = $extype_struct"struct _GBufferedOutputStream" of {
  parent_instance = type_c2ats_GFilterOutputStream,
  priv = ptr (* cPtr0(type_c2ats_GBufferedOutputStreamPrivate) *)
}
typedef struct_c2ats__GBufferedOutputStreamClass = $extype_struct"struct _GBufferedOutputStreamClass" of {
  parent_class = type_c2ats_GFilterOutputStreamClass,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void
}
fun fun_c2ats_g_buffered_output_stream_get_type: () -> type_c2ats_GType = "mac#g_buffered_output_stream_get_type"
fun fun_c2ats_g_buffered_output_stream_new: {l1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GOutputStream, l2) | ptr l2) = "mac#g_buffered_output_stream_new"
fun fun_c2ats_g_buffered_output_stream_new_sized: {l1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1) | ptr l1, type_c2ats_gsize) -> [l2:addr] (ptr_v_1(type_c2ats_GOutputStream, l2) | ptr l2) = "mac#g_buffered_output_stream_new_sized"
fun fun_c2ats_g_buffered_output_stream_get_buffer_size: {l1:addr} (!ptr_v_1(type_c2ats_GBufferedOutputStream, l1) | ptr l1) -> type_c2ats_gsize = "mac#g_buffered_output_stream_get_buffer_size"
fun fun_c2ats_g_buffered_output_stream_set_buffer_size: {l1:addr} (!ptr_v_1(type_c2ats_GBufferedOutputStream, l1) | ptr l1, type_c2ats_gsize) -> void = "mac#g_buffered_output_stream_set_buffer_size"
fun fun_c2ats_g_buffered_output_stream_get_auto_grow: {l1:addr} (!ptr_v_1(type_c2ats_GBufferedOutputStream, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_buffered_output_stream_get_auto_grow"
fun fun_c2ats_g_buffered_output_stream_set_auto_grow: {l1:addr} (!ptr_v_1(type_c2ats_GBufferedOutputStream, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_buffered_output_stream_set_auto_grow"
// File: /usr/include/glib-2.0/gio/gbytesicon.h
fun fun_c2ats_g_bytes_icon_get_type: () -> type_c2ats_GType = "mac#g_bytes_icon_get_type"
fun fun_c2ats_g_bytes_icon_new: {l1:addr} (!ptr_v_1(type_c2ats_GBytes, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#g_bytes_icon_new"
fun fun_c2ats_g_bytes_icon_get_bytes: {l1:addr} (!ptr_v_1(type_c2ats_GBytesIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GBytes, l2) | ptr l2) = "mac#g_bytes_icon_get_bytes"
// File: /usr/include/glib-2.0/gio/gcancellable.h
abst@ype struct_c2ats__GCancellableClass // FIXME! Forward declaration.
typedef type_c2ats_GCancellableClass = struct_c2ats__GCancellableClass
abst@ype struct_c2ats__GCancellablePrivate // FIXME! Forward declaration.
typedef type_c2ats_GCancellablePrivate = struct_c2ats__GCancellablePrivate
typedef struct_c2ats__GCancellable = $extype_struct"struct _GCancellable" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GCancellablePrivate) *)
}
typedef struct_c2ats__GCancellableClass = $extype_struct"struct _GCancellableClass" of {
  parent_class = type_c2ats_GObjectClass,
  cancelled = {l1:addr} (!ptr_v_1(type_c2ats_GCancellable, l1) | ptr l1) -> void,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void
}
fun fun_c2ats_g_cancellable_get_type: () -> type_c2ats_GType = "mac#g_cancellable_get_type"
fun fun_c2ats_g_cancellable_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GCancellable, l1) | ptr l1) = "mac#g_cancellable_new"
fun fun_c2ats_g_cancellable_is_cancelled: {l1:addr} (!ptr_v_1(type_c2ats_GCancellable, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_cancellable_is_cancelled"
fun fun_c2ats_g_cancellable_set_error_if_cancelled: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GCancellable, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_cancellable_set_error_if_cancelled"
fun fun_c2ats_g_cancellable_get_fd: {l1:addr} (!ptr_v_1(type_c2ats_GCancellable, l1) | ptr l1) -> int = "mac#g_cancellable_get_fd"
fun fun_c2ats_g_cancellable_make_pollfd: {l1,l2:addr} (!ptr_v_1(type_c2ats_GCancellable, l1), !ptr_v_1(type_c2ats_GPollFD, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_cancellable_make_pollfd"
fun fun_c2ats_g_cancellable_release_fd: {l1:addr} (!ptr_v_1(type_c2ats_GCancellable, l1) | ptr l1) -> void = "mac#g_cancellable_release_fd"
fun fun_c2ats_g_cancellable_source_new: {l1:addr} (!ptr_v_1(type_c2ats_GCancellable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSource, l2) | ptr l2) = "mac#g_cancellable_source_new"
fun fun_c2ats_g_cancellable_get_current: () -> [l1:addr] (ptr_v_1(type_c2ats_GCancellable, l1) | ptr l1) = "mac#g_cancellable_get_current"
fun fun_c2ats_g_cancellable_push_current: {l1:addr} (!ptr_v_1(type_c2ats_GCancellable, l1) | ptr l1) -> void = "mac#g_cancellable_push_current"
fun fun_c2ats_g_cancellable_pop_current: {l1:addr} (!ptr_v_1(type_c2ats_GCancellable, l1) | ptr l1) -> void = "mac#g_cancellable_pop_current"
fun fun_c2ats_g_cancellable_reset: {l1:addr} (!ptr_v_1(type_c2ats_GCancellable, l1) | ptr l1) -> void = "mac#g_cancellable_reset"
fun fun_c2ats_g_cancellable_connect: {l1:addr} (!ptr_v_1(type_c2ats_GCancellable, l1) | ptr l1, type_c2ats_GCallback, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_gulong = "mac#g_cancellable_connect"
fun fun_c2ats_g_cancellable_disconnect: {l1:addr} (!ptr_v_1(type_c2ats_GCancellable, l1) | ptr l1, type_c2ats_gulong) -> void = "mac#g_cancellable_disconnect"
fun fun_c2ats_g_cancellable_cancel: {l1:addr} (!ptr_v_1(type_c2ats_GCancellable, l1) | ptr l1) -> void = "mac#g_cancellable_cancel"
// File: /usr/include/glib-2.0/gio/gconverter.h
abst@ype struct_c2ats__GConverterIface // FIXME! Forward declaration.
typedef type_c2ats_GConverterIface = struct_c2ats__GConverterIface
typedef struct_c2ats__GConverterIface = $extype_struct"struct _GConverterIface" of {
  g_iface = type_c2ats_GTypeInterface,
  convert = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GConverter, l1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr, type_c2ats_gsize, ptr, type_c2ats_gsize, type_c2ats_GConverterFlags, ptr l2, ptr l3, ptr l4) -> type_c2ats_GConverterResult,
  reset = {l1:addr} (!ptr_v_1(type_c2ats_GConverter, l1) | ptr l1) -> void
}
fun fun_c2ats_g_converter_get_type: () -> type_c2ats_GType = "mac#g_converter_get_type"
fun fun_c2ats_g_converter_convert: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GConverter, l1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr, type_c2ats_gsize, ptr, type_c2ats_gsize, type_c2ats_GConverterFlags, ptr l2, ptr l3, ptr l4) -> type_c2ats_GConverterResult = "mac#g_converter_convert"
fun fun_c2ats_g_converter_reset: {l1:addr} (!ptr_v_1(type_c2ats_GConverter, l1) | ptr l1) -> void = "mac#g_converter_reset"
// File: /usr/include/glib-2.0/gio/gcharsetconverter.h
abst@ype struct_c2ats__GCharsetConverterClass // FIXME! Forward declaration.
typedef type_c2ats_GCharsetConverterClass = struct_c2ats__GCharsetConverterClass
typedef struct_c2ats__GCharsetConverterClass = $extype_struct"struct _GCharsetConverterClass" of {
  parent_class = type_c2ats_GObjectClass
}
fun fun_c2ats_g_charset_converter_get_type: () -> type_c2ats_GType = "mac#g_charset_converter_get_type"
fun fun_c2ats_g_charset_converter_new: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GCharsetConverter, l4) | ptr l4) = "mac#g_charset_converter_new"
fun fun_c2ats_g_charset_converter_set_use_fallback: {l1:addr} (!ptr_v_1(type_c2ats_GCharsetConverter, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_charset_converter_set_use_fallback"
fun fun_c2ats_g_charset_converter_get_use_fallback: {l1:addr} (!ptr_v_1(type_c2ats_GCharsetConverter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_charset_converter_get_use_fallback"
fun fun_c2ats_g_charset_converter_get_num_fallbacks: {l1:addr} (!ptr_v_1(type_c2ats_GCharsetConverter, l1) | ptr l1) -> type_c2ats_guint = "mac#g_charset_converter_get_num_fallbacks"
// File: /usr/include/glib-2.0/gio/gcontenttype.h
fun fun_c2ats_g_content_type_equals: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_content_type_equals"
fun fun_c2ats_g_content_type_is_a: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_content_type_is_a"
fun fun_c2ats_g_content_type_is_unknown: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_content_type_is_unknown"
fun fun_c2ats_g_content_type_get_description: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_content_type_get_description"
fun fun_c2ats_g_content_type_get_mime_type: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_content_type_get_mime_type"
fun fun_c2ats_g_content_type_get_icon: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#g_content_type_get_icon"
fun fun_c2ats_g_content_type_get_symbolic_icon: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#g_content_type_get_symbolic_icon"
fun fun_c2ats_g_content_type_get_generic_icon_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_content_type_get_generic_icon_name"
fun fun_c2ats_g_content_type_can_be_executable: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_content_type_can_be_executable"
fun fun_c2ats_g_content_type_from_mime_type: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_content_type_from_mime_type"
fun fun_c2ats_g_content_type_guess: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_guchar, l2), !ptr_v_1(type_c2ats_gboolean, l3) | ptr l1, ptr l2, type_c2ats_gsize, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#g_content_type_guess"
fun fun_c2ats_g_content_type_guess_for_tree: {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#g_content_type_guess_for_tree"
fun fun_c2ats_g_content_types_get_registered: () -> [l1:addr] (ptr_v_1(type_c2ats_GList, l1) | ptr l1) = "mac#g_content_types_get_registered"
// File: /usr/include/glib-2.0/gio/gconverterinputstream.h
abst@ype struct_c2ats__GConverterInputStreamClass // FIXME! Forward declaration.
typedef type_c2ats_GConverterInputStreamClass = struct_c2ats__GConverterInputStreamClass
abst@ype struct_c2ats__GConverterInputStreamPrivate // FIXME! Forward declaration.
typedef type_c2ats_GConverterInputStreamPrivate = struct_c2ats__GConverterInputStreamPrivate
typedef struct_c2ats__GConverterInputStream = $extype_struct"struct _GConverterInputStream" of {
  parent_instance = type_c2ats_GFilterInputStream,
  priv = ptr (* cPtr0(type_c2ats_GConverterInputStreamPrivate) *)
}
typedef struct_c2ats__GConverterInputStreamClass = $extype_struct"struct _GConverterInputStreamClass" of {
  parent_class = type_c2ats_GFilterInputStreamClass,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void
}
fun fun_c2ats_g_converter_input_stream_get_type: () -> type_c2ats_GType = "mac#g_converter_input_stream_get_type"
fun fun_c2ats_g_converter_input_stream_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GConverter, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GInputStream, l3) | ptr l3) = "mac#g_converter_input_stream_new"
fun fun_c2ats_g_converter_input_stream_get_converter: {l1:addr} (!ptr_v_1(type_c2ats_GConverterInputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GConverter, l2) | ptr l2) = "mac#g_converter_input_stream_get_converter"
// File: /usr/include/glib-2.0/gio/gconverteroutputstream.h
abst@ype struct_c2ats__GConverterOutputStreamClass // FIXME! Forward declaration.
typedef type_c2ats_GConverterOutputStreamClass = struct_c2ats__GConverterOutputStreamClass
abst@ype struct_c2ats__GConverterOutputStreamPrivate // FIXME! Forward declaration.
typedef type_c2ats_GConverterOutputStreamPrivate = struct_c2ats__GConverterOutputStreamPrivate
typedef struct_c2ats__GConverterOutputStream = $extype_struct"struct _GConverterOutputStream" of {
  parent_instance = type_c2ats_GFilterOutputStream,
  priv = ptr (* cPtr0(type_c2ats_GConverterOutputStreamPrivate) *)
}
typedef struct_c2ats__GConverterOutputStreamClass = $extype_struct"struct _GConverterOutputStreamClass" of {
  parent_class = type_c2ats_GFilterOutputStreamClass,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void
}
fun fun_c2ats_g_converter_output_stream_get_type: () -> type_c2ats_GType = "mac#g_converter_output_stream_get_type"
fun fun_c2ats_g_converter_output_stream_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GConverter, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GOutputStream, l3) | ptr l3) = "mac#g_converter_output_stream_new"
fun fun_c2ats_g_converter_output_stream_get_converter: {l1:addr} (!ptr_v_1(type_c2ats_GConverterOutputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GConverter, l2) | ptr l2) = "mac#g_converter_output_stream_get_converter"
// File: /usr/include/unistd.h
typedef type_c2ats_socklen_t = type_c2ats___socklen_t
fun fun_c2ats_access: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, int) -> int = "mac#access"
fun fun_c2ats_lseek: (int, type_c2ats___off_t, int) -> type_c2ats___off_t = "mac#lseek"
fun fun_c2ats_close: (int) -> int = "mac#close"
fun fun_c2ats_read: (int, ptr, type_c2ats_size_t) -> type_c2ats_ssize_t = "mac#read"
fun fun_c2ats_write: (int, ptr, type_c2ats_size_t) -> type_c2ats_ssize_t = "mac#write"
fun fun_c2ats_pipe: (@[int][2]) -> int = "mac#pipe"
fun fun_c2ats_alarm: (uint) -> uint = "mac#alarm"
fun fun_c2ats_sleep: (uint) -> uint = "mac#sleep"
fun fun_c2ats_pause: () -> int = "mac#pause"
fun fun_c2ats_chown: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, type_c2ats___uid_t, type_c2ats___gid_t) -> int = "mac#chown"
fun fun_c2ats_chdir: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> int = "mac#chdir"
fun fun_c2ats_getcwd: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, type_c2ats_size_t) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#getcwd"
fun fun_c2ats_dup: (int) -> int = "mac#dup"
fun fun_c2ats_dup2: (int, int) -> int = "mac#dup2"
macdef takeout_c2ats___environ = $extval([l1,l1_1,l1_2:addr] (ptr_v_3(char, l1, l1_1, l1_2) | ptr l1), "&__environ")
praxi addback_c2ats___environ {l1,l1_1,l1_2:addr} (ptr_v_3(char, l1, l1_1, l1_2) | ptr l1): void
fun fun_c2ats_execve: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, @[cPtr0(char)][0], @[cPtr0(char)][0]) -> int = "mac#execve"
fun fun_c2ats_execv: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, @[cPtr0(char)][0]) -> int = "mac#execv"
fun fun_c2ats_execle: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> int = "mac#execle"
fun fun_c2ats_execl: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> int = "mac#execl"
fun fun_c2ats_execvp: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, @[cPtr0(char)][0]) -> int = "mac#execvp"
fun fun_c2ats_execlp: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> int = "mac#execlp"
fun fun_c2ats_nice: (int) -> int = "mac#nice"
fun fun_c2ats__exit: (int) -> void = "mac#_exit"
fun fun_c2ats_pathconf: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, int) -> lint = "mac#pathconf"
fun fun_c2ats_fpathconf: (int, int) -> lint = "mac#fpathconf"
fun fun_c2ats_sysconf: (int) -> lint = "mac#sysconf"
fun fun_c2ats_confstr: {l1:addr} (!ptr_v_1(char, l1) | int, ptr l1, type_c2ats_size_t) -> type_c2ats_size_t = "mac#confstr"
fun fun_c2ats_getpid: () -> type_c2ats___pid_t = "mac#getpid"
fun fun_c2ats_getppid: () -> type_c2ats___pid_t = "mac#getppid"
fun fun_c2ats_getpgrp: () -> type_c2ats___pid_t = "mac#getpgrp"
fun fun_c2ats___getpgid: (type_c2ats___pid_t) -> type_c2ats___pid_t = "mac#__getpgid"
fun fun_c2ats_setpgid: (type_c2ats___pid_t, type_c2ats___pid_t) -> int = "mac#setpgid"
fun fun_c2ats_setsid: () -> type_c2ats___pid_t = "mac#setsid"
fun fun_c2ats_getuid: () -> type_c2ats___uid_t = "mac#getuid"
fun fun_c2ats_geteuid: () -> type_c2ats___uid_t = "mac#geteuid"
fun fun_c2ats_getgid: () -> type_c2ats___gid_t = "mac#getgid"
fun fun_c2ats_getegid: () -> type_c2ats___gid_t = "mac#getegid"
fun fun_c2ats_getgroups: (int, @[type_c2ats___gid_t][0]) -> int = "mac#getgroups"
fun fun_c2ats_setuid: (type_c2ats___uid_t) -> int = "mac#setuid"
fun fun_c2ats_setgid: (type_c2ats___gid_t) -> int = "mac#setgid"
fun fun_c2ats_fork: () -> type_c2ats___pid_t = "mac#fork"
fun fun_c2ats_ttyname: (int) -> [l1:addr] (ptr_v_1(char, l1) | ptr l1) = "mac#ttyname"
fun fun_c2ats_ttyname_r: {l1:addr} (!ptr_v_1(char, l1) | int, ptr l1, type_c2ats_size_t) -> int = "mac#ttyname_r"
fun fun_c2ats_isatty: (int) -> int = "mac#isatty"
fun fun_c2ats_link: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> int = "mac#link"
fun fun_c2ats_unlink: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> int = "mac#unlink"
fun fun_c2ats_rmdir: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> int = "mac#rmdir"
fun fun_c2ats_tcgetpgrp: (int) -> type_c2ats___pid_t = "mac#tcgetpgrp"
fun fun_c2ats_tcsetpgrp: (int, type_c2ats___pid_t) -> int = "mac#tcsetpgrp"
fun fun_c2ats_getlogin: () -> [l1:addr] (ptr_v_1(char, l1) | ptr l1) = "mac#getlogin"
fun fun_c2ats_getlogin_r: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, type_c2ats_size_t) -> int = "mac#getlogin_r"
fun fun_c2ats_chroot: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> int = "mac#chroot"
fun fun_c2ats_getpass: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#getpass"
fun fun_c2ats_fsync: (int) -> int = "mac#fsync"
fun fun_c2ats_crypt: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(char, l3) | ptr l3) = "mac#crypt"
fun fun_c2ats_encrypt: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, int) -> void = "mac#encrypt"
fun fun_c2ats_swab: (ptr, ptr, type_c2ats_ssize_t) -> void = "mac#swab"
fun fun_c2ats_ctermid: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#ctermid"
fun fun_c2ats_cuserid: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#cuserid"
// File: /usr/include/x86_64-linux-gnu/bits/confname.h
#define enum_c2ats__PC_LINK_MAX 0
#define enum_c2ats__PC_MAX_CANON 1
#define enum_c2ats__PC_MAX_INPUT 2
#define enum_c2ats__PC_NAME_MAX 3
#define enum_c2ats__PC_PATH_MAX 4
#define enum_c2ats__PC_PIPE_BUF 5
#define enum_c2ats__PC_CHOWN_RESTRICTED 6
#define enum_c2ats__PC_NO_TRUNC 7
#define enum_c2ats__PC_VDISABLE 8
#define enum_c2ats__PC_SYNC_IO 9
#define enum_c2ats__PC_ASYNC_IO 10
#define enum_c2ats__PC_PRIO_IO 11
#define enum_c2ats__PC_SOCK_MAXBUF 12
#define enum_c2ats__PC_FILESIZEBITS 13
#define enum_c2ats__PC_REC_INCR_XFER_SIZE 14
#define enum_c2ats__PC_REC_MAX_XFER_SIZE 15
#define enum_c2ats__PC_REC_MIN_XFER_SIZE 16
#define enum_c2ats__PC_REC_XFER_ALIGN 17
#define enum_c2ats__PC_ALLOC_SIZE_MIN 18
#define enum_c2ats__PC_SYMLINK_MAX 19
#define enum_c2ats__PC_2_SYMLINKS 20
#define enum_c2ats__SC_ARG_MAX 0
#define enum_c2ats__SC_CHILD_MAX 1
#define enum_c2ats__SC_CLK_TCK 2
#define enum_c2ats__SC_NGROUPS_MAX 3
#define enum_c2ats__SC_OPEN_MAX 4
#define enum_c2ats__SC_STREAM_MAX 5
#define enum_c2ats__SC_TZNAME_MAX 6
#define enum_c2ats__SC_JOB_CONTROL 7
#define enum_c2ats__SC_SAVED_IDS 8
#define enum_c2ats__SC_REALTIME_SIGNALS 9
#define enum_c2ats__SC_PRIORITY_SCHEDULING 10
#define enum_c2ats__SC_TIMERS 11
#define enum_c2ats__SC_ASYNCHRONOUS_IO 12
#define enum_c2ats__SC_PRIORITIZED_IO 13
#define enum_c2ats__SC_SYNCHRONIZED_IO 14
#define enum_c2ats__SC_FSYNC 15
#define enum_c2ats__SC_MAPPED_FILES 16
#define enum_c2ats__SC_MEMLOCK 17
#define enum_c2ats__SC_MEMLOCK_RANGE 18
#define enum_c2ats__SC_MEMORY_PROTECTION 19
#define enum_c2ats__SC_MESSAGE_PASSING 20
#define enum_c2ats__SC_SEMAPHORES 21
#define enum_c2ats__SC_SHARED_MEMORY_OBJECTS 22
#define enum_c2ats__SC_AIO_LISTIO_MAX 23
#define enum_c2ats__SC_AIO_MAX 24
#define enum_c2ats__SC_AIO_PRIO_DELTA_MAX 25
#define enum_c2ats__SC_DELAYTIMER_MAX 26
#define enum_c2ats__SC_MQ_OPEN_MAX 27
#define enum_c2ats__SC_MQ_PRIO_MAX 28
#define enum_c2ats__SC_VERSION 29
#define enum_c2ats__SC_PAGESIZE 30
#define enum_c2ats__SC_RTSIG_MAX 31
#define enum_c2ats__SC_SEM_NSEMS_MAX 32
#define enum_c2ats__SC_SEM_VALUE_MAX 33
#define enum_c2ats__SC_SIGQUEUE_MAX 34
#define enum_c2ats__SC_TIMER_MAX 35
#define enum_c2ats__SC_BC_BASE_MAX 36
#define enum_c2ats__SC_BC_DIM_MAX 37
#define enum_c2ats__SC_BC_SCALE_MAX 38
#define enum_c2ats__SC_BC_STRING_MAX 39
#define enum_c2ats__SC_COLL_WEIGHTS_MAX 40
#define enum_c2ats__SC_EQUIV_CLASS_MAX 41
#define enum_c2ats__SC_EXPR_NEST_MAX 42
#define enum_c2ats__SC_LINE_MAX 43
#define enum_c2ats__SC_RE_DUP_MAX 44
#define enum_c2ats__SC_CHARCLASS_NAME_MAX 45
#define enum_c2ats__SC_2_VERSION 46
#define enum_c2ats__SC_2_C_BIND 47
#define enum_c2ats__SC_2_C_DEV 48
#define enum_c2ats__SC_2_FORT_DEV 49
#define enum_c2ats__SC_2_FORT_RUN 50
#define enum_c2ats__SC_2_SW_DEV 51
#define enum_c2ats__SC_2_LOCALEDEF 52
#define enum_c2ats__SC_PII 53
#define enum_c2ats__SC_PII_XTI 54
#define enum_c2ats__SC_PII_SOCKET 55
#define enum_c2ats__SC_PII_INTERNET 56
#define enum_c2ats__SC_PII_OSI 57
#define enum_c2ats__SC_POLL 58
#define enum_c2ats__SC_SELECT 59
#define enum_c2ats__SC_UIO_MAXIOV 60
#define enum_c2ats__SC_IOV_MAX _SC_UIO_MAXIOV
#define enum_c2ats__SC_PII_INTERNET_STREAM _SC_UIO_MAXIOV + 1
#define enum_c2ats__SC_PII_INTERNET_DGRAM _SC_UIO_MAXIOV + 2
#define enum_c2ats__SC_PII_OSI_COTS _SC_UIO_MAXIOV + 3
#define enum_c2ats__SC_PII_OSI_CLTS _SC_UIO_MAXIOV + 4
#define enum_c2ats__SC_PII_OSI_M _SC_UIO_MAXIOV + 5
#define enum_c2ats__SC_T_IOV_MAX _SC_UIO_MAXIOV + 6
#define enum_c2ats__SC_THREADS _SC_UIO_MAXIOV + 7
#define enum_c2ats__SC_THREAD_SAFE_FUNCTIONS _SC_UIO_MAXIOV + 8
#define enum_c2ats__SC_GETGR_R_SIZE_MAX _SC_UIO_MAXIOV + 9
#define enum_c2ats__SC_GETPW_R_SIZE_MAX _SC_UIO_MAXIOV + 10
#define enum_c2ats__SC_LOGIN_NAME_MAX _SC_UIO_MAXIOV + 11
#define enum_c2ats__SC_TTY_NAME_MAX _SC_UIO_MAXIOV + 12
#define enum_c2ats__SC_THREAD_DESTRUCTOR_ITERATIONS _SC_UIO_MAXIOV + 13
#define enum_c2ats__SC_THREAD_KEYS_MAX _SC_UIO_MAXIOV + 14
#define enum_c2ats__SC_THREAD_STACK_MIN _SC_UIO_MAXIOV + 15
#define enum_c2ats__SC_THREAD_THREADS_MAX _SC_UIO_MAXIOV + 16
#define enum_c2ats__SC_THREAD_ATTR_STACKADDR _SC_UIO_MAXIOV + 17
#define enum_c2ats__SC_THREAD_ATTR_STACKSIZE _SC_UIO_MAXIOV + 18
#define enum_c2ats__SC_THREAD_PRIORITY_SCHEDULING _SC_UIO_MAXIOV + 19
#define enum_c2ats__SC_THREAD_PRIO_INHERIT _SC_UIO_MAXIOV + 20
#define enum_c2ats__SC_THREAD_PRIO_PROTECT _SC_UIO_MAXIOV + 21
#define enum_c2ats__SC_THREAD_PROCESS_SHARED _SC_UIO_MAXIOV + 22
#define enum_c2ats__SC_NPROCESSORS_CONF _SC_UIO_MAXIOV + 23
#define enum_c2ats__SC_NPROCESSORS_ONLN _SC_UIO_MAXIOV + 24
#define enum_c2ats__SC_PHYS_PAGES _SC_UIO_MAXIOV + 25
#define enum_c2ats__SC_AVPHYS_PAGES _SC_UIO_MAXIOV + 26
#define enum_c2ats__SC_ATEXIT_MAX _SC_UIO_MAXIOV + 27
#define enum_c2ats__SC_PASS_MAX _SC_UIO_MAXIOV + 28
#define enum_c2ats__SC_XOPEN_VERSION _SC_UIO_MAXIOV + 29
#define enum_c2ats__SC_XOPEN_XCU_VERSION _SC_UIO_MAXIOV + 30
#define enum_c2ats__SC_XOPEN_UNIX _SC_UIO_MAXIOV + 31
#define enum_c2ats__SC_XOPEN_CRYPT _SC_UIO_MAXIOV + 32
#define enum_c2ats__SC_XOPEN_ENH_I18N _SC_UIO_MAXIOV + 33
#define enum_c2ats__SC_XOPEN_SHM _SC_UIO_MAXIOV + 34
#define enum_c2ats__SC_2_CHAR_TERM _SC_UIO_MAXIOV + 35
#define enum_c2ats__SC_2_C_VERSION _SC_UIO_MAXIOV + 36
#define enum_c2ats__SC_2_UPE _SC_UIO_MAXIOV + 37
#define enum_c2ats__SC_XOPEN_XPG2 _SC_UIO_MAXIOV + 38
#define enum_c2ats__SC_XOPEN_XPG3 _SC_UIO_MAXIOV + 39
#define enum_c2ats__SC_XOPEN_XPG4 _SC_UIO_MAXIOV + 40
#define enum_c2ats__SC_CHAR_BIT _SC_UIO_MAXIOV + 41
#define enum_c2ats__SC_CHAR_MAX _SC_UIO_MAXIOV + 42
#define enum_c2ats__SC_CHAR_MIN _SC_UIO_MAXIOV + 43
#define enum_c2ats__SC_INT_MAX _SC_UIO_MAXIOV + 44
#define enum_c2ats__SC_INT_MIN _SC_UIO_MAXIOV + 45
#define enum_c2ats__SC_LONG_BIT _SC_UIO_MAXIOV + 46
#define enum_c2ats__SC_WORD_BIT _SC_UIO_MAXIOV + 47
#define enum_c2ats__SC_MB_LEN_MAX _SC_UIO_MAXIOV + 48
#define enum_c2ats__SC_NZERO _SC_UIO_MAXIOV + 49
#define enum_c2ats__SC_SSIZE_MAX _SC_UIO_MAXIOV + 50
#define enum_c2ats__SC_SCHAR_MAX _SC_UIO_MAXIOV + 51
#define enum_c2ats__SC_SCHAR_MIN _SC_UIO_MAXIOV + 52
#define enum_c2ats__SC_SHRT_MAX _SC_UIO_MAXIOV + 53
#define enum_c2ats__SC_SHRT_MIN _SC_UIO_MAXIOV + 54
#define enum_c2ats__SC_UCHAR_MAX _SC_UIO_MAXIOV + 55
#define enum_c2ats__SC_UINT_MAX _SC_UIO_MAXIOV + 56
#define enum_c2ats__SC_ULONG_MAX _SC_UIO_MAXIOV + 57
#define enum_c2ats__SC_USHRT_MAX _SC_UIO_MAXIOV + 58
#define enum_c2ats__SC_NL_ARGMAX _SC_UIO_MAXIOV + 59
#define enum_c2ats__SC_NL_LANGMAX _SC_UIO_MAXIOV + 60
#define enum_c2ats__SC_NL_MSGMAX _SC_UIO_MAXIOV + 61
#define enum_c2ats__SC_NL_NMAX _SC_UIO_MAXIOV + 62
#define enum_c2ats__SC_NL_SETMAX _SC_UIO_MAXIOV + 63
#define enum_c2ats__SC_NL_TEXTMAX _SC_UIO_MAXIOV + 64
#define enum_c2ats__SC_XBS5_ILP32_OFF32 _SC_UIO_MAXIOV + 65
#define enum_c2ats__SC_XBS5_ILP32_OFFBIG _SC_UIO_MAXIOV + 66
#define enum_c2ats__SC_XBS5_LP64_OFF64 _SC_UIO_MAXIOV + 67
#define enum_c2ats__SC_XBS5_LPBIG_OFFBIG _SC_UIO_MAXIOV + 68
#define enum_c2ats__SC_XOPEN_LEGACY _SC_UIO_MAXIOV + 69
#define enum_c2ats__SC_XOPEN_REALTIME _SC_UIO_MAXIOV + 70
#define enum_c2ats__SC_XOPEN_REALTIME_THREADS _SC_UIO_MAXIOV + 71
#define enum_c2ats__SC_ADVISORY_INFO _SC_UIO_MAXIOV + 72
#define enum_c2ats__SC_BARRIERS _SC_UIO_MAXIOV + 73
#define enum_c2ats__SC_BASE _SC_UIO_MAXIOV + 74
#define enum_c2ats__SC_C_LANG_SUPPORT _SC_UIO_MAXIOV + 75
#define enum_c2ats__SC_C_LANG_SUPPORT_R _SC_UIO_MAXIOV + 76
#define enum_c2ats__SC_CLOCK_SELECTION _SC_UIO_MAXIOV + 77
#define enum_c2ats__SC_CPUTIME _SC_UIO_MAXIOV + 78
#define enum_c2ats__SC_THREAD_CPUTIME _SC_UIO_MAXIOV + 79
#define enum_c2ats__SC_DEVICE_IO _SC_UIO_MAXIOV + 80
#define enum_c2ats__SC_DEVICE_SPECIFIC _SC_UIO_MAXIOV + 81
#define enum_c2ats__SC_DEVICE_SPECIFIC_R _SC_UIO_MAXIOV + 82
#define enum_c2ats__SC_FD_MGMT _SC_UIO_MAXIOV + 83
#define enum_c2ats__SC_FIFO _SC_UIO_MAXIOV + 84
#define enum_c2ats__SC_PIPE _SC_UIO_MAXIOV + 85
#define enum_c2ats__SC_FILE_ATTRIBUTES _SC_UIO_MAXIOV + 86
#define enum_c2ats__SC_FILE_LOCKING _SC_UIO_MAXIOV + 87
#define enum_c2ats__SC_FILE_SYSTEM _SC_UIO_MAXIOV + 88
#define enum_c2ats__SC_MONOTONIC_CLOCK _SC_UIO_MAXIOV + 89
#define enum_c2ats__SC_MULTI_PROCESS _SC_UIO_MAXIOV + 90
#define enum_c2ats__SC_SINGLE_PROCESS _SC_UIO_MAXIOV + 91
#define enum_c2ats__SC_NETWORKING _SC_UIO_MAXIOV + 92
#define enum_c2ats__SC_READER_WRITER_LOCKS _SC_UIO_MAXIOV + 93
#define enum_c2ats__SC_SPIN_LOCKS _SC_UIO_MAXIOV + 94
#define enum_c2ats__SC_REGEXP _SC_UIO_MAXIOV + 95
#define enum_c2ats__SC_REGEX_VERSION _SC_UIO_MAXIOV + 96
#define enum_c2ats__SC_SHELL _SC_UIO_MAXIOV + 97
#define enum_c2ats__SC_SIGNALS _SC_UIO_MAXIOV + 98
#define enum_c2ats__SC_SPAWN _SC_UIO_MAXIOV + 99
#define enum_c2ats__SC_SPORADIC_SERVER _SC_UIO_MAXIOV + 100
#define enum_c2ats__SC_THREAD_SPORADIC_SERVER _SC_UIO_MAXIOV + 101
#define enum_c2ats__SC_SYSTEM_DATABASE _SC_UIO_MAXIOV + 102
#define enum_c2ats__SC_SYSTEM_DATABASE_R _SC_UIO_MAXIOV + 103
#define enum_c2ats__SC_TIMEOUTS _SC_UIO_MAXIOV + 104
#define enum_c2ats__SC_TYPED_MEMORY_OBJECTS _SC_UIO_MAXIOV + 105
#define enum_c2ats__SC_USER_GROUPS _SC_UIO_MAXIOV + 106
#define enum_c2ats__SC_USER_GROUPS_R _SC_UIO_MAXIOV + 107
#define enum_c2ats__SC_2_PBS _SC_UIO_MAXIOV + 108
#define enum_c2ats__SC_2_PBS_ACCOUNTING _SC_UIO_MAXIOV + 109
#define enum_c2ats__SC_2_PBS_LOCATE _SC_UIO_MAXIOV + 110
#define enum_c2ats__SC_2_PBS_MESSAGE _SC_UIO_MAXIOV + 111
#define enum_c2ats__SC_2_PBS_TRACK _SC_UIO_MAXIOV + 112
#define enum_c2ats__SC_SYMLOOP_MAX _SC_UIO_MAXIOV + 113
#define enum_c2ats__SC_STREAMS _SC_UIO_MAXIOV + 114
#define enum_c2ats__SC_2_PBS_CHECKPOINT _SC_UIO_MAXIOV + 115
#define enum_c2ats__SC_V6_ILP32_OFF32 _SC_UIO_MAXIOV + 116
#define enum_c2ats__SC_V6_ILP32_OFFBIG _SC_UIO_MAXIOV + 117
#define enum_c2ats__SC_V6_LP64_OFF64 _SC_UIO_MAXIOV + 118
#define enum_c2ats__SC_V6_LPBIG_OFFBIG _SC_UIO_MAXIOV + 119
#define enum_c2ats__SC_HOST_NAME_MAX _SC_UIO_MAXIOV + 120
#define enum_c2ats__SC_TRACE _SC_UIO_MAXIOV + 121
#define enum_c2ats__SC_TRACE_EVENT_FILTER _SC_UIO_MAXIOV + 122
#define enum_c2ats__SC_TRACE_INHERIT _SC_UIO_MAXIOV + 123
#define enum_c2ats__SC_TRACE_LOG _SC_UIO_MAXIOV + 124
#define enum_c2ats__SC_LEVEL1_ICACHE_SIZE _SC_UIO_MAXIOV + 125
#define enum_c2ats__SC_LEVEL1_ICACHE_ASSOC _SC_UIO_MAXIOV + 126
#define enum_c2ats__SC_LEVEL1_ICACHE_LINESIZE _SC_UIO_MAXIOV + 127
#define enum_c2ats__SC_LEVEL1_DCACHE_SIZE _SC_UIO_MAXIOV + 128
#define enum_c2ats__SC_LEVEL1_DCACHE_ASSOC _SC_UIO_MAXIOV + 129
#define enum_c2ats__SC_LEVEL1_DCACHE_LINESIZE _SC_UIO_MAXIOV + 130
#define enum_c2ats__SC_LEVEL2_CACHE_SIZE _SC_UIO_MAXIOV + 131
#define enum_c2ats__SC_LEVEL2_CACHE_ASSOC _SC_UIO_MAXIOV + 132
#define enum_c2ats__SC_LEVEL2_CACHE_LINESIZE _SC_UIO_MAXIOV + 133
#define enum_c2ats__SC_LEVEL3_CACHE_SIZE _SC_UIO_MAXIOV + 134
#define enum_c2ats__SC_LEVEL3_CACHE_ASSOC _SC_UIO_MAXIOV + 135
#define enum_c2ats__SC_LEVEL3_CACHE_LINESIZE _SC_UIO_MAXIOV + 136
#define enum_c2ats__SC_LEVEL4_CACHE_SIZE _SC_UIO_MAXIOV + 137
#define enum_c2ats__SC_LEVEL4_CACHE_ASSOC _SC_UIO_MAXIOV + 138
#define enum_c2ats__SC_LEVEL4_CACHE_LINESIZE _SC_UIO_MAXIOV + 139
#define enum_c2ats__SC_IPV6 _SC_LEVEL1_ICACHE_SIZE + 50
#define enum_c2ats__SC_RAW_SOCKETS _SC_LEVEL1_ICACHE_SIZE + 50 + 1
#define enum_c2ats__SC_V7_ILP32_OFF32 _SC_LEVEL1_ICACHE_SIZE + 50 + 2
#define enum_c2ats__SC_V7_ILP32_OFFBIG _SC_LEVEL1_ICACHE_SIZE + 50 + 3
#define enum_c2ats__SC_V7_LP64_OFF64 _SC_LEVEL1_ICACHE_SIZE + 50 + 4
#define enum_c2ats__SC_V7_LPBIG_OFFBIG _SC_LEVEL1_ICACHE_SIZE + 50 + 5
#define enum_c2ats__SC_SS_REPL_MAX _SC_LEVEL1_ICACHE_SIZE + 50 + 6
#define enum_c2ats__SC_TRACE_EVENT_NAME_MAX _SC_LEVEL1_ICACHE_SIZE + 50 + 7
#define enum_c2ats__SC_TRACE_NAME_MAX _SC_LEVEL1_ICACHE_SIZE + 50 + 8
#define enum_c2ats__SC_TRACE_SYS_MAX _SC_LEVEL1_ICACHE_SIZE + 50 + 9
#define enum_c2ats__SC_TRACE_USER_EVENT_MAX _SC_LEVEL1_ICACHE_SIZE + 50 + 10
#define enum_c2ats__SC_XOPEN_STREAMS _SC_LEVEL1_ICACHE_SIZE + 50 + 11
#define enum_c2ats__SC_THREAD_ROBUST_PRIO_INHERIT _SC_LEVEL1_ICACHE_SIZE + 50 + 12
#define enum_c2ats__SC_THREAD_ROBUST_PRIO_PROTECT _SC_LEVEL1_ICACHE_SIZE + 50 + 13
#define enum_c2ats__CS_PATH 0
#define enum_c2ats__CS_V6_WIDTH_RESTRICTED_ENVS 1
#define enum_c2ats__CS_GNU_LIBC_VERSION 2
#define enum_c2ats__CS_GNU_LIBPTHREAD_VERSION 3
#define enum_c2ats__CS_V5_WIDTH_RESTRICTED_ENVS 4
#define enum_c2ats__CS_V7_WIDTH_RESTRICTED_ENVS 5
#define enum_c2ats__CS_LFS_CFLAGS 1000
#define enum_c2ats__CS_LFS_LDFLAGS 1000 + 1
#define enum_c2ats__CS_LFS_LIBS 1000 + 2
#define enum_c2ats__CS_LFS_LINTFLAGS 1000 + 3
#define enum_c2ats__CS_LFS64_CFLAGS 1000 + 4
#define enum_c2ats__CS_LFS64_LDFLAGS 1000 + 5
#define enum_c2ats__CS_LFS64_LIBS 1000 + 6
#define enum_c2ats__CS_LFS64_LINTFLAGS 1000 + 7
#define enum_c2ats__CS_XBS5_ILP32_OFF32_CFLAGS 1100
#define enum_c2ats__CS_XBS5_ILP32_OFF32_LDFLAGS 1100 + 1
#define enum_c2ats__CS_XBS5_ILP32_OFF32_LIBS 1100 + 2
#define enum_c2ats__CS_XBS5_ILP32_OFF32_LINTFLAGS 1100 + 3
#define enum_c2ats__CS_XBS5_ILP32_OFFBIG_CFLAGS 1100 + 4
#define enum_c2ats__CS_XBS5_ILP32_OFFBIG_LDFLAGS 1100 + 5
#define enum_c2ats__CS_XBS5_ILP32_OFFBIG_LIBS 1100 + 6
#define enum_c2ats__CS_XBS5_ILP32_OFFBIG_LINTFLAGS 1100 + 7
#define enum_c2ats__CS_XBS5_LP64_OFF64_CFLAGS 1100 + 8
#define enum_c2ats__CS_XBS5_LP64_OFF64_LDFLAGS 1100 + 9
#define enum_c2ats__CS_XBS5_LP64_OFF64_LIBS 1100 + 10
#define enum_c2ats__CS_XBS5_LP64_OFF64_LINTFLAGS 1100 + 11
#define enum_c2ats__CS_XBS5_LPBIG_OFFBIG_CFLAGS 1100 + 12
#define enum_c2ats__CS_XBS5_LPBIG_OFFBIG_LDFLAGS 1100 + 13
#define enum_c2ats__CS_XBS5_LPBIG_OFFBIG_LIBS 1100 + 14
#define enum_c2ats__CS_XBS5_LPBIG_OFFBIG_LINTFLAGS 1100 + 15
#define enum_c2ats__CS_POSIX_V6_ILP32_OFF32_CFLAGS 1100 + 16
#define enum_c2ats__CS_POSIX_V6_ILP32_OFF32_LDFLAGS 1100 + 17
#define enum_c2ats__CS_POSIX_V6_ILP32_OFF32_LIBS 1100 + 18
#define enum_c2ats__CS_POSIX_V6_ILP32_OFF32_LINTFLAGS 1100 + 19
#define enum_c2ats__CS_POSIX_V6_ILP32_OFFBIG_CFLAGS 1100 + 20
#define enum_c2ats__CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS 1100 + 21
#define enum_c2ats__CS_POSIX_V6_ILP32_OFFBIG_LIBS 1100 + 22
#define enum_c2ats__CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS 1100 + 23
#define enum_c2ats__CS_POSIX_V6_LP64_OFF64_CFLAGS 1100 + 24
#define enum_c2ats__CS_POSIX_V6_LP64_OFF64_LDFLAGS 1100 + 25
#define enum_c2ats__CS_POSIX_V6_LP64_OFF64_LIBS 1100 + 26
#define enum_c2ats__CS_POSIX_V6_LP64_OFF64_LINTFLAGS 1100 + 27
#define enum_c2ats__CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS 1100 + 28
#define enum_c2ats__CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS 1100 + 29
#define enum_c2ats__CS_POSIX_V6_LPBIG_OFFBIG_LIBS 1100 + 30
#define enum_c2ats__CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS 1100 + 31
#define enum_c2ats__CS_POSIX_V7_ILP32_OFF32_CFLAGS 1100 + 32
#define enum_c2ats__CS_POSIX_V7_ILP32_OFF32_LDFLAGS 1100 + 33
#define enum_c2ats__CS_POSIX_V7_ILP32_OFF32_LIBS 1100 + 34
#define enum_c2ats__CS_POSIX_V7_ILP32_OFF32_LINTFLAGS 1100 + 35
#define enum_c2ats__CS_POSIX_V7_ILP32_OFFBIG_CFLAGS 1100 + 36
#define enum_c2ats__CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS 1100 + 37
#define enum_c2ats__CS_POSIX_V7_ILP32_OFFBIG_LIBS 1100 + 38
#define enum_c2ats__CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS 1100 + 39
#define enum_c2ats__CS_POSIX_V7_LP64_OFF64_CFLAGS 1100 + 40
#define enum_c2ats__CS_POSIX_V7_LP64_OFF64_LDFLAGS 1100 + 41
#define enum_c2ats__CS_POSIX_V7_LP64_OFF64_LIBS 1100 + 42
#define enum_c2ats__CS_POSIX_V7_LP64_OFF64_LINTFLAGS 1100 + 43
#define enum_c2ats__CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS 1100 + 44
#define enum_c2ats__CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS 1100 + 45
#define enum_c2ats__CS_POSIX_V7_LPBIG_OFFBIG_LIBS 1100 + 46
#define enum_c2ats__CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS 1100 + 47
#define enum_c2ats__CS_V6_ENV 1100 + 48
#define enum_c2ats__CS_V7_ENV 1100 + 49
// File: /usr/include/getopt.h
macdef takeout_c2ats_optarg = $extval([l1,l1_1:addr] (ptr_v_2(char, l1, l1_1) | ptr l1), "&optarg")
praxi addback_c2ats_optarg {l1,l1_1:addr} (ptr_v_2(char, l1, l1_1) | ptr l1): void
macdef takeout_c2ats_optind = $extval([l1:addr] (ptr_v_1(int, l1) | ptr l1), "&optind")
praxi addback_c2ats_optind {l1:addr} (ptr_v_1(int, l1) | ptr l1): void
macdef takeout_c2ats_opterr = $extval([l1:addr] (ptr_v_1(int, l1) | ptr l1), "&opterr")
praxi addback_c2ats_opterr {l1:addr} (ptr_v_1(int, l1) | ptr l1): void
macdef takeout_c2ats_optopt = $extval([l1:addr] (ptr_v_1(int, l1) | ptr l1), "&optopt")
praxi addback_c2ats_optopt {l1:addr} (ptr_v_1(int, l1) | ptr l1): void
fun fun_c2ats_getopt: {l1,l1_1,l2:addr} (!ptr_v_2(char, l1, l1_1), !ptr_v_1(char, l2) | int, ptr l1, ptr l2) -> int = "mac#getopt"
// File: /usr/include/glib-2.0/gio/gcredentials.h
abst@ype struct_c2ats__GCredentialsClass // FIXME! Forward declaration.
typedef type_c2ats_GCredentialsClass = struct_c2ats__GCredentialsClass
fun fun_c2ats_g_credentials_get_type: () -> type_c2ats_GType = "mac#g_credentials_get_type"
fun fun_c2ats_g_credentials_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GCredentials, l1) | ptr l1) = "mac#g_credentials_new"
fun fun_c2ats_g_credentials_to_string: {l1:addr} (!ptr_v_1(type_c2ats_GCredentials, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_credentials_to_string"
fun fun_c2ats_g_credentials_get_native: {l1:addr} (!ptr_v_1(type_c2ats_GCredentials, l1) | ptr l1, type_c2ats_GCredentialsType) -> type_c2ats_gpointer = "mac#g_credentials_get_native"
fun fun_c2ats_g_credentials_set_native: {l1:addr} (!ptr_v_1(type_c2ats_GCredentials, l1) | ptr l1, type_c2ats_GCredentialsType, type_c2ats_gpointer) -> void = "mac#g_credentials_set_native"
fun fun_c2ats_g_credentials_is_same_user: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GCredentials, l1), !ptr_v_1(type_c2ats_GCredentials, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_credentials_is_same_user"
fun fun_c2ats_g_credentials_get_unix_pid: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GCredentials, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_pid_t = "mac#g_credentials_get_unix_pid"
fun fun_c2ats_g_credentials_get_unix_user: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GCredentials, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_uid_t = "mac#g_credentials_get_unix_user"
fun fun_c2ats_g_credentials_set_unix_user: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GCredentials, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_uid_t, ptr l2) -> type_c2ats_gboolean = "mac#g_credentials_set_unix_user"
// File: /usr/include/glib-2.0/gio/gdatagrambased.h
abst@ype struct_c2ats__GDatagramBasedInterface // FIXME! Forward declaration.
typedef type_c2ats_GDatagramBasedInterface = struct_c2ats__GDatagramBasedInterface
typedef struct_c2ats__GDatagramBasedInterface = $extype_struct"struct _GDatagramBasedInterface" of {
  g_iface = type_c2ats_GTypeInterface,
  receive_messages = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GDatagramBased, l1), !ptr_v_1(type_c2ats_GInputMessage, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_gint, type_c2ats_gint64, ptr l3, ptr l4) -> type_c2ats_gint,
  send_messages = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GDatagramBased, l1), !ptr_v_1(type_c2ats_GOutputMessage, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_gint, type_c2ats_gint64, ptr l3, ptr l4) -> type_c2ats_gint,
  create_source = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDatagramBased, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GIOCondition, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSource, l3) | ptr l3),
  condition_check = {l1:addr} (!ptr_v_1(type_c2ats_GDatagramBased, l1) | ptr l1, type_c2ats_GIOCondition) -> type_c2ats_GIOCondition,
  condition_wait = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDatagramBased, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_GIOCondition, type_c2ats_gint64, ptr l2, ptr l3) -> type_c2ats_gboolean
}
fun fun_c2ats_g_datagram_based_get_type: () -> type_c2ats_GType = "mac#g_datagram_based_get_type"
fun fun_c2ats_g_datagram_based_receive_messages: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GDatagramBased, l1), !ptr_v_1(type_c2ats_GInputMessage, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_gint, type_c2ats_gint64, ptr l3, ptr l4) -> type_c2ats_gint = "mac#g_datagram_based_receive_messages"
fun fun_c2ats_g_datagram_based_send_messages: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GDatagramBased, l1), !ptr_v_1(type_c2ats_GOutputMessage, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_gint, type_c2ats_gint64, ptr l3, ptr l4) -> type_c2ats_gint = "mac#g_datagram_based_send_messages"
fun fun_c2ats_g_datagram_based_create_source: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDatagramBased, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GIOCondition, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSource, l3) | ptr l3) = "mac#g_datagram_based_create_source"
fun fun_c2ats_g_datagram_based_condition_check: {l1:addr} (!ptr_v_1(type_c2ats_GDatagramBased, l1) | ptr l1, type_c2ats_GIOCondition) -> type_c2ats_GIOCondition = "mac#g_datagram_based_condition_check"
fun fun_c2ats_g_datagram_based_condition_wait: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDatagramBased, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_GIOCondition, type_c2ats_gint64, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_datagram_based_condition_wait"
// File: /usr/include/glib-2.0/gio/gdatainputstream.h
abst@ype struct_c2ats__GDataInputStreamClass // FIXME! Forward declaration.
typedef type_c2ats_GDataInputStreamClass = struct_c2ats__GDataInputStreamClass
abst@ype struct_c2ats__GDataInputStreamPrivate // FIXME! Forward declaration.
typedef type_c2ats_GDataInputStreamPrivate = struct_c2ats__GDataInputStreamPrivate
typedef struct_c2ats__GDataInputStream = $extype_struct"struct _GDataInputStream" of {
  parent_instance = type_c2ats_GBufferedInputStream,
  priv = ptr (* cPtr0(type_c2ats_GDataInputStreamPrivate) *)
}
typedef struct_c2ats__GDataInputStreamClass = $extype_struct"struct _GDataInputStreamClass" of {
  parent_class = type_c2ats_GBufferedInputStreamClass,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void
}
fun fun_c2ats_g_data_input_stream_get_type: () -> type_c2ats_GType = "mac#g_data_input_stream_get_type"
fun fun_c2ats_g_data_input_stream_new: {l1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDataInputStream, l2) | ptr l2) = "mac#g_data_input_stream_new"
fun fun_c2ats_g_data_input_stream_set_byte_order: {l1:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1) | ptr l1, type_c2ats_GDataStreamByteOrder) -> void = "mac#g_data_input_stream_set_byte_order"
fun fun_c2ats_g_data_input_stream_get_byte_order: {l1:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1) | ptr l1) -> type_c2ats_GDataStreamByteOrder = "mac#g_data_input_stream_get_byte_order"
fun fun_c2ats_g_data_input_stream_set_newline_type: {l1:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1) | ptr l1, type_c2ats_GDataStreamNewlineType) -> void = "mac#g_data_input_stream_set_newline_type"
fun fun_c2ats_g_data_input_stream_get_newline_type: {l1:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1) | ptr l1) -> type_c2ats_GDataStreamNewlineType = "mac#g_data_input_stream_get_newline_type"
fun fun_c2ats_g_data_input_stream_read_byte: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_guchar = "mac#g_data_input_stream_read_byte"
fun fun_c2ats_g_data_input_stream_read_int16: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gint16 = "mac#g_data_input_stream_read_int16"
fun fun_c2ats_g_data_input_stream_read_uint16: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_guint16 = "mac#g_data_input_stream_read_uint16"
fun fun_c2ats_g_data_input_stream_read_int32: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gint32 = "mac#g_data_input_stream_read_int32"
fun fun_c2ats_g_data_input_stream_read_uint32: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_guint32 = "mac#g_data_input_stream_read_uint32"
fun fun_c2ats_g_data_input_stream_read_int64: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gint64 = "mac#g_data_input_stream_read_int64"
fun fun_c2ats_g_data_input_stream_read_uint64: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_guint64 = "mac#g_data_input_stream_read_uint64"
fun fun_c2ats_g_data_input_stream_read_line: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(char, l5) | ptr l5) = "mac#g_data_input_stream_read_line"
fun fun_c2ats_g_data_input_stream_read_line_utf8: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(char, l5) | ptr l5) = "mac#g_data_input_stream_read_line_utf8"
fun fun_c2ats_g_data_input_stream_read_line_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_gint, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_data_input_stream_read_line_async"
fun fun_c2ats_g_data_input_stream_read_line_finish: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(char, l5) | ptr l5) = "mac#g_data_input_stream_read_line_finish"
fun fun_c2ats_g_data_input_stream_read_line_finish_utf8: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(char, l5) | ptr l5) = "mac#g_data_input_stream_read_line_finish_utf8"
fun fun_c2ats_g_data_input_stream_read_until: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(char, l6) | ptr l6) = "mac#g_data_input_stream_read_until"
fun fun_c2ats_g_data_input_stream_read_until_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_gint, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_data_input_stream_read_until_async"
fun fun_c2ats_g_data_input_stream_read_until_finish: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(char, l5) | ptr l5) = "mac#g_data_input_stream_read_until_finish"
fun fun_c2ats_g_data_input_stream_read_upto: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, type_c2ats_gssize, ptr l3, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(char, l6) | ptr l6) = "mac#g_data_input_stream_read_upto"
fun fun_c2ats_g_data_input_stream_read_upto_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_gssize, type_c2ats_gint, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_data_input_stream_read_upto_async"
fun fun_c2ats_g_data_input_stream_read_upto_finish: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GDataInputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(char, l5) | ptr l5) = "mac#g_data_input_stream_read_upto_finish"
// File: /usr/include/glib-2.0/gio/gdataoutputstream.h
abst@ype struct_c2ats__GDataOutputStream // FIXME! Forward declaration.
typedef type_c2ats_GDataOutputStream = struct_c2ats__GDataOutputStream
abst@ype struct_c2ats__GDataOutputStreamClass // FIXME! Forward declaration.
typedef type_c2ats_GDataOutputStreamClass = struct_c2ats__GDataOutputStreamClass
abst@ype struct_c2ats__GDataOutputStreamPrivate // FIXME! Forward declaration.
typedef type_c2ats_GDataOutputStreamPrivate = struct_c2ats__GDataOutputStreamPrivate
typedef struct_c2ats__GDataOutputStream = $extype_struct"struct _GDataOutputStream" of {
  parent_instance = type_c2ats_GFilterOutputStream,
  priv = ptr (* cPtr0(type_c2ats_GDataOutputStreamPrivate) *)
}
typedef struct_c2ats__GDataOutputStreamClass = $extype_struct"struct _GDataOutputStreamClass" of {
  parent_class = type_c2ats_GFilterOutputStreamClass,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void
}
fun fun_c2ats_g_data_output_stream_get_type: () -> type_c2ats_GType = "mac#g_data_output_stream_get_type"
fun fun_c2ats_g_data_output_stream_new: {l1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDataOutputStream, l2) | ptr l2) = "mac#g_data_output_stream_new"
fun fun_c2ats_g_data_output_stream_set_byte_order: {l1:addr} (!ptr_v_1(type_c2ats_GDataOutputStream, l1) | ptr l1, type_c2ats_GDataStreamByteOrder) -> void = "mac#g_data_output_stream_set_byte_order"
fun fun_c2ats_g_data_output_stream_get_byte_order: {l1:addr} (!ptr_v_1(type_c2ats_GDataOutputStream, l1) | ptr l1) -> type_c2ats_GDataStreamByteOrder = "mac#g_data_output_stream_get_byte_order"
fun fun_c2ats_g_data_output_stream_put_byte: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDataOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_guchar, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_data_output_stream_put_byte"
fun fun_c2ats_g_data_output_stream_put_int16: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDataOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_gint16, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_data_output_stream_put_int16"
fun fun_c2ats_g_data_output_stream_put_uint16: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDataOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_guint16, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_data_output_stream_put_uint16"
fun fun_c2ats_g_data_output_stream_put_int32: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDataOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_gint32, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_data_output_stream_put_int32"
fun fun_c2ats_g_data_output_stream_put_uint32: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDataOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_guint32, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_data_output_stream_put_uint32"
fun fun_c2ats_g_data_output_stream_put_int64: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDataOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_gint64, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_data_output_stream_put_int64"
fun fun_c2ats_g_data_output_stream_put_uint64: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDataOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_guint64, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_data_output_stream_put_uint64"
fun fun_c2ats_g_data_output_stream_put_string: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GDataOutputStream, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_data_output_stream_put_string"
// File: /usr/include/glib-2.0/gio/gdbusaddress.h
fun fun_c2ats_g_dbus_address_escape_value: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_address_escape_value"
fun fun_c2ats_g_dbus_is_address: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_dbus_is_address"
fun fun_c2ats_g_dbus_is_supported_address: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_dbus_is_supported_address"
fun fun_c2ats_g_dbus_address_get_stream: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_dbus_address_get_stream"
fun fun_c2ats_g_dbus_address_get_stream_finish: {l1,l2,l2_1,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GIOStream, l4) | ptr l4) = "mac#g_dbus_address_get_stream_finish"
fun fun_c2ats_g_dbus_address_get_stream_sync: {l1,l2,l2_1,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GIOStream, l5) | ptr l5) = "mac#g_dbus_address_get_stream_sync"
fun fun_c2ats_g_dbus_address_get_for_bus_sync: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GCancellable, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | type_c2ats_GBusType, ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_dbus_address_get_for_bus_sync"
// File: /usr/include/glib-2.0/gio/gdbusauthobserver.h
fun fun_c2ats_g_dbus_auth_observer_get_type: () -> type_c2ats_GType = "mac#g_dbus_auth_observer_get_type"
fun fun_c2ats_g_dbus_auth_observer_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GDBusAuthObserver, l1) | ptr l1) = "mac#g_dbus_auth_observer_new"
fun fun_c2ats_g_dbus_auth_observer_authorize_authenticated_peer: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDBusAuthObserver, l1), !ptr_v_1(type_c2ats_GIOStream, l2), !ptr_v_1(type_c2ats_GCredentials, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_dbus_auth_observer_authorize_authenticated_peer"
fun fun_c2ats_g_dbus_auth_observer_allow_mechanism: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusAuthObserver, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_dbus_auth_observer_allow_mechanism"
// File: /usr/include/glib-2.0/gio/gdbusconnection.h
fun fun_c2ats_g_dbus_connection_get_type: () -> type_c2ats_GType = "mac#g_dbus_connection_get_type"
fun fun_c2ats_g_bus_get: {l1:addr} (!ptr_v_1(type_c2ats_GCancellable, l1) | type_c2ats_GBusType, ptr l1, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_bus_get"
fun fun_c2ats_g_bus_get_finish: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusConnection, l3) | ptr l3) = "mac#g_bus_get_finish"
fun fun_c2ats_g_bus_get_sync: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GCancellable, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | type_c2ats_GBusType, ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusConnection, l3) | ptr l3) = "mac#g_bus_get_sync"
fun fun_c2ats_g_dbus_connection_new: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GIOStream, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GDBusAuthObserver, l3), !ptr_v_1(type_c2ats_GCancellable, l4) | ptr l1, ptr l2, type_c2ats_GDBusConnectionFlags, ptr l3, ptr l4, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_dbus_connection_new"
fun fun_c2ats_g_dbus_connection_new_finish: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusConnection, l3) | ptr l3) = "mac#g_dbus_connection_new_finish"
fun fun_c2ats_g_dbus_connection_new_sync: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GIOStream, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GDBusAuthObserver, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, type_c2ats_GDBusConnectionFlags, ptr l3, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GDBusConnection, l6) | ptr l6) = "mac#g_dbus_connection_new_sync"
fun fun_c2ats_g_dbus_connection_new_for_address: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GDBusAuthObserver, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GDBusConnectionFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_dbus_connection_new_for_address"
fun fun_c2ats_g_dbus_connection_new_for_address_finish: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusConnection, l3) | ptr l3) = "mac#g_dbus_connection_new_for_address_finish"
fun fun_c2ats_g_dbus_connection_new_for_address_sync: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GDBusAuthObserver, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, type_c2ats_GDBusConnectionFlags, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GDBusConnection, l5) | ptr l5) = "mac#g_dbus_connection_new_for_address_sync"
fun fun_c2ats_g_dbus_connection_start_message_processing: {l1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1) | ptr l1) -> void = "mac#g_dbus_connection_start_message_processing"
fun fun_c2ats_g_dbus_connection_is_closed: {l1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_dbus_connection_is_closed"
fun fun_c2ats_g_dbus_connection_get_stream: {l1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIOStream, l2) | ptr l2) = "mac#g_dbus_connection_get_stream"
fun fun_c2ats_g_dbus_connection_get_guid: {l1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_connection_get_guid"
fun fun_c2ats_g_dbus_connection_get_unique_name: {l1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_connection_get_unique_name"
fun fun_c2ats_g_dbus_connection_get_peer_credentials: {l1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GCredentials, l2) | ptr l2) = "mac#g_dbus_connection_get_peer_credentials"
fun fun_c2ats_g_dbus_connection_get_last_serial: {l1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1) | ptr l1) -> type_c2ats_guint32 = "mac#g_dbus_connection_get_last_serial"
fun fun_c2ats_g_dbus_connection_get_exit_on_close: {l1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_dbus_connection_get_exit_on_close"
fun fun_c2ats_g_dbus_connection_set_exit_on_close: {l1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_dbus_connection_set_exit_on_close"
fun fun_c2ats_g_dbus_connection_get_capabilities: {l1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1) | ptr l1) -> type_c2ats_GDBusCapabilityFlags = "mac#g_dbus_connection_get_capabilities"
fun fun_c2ats_g_dbus_connection_close: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_dbus_connection_close"
fun fun_c2ats_g_dbus_connection_close_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_dbus_connection_close_finish"
fun fun_c2ats_g_dbus_connection_close_sync: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_dbus_connection_close_sync"
fun fun_c2ats_g_dbus_connection_flush: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_dbus_connection_flush"
fun fun_c2ats_g_dbus_connection_flush_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_dbus_connection_flush_finish"
fun fun_c2ats_g_dbus_connection_flush_sync: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_dbus_connection_flush_sync"
fun fun_c2ats_g_dbus_connection_send_message: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_GDBusMessage, l2), !ptr_v_1(type_c2ats_guint32, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GDBusSendMessageFlags, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_dbus_connection_send_message"
fun fun_c2ats_g_dbus_connection_send_message_with_reply: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_GDBusMessage, l2), !ptr_v_1(type_c2ats_guint32, l3), !ptr_v_1(type_c2ats_GCancellable, l4) | ptr l1, ptr l2, type_c2ats_GDBusSendMessageFlags, type_c2ats_gint, ptr l3, ptr l4, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_dbus_connection_send_message_with_reply"
fun fun_c2ats_g_dbus_connection_send_message_with_reply_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GDBusMessage, l4) | ptr l4) = "mac#g_dbus_connection_send_message_with_reply_finish"
fun fun_c2ats_g_dbus_connection_send_message_with_reply_sync: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_GDBusMessage, l2), !ptr_v_1(type_c2ats_guint32, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, type_c2ats_GDBusSendMessageFlags, type_c2ats_gint, ptr l3, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GDBusMessage, l6) | ptr l6) = "mac#g_dbus_connection_send_message_with_reply_sync"
fun fun_c2ats_g_dbus_connection_emit_signal: {l1,l2,l3,l4,l5,l6,l7,l7_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gchar, l5), !ptr_v_1(type_c2ats_GVariant, l6), !ptr_v_2(type_c2ats_GError, l7, l7_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7) -> type_c2ats_gboolean = "mac#g_dbus_connection_emit_signal"
fun fun_c2ats_g_dbus_connection_call: {l1,l2,l3,l4,l5,l6,l7,l8:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gchar, l5), !ptr_v_1(type_c2ats_GVariant, l6), !ptr_v_1(type_c2ats_GVariantType, l7), !ptr_v_1(type_c2ats_GCancellable, l8) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7, type_c2ats_GDBusCallFlags, type_c2ats_gint, ptr l8, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_dbus_connection_call"
fun fun_c2ats_g_dbus_connection_call_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GVariant, l4) | ptr l4) = "mac#g_dbus_connection_call_finish"
fun fun_c2ats_g_dbus_connection_call_sync: {l1,l2,l3,l4,l5,l6,l7,l8,l9,l9_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gchar, l5), !ptr_v_1(type_c2ats_GVariant, l6), !ptr_v_1(type_c2ats_GVariantType, l7), !ptr_v_1(type_c2ats_GCancellable, l8), !ptr_v_2(type_c2ats_GError, l9, l9_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7, type_c2ats_GDBusCallFlags, type_c2ats_gint, ptr l8, ptr l9) -> [l10:addr] (ptr_v_1(type_c2ats_GVariant, l10) | ptr l10) = "mac#g_dbus_connection_call_sync"
fun fun_c2ats_g_dbus_connection_call_with_unix_fd_list: {l1,l2,l3,l4,l5,l6,l7,l8,l9:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gchar, l5), !ptr_v_1(type_c2ats_GVariant, l6), !ptr_v_1(type_c2ats_GVariantType, l7), !ptr_v_1(type_c2ats_GUnixFDList, l8), !ptr_v_1(type_c2ats_GCancellable, l9) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7, type_c2ats_GDBusCallFlags, type_c2ats_gint, ptr l8, ptr l9, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_dbus_connection_call_with_unix_fd_list"
fun fun_c2ats_g_dbus_connection_call_with_unix_fd_list_finish: {l1,l2,l2_1,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_2(type_c2ats_GUnixFDList, l2, l2_1), !ptr_v_1(type_c2ats_GAsyncResult, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GVariant, l5) | ptr l5) = "mac#g_dbus_connection_call_with_unix_fd_list_finish"
fun fun_c2ats_g_dbus_connection_call_with_unix_fd_list_sync: {l1,l2,l3,l4,l5,l6,l7,l8,l9,l9_1,l10,l11,l11_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gchar, l5), !ptr_v_1(type_c2ats_GVariant, l6), !ptr_v_1(type_c2ats_GVariantType, l7), !ptr_v_1(type_c2ats_GUnixFDList, l8), !ptr_v_2(type_c2ats_GUnixFDList, l9, l9_1), !ptr_v_1(type_c2ats_GCancellable, l10), !ptr_v_2(type_c2ats_GError, l11, l11_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7, type_c2ats_GDBusCallFlags, type_c2ats_gint, ptr l8, ptr l9, ptr l10, ptr l11) -> [l12:addr] (ptr_v_1(type_c2ats_GVariant, l12) | ptr l12) = "mac#g_dbus_connection_call_with_unix_fd_list_sync"
typedef type_c2ats_GDBusInterfaceMethodCallFunc = {l1,l2,l3,l4,l5,l6,l7:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gchar, l5), !ptr_v_1(type_c2ats_GVariant, l6), !ptr_v_1(type_c2ats_GDBusMethodInvocation, l7) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7, type_c2ats_gpointer) -> void
typedef type_c2ats_GDBusInterfaceGetPropertyFunc = {l1,l2,l3,l4,l5,l6,l6_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gchar, l5), !ptr_v_2(type_c2ats_GError, l6, l6_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, type_c2ats_gpointer) -> [l7:addr] (ptr_v_1(type_c2ats_GVariant, l7) | ptr l7)
typedef type_c2ats_GDBusInterfaceSetPropertyFunc = {l1,l2,l3,l4,l5,l6,l7,l7_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gchar, l5), !ptr_v_1(type_c2ats_GVariant, l6), !ptr_v_2(type_c2ats_GError, l7, l7_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef struct_c2ats__GDBusInterfaceVTable = $extype_struct"struct _GDBusInterfaceVTable" of {
  method_call = type_c2ats_GDBusInterfaceMethodCallFunc,
  get_property = type_c2ats_GDBusInterfaceGetPropertyFunc,
  set_property = type_c2ats_GDBusInterfaceSetPropertyFunc,
  padding = @[type_c2ats_gpointer][8]
}
fun fun_c2ats_g_dbus_connection_register_object: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GDBusInterfaceInfo, l3), !ptr_v_1(type_c2ats_GDBusInterfaceVTable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gpointer, type_c2ats_GDestroyNotify, ptr l5) -> type_c2ats_guint = "mac#g_dbus_connection_register_object"
fun fun_c2ats_g_dbus_connection_register_object_with_closures: {l1,l2,l3,l4,l5,l6,l7,l7_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GDBusInterfaceInfo, l3), !ptr_v_1(type_c2ats_GClosure, l4), !ptr_v_1(type_c2ats_GClosure, l5), !ptr_v_1(type_c2ats_GClosure, l6), !ptr_v_2(type_c2ats_GError, l7, l7_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7) -> type_c2ats_guint = "mac#g_dbus_connection_register_object_with_closures"
fun fun_c2ats_g_dbus_connection_unregister_object: {l1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_gboolean = "mac#g_dbus_connection_unregister_object"
typedef type_c2ats_GDBusSubtreeEnumerateFunc = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gpointer) -> [l4,l4_1:addr] (ptr_v_2(type_c2ats_gchar, l4, l4_1) | ptr l4)
typedef type_c2ats_GDBusSubtreeIntrospectFunc = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gpointer) -> [l5,l5_1:addr] (ptr_v_2(type_c2ats_GDBusInterfaceInfo, l5, l5_1) | ptr l5)
typedef type_c2ats_GDBusSubtreeDispatchFunc = {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gchar, l5), !ptr_v_1(type_c2ats_gpointer, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, type_c2ats_gpointer) -> [l7:addr] (ptr_v_1(type_c2ats_GDBusInterfaceVTable, l7) | ptr l7)
typedef struct_c2ats__GDBusSubtreeVTable = $extype_struct"struct _GDBusSubtreeVTable" of {
  enumerate = type_c2ats_GDBusSubtreeEnumerateFunc,
  introspect = type_c2ats_GDBusSubtreeIntrospectFunc,
  dispatch = type_c2ats_GDBusSubtreeDispatchFunc,
  padding = @[type_c2ats_gpointer][8]
}
fun fun_c2ats_g_dbus_connection_register_subtree: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GDBusSubtreeVTable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, type_c2ats_GDBusSubtreeFlags, type_c2ats_gpointer, type_c2ats_GDestroyNotify, ptr l4) -> type_c2ats_guint = "mac#g_dbus_connection_register_subtree"
fun fun_c2ats_g_dbus_connection_unregister_subtree: {l1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_gboolean = "mac#g_dbus_connection_unregister_subtree"
typedef type_c2ats_GDBusSignalCallback = {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gchar, l5), !ptr_v_1(type_c2ats_GVariant, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, type_c2ats_gpointer) -> void
fun fun_c2ats_g_dbus_connection_signal_subscribe: {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gchar, l5), !ptr_v_1(type_c2ats_gchar, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, type_c2ats_GDBusSignalFlags, type_c2ats_GDBusSignalCallback, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_guint = "mac#g_dbus_connection_signal_subscribe"
fun fun_c2ats_g_dbus_connection_signal_unsubscribe: {l1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_dbus_connection_signal_unsubscribe"
typedef type_c2ats_GDBusMessageFilterFunction = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_GDBusMessage, l2) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_gpointer) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusMessage, l3) | ptr l3)
fun fun_c2ats_g_dbus_connection_add_filter: {l1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1) | ptr l1, type_c2ats_GDBusMessageFilterFunction, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_guint = "mac#g_dbus_connection_add_filter"
fun fun_c2ats_g_dbus_connection_remove_filter: {l1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_dbus_connection_remove_filter"
// File: /usr/include/glib-2.0/gio/gdbuserror.h
fun fun_c2ats_g_dbus_error_quark: () -> type_c2ats_GQuark = "mac#g_dbus_error_quark"
fun fun_c2ats_g_dbus_error_is_remote_error: {l1:addr} (!ptr_v_1(type_c2ats_GError, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_dbus_error_is_remote_error"
fun fun_c2ats_g_dbus_error_get_remote_error: {l1:addr} (!ptr_v_1(type_c2ats_GError, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_error_get_remote_error"
fun fun_c2ats_g_dbus_error_strip_remote_error: {l1:addr} (!ptr_v_1(type_c2ats_GError, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_dbus_error_strip_remote_error"
typedef struct_c2ats__GDBusErrorEntry = $extype_struct"struct _GDBusErrorEntry" of {
  error_code = type_c2ats_gint,
  dbus_error_name = ptr (* cPtr0(type_c2ats_gchar) *)
}
fun fun_c2ats_g_dbus_error_register_error: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_GQuark, type_c2ats_gint, ptr l1) -> type_c2ats_gboolean = "mac#g_dbus_error_register_error"
fun fun_c2ats_g_dbus_error_unregister_error: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_GQuark, type_c2ats_gint, ptr l1) -> type_c2ats_gboolean = "mac#g_dbus_error_unregister_error"
fun fun_c2ats_g_dbus_error_register_error_domain: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_1(type_c2ats_GDBusErrorEntry, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_guint) -> void = "mac#g_dbus_error_register_error_domain"
fun fun_c2ats_g_dbus_error_new_for_dbus_error: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GError, l3) | ptr l3) = "mac#g_dbus_error_new_for_dbus_error"
fun fun_c2ats_g_dbus_error_set_dbus_error: {l1,l1_1,l2,l3,l4:addr} (!ptr_v_2(type_c2ats_GError, l1, l1_1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#g_dbus_error_set_dbus_error"
fun fun_c2ats_g_dbus_error_set_dbus_error_valist: {l1,l1_1,l2,l3,l4:addr} (!ptr_v_2(type_c2ats_GError, l1, l1_1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_va_list) -> void = "mac#g_dbus_error_set_dbus_error_valist"
fun fun_c2ats_g_dbus_error_encode_gerror: {l1:addr} (!ptr_v_1(type_c2ats_GError, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_error_encode_gerror"
// File: /usr/include/glib-2.0/gio/gdbusintrospection.h
typedef struct_c2ats__GDBusAnnotationInfo = $extype_struct"struct _GDBusAnnotationInfo" of {
  ref_count = type_c2ats_gint,
  key = ptr (* cPtr0(type_c2ats_gchar) *),
  value = ptr (* cPtr0(type_c2ats_gchar) *),
  annotations = ptr (* cPtr0(cPtr0(type_c2ats_GDBusAnnotationInfo)) *)
}
typedef struct_c2ats__GDBusArgInfo = $extype_struct"struct _GDBusArgInfo" of {
  ref_count = type_c2ats_gint,
  name = ptr (* cPtr0(type_c2ats_gchar) *),
  signature = ptr (* cPtr0(type_c2ats_gchar) *),
  annotations = ptr (* cPtr0(cPtr0(type_c2ats_GDBusAnnotationInfo)) *)
}
typedef struct_c2ats__GDBusMethodInfo = $extype_struct"struct _GDBusMethodInfo" of {
  ref_count = type_c2ats_gint,
  name = ptr (* cPtr0(type_c2ats_gchar) *),
  in_args = ptr (* cPtr0(cPtr0(type_c2ats_GDBusArgInfo)) *),
  out_args = ptr (* cPtr0(cPtr0(type_c2ats_GDBusArgInfo)) *),
  annotations = ptr (* cPtr0(cPtr0(type_c2ats_GDBusAnnotationInfo)) *)
}
typedef struct_c2ats__GDBusSignalInfo = $extype_struct"struct _GDBusSignalInfo" of {
  ref_count = type_c2ats_gint,
  name = ptr (* cPtr0(type_c2ats_gchar) *),
  args = ptr (* cPtr0(cPtr0(type_c2ats_GDBusArgInfo)) *),
  annotations = ptr (* cPtr0(cPtr0(type_c2ats_GDBusAnnotationInfo)) *)
}
typedef struct_c2ats__GDBusPropertyInfo = $extype_struct"struct _GDBusPropertyInfo" of {
  ref_count = type_c2ats_gint,
  name = ptr (* cPtr0(type_c2ats_gchar) *),
  signature = ptr (* cPtr0(type_c2ats_gchar) *),
  flags = type_c2ats_GDBusPropertyInfoFlags,
  annotations = ptr (* cPtr0(cPtr0(type_c2ats_GDBusAnnotationInfo)) *)
}
typedef struct_c2ats__GDBusInterfaceInfo = $extype_struct"struct _GDBusInterfaceInfo" of {
  ref_count = type_c2ats_gint,
  name = ptr (* cPtr0(type_c2ats_gchar) *),
  methods = ptr (* cPtr0(cPtr0(type_c2ats_GDBusMethodInfo)) *),
  signals = ptr (* cPtr0(cPtr0(type_c2ats_GDBusSignalInfo)) *),
  properties = ptr (* cPtr0(cPtr0(type_c2ats_GDBusPropertyInfo)) *),
  annotations = ptr (* cPtr0(cPtr0(type_c2ats_GDBusAnnotationInfo)) *)
}
typedef struct_c2ats__GDBusNodeInfo = $extype_struct"struct _GDBusNodeInfo" of {
  ref_count = type_c2ats_gint,
  path = ptr (* cPtr0(type_c2ats_gchar) *),
  interfaces = ptr (* cPtr0(cPtr0(type_c2ats_GDBusInterfaceInfo)) *),
  nodes = ptr (* cPtr0(cPtr0(type_c2ats_GDBusNodeInfo)) *),
  annotations = ptr (* cPtr0(cPtr0(type_c2ats_GDBusAnnotationInfo)) *)
}
fun fun_c2ats_g_dbus_annotation_info_lookup: {l1,l1_1,l2:addr} (!ptr_v_2(type_c2ats_GDBusAnnotationInfo, l1, l1_1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_dbus_annotation_info_lookup"
fun fun_c2ats_g_dbus_interface_info_lookup_method: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceInfo, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusMethodInfo, l3) | ptr l3) = "mac#g_dbus_interface_info_lookup_method"
fun fun_c2ats_g_dbus_interface_info_lookup_signal: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceInfo, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusSignalInfo, l3) | ptr l3) = "mac#g_dbus_interface_info_lookup_signal"
fun fun_c2ats_g_dbus_interface_info_lookup_property: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceInfo, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusPropertyInfo, l3) | ptr l3) = "mac#g_dbus_interface_info_lookup_property"
fun fun_c2ats_g_dbus_interface_info_cache_build: {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceInfo, l1) | ptr l1) -> void = "mac#g_dbus_interface_info_cache_build"
fun fun_c2ats_g_dbus_interface_info_cache_release: {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceInfo, l1) | ptr l1) -> void = "mac#g_dbus_interface_info_cache_release"
fun fun_c2ats_g_dbus_interface_info_generate_xml: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceInfo, l1), !ptr_v_1(type_c2ats_GString, l2) | ptr l1, type_c2ats_guint, ptr l2) -> void = "mac#g_dbus_interface_info_generate_xml"
fun fun_c2ats_g_dbus_node_info_new_for_xml: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusNodeInfo, l3) | ptr l3) = "mac#g_dbus_node_info_new_for_xml"
fun fun_c2ats_g_dbus_node_info_lookup_interface: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusNodeInfo, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusInterfaceInfo, l3) | ptr l3) = "mac#g_dbus_node_info_lookup_interface"
fun fun_c2ats_g_dbus_node_info_generate_xml: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusNodeInfo, l1), !ptr_v_1(type_c2ats_GString, l2) | ptr l1, type_c2ats_guint, ptr l2) -> void = "mac#g_dbus_node_info_generate_xml"
fun fun_c2ats_g_dbus_node_info_ref: {l1:addr} (!ptr_v_1(type_c2ats_GDBusNodeInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusNodeInfo, l2) | ptr l2) = "mac#g_dbus_node_info_ref"
fun fun_c2ats_g_dbus_interface_info_ref: {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusInterfaceInfo, l2) | ptr l2) = "mac#g_dbus_interface_info_ref"
fun fun_c2ats_g_dbus_method_info_ref: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMethodInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusMethodInfo, l2) | ptr l2) = "mac#g_dbus_method_info_ref"
fun fun_c2ats_g_dbus_signal_info_ref: {l1:addr} (!ptr_v_1(type_c2ats_GDBusSignalInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusSignalInfo, l2) | ptr l2) = "mac#g_dbus_signal_info_ref"
fun fun_c2ats_g_dbus_property_info_ref: {l1:addr} (!ptr_v_1(type_c2ats_GDBusPropertyInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusPropertyInfo, l2) | ptr l2) = "mac#g_dbus_property_info_ref"
fun fun_c2ats_g_dbus_arg_info_ref: {l1:addr} (!ptr_v_1(type_c2ats_GDBusArgInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusArgInfo, l2) | ptr l2) = "mac#g_dbus_arg_info_ref"
fun fun_c2ats_g_dbus_annotation_info_ref: {l1:addr} (!ptr_v_1(type_c2ats_GDBusAnnotationInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusAnnotationInfo, l2) | ptr l2) = "mac#g_dbus_annotation_info_ref"
fun fun_c2ats_g_dbus_node_info_unref: {l1:addr} (!ptr_v_1(type_c2ats_GDBusNodeInfo, l1) | ptr l1) -> void = "mac#g_dbus_node_info_unref"
fun fun_c2ats_g_dbus_interface_info_unref: {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceInfo, l1) | ptr l1) -> void = "mac#g_dbus_interface_info_unref"
fun fun_c2ats_g_dbus_method_info_unref: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMethodInfo, l1) | ptr l1) -> void = "mac#g_dbus_method_info_unref"
fun fun_c2ats_g_dbus_signal_info_unref: {l1:addr} (!ptr_v_1(type_c2ats_GDBusSignalInfo, l1) | ptr l1) -> void = "mac#g_dbus_signal_info_unref"
fun fun_c2ats_g_dbus_property_info_unref: {l1:addr} (!ptr_v_1(type_c2ats_GDBusPropertyInfo, l1) | ptr l1) -> void = "mac#g_dbus_property_info_unref"
fun fun_c2ats_g_dbus_arg_info_unref: {l1:addr} (!ptr_v_1(type_c2ats_GDBusArgInfo, l1) | ptr l1) -> void = "mac#g_dbus_arg_info_unref"
fun fun_c2ats_g_dbus_annotation_info_unref: {l1:addr} (!ptr_v_1(type_c2ats_GDBusAnnotationInfo, l1) | ptr l1) -> void = "mac#g_dbus_annotation_info_unref"
fun fun_c2ats_g_dbus_node_info_get_type: () -> type_c2ats_GType = "mac#g_dbus_node_info_get_type"
fun fun_c2ats_g_dbus_interface_info_get_type: () -> type_c2ats_GType = "mac#g_dbus_interface_info_get_type"
fun fun_c2ats_g_dbus_method_info_get_type: () -> type_c2ats_GType = "mac#g_dbus_method_info_get_type"
fun fun_c2ats_g_dbus_signal_info_get_type: () -> type_c2ats_GType = "mac#g_dbus_signal_info_get_type"
fun fun_c2ats_g_dbus_property_info_get_type: () -> type_c2ats_GType = "mac#g_dbus_property_info_get_type"
fun fun_c2ats_g_dbus_arg_info_get_type: () -> type_c2ats_GType = "mac#g_dbus_arg_info_get_type"
fun fun_c2ats_g_dbus_annotation_info_get_type: () -> type_c2ats_GType = "mac#g_dbus_annotation_info_get_type"
// File: /usr/include/glib-2.0/gio/gdbusmessage.h
fun fun_c2ats_g_dbus_message_get_type: () -> type_c2ats_GType = "mac#g_dbus_message_get_type"
fun fun_c2ats_g_dbus_message_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) = "mac#g_dbus_message_new"
fun fun_c2ats_g_dbus_message_new_signal: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GDBusMessage, l4) | ptr l4) = "mac#g_dbus_message_new_signal"
fun fun_c2ats_g_dbus_message_new_method_call: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GDBusMessage, l5) | ptr l5) = "mac#g_dbus_message_new_method_call"
fun fun_c2ats_g_dbus_message_new_method_reply: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusMessage, l2) | ptr l2) = "mac#g_dbus_message_new_method_reply"
fun fun_c2ats_g_dbus_message_new_method_error: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GDBusMessage, l4) | ptr l4) = "mac#g_dbus_message_new_method_error"
fun fun_c2ats_g_dbus_message_new_method_error_valist: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_va_list) -> [l4:addr] (ptr_v_1(type_c2ats_GDBusMessage, l4) | ptr l4) = "mac#g_dbus_message_new_method_error_valist"
fun fun_c2ats_g_dbus_message_new_method_error_literal: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GDBusMessage, l4) | ptr l4) = "mac#g_dbus_message_new_method_error_literal"
fun fun_c2ats_g_dbus_message_print: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_message_print"
fun fun_c2ats_g_dbus_message_get_locked: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_dbus_message_get_locked"
fun fun_c2ats_g_dbus_message_lock: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> void = "mac#g_dbus_message_lock"
fun fun_c2ats_g_dbus_message_copy: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusMessage, l3) | ptr l3) = "mac#g_dbus_message_copy"
fun fun_c2ats_g_dbus_message_get_byte_order: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> type_c2ats_GDBusMessageByteOrder = "mac#g_dbus_message_get_byte_order"
fun fun_c2ats_g_dbus_message_set_byte_order: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1, type_c2ats_GDBusMessageByteOrder) -> void = "mac#g_dbus_message_set_byte_order"
fun fun_c2ats_g_dbus_message_get_message_type: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> type_c2ats_GDBusMessageType = "mac#g_dbus_message_get_message_type"
fun fun_c2ats_g_dbus_message_set_message_type: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1, type_c2ats_GDBusMessageType) -> void = "mac#g_dbus_message_set_message_type"
fun fun_c2ats_g_dbus_message_get_flags: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> type_c2ats_GDBusMessageFlags = "mac#g_dbus_message_get_flags"
fun fun_c2ats_g_dbus_message_set_flags: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1, type_c2ats_GDBusMessageFlags) -> void = "mac#g_dbus_message_set_flags"
fun fun_c2ats_g_dbus_message_get_serial: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> type_c2ats_guint32 = "mac#g_dbus_message_get_serial"
fun fun_c2ats_g_dbus_message_set_serial: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1, type_c2ats_guint32) -> void = "mac#g_dbus_message_set_serial"
fun fun_c2ats_g_dbus_message_get_header: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1, type_c2ats_GDBusMessageHeaderField) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_dbus_message_get_header"
fun fun_c2ats_g_dbus_message_set_header: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, type_c2ats_GDBusMessageHeaderField, ptr l2) -> void = "mac#g_dbus_message_set_header"
fun fun_c2ats_g_dbus_message_get_header_fields: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_guchar, l2) | ptr l2) = "mac#g_dbus_message_get_header_fields"
fun fun_c2ats_g_dbus_message_get_body: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_dbus_message_get_body"
fun fun_c2ats_g_dbus_message_set_body: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_message_set_body"
fun fun_c2ats_g_dbus_message_get_unix_fd_list: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GUnixFDList, l2) | ptr l2) = "mac#g_dbus_message_get_unix_fd_list"
fun fun_c2ats_g_dbus_message_set_unix_fd_list: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1), !ptr_v_1(type_c2ats_GUnixFDList, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_message_set_unix_fd_list"
fun fun_c2ats_g_dbus_message_get_reply_serial: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> type_c2ats_guint32 = "mac#g_dbus_message_get_reply_serial"
fun fun_c2ats_g_dbus_message_set_reply_serial: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1, type_c2ats_guint32) -> void = "mac#g_dbus_message_set_reply_serial"
fun fun_c2ats_g_dbus_message_get_interface: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_message_get_interface"
fun fun_c2ats_g_dbus_message_set_interface: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_message_set_interface"
fun fun_c2ats_g_dbus_message_get_member: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_message_get_member"
fun fun_c2ats_g_dbus_message_set_member: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_message_set_member"
fun fun_c2ats_g_dbus_message_get_path: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_message_get_path"
fun fun_c2ats_g_dbus_message_set_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_message_set_path"
fun fun_c2ats_g_dbus_message_get_sender: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_message_get_sender"
fun fun_c2ats_g_dbus_message_set_sender: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_message_set_sender"
fun fun_c2ats_g_dbus_message_get_destination: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_message_get_destination"
fun fun_c2ats_g_dbus_message_set_destination: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_message_set_destination"
fun fun_c2ats_g_dbus_message_get_error_name: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_message_get_error_name"
fun fun_c2ats_g_dbus_message_set_error_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_message_set_error_name"
fun fun_c2ats_g_dbus_message_get_signature: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_message_get_signature"
fun fun_c2ats_g_dbus_message_set_signature: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_message_set_signature"
fun fun_c2ats_g_dbus_message_get_num_unix_fds: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> type_c2ats_guint32 = "mac#g_dbus_message_get_num_unix_fds"
fun fun_c2ats_g_dbus_message_set_num_unix_fds: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1, type_c2ats_guint32) -> void = "mac#g_dbus_message_set_num_unix_fds"
fun fun_c2ats_g_dbus_message_get_arg0: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_message_get_arg0"
fun fun_c2ats_g_dbus_message_new_from_blob: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_guchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_gsize, type_c2ats_GDBusCapabilityFlags, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusMessage, l3) | ptr l3) = "mac#g_dbus_message_new_from_blob"
fun fun_c2ats_g_dbus_message_bytes_needed: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_guchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_gsize, ptr l2) -> type_c2ats_gssize = "mac#g_dbus_message_bytes_needed"
fun fun_c2ats_g_dbus_message_to_blob: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_GDBusCapabilityFlags, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_guchar, l4) | ptr l4) = "mac#g_dbus_message_to_blob"
fun fun_c2ats_g_dbus_message_to_gerror: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GDBusMessage, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_dbus_message_to_gerror"
// File: /usr/include/glib-2.0/gio/gdbusmethodinvocation.h
fun fun_c2ats_g_dbus_method_invocation_get_type: () -> type_c2ats_GType = "mac#g_dbus_method_invocation_get_type"
fun fun_c2ats_g_dbus_method_invocation_get_sender: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMethodInvocation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_method_invocation_get_sender"
fun fun_c2ats_g_dbus_method_invocation_get_object_path: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMethodInvocation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_method_invocation_get_object_path"
fun fun_c2ats_g_dbus_method_invocation_get_interface_name: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMethodInvocation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_method_invocation_get_interface_name"
fun fun_c2ats_g_dbus_method_invocation_get_method_name: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMethodInvocation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_method_invocation_get_method_name"
fun fun_c2ats_g_dbus_method_invocation_get_method_info: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMethodInvocation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusMethodInfo, l2) | ptr l2) = "mac#g_dbus_method_invocation_get_method_info"
fun fun_c2ats_g_dbus_method_invocation_get_property_info: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMethodInvocation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusPropertyInfo, l2) | ptr l2) = "mac#g_dbus_method_invocation_get_property_info"
fun fun_c2ats_g_dbus_method_invocation_get_connection: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMethodInvocation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusConnection, l2) | ptr l2) = "mac#g_dbus_method_invocation_get_connection"
fun fun_c2ats_g_dbus_method_invocation_get_message: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMethodInvocation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusMessage, l2) | ptr l2) = "mac#g_dbus_method_invocation_get_message"
fun fun_c2ats_g_dbus_method_invocation_get_parameters: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMethodInvocation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_dbus_method_invocation_get_parameters"
fun fun_c2ats_g_dbus_method_invocation_get_user_data: {l1:addr} (!ptr_v_1(type_c2ats_GDBusMethodInvocation, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_dbus_method_invocation_get_user_data"
fun fun_c2ats_g_dbus_method_invocation_return_value: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusMethodInvocation, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_method_invocation_return_value"
fun fun_c2ats_g_dbus_method_invocation_return_value_with_unix_fd_list: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDBusMethodInvocation, l1), !ptr_v_1(type_c2ats_GVariant, l2), !ptr_v_1(type_c2ats_GUnixFDList, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_dbus_method_invocation_return_value_with_unix_fd_list"
fun fun_c2ats_g_dbus_method_invocation_return_error: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusMethodInvocation, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GQuark, type_c2ats_gint, ptr l2) -> void = "mac#g_dbus_method_invocation_return_error"
fun fun_c2ats_g_dbus_method_invocation_return_error_valist: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusMethodInvocation, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GQuark, type_c2ats_gint, ptr l2, type_c2ats_va_list) -> void = "mac#g_dbus_method_invocation_return_error_valist"
fun fun_c2ats_g_dbus_method_invocation_return_error_literal: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusMethodInvocation, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GQuark, type_c2ats_gint, ptr l2) -> void = "mac#g_dbus_method_invocation_return_error_literal"
fun fun_c2ats_g_dbus_method_invocation_return_gerror: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusMethodInvocation, l1), !ptr_v_1(type_c2ats_GError, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_method_invocation_return_gerror"
fun fun_c2ats_g_dbus_method_invocation_take_error: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusMethodInvocation, l1), !ptr_v_1(type_c2ats_GError, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_method_invocation_take_error"
fun fun_c2ats_g_dbus_method_invocation_return_dbus_error: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDBusMethodInvocation, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_dbus_method_invocation_return_dbus_error"
// File: /usr/include/glib-2.0/gio/gdbusnameowning.h
typedef type_c2ats_GBusAcquiredCallback = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void
typedef type_c2ats_GBusNameAcquiredCallback = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void
typedef type_c2ats_GBusNameLostCallback = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void
fun fun_c2ats_g_bus_own_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_GBusType, ptr l1, type_c2ats_GBusNameOwnerFlags, type_c2ats_GBusAcquiredCallback, type_c2ats_GBusNameAcquiredCallback, type_c2ats_GBusNameLostCallback, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_guint = "mac#g_bus_own_name"
fun fun_c2ats_g_bus_own_name_on_connection: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GBusNameOwnerFlags, type_c2ats_GBusNameAcquiredCallback, type_c2ats_GBusNameLostCallback, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_guint = "mac#g_bus_own_name_on_connection"
fun fun_c2ats_g_bus_own_name_with_closures: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GClosure, l2), !ptr_v_1(type_c2ats_GClosure, l3), !ptr_v_1(type_c2ats_GClosure, l4) | type_c2ats_GBusType, ptr l1, type_c2ats_GBusNameOwnerFlags, ptr l2, ptr l3, ptr l4) -> type_c2ats_guint = "mac#g_bus_own_name_with_closures"
fun fun_c2ats_g_bus_own_name_on_connection_with_closures: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GClosure, l3), !ptr_v_1(type_c2ats_GClosure, l4) | ptr l1, ptr l2, type_c2ats_GBusNameOwnerFlags, ptr l3, ptr l4) -> type_c2ats_guint = "mac#g_bus_own_name_on_connection_with_closures"
fun fun_c2ats_g_bus_unown_name: (type_c2ats_guint) -> void = "mac#g_bus_unown_name"
// File: /usr/include/glib-2.0/gio/gdbusnamewatching.h
typedef type_c2ats_GBusNameAppearedCallback = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gpointer) -> void
typedef type_c2ats_GBusNameVanishedCallback = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void
fun fun_c2ats_g_bus_watch_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_GBusType, ptr l1, type_c2ats_GBusNameWatcherFlags, type_c2ats_GBusNameAppearedCallback, type_c2ats_GBusNameVanishedCallback, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_guint = "mac#g_bus_watch_name"
fun fun_c2ats_g_bus_watch_name_on_connection: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GBusNameWatcherFlags, type_c2ats_GBusNameAppearedCallback, type_c2ats_GBusNameVanishedCallback, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_guint = "mac#g_bus_watch_name_on_connection"
fun fun_c2ats_g_bus_watch_name_with_closures: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GClosure, l2), !ptr_v_1(type_c2ats_GClosure, l3) | type_c2ats_GBusType, ptr l1, type_c2ats_GBusNameWatcherFlags, ptr l2, ptr l3) -> type_c2ats_guint = "mac#g_bus_watch_name_with_closures"
fun fun_c2ats_g_bus_watch_name_on_connection_with_closures: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GClosure, l3), !ptr_v_1(type_c2ats_GClosure, l4) | ptr l1, ptr l2, type_c2ats_GBusNameWatcherFlags, ptr l3, ptr l4) -> type_c2ats_guint = "mac#g_bus_watch_name_on_connection_with_closures"
fun fun_c2ats_g_bus_unwatch_name: (type_c2ats_guint) -> void = "mac#g_bus_unwatch_name"
// File: /usr/include/glib-2.0/gio/gdbusproxy.h
abst@ype struct_c2ats__GDBusProxyClass // FIXME! Forward declaration.
typedef type_c2ats_GDBusProxyClass = struct_c2ats__GDBusProxyClass
abst@ype struct_c2ats__GDBusProxyPrivate // FIXME! Forward declaration.
typedef type_c2ats_GDBusProxyPrivate = struct_c2ats__GDBusProxyPrivate
typedef struct_c2ats__GDBusProxy = $extype_struct"struct _GDBusProxy" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GDBusProxyPrivate) *)
}
typedef struct_c2ats__GDBusProxyClass = $extype_struct"struct _GDBusProxyClass" of {
  parent_class = type_c2ats_GObjectClass,
  g_properties_changed = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1), !ptr_v_1(type_c2ats_GVariant, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> void,
  g_signal = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GVariant, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void,
  padding = @[type_c2ats_gpointer][32]
}
fun fun_c2ats_g_dbus_proxy_get_type: () -> type_c2ats_GType = "mac#g_dbus_proxy_get_type"
fun fun_c2ats_g_dbus_proxy_new: {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_GDBusInterfaceInfo, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gchar, l5), !ptr_v_1(type_c2ats_GCancellable, l6) | ptr l1, type_c2ats_GDBusProxyFlags, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_dbus_proxy_new"
fun fun_c2ats_g_dbus_proxy_new_finish: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusProxy, l3) | ptr l3) = "mac#g_dbus_proxy_new_finish"
fun fun_c2ats_g_dbus_proxy_new_sync: {l1,l2,l3,l4,l5,l6,l7,l7_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_GDBusInterfaceInfo, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gchar, l5), !ptr_v_1(type_c2ats_GCancellable, l6), !ptr_v_2(type_c2ats_GError, l7, l7_1) | ptr l1, type_c2ats_GDBusProxyFlags, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7) -> [l8:addr] (ptr_v_1(type_c2ats_GDBusProxy, l8) | ptr l8) = "mac#g_dbus_proxy_new_sync"
fun fun_c2ats_g_dbus_proxy_new_for_bus: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceInfo, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_GCancellable, l5) | type_c2ats_GBusType, type_c2ats_GDBusProxyFlags, ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_dbus_proxy_new_for_bus"
fun fun_c2ats_g_dbus_proxy_new_for_bus_finish: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusProxy, l3) | ptr l3) = "mac#g_dbus_proxy_new_for_bus_finish"
fun fun_c2ats_g_dbus_proxy_new_for_bus_sync: {l1,l2,l3,l4,l5,l6,l6_1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceInfo, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_GCancellable, l5), !ptr_v_2(type_c2ats_GError, l6, l6_1) | type_c2ats_GBusType, type_c2ats_GDBusProxyFlags, ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> [l7:addr] (ptr_v_1(type_c2ats_GDBusProxy, l7) | ptr l7) = "mac#g_dbus_proxy_new_for_bus_sync"
fun fun_c2ats_g_dbus_proxy_get_connection: {l1:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusConnection, l2) | ptr l2) = "mac#g_dbus_proxy_get_connection"
fun fun_c2ats_g_dbus_proxy_get_flags: {l1:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1) | ptr l1) -> type_c2ats_GDBusProxyFlags = "mac#g_dbus_proxy_get_flags"
fun fun_c2ats_g_dbus_proxy_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_proxy_get_name"
fun fun_c2ats_g_dbus_proxy_get_name_owner: {l1:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_proxy_get_name_owner"
fun fun_c2ats_g_dbus_proxy_get_object_path: {l1:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_proxy_get_object_path"
fun fun_c2ats_g_dbus_proxy_get_interface_name: {l1:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_proxy_get_interface_name"
fun fun_c2ats_g_dbus_proxy_get_default_timeout: {l1:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1) | ptr l1) -> type_c2ats_gint = "mac#g_dbus_proxy_get_default_timeout"
fun fun_c2ats_g_dbus_proxy_set_default_timeout: {l1:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1) | ptr l1, type_c2ats_gint) -> void = "mac#g_dbus_proxy_set_default_timeout"
fun fun_c2ats_g_dbus_proxy_get_interface_info: {l1:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusInterfaceInfo, l2) | ptr l2) = "mac#g_dbus_proxy_get_interface_info"
fun fun_c2ats_g_dbus_proxy_set_interface_info: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1), !ptr_v_1(type_c2ats_GDBusInterfaceInfo, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_proxy_set_interface_info"
fun fun_c2ats_g_dbus_proxy_get_cached_property: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVariant, l3) | ptr l3) = "mac#g_dbus_proxy_get_cached_property"
fun fun_c2ats_g_dbus_proxy_set_cached_property: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_dbus_proxy_set_cached_property"
fun fun_c2ats_g_dbus_proxy_get_cached_property_names: {l1:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#g_dbus_proxy_get_cached_property_names"
fun fun_c2ats_g_dbus_proxy_call: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3), !ptr_v_1(type_c2ats_GCancellable, l4) | ptr l1, ptr l2, ptr l3, type_c2ats_GDBusCallFlags, type_c2ats_gint, ptr l4, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_dbus_proxy_call"
fun fun_c2ats_g_dbus_proxy_call_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GVariant, l4) | ptr l4) = "mac#g_dbus_proxy_call_finish"
fun fun_c2ats_g_dbus_proxy_call_sync: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, type_c2ats_GDBusCallFlags, type_c2ats_gint, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GVariant, l6) | ptr l6) = "mac#g_dbus_proxy_call_sync"
fun fun_c2ats_g_dbus_proxy_call_with_unix_fd_list: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3), !ptr_v_1(type_c2ats_GUnixFDList, l4), !ptr_v_1(type_c2ats_GCancellable, l5) | ptr l1, ptr l2, ptr l3, type_c2ats_GDBusCallFlags, type_c2ats_gint, ptr l4, ptr l5, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_dbus_proxy_call_with_unix_fd_list"
fun fun_c2ats_g_dbus_proxy_call_with_unix_fd_list_finish: {l1,l2,l2_1,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1), !ptr_v_2(type_c2ats_GUnixFDList, l2, l2_1), !ptr_v_1(type_c2ats_GAsyncResult, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GVariant, l5) | ptr l5) = "mac#g_dbus_proxy_call_with_unix_fd_list_finish"
fun fun_c2ats_g_dbus_proxy_call_with_unix_fd_list_sync: {l1,l2,l3,l4,l5,l5_1,l6,l7,l7_1:addr} (!ptr_v_1(type_c2ats_GDBusProxy, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3), !ptr_v_1(type_c2ats_GUnixFDList, l4), !ptr_v_2(type_c2ats_GUnixFDList, l5, l5_1), !ptr_v_1(type_c2ats_GCancellable, l6), !ptr_v_2(type_c2ats_GError, l7, l7_1) | ptr l1, ptr l2, ptr l3, type_c2ats_GDBusCallFlags, type_c2ats_gint, ptr l4, ptr l5, ptr l6, ptr l7) -> [l8:addr] (ptr_v_1(type_c2ats_GVariant, l8) | ptr l8) = "mac#g_dbus_proxy_call_with_unix_fd_list_sync"
// File: /usr/include/glib-2.0/gio/gdbusserver.h
fun fun_c2ats_g_dbus_server_get_type: () -> type_c2ats_GType = "mac#g_dbus_server_get_type"
fun fun_c2ats_g_dbus_server_new_sync: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GDBusAuthObserver, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, type_c2ats_GDBusServerFlags, ptr l2, ptr l3, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GDBusServer, l6) | ptr l6) = "mac#g_dbus_server_new_sync"
fun fun_c2ats_g_dbus_server_get_client_address: {l1:addr} (!ptr_v_1(type_c2ats_GDBusServer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_server_get_client_address"
fun fun_c2ats_g_dbus_server_get_guid: {l1:addr} (!ptr_v_1(type_c2ats_GDBusServer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_server_get_guid"
fun fun_c2ats_g_dbus_server_get_flags: {l1:addr} (!ptr_v_1(type_c2ats_GDBusServer, l1) | ptr l1) -> type_c2ats_GDBusServerFlags = "mac#g_dbus_server_get_flags"
fun fun_c2ats_g_dbus_server_start: {l1:addr} (!ptr_v_1(type_c2ats_GDBusServer, l1) | ptr l1) -> void = "mac#g_dbus_server_start"
fun fun_c2ats_g_dbus_server_stop: {l1:addr} (!ptr_v_1(type_c2ats_GDBusServer, l1) | ptr l1) -> void = "mac#g_dbus_server_stop"
fun fun_c2ats_g_dbus_server_is_active: {l1:addr} (!ptr_v_1(type_c2ats_GDBusServer, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_dbus_server_is_active"
// File: /usr/include/glib-2.0/gio/gdbusutils.h
fun fun_c2ats_g_dbus_is_guid: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_dbus_is_guid"
fun fun_c2ats_g_dbus_generate_guid: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_dbus_generate_guid"
fun fun_c2ats_g_dbus_is_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_dbus_is_name"
fun fun_c2ats_g_dbus_is_unique_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_dbus_is_unique_name"
fun fun_c2ats_g_dbus_is_member_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_dbus_is_member_name"
fun fun_c2ats_g_dbus_is_interface_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_dbus_is_interface_name"
fun fun_c2ats_g_dbus_gvariant_to_gvalue: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_gvariant_to_gvalue"
fun fun_c2ats_g_dbus_gvalue_to_gvariant: {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_GVariantType, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVariant, l3) | ptr l3) = "mac#g_dbus_gvalue_to_gvariant"
// File: /usr/include/glib-2.0/gio/gdrive.h
abst@ype struct_c2ats__GDriveIface // FIXME! Forward declaration.
typedef type_c2ats_GDriveIface = struct_c2ats__GDriveIface
typedef struct_c2ats__GDriveIface = $extype_struct"struct _GDriveIface" of {
  g_iface = type_c2ats_GTypeInterface,
  changed = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> void,
  disconnected = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> void,
  eject_button = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> void,
  get_name = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2),
  get_icon = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2),
  has_volumes = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean,
  get_volumes = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2),
  is_media_removable = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean,
  has_media = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean,
  is_media_check_automatic = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean,
  can_eject = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean,
  can_poll_for_media = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean,
  eject = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  eject_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  poll_for_media = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  poll_for_media_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  get_identifier = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(char, l3) | ptr l3),
  enumerate_identifiers = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(char, l2, l2_1) | ptr l2),
  get_start_stop_type = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_GDriveStartStopType,
  can_start = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean,
  can_start_degraded = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean,
  start = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GDriveStartFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  start_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  can_stop = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean,
  stop = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  stop_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  stop_button = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> void,
  eject_with_operation = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  eject_with_operation_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  get_sort_key = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  get_symbolic_icon = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2),
  is_removable = {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean
}
fun fun_c2ats_g_drive_get_type: () -> type_c2ats_GType = "mac#g_drive_get_type"
fun fun_c2ats_g_drive_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_drive_get_name"
fun fun_c2ats_g_drive_get_icon: {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#g_drive_get_icon"
fun fun_c2ats_g_drive_get_symbolic_icon: {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#g_drive_get_symbolic_icon"
fun fun_c2ats_g_drive_has_volumes: {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_drive_has_volumes"
fun fun_c2ats_g_drive_get_volumes: {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_drive_get_volumes"
fun fun_c2ats_g_drive_is_removable: {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_drive_is_removable"
fun fun_c2ats_g_drive_is_media_removable: {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_drive_is_media_removable"
fun fun_c2ats_g_drive_has_media: {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_drive_has_media"
fun fun_c2ats_g_drive_is_media_check_automatic: {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_drive_is_media_check_automatic"
fun fun_c2ats_g_drive_can_poll_for_media: {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_drive_can_poll_for_media"
fun fun_c2ats_g_drive_can_eject: {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_drive_can_eject"
fun fun_c2ats_g_drive_eject: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_drive_eject"
fun fun_c2ats_g_drive_eject_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_drive_eject_finish"
fun fun_c2ats_g_drive_poll_for_media: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_drive_poll_for_media"
fun fun_c2ats_g_drive_poll_for_media_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_drive_poll_for_media_finish"
fun fun_c2ats_g_drive_get_identifier: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(char, l3) | ptr l3) = "mac#g_drive_get_identifier"
fun fun_c2ats_g_drive_enumerate_identifiers: {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(char, l2, l2_1) | ptr l2) = "mac#g_drive_enumerate_identifiers"
fun fun_c2ats_g_drive_get_start_stop_type: {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_GDriveStartStopType = "mac#g_drive_get_start_stop_type"
fun fun_c2ats_g_drive_can_start: {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_drive_can_start"
fun fun_c2ats_g_drive_can_start_degraded: {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_drive_can_start_degraded"
fun fun_c2ats_g_drive_start: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GDriveStartFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_drive_start"
fun fun_c2ats_g_drive_start_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_drive_start_finish"
fun fun_c2ats_g_drive_can_stop: {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_drive_can_stop"
fun fun_c2ats_g_drive_stop: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_drive_stop"
fun fun_c2ats_g_drive_stop_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_drive_stop_finish"
fun fun_c2ats_g_drive_eject_with_operation: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_drive_eject_with_operation"
fun fun_c2ats_g_drive_eject_with_operation_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDrive, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_drive_eject_with_operation_finish"
fun fun_c2ats_g_drive_get_sort_key: {l1:addr} (!ptr_v_1(type_c2ats_GDrive, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_drive_get_sort_key"
// File: /usr/include/glib-2.0/gio/gdtlsconnection.h
abst@ype struct_c2ats__GDtlsConnectionInterface // FIXME! Forward declaration.
typedef type_c2ats_GDtlsConnectionInterface = struct_c2ats__GDtlsConnectionInterface
typedef struct_c2ats__GDtlsConnectionInterface = $extype_struct"struct _GDtlsConnectionInterface" of {
  g_iface = type_c2ats_GTypeInterface,
  accept_certificate = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GTlsCertificate, l2) | ptr l1, ptr l2, type_c2ats_GTlsCertificateFlags) -> type_c2ats_gboolean,
  handshake = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  handshake_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  handshake_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  shutdown = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_gboolean, type_c2ats_gboolean, ptr l2, ptr l3) -> type_c2ats_gboolean,
  shutdown_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_gboolean, type_c2ats_gboolean, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  shutdown_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean
}
fun fun_c2ats_g_dtls_connection_get_type: () -> type_c2ats_GType = "mac#g_dtls_connection_get_type"
fun fun_c2ats_g_dtls_connection_set_database: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GTlsDatabase, l2) | ptr l1, ptr l2) -> void = "mac#g_dtls_connection_set_database"
fun fun_c2ats_g_dtls_connection_get_database: {l1:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTlsDatabase, l2) | ptr l2) = "mac#g_dtls_connection_get_database"
fun fun_c2ats_g_dtls_connection_set_certificate: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GTlsCertificate, l2) | ptr l1, ptr l2) -> void = "mac#g_dtls_connection_set_certificate"
fun fun_c2ats_g_dtls_connection_get_certificate: {l1:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTlsCertificate, l2) | ptr l2) = "mac#g_dtls_connection_get_certificate"
fun fun_c2ats_g_dtls_connection_set_interaction: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GTlsInteraction, l2) | ptr l1, ptr l2) -> void = "mac#g_dtls_connection_set_interaction"
fun fun_c2ats_g_dtls_connection_get_interaction: {l1:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTlsInteraction, l2) | ptr l2) = "mac#g_dtls_connection_get_interaction"
fun fun_c2ats_g_dtls_connection_get_peer_certificate: {l1:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTlsCertificate, l2) | ptr l2) = "mac#g_dtls_connection_get_peer_certificate"
fun fun_c2ats_g_dtls_connection_get_peer_certificate_errors: {l1:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1) | ptr l1) -> type_c2ats_GTlsCertificateFlags = "mac#g_dtls_connection_get_peer_certificate_errors"
fun fun_c2ats_g_dtls_connection_set_require_close_notify: {l1:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_dtls_connection_set_require_close_notify"
fun fun_c2ats_g_dtls_connection_get_require_close_notify: {l1:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_dtls_connection_get_require_close_notify"
fun fun_c2ats_g_dtls_connection_set_rehandshake_mode: {l1:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1) | ptr l1, type_c2ats_GTlsRehandshakeMode) -> void = "mac#g_dtls_connection_set_rehandshake_mode"
fun fun_c2ats_g_dtls_connection_get_rehandshake_mode: {l1:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1) | ptr l1) -> type_c2ats_GTlsRehandshakeMode = "mac#g_dtls_connection_get_rehandshake_mode"
fun fun_c2ats_g_dtls_connection_handshake: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_dtls_connection_handshake"
fun fun_c2ats_g_dtls_connection_handshake_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_dtls_connection_handshake_async"
fun fun_c2ats_g_dtls_connection_handshake_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_dtls_connection_handshake_finish"
fun fun_c2ats_g_dtls_connection_shutdown: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_gboolean, type_c2ats_gboolean, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_dtls_connection_shutdown"
fun fun_c2ats_g_dtls_connection_shutdown_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_gboolean, type_c2ats_gboolean, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_dtls_connection_shutdown_async"
fun fun_c2ats_g_dtls_connection_shutdown_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_dtls_connection_shutdown_finish"
fun fun_c2ats_g_dtls_connection_close: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_dtls_connection_close"
fun fun_c2ats_g_dtls_connection_close_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_dtls_connection_close_async"
fun fun_c2ats_g_dtls_connection_close_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_dtls_connection_close_finish"
fun fun_c2ats_g_dtls_connection_emit_accept_certificate: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDtlsConnection, l1), !ptr_v_1(type_c2ats_GTlsCertificate, l2) | ptr l1, ptr l2, type_c2ats_GTlsCertificateFlags) -> type_c2ats_gboolean = "mac#g_dtls_connection_emit_accept_certificate"
// File: /usr/include/glib-2.0/gio/gdtlsclientconnection.h
abst@ype struct_c2ats__GDtlsClientConnectionInterface // FIXME! Forward declaration.
typedef type_c2ats_GDtlsClientConnectionInterface = struct_c2ats__GDtlsClientConnectionInterface
typedef struct_c2ats__GDtlsClientConnectionInterface = $extype_struct"struct _GDtlsClientConnectionInterface" of {
  g_iface = type_c2ats_GTypeInterface
}
fun fun_c2ats_g_dtls_client_connection_get_type: () -> type_c2ats_GType = "mac#g_dtls_client_connection_get_type"
fun fun_c2ats_g_dtls_client_connection_new: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDatagramBased, l1), !ptr_v_1(type_c2ats_GSocketConnectable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GDatagramBased, l4) | ptr l4) = "mac#g_dtls_client_connection_new"
fun fun_c2ats_g_dtls_client_connection_get_validation_flags: {l1:addr} (!ptr_v_1(type_c2ats_GDtlsClientConnection, l1) | ptr l1) -> type_c2ats_GTlsCertificateFlags = "mac#g_dtls_client_connection_get_validation_flags"
fun fun_c2ats_g_dtls_client_connection_set_validation_flags: {l1:addr} (!ptr_v_1(type_c2ats_GDtlsClientConnection, l1) | ptr l1, type_c2ats_GTlsCertificateFlags) -> void = "mac#g_dtls_client_connection_set_validation_flags"
fun fun_c2ats_g_dtls_client_connection_get_server_identity: {l1:addr} (!ptr_v_1(type_c2ats_GDtlsClientConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSocketConnectable, l2) | ptr l2) = "mac#g_dtls_client_connection_get_server_identity"
fun fun_c2ats_g_dtls_client_connection_set_server_identity: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDtlsClientConnection, l1), !ptr_v_1(type_c2ats_GSocketConnectable, l2) | ptr l1, ptr l2) -> void = "mac#g_dtls_client_connection_set_server_identity"
fun fun_c2ats_g_dtls_client_connection_get_accepted_cas: {l1:addr} (!ptr_v_1(type_c2ats_GDtlsClientConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_dtls_client_connection_get_accepted_cas"
// File: /usr/include/glib-2.0/gio/gdtlsserverconnection.h
abst@ype struct_c2ats__GDtlsServerConnectionInterface // FIXME! Forward declaration.
typedef type_c2ats_GDtlsServerConnectionInterface = struct_c2ats__GDtlsServerConnectionInterface
typedef struct_c2ats__GDtlsServerConnectionInterface = $extype_struct"struct _GDtlsServerConnectionInterface" of {
  g_iface = type_c2ats_GTypeInterface
}
fun fun_c2ats_g_dtls_server_connection_get_type: () -> type_c2ats_GType = "mac#g_dtls_server_connection_get_type"
fun fun_c2ats_g_dtls_server_connection_new: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GDatagramBased, l1), !ptr_v_1(type_c2ats_GTlsCertificate, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GDatagramBased, l4) | ptr l4) = "mac#g_dtls_server_connection_new"
// File: /usr/include/glib-2.0/gio/gicon.h
abst@ype struct_c2ats__GIconIface // FIXME! Forward declaration.
typedef type_c2ats_GIconIface = struct_c2ats__GIconIface
typedef struct_c2ats__GIconIface = $extype_struct"struct _GIconIface" of {
  g_iface = type_c2ats_GTypeInterface,
  hash = {l1:addr} (!ptr_v_1(type_c2ats_GIcon, l1) | ptr l1) -> type_c2ats_guint,
  equal = {l1,l2:addr} (!ptr_v_1(type_c2ats_GIcon, l1), !ptr_v_1(type_c2ats_GIcon, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  to_tokens = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GIcon, l1), !ptr_v_1(type_c2ats_GPtrArray, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  from_tokens = {l1,l1_1,l2,l2_1:addr} (!ptr_v_2(type_c2ats_gchar, l1, l1_1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_gint, type_c2ats_gint, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GIcon, l3) | ptr l3),
  serialize = {l1:addr} (!ptr_v_1(type_c2ats_GIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2)
}
fun fun_c2ats_g_icon_get_type: () -> type_c2ats_GType = "mac#g_icon_get_type"
fun fun_c2ats_g_icon_hash: (type_c2ats_gconstpointer) -> type_c2ats_guint = "mac#g_icon_hash"
fun fun_c2ats_g_icon_equal: {l1,l2:addr} (!ptr_v_1(type_c2ats_GIcon, l1), !ptr_v_1(type_c2ats_GIcon, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_icon_equal"
fun fun_c2ats_g_icon_to_string: {l1:addr} (!ptr_v_1(type_c2ats_GIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_icon_to_string"
fun fun_c2ats_g_icon_new_for_string: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GIcon, l3) | ptr l3) = "mac#g_icon_new_for_string"
fun fun_c2ats_g_icon_serialize: {l1:addr} (!ptr_v_1(type_c2ats_GIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_icon_serialize"
fun fun_c2ats_g_icon_deserialize: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#g_icon_deserialize"
// File: /usr/include/glib-2.0/gio/gemblem.h
abst@ype struct_c2ats__GEmblem // FIXME! Forward declaration.
typedef type_c2ats_GEmblem = struct_c2ats__GEmblem
abst@ype struct_c2ats__GEmblemClass // FIXME! Forward declaration.
typedef type_c2ats_GEmblemClass = struct_c2ats__GEmblemClass
fun fun_c2ats_g_emblem_get_type: () -> type_c2ats_GType = "mac#g_emblem_get_type"
fun fun_c2ats_g_emblem_new: {l1:addr} (!ptr_v_1(type_c2ats_GIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GEmblem, l2) | ptr l2) = "mac#g_emblem_new"
fun fun_c2ats_g_emblem_new_with_origin: {l1:addr} (!ptr_v_1(type_c2ats_GIcon, l1) | ptr l1, type_c2ats_GEmblemOrigin) -> [l2:addr] (ptr_v_1(type_c2ats_GEmblem, l2) | ptr l2) = "mac#g_emblem_new_with_origin"
fun fun_c2ats_g_emblem_get_icon: {l1:addr} (!ptr_v_1(type_c2ats_GEmblem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#g_emblem_get_icon"
fun fun_c2ats_g_emblem_get_origin: {l1:addr} (!ptr_v_1(type_c2ats_GEmblem, l1) | ptr l1) -> type_c2ats_GEmblemOrigin = "mac#g_emblem_get_origin"
// File: /usr/include/glib-2.0/gio/gemblemedicon.h
abst@ype struct_c2ats__GEmblemedIcon // FIXME! Forward declaration.
typedef type_c2ats_GEmblemedIcon = struct_c2ats__GEmblemedIcon
abst@ype struct_c2ats__GEmblemedIconClass // FIXME! Forward declaration.
typedef type_c2ats_GEmblemedIconClass = struct_c2ats__GEmblemedIconClass
abst@ype struct_c2ats__GEmblemedIconPrivate // FIXME! Forward declaration.
typedef type_c2ats_GEmblemedIconPrivate = struct_c2ats__GEmblemedIconPrivate
typedef struct_c2ats__GEmblemedIcon = $extype_struct"struct _GEmblemedIcon" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GEmblemedIconPrivate) *)
}
typedef struct_c2ats__GEmblemedIconClass = $extype_struct"struct _GEmblemedIconClass" of {
  parent_class = type_c2ats_GObjectClass
}
fun fun_c2ats_g_emblemed_icon_get_type: () -> type_c2ats_GType = "mac#g_emblemed_icon_get_type"
fun fun_c2ats_g_emblemed_icon_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_GIcon, l1), !ptr_v_1(type_c2ats_GEmblem, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GIcon, l3) | ptr l3) = "mac#g_emblemed_icon_new"
fun fun_c2ats_g_emblemed_icon_get_icon: {l1:addr} (!ptr_v_1(type_c2ats_GEmblemedIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#g_emblemed_icon_get_icon"
fun fun_c2ats_g_emblemed_icon_get_emblems: {l1:addr} (!ptr_v_1(type_c2ats_GEmblemedIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_emblemed_icon_get_emblems"
fun fun_c2ats_g_emblemed_icon_add_emblem: {l1,l2:addr} (!ptr_v_1(type_c2ats_GEmblemedIcon, l1), !ptr_v_1(type_c2ats_GEmblem, l2) | ptr l1, ptr l2) -> void = "mac#g_emblemed_icon_add_emblem"
fun fun_c2ats_g_emblemed_icon_clear_emblems: {l1:addr} (!ptr_v_1(type_c2ats_GEmblemedIcon, l1) | ptr l1) -> void = "mac#g_emblemed_icon_clear_emblems"
// File: /usr/include/glib-2.0/gio/gfileattribute.h
typedef struct_c2ats__GFileAttributeInfo = $extype_struct"struct _GFileAttributeInfo" of {
  name = ptr (* cPtr0(char) *),
  type = type_c2ats_GFileAttributeType,
  flags = type_c2ats_GFileAttributeInfoFlags
}
typedef struct_c2ats__GFileAttributeInfoList = $extype_struct"struct _GFileAttributeInfoList" of {
  infos = ptr (* cPtr0(type_c2ats_GFileAttributeInfo) *),
  n_infos = int
}
fun fun_c2ats_g_file_attribute_info_list_get_type: () -> type_c2ats_GType = "mac#g_file_attribute_info_list_get_type"
fun fun_c2ats_g_file_attribute_info_list_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GFileAttributeInfoList, l1) | ptr l1) = "mac#g_file_attribute_info_list_new"
fun fun_c2ats_g_file_attribute_info_list_ref: {l1:addr} (!ptr_v_1(type_c2ats_GFileAttributeInfoList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFileAttributeInfoList, l2) | ptr l2) = "mac#g_file_attribute_info_list_ref"
fun fun_c2ats_g_file_attribute_info_list_unref: {l1:addr} (!ptr_v_1(type_c2ats_GFileAttributeInfoList, l1) | ptr l1) -> void = "mac#g_file_attribute_info_list_unref"
fun fun_c2ats_g_file_attribute_info_list_dup: {l1:addr} (!ptr_v_1(type_c2ats_GFileAttributeInfoList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFileAttributeInfoList, l2) | ptr l2) = "mac#g_file_attribute_info_list_dup"
fun fun_c2ats_g_file_attribute_info_list_lookup: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileAttributeInfoList, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GFileAttributeInfo, l3) | ptr l3) = "mac#g_file_attribute_info_list_lookup"
fun fun_c2ats_g_file_attribute_info_list_add: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileAttributeInfoList, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, type_c2ats_GFileAttributeType, type_c2ats_GFileAttributeInfoFlags) -> void = "mac#g_file_attribute_info_list_add"
// File: /usr/include/glib-2.0/gio/gfileenumerator.h
abst@ype struct_c2ats__GFileEnumeratorClass // FIXME! Forward declaration.
typedef type_c2ats_GFileEnumeratorClass = struct_c2ats__GFileEnumeratorClass
abst@ype struct_c2ats__GFileEnumeratorPrivate // FIXME! Forward declaration.
typedef type_c2ats_GFileEnumeratorPrivate = struct_c2ats__GFileEnumeratorPrivate
typedef struct_c2ats__GFileEnumerator = $extype_struct"struct _GFileEnumerator" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GFileEnumeratorPrivate) *)
}
typedef struct_c2ats__GFileEnumeratorClass = $extype_struct"struct _GFileEnumeratorClass" of {
  parent_class = type_c2ats_GObjectClass,
  next_file = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileEnumerator, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileInfo, l4) | ptr l4),
  close_fn = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileEnumerator, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  next_files_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileEnumerator, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  next_files_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileEnumerator, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GList, l4) | ptr l4),
  close_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileEnumerator, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  close_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileEnumerator, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void,
  _g_reserved6 = () -> void,
  _g_reserved7 = () -> void
}
fun fun_c2ats_g_file_enumerator_get_type: () -> type_c2ats_GType = "mac#g_file_enumerator_get_type"
fun fun_c2ats_g_file_enumerator_next_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileEnumerator, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileInfo, l4) | ptr l4) = "mac#g_file_enumerator_next_file"
fun fun_c2ats_g_file_enumerator_close: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileEnumerator, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_file_enumerator_close"
fun fun_c2ats_g_file_enumerator_next_files_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileEnumerator, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_enumerator_next_files_async"
fun fun_c2ats_g_file_enumerator_next_files_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileEnumerator, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GList, l4) | ptr l4) = "mac#g_file_enumerator_next_files_finish"
fun fun_c2ats_g_file_enumerator_close_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileEnumerator, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_enumerator_close_async"
fun fun_c2ats_g_file_enumerator_close_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileEnumerator, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_file_enumerator_close_finish"
fun fun_c2ats_g_file_enumerator_is_closed: {l1:addr} (!ptr_v_1(type_c2ats_GFileEnumerator, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_file_enumerator_is_closed"
fun fun_c2ats_g_file_enumerator_has_pending: {l1:addr} (!ptr_v_1(type_c2ats_GFileEnumerator, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_file_enumerator_has_pending"
fun fun_c2ats_g_file_enumerator_set_pending: {l1:addr} (!ptr_v_1(type_c2ats_GFileEnumerator, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_file_enumerator_set_pending"
fun fun_c2ats_g_file_enumerator_get_container: {l1:addr} (!ptr_v_1(type_c2ats_GFileEnumerator, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2) = "mac#g_file_enumerator_get_container"
fun fun_c2ats_g_file_enumerator_get_child: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileEnumerator, l1), !ptr_v_1(type_c2ats_GFileInfo, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GFile, l3) | ptr l3) = "mac#g_file_enumerator_get_child"
fun fun_c2ats_g_file_enumerator_iterate: {l1,l2,l2_1,l3,l3_1,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GFileEnumerator, l1), !ptr_v_2(type_c2ats_GFileInfo, l2, l2_1), !ptr_v_2(type_c2ats_GFile, l3, l3_1), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#g_file_enumerator_iterate"
// File: /usr/include/glib-2.0/gio/gfile.h
abst@ype struct_c2ats__GFileIface // FIXME! Forward declaration.
typedef type_c2ats_GFileIface = struct_c2ats__GFileIface
typedef struct_c2ats__GFileIface = $extype_struct"struct _GFileIface" of {
  g_iface = type_c2ats_GTypeInterface,
  dup = {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2),
  hash = {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> type_c2ats_guint,
  equal = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GFile, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  is_native = {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> type_c2ats_gboolean,
  has_uri_scheme = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  get_uri_scheme = {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2),
  get_basename = {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2),
  get_path = {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2),
  get_uri = {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2),
  get_parse_name = {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2),
  get_parent = {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2),
  prefix_matches = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GFile, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  get_relative_path = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GFile, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(char, l3) | ptr l3),
  resolve_relative_path = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GFile, l3) | ptr l3),
  get_child_for_display_name = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFile, l4) | ptr l4),
  enumerate_children = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GFileQueryInfoFlags, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GFileEnumerator, l5) | ptr l5),
  enumerate_children_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_GFileQueryInfoFlags, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  enumerate_children_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileEnumerator, l4) | ptr l4),
  query_info = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GFileQueryInfoFlags, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GFileInfo, l5) | ptr l5),
  query_info_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_GFileQueryInfoFlags, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  query_info_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileInfo, l4) | ptr l4),
  query_filesystem_info = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GFileInfo, l5) | ptr l5),
  query_filesystem_info_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  query_filesystem_info_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileInfo, l4) | ptr l4),
  find_enclosing_mount = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GMount, l4) | ptr l4),
  find_enclosing_mount_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  find_enclosing_mount_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GMount, l4) | ptr l4),
  set_display_name = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GFile, l5) | ptr l5),
  set_display_name_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  set_display_name_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFile, l4) | ptr l4),
  query_settable_attributes = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileAttributeInfoList, l4) | ptr l4),
  _query_settable_attributes_async = () -> void,
  _query_settable_attributes_finish = () -> void,
  query_writable_namespaces = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileAttributeInfoList, l4) | ptr l4),
  _query_writable_namespaces_async = () -> void,
  _query_writable_namespaces_finish = () -> void,
  set_attribute = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GFileAttributeType, type_c2ats_gpointer, type_c2ats_GFileQueryInfoFlags, ptr l3, ptr l4) -> type_c2ats_gboolean,
  set_attributes_from_info = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GFileInfo, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GFileQueryInfoFlags, ptr l3, ptr l4) -> type_c2ats_gboolean,
  set_attributes_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GFileInfo, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_GFileQueryInfoFlags, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  set_attributes_finish = {l1,l2,l3,l3_1,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GFileInfo, l3, l3_1), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean,
  read_fn = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileInputStream, l4) | ptr l4),
  read_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  read_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileInputStream, l4) | ptr l4),
  append_to = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_GFileCreateFlags, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileOutputStream, l4) | ptr l4),
  append_to_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GFileCreateFlags, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  append_to_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileOutputStream, l4) | ptr l4),
  create = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_GFileCreateFlags, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileOutputStream, l4) | ptr l4),
  create_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GFileCreateFlags, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  create_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileOutputStream, l4) | ptr l4),
  replace = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_GFileCreateFlags, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GFileOutputStream, l5) | ptr l5),
  replace_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_GFileCreateFlags, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  replace_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileOutputStream, l4) | ptr l4),
  delete_file = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  delete_file_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  delete_file_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  trash = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  trash_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  trash_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  make_directory = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  make_directory_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  make_directory_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  make_symbolic_link = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean,
  _make_symbolic_link_async = () -> void,
  _make_symbolic_link_finish = () -> void,
  copy = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GFile, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GFileCopyFlags, ptr l3, type_c2ats_GFileProgressCallback, type_c2ats_gpointer, ptr l4) -> type_c2ats_gboolean,
  copy_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GFile, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_GFileCopyFlags, int, ptr l3, type_c2ats_GFileProgressCallback, type_c2ats_gpointer, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  copy_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  move = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GFile, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GFileCopyFlags, ptr l3, type_c2ats_GFileProgressCallback, type_c2ats_gpointer, ptr l4) -> type_c2ats_gboolean,
  _move_async = () -> void,
  _move_finish = () -> void,
  mount_mountable = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountMountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  mount_mountable_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFile, l4) | ptr l4),
  unmount_mountable = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  unmount_mountable_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  eject_mountable = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  eject_mountable_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  mount_enclosing_volume = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountMountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  mount_enclosing_volume_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  monitor_dir = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_GFileMonitorFlags, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileMonitor, l4) | ptr l4),
  monitor_file = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_GFileMonitorFlags, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileMonitor, l4) | ptr l4),
  open_readwrite = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileIOStream, l4) | ptr l4),
  open_readwrite_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  open_readwrite_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileIOStream, l4) | ptr l4),
  create_readwrite = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_GFileCreateFlags, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileIOStream, l4) | ptr l4),
  create_readwrite_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GFileCreateFlags, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  create_readwrite_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileIOStream, l4) | ptr l4),
  replace_readwrite = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_GFileCreateFlags, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GFileIOStream, l5) | ptr l5),
  replace_readwrite_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_GFileCreateFlags, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  replace_readwrite_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileIOStream, l4) | ptr l4),
  start_mountable = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GDriveStartFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  start_mountable_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  stop_mountable = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  stop_mountable_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  supports_thread_contexts = type_c2ats_gboolean,
  unmount_mountable_with_operation = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  unmount_mountable_with_operation_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  eject_mountable_with_operation = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  eject_mountable_with_operation_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  poll_mountable = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  poll_mountable_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  measure_disk_usage = {l1,l2,l3,l4,l5,l6,l6_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_1(type_c2ats_guint64, l3), !ptr_v_1(type_c2ats_guint64, l4), !ptr_v_1(type_c2ats_guint64, l5), !ptr_v_2(type_c2ats_GError, l6, l6_1) | ptr l1, type_c2ats_GFileMeasureFlags, ptr l2, type_c2ats_GFileMeasureProgressCallback, type_c2ats_gpointer, ptr l3, ptr l4, ptr l5, ptr l6) -> type_c2ats_gboolean,
  measure_disk_usage_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GFileMeasureFlags, type_c2ats_gint, ptr l2, type_c2ats_GFileMeasureProgressCallback, type_c2ats_gpointer, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  measure_disk_usage_finish = {l1,l2,l3,l4,l5,l6,l6_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_1(type_c2ats_guint64, l3), !ptr_v_1(type_c2ats_guint64, l4), !ptr_v_1(type_c2ats_guint64, l5), !ptr_v_2(type_c2ats_GError, l6, l6_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> type_c2ats_gboolean
}
fun fun_c2ats_g_file_get_type: () -> type_c2ats_GType = "mac#g_file_get_type"
fun fun_c2ats_g_file_new_for_path: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2) = "mac#g_file_new_for_path"
fun fun_c2ats_g_file_new_for_uri: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2) = "mac#g_file_new_for_uri"
fun fun_c2ats_g_file_new_for_commandline_arg: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2) = "mac#g_file_new_for_commandline_arg"
fun fun_c2ats_g_file_new_for_commandline_arg_and_cwd: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GFile, l3) | ptr l3) = "mac#g_file_new_for_commandline_arg_and_cwd"
fun fun_c2ats_g_file_new_tmp: {l1,l2,l2_1,l3,l3_1:addr} (!ptr_v_1(char, l1), !ptr_v_2(type_c2ats_GFileIOStream, l2, l2_1), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFile, l4) | ptr l4) = "mac#g_file_new_tmp"
fun fun_c2ats_g_file_parse_name: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2) = "mac#g_file_parse_name"
fun fun_c2ats_g_file_dup: {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2) = "mac#g_file_dup"
fun fun_c2ats_g_file_hash: (type_c2ats_gconstpointer) -> type_c2ats_guint = "mac#g_file_hash"
fun fun_c2ats_g_file_equal: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GFile, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_file_equal"
fun fun_c2ats_g_file_get_basename: {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_file_get_basename"
fun fun_c2ats_g_file_get_path: {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_file_get_path"
fun fun_c2ats_g_file_get_uri: {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_file_get_uri"
fun fun_c2ats_g_file_get_parse_name: {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_file_get_parse_name"
fun fun_c2ats_g_file_get_parent: {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2) = "mac#g_file_get_parent"
fun fun_c2ats_g_file_has_parent: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GFile, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_file_has_parent"
fun fun_c2ats_g_file_get_child: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GFile, l3) | ptr l3) = "mac#g_file_get_child"
fun fun_c2ats_g_file_get_child_for_display_name: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFile, l4) | ptr l4) = "mac#g_file_get_child_for_display_name"
fun fun_c2ats_g_file_has_prefix: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GFile, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_file_has_prefix"
fun fun_c2ats_g_file_get_relative_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GFile, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(char, l3) | ptr l3) = "mac#g_file_get_relative_path"
fun fun_c2ats_g_file_resolve_relative_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GFile, l3) | ptr l3) = "mac#g_file_resolve_relative_path"
fun fun_c2ats_g_file_is_native: {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_file_is_native"
fun fun_c2ats_g_file_has_uri_scheme: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_file_has_uri_scheme"
fun fun_c2ats_g_file_get_uri_scheme: {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_file_get_uri_scheme"
fun fun_c2ats_g_file_read: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileInputStream, l4) | ptr l4) = "mac#g_file_read"
fun fun_c2ats_g_file_read_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_read_async"
fun fun_c2ats_g_file_read_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileInputStream, l4) | ptr l4) = "mac#g_file_read_finish"
fun fun_c2ats_g_file_append_to: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_GFileCreateFlags, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileOutputStream, l4) | ptr l4) = "mac#g_file_append_to"
fun fun_c2ats_g_file_create: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_GFileCreateFlags, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileOutputStream, l4) | ptr l4) = "mac#g_file_create"
fun fun_c2ats_g_file_replace: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_GFileCreateFlags, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GFileOutputStream, l5) | ptr l5) = "mac#g_file_replace"
fun fun_c2ats_g_file_append_to_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GFileCreateFlags, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_append_to_async"
fun fun_c2ats_g_file_append_to_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileOutputStream, l4) | ptr l4) = "mac#g_file_append_to_finish"
fun fun_c2ats_g_file_create_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GFileCreateFlags, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_create_async"
fun fun_c2ats_g_file_create_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileOutputStream, l4) | ptr l4) = "mac#g_file_create_finish"
fun fun_c2ats_g_file_replace_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_GFileCreateFlags, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_replace_async"
fun fun_c2ats_g_file_replace_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileOutputStream, l4) | ptr l4) = "mac#g_file_replace_finish"
fun fun_c2ats_g_file_open_readwrite: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileIOStream, l4) | ptr l4) = "mac#g_file_open_readwrite"
fun fun_c2ats_g_file_open_readwrite_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_open_readwrite_async"
fun fun_c2ats_g_file_open_readwrite_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileIOStream, l4) | ptr l4) = "mac#g_file_open_readwrite_finish"
fun fun_c2ats_g_file_create_readwrite: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_GFileCreateFlags, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileIOStream, l4) | ptr l4) = "mac#g_file_create_readwrite"
fun fun_c2ats_g_file_create_readwrite_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GFileCreateFlags, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_create_readwrite_async"
fun fun_c2ats_g_file_create_readwrite_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileIOStream, l4) | ptr l4) = "mac#g_file_create_readwrite_finish"
fun fun_c2ats_g_file_replace_readwrite: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_GFileCreateFlags, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GFileIOStream, l5) | ptr l5) = "mac#g_file_replace_readwrite"
fun fun_c2ats_g_file_replace_readwrite_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_GFileCreateFlags, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_replace_readwrite_async"
fun fun_c2ats_g_file_replace_readwrite_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileIOStream, l4) | ptr l4) = "mac#g_file_replace_readwrite_finish"
fun fun_c2ats_g_file_query_exists: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_file_query_exists"
fun fun_c2ats_g_file_query_file_type: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GFileQueryInfoFlags, ptr l2) -> type_c2ats_GFileType = "mac#g_file_query_file_type"
fun fun_c2ats_g_file_query_info: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GFileQueryInfoFlags, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GFileInfo, l5) | ptr l5) = "mac#g_file_query_info"
fun fun_c2ats_g_file_query_info_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_GFileQueryInfoFlags, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_query_info_async"
fun fun_c2ats_g_file_query_info_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileInfo, l4) | ptr l4) = "mac#g_file_query_info_finish"
fun fun_c2ats_g_file_query_filesystem_info: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GFileInfo, l5) | ptr l5) = "mac#g_file_query_filesystem_info"
fun fun_c2ats_g_file_query_filesystem_info_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_query_filesystem_info_async"
fun fun_c2ats_g_file_query_filesystem_info_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileInfo, l4) | ptr l4) = "mac#g_file_query_filesystem_info_finish"
fun fun_c2ats_g_file_find_enclosing_mount: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GMount, l4) | ptr l4) = "mac#g_file_find_enclosing_mount"
fun fun_c2ats_g_file_find_enclosing_mount_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_find_enclosing_mount_async"
fun fun_c2ats_g_file_find_enclosing_mount_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GMount, l4) | ptr l4) = "mac#g_file_find_enclosing_mount_finish"
fun fun_c2ats_g_file_enumerate_children: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GFileQueryInfoFlags, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GFileEnumerator, l5) | ptr l5) = "mac#g_file_enumerate_children"
fun fun_c2ats_g_file_enumerate_children_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_GFileQueryInfoFlags, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_enumerate_children_async"
fun fun_c2ats_g_file_enumerate_children_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileEnumerator, l4) | ptr l4) = "mac#g_file_enumerate_children_finish"
fun fun_c2ats_g_file_set_display_name: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GFile, l5) | ptr l5) = "mac#g_file_set_display_name"
fun fun_c2ats_g_file_set_display_name_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_set_display_name_async"
fun fun_c2ats_g_file_set_display_name_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFile, l4) | ptr l4) = "mac#g_file_set_display_name_finish"
fun fun_c2ats_g_file_delete: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_file_delete"
fun fun_c2ats_g_file_delete_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_delete_async"
fun fun_c2ats_g_file_delete_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_file_delete_finish"
fun fun_c2ats_g_file_trash: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_file_trash"
fun fun_c2ats_g_file_trash_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_trash_async"
fun fun_c2ats_g_file_trash_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_file_trash_finish"
fun fun_c2ats_g_file_copy: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GFile, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GFileCopyFlags, ptr l3, type_c2ats_GFileProgressCallback, type_c2ats_gpointer, ptr l4) -> type_c2ats_gboolean = "mac#g_file_copy"
fun fun_c2ats_g_file_copy_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GFile, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_GFileCopyFlags, int, ptr l3, type_c2ats_GFileProgressCallback, type_c2ats_gpointer, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_copy_async"
fun fun_c2ats_g_file_copy_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_file_copy_finish"
fun fun_c2ats_g_file_move: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GFile, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GFileCopyFlags, ptr l3, type_c2ats_GFileProgressCallback, type_c2ats_gpointer, ptr l4) -> type_c2ats_gboolean = "mac#g_file_move"
fun fun_c2ats_g_file_make_directory: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_file_make_directory"
fun fun_c2ats_g_file_make_directory_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_make_directory_async"
fun fun_c2ats_g_file_make_directory_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_file_make_directory_finish"
fun fun_c2ats_g_file_make_directory_with_parents: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_file_make_directory_with_parents"
fun fun_c2ats_g_file_make_symbolic_link: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_file_make_symbolic_link"
fun fun_c2ats_g_file_query_settable_attributes: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileAttributeInfoList, l4) | ptr l4) = "mac#g_file_query_settable_attributes"
fun fun_c2ats_g_file_query_writable_namespaces: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileAttributeInfoList, l4) | ptr l4) = "mac#g_file_query_writable_namespaces"
fun fun_c2ats_g_file_set_attribute: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GFileAttributeType, type_c2ats_gpointer, type_c2ats_GFileQueryInfoFlags, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_file_set_attribute"
fun fun_c2ats_g_file_set_attributes_from_info: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GFileInfo, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GFileQueryInfoFlags, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_file_set_attributes_from_info"
fun fun_c2ats_g_file_set_attributes_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GFileInfo, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_GFileQueryInfoFlags, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_set_attributes_async"
fun fun_c2ats_g_file_set_attributes_finish: {l1,l2,l3,l3_1,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GFileInfo, l3, l3_1), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_file_set_attributes_finish"
fun fun_c2ats_g_file_set_attribute_string: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, type_c2ats_GFileQueryInfoFlags, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#g_file_set_attribute_string"
fun fun_c2ats_g_file_set_attribute_byte_string: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, type_c2ats_GFileQueryInfoFlags, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#g_file_set_attribute_byte_string"
fun fun_c2ats_g_file_set_attribute_uint32: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_guint32, type_c2ats_GFileQueryInfoFlags, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_file_set_attribute_uint32"
fun fun_c2ats_g_file_set_attribute_int32: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gint32, type_c2ats_GFileQueryInfoFlags, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_file_set_attribute_int32"
fun fun_c2ats_g_file_set_attribute_uint64: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_guint64, type_c2ats_GFileQueryInfoFlags, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_file_set_attribute_uint64"
fun fun_c2ats_g_file_set_attribute_int64: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gint64, type_c2ats_GFileQueryInfoFlags, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_file_set_attribute_int64"
fun fun_c2ats_g_file_mount_enclosing_volume: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountMountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_mount_enclosing_volume"
fun fun_c2ats_g_file_mount_enclosing_volume_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_file_mount_enclosing_volume_finish"
fun fun_c2ats_g_file_mount_mountable: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountMountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_mount_mountable"
fun fun_c2ats_g_file_mount_mountable_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFile, l4) | ptr l4) = "mac#g_file_mount_mountable_finish"
fun fun_c2ats_g_file_unmount_mountable: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_unmount_mountable"
fun fun_c2ats_g_file_unmount_mountable_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_file_unmount_mountable_finish"
fun fun_c2ats_g_file_unmount_mountable_with_operation: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_unmount_mountable_with_operation"
fun fun_c2ats_g_file_unmount_mountable_with_operation_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_file_unmount_mountable_with_operation_finish"
fun fun_c2ats_g_file_eject_mountable: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_eject_mountable"
fun fun_c2ats_g_file_eject_mountable_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_file_eject_mountable_finish"
fun fun_c2ats_g_file_eject_mountable_with_operation: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_eject_mountable_with_operation"
fun fun_c2ats_g_file_eject_mountable_with_operation_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_file_eject_mountable_with_operation_finish"
fun fun_c2ats_g_file_copy_attributes: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GFile, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GFileCopyFlags, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_file_copy_attributes"
fun fun_c2ats_g_file_monitor_directory: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_GFileMonitorFlags, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileMonitor, l4) | ptr l4) = "mac#g_file_monitor_directory"
fun fun_c2ats_g_file_monitor_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_GFileMonitorFlags, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileMonitor, l4) | ptr l4) = "mac#g_file_monitor_file"
fun fun_c2ats_g_file_monitor: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_GFileMonitorFlags, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileMonitor, l4) | ptr l4) = "mac#g_file_monitor"
fun fun_c2ats_g_file_measure_disk_usage: {l1,l2,l3,l4,l5,l6,l6_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_1(type_c2ats_guint64, l3), !ptr_v_1(type_c2ats_guint64, l4), !ptr_v_1(type_c2ats_guint64, l5), !ptr_v_2(type_c2ats_GError, l6, l6_1) | ptr l1, type_c2ats_GFileMeasureFlags, ptr l2, type_c2ats_GFileMeasureProgressCallback, type_c2ats_gpointer, ptr l3, ptr l4, ptr l5, ptr l6) -> type_c2ats_gboolean = "mac#g_file_measure_disk_usage"
fun fun_c2ats_g_file_measure_disk_usage_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GFileMeasureFlags, type_c2ats_gint, ptr l2, type_c2ats_GFileMeasureProgressCallback, type_c2ats_gpointer, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_measure_disk_usage_async"
fun fun_c2ats_g_file_measure_disk_usage_finish: {l1,l2,l3,l4,l5,l6,l6_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_1(type_c2ats_guint64, l3), !ptr_v_1(type_c2ats_guint64, l4), !ptr_v_1(type_c2ats_guint64, l5), !ptr_v_2(type_c2ats_GError, l6, l6_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> type_c2ats_gboolean = "mac#g_file_measure_disk_usage_finish"
fun fun_c2ats_g_file_start_mountable: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GDriveStartFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_start_mountable"
fun fun_c2ats_g_file_start_mountable_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_file_start_mountable_finish"
fun fun_c2ats_g_file_stop_mountable: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_stop_mountable"
fun fun_c2ats_g_file_stop_mountable_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_file_stop_mountable_finish"
fun fun_c2ats_g_file_poll_mountable: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_poll_mountable"
fun fun_c2ats_g_file_poll_mountable_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_file_poll_mountable_finish"
fun fun_c2ats_g_file_query_default_handler: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GAppInfo, l4) | ptr l4) = "mac#g_file_query_default_handler"
fun fun_c2ats_g_file_load_contents: {l1,l2,l3,l3_1,l4,l5,l5_1,l6,l6_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(char, l3, l3_1), !ptr_v_1(type_c2ats_gsize, l4), !ptr_v_2(char, l5, l5_1), !ptr_v_2(type_c2ats_GError, l6, l6_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> type_c2ats_gboolean = "mac#g_file_load_contents"
fun fun_c2ats_g_file_load_contents_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_load_contents_async"
fun fun_c2ats_g_file_load_contents_finish: {l1,l2,l3,l3_1,l4,l5,l5_1,l6,l6_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(char, l3, l3_1), !ptr_v_1(type_c2ats_gsize, l4), !ptr_v_2(char, l5, l5_1), !ptr_v_2(type_c2ats_GError, l6, l6_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> type_c2ats_gboolean = "mac#g_file_load_contents_finish"
fun fun_c2ats_g_file_load_partial_contents_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GFileReadMoreCallback, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_load_partial_contents_async"
fun fun_c2ats_g_file_load_partial_contents_finish: {l1,l2,l3,l3_1,l4,l5,l5_1,l6,l6_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(char, l3, l3_1), !ptr_v_1(type_c2ats_gsize, l4), !ptr_v_2(char, l5, l5_1), !ptr_v_2(type_c2ats_GError, l6, l6_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> type_c2ats_gboolean = "mac#g_file_load_partial_contents_finish"
fun fun_c2ats_g_file_replace_contents: {l1,l2,l3,l4,l4_1,l5,l6,l6_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3), !ptr_v_2(char, l4, l4_1), !ptr_v_1(type_c2ats_GCancellable, l5), !ptr_v_2(type_c2ats_GError, l6, l6_1) | ptr l1, ptr l2, type_c2ats_gsize, ptr l3, type_c2ats_gboolean, type_c2ats_GFileCreateFlags, ptr l4, ptr l5, ptr l6) -> type_c2ats_gboolean = "mac#g_file_replace_contents"
fun fun_c2ats_g_file_replace_contents_async: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3), !ptr_v_1(type_c2ats_GCancellable, l4) | ptr l1, ptr l2, type_c2ats_gsize, ptr l3, type_c2ats_gboolean, type_c2ats_GFileCreateFlags, ptr l4, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_replace_contents_async"
fun fun_c2ats_g_file_replace_contents_bytes_async: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GBytes, l2), !ptr_v_1(char, l3), !ptr_v_1(type_c2ats_GCancellable, l4) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean, type_c2ats_GFileCreateFlags, ptr l4, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_replace_contents_bytes_async"
fun fun_c2ats_g_file_replace_contents_finish: {l1,l2,l3,l3_1,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFile, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(char, l3, l3_1), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_file_replace_contents_finish"
fun fun_c2ats_g_file_supports_thread_contexts: {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_file_supports_thread_contexts"
// File: /usr/include/glib-2.0/gio/gfileicon.h
abst@ype struct_c2ats__GFileIconClass // FIXME! Forward declaration.
typedef type_c2ats_GFileIconClass = struct_c2ats__GFileIconClass
fun fun_c2ats_g_file_icon_get_type: () -> type_c2ats_GType = "mac#g_file_icon_get_type"
fun fun_c2ats_g_file_icon_new: {l1:addr} (!ptr_v_1(type_c2ats_GFile, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#g_file_icon_new"
fun fun_c2ats_g_file_icon_get_file: {l1:addr} (!ptr_v_1(type_c2ats_GFileIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2) = "mac#g_file_icon_get_file"
// File: /usr/include/glib-2.0/gio/gfileinfo.h
abst@ype struct_c2ats__GFileInfoClass // FIXME! Forward declaration.
typedef type_c2ats_GFileInfoClass = struct_c2ats__GFileInfoClass
fun fun_c2ats_g_file_info_get_type: () -> type_c2ats_GType = "mac#g_file_info_get_type"
fun fun_c2ats_g_file_info_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1) = "mac#g_file_info_new"
fun fun_c2ats_g_file_info_dup: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFileInfo, l2) | ptr l2) = "mac#g_file_info_dup"
fun fun_c2ats_g_file_info_copy_into: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(type_c2ats_GFileInfo, l2) | ptr l1, ptr l2) -> void = "mac#g_file_info_copy_into"
fun fun_c2ats_g_file_info_has_attribute: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_file_info_has_attribute"
fun fun_c2ats_g_file_info_has_namespace: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_file_info_has_namespace"
fun fun_c2ats_g_file_info_list_attributes: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(char, l3, l3_1) | ptr l3) = "mac#g_file_info_list_attributes"
fun fun_c2ats_g_file_info_get_attribute_data: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GFileAttributeType, l3), !ptr_v_1(type_c2ats_gpointer, l4), !ptr_v_1(type_c2ats_GFileAttributeStatus, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#g_file_info_get_attribute_data"
fun fun_c2ats_g_file_info_get_attribute_type: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_GFileAttributeType = "mac#g_file_info_get_attribute_type"
fun fun_c2ats_g_file_info_remove_attribute: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#g_file_info_remove_attribute"
fun fun_c2ats_g_file_info_get_attribute_status: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_GFileAttributeStatus = "mac#g_file_info_get_attribute_status"
fun fun_c2ats_g_file_info_set_attribute_status: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, type_c2ats_GFileAttributeStatus) -> type_c2ats_gboolean = "mac#g_file_info_set_attribute_status"
fun fun_c2ats_g_file_info_get_attribute_as_string: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(char, l3) | ptr l3) = "mac#g_file_info_get_attribute_as_string"
fun fun_c2ats_g_file_info_get_attribute_string: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(char, l3) | ptr l3) = "mac#g_file_info_get_attribute_string"
fun fun_c2ats_g_file_info_get_attribute_byte_string: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(char, l3) | ptr l3) = "mac#g_file_info_get_attribute_byte_string"
fun fun_c2ats_g_file_info_get_attribute_boolean: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_file_info_get_attribute_boolean"
fun fun_c2ats_g_file_info_get_attribute_uint32: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_guint32 = "mac#g_file_info_get_attribute_uint32"
fun fun_c2ats_g_file_info_get_attribute_int32: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_gint32 = "mac#g_file_info_get_attribute_int32"
fun fun_c2ats_g_file_info_get_attribute_uint64: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_guint64 = "mac#g_file_info_get_attribute_uint64"
fun fun_c2ats_g_file_info_get_attribute_int64: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_gint64 = "mac#g_file_info_get_attribute_int64"
fun fun_c2ats_g_file_info_get_attribute_object: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GObject, l3) | ptr l3) = "mac#g_file_info_get_attribute_object"
fun fun_c2ats_g_file_info_get_attribute_stringv: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(char, l3, l3_1) | ptr l3) = "mac#g_file_info_get_attribute_stringv"
fun fun_c2ats_g_file_info_set_attribute: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, type_c2ats_GFileAttributeType, type_c2ats_gpointer) -> void = "mac#g_file_info_set_attribute"
fun fun_c2ats_g_file_info_set_attribute_string: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_file_info_set_attribute_string"
fun fun_c2ats_g_file_info_set_attribute_byte_string: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_file_info_set_attribute_byte_string"
fun fun_c2ats_g_file_info_set_attribute_boolean: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#g_file_info_set_attribute_boolean"
fun fun_c2ats_g_file_info_set_attribute_uint32: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, type_c2ats_guint32) -> void = "mac#g_file_info_set_attribute_uint32"
fun fun_c2ats_g_file_info_set_attribute_int32: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, type_c2ats_gint32) -> void = "mac#g_file_info_set_attribute_int32"
fun fun_c2ats_g_file_info_set_attribute_uint64: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, type_c2ats_guint64) -> void = "mac#g_file_info_set_attribute_uint64"
fun fun_c2ats_g_file_info_set_attribute_int64: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, type_c2ats_gint64) -> void = "mac#g_file_info_set_attribute_int64"
fun fun_c2ats_g_file_info_set_attribute_object: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GObject, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_file_info_set_attribute_object"
fun fun_c2ats_g_file_info_set_attribute_stringv: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2), !ptr_v_2(char, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_file_info_set_attribute_stringv"
fun fun_c2ats_g_file_info_clear_status: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1) -> void = "mac#g_file_info_clear_status"
fun fun_c2ats_g_file_info_get_deletion_date: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDateTime, l2) | ptr l2) = "mac#g_file_info_get_deletion_date"
fun fun_c2ats_g_file_info_get_file_type: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1) -> type_c2ats_GFileType = "mac#g_file_info_get_file_type"
fun fun_c2ats_g_file_info_get_is_hidden: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_file_info_get_is_hidden"
fun fun_c2ats_g_file_info_get_is_backup: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_file_info_get_is_backup"
fun fun_c2ats_g_file_info_get_is_symlink: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_file_info_get_is_symlink"
fun fun_c2ats_g_file_info_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_file_info_get_name"
fun fun_c2ats_g_file_info_get_display_name: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_file_info_get_display_name"
fun fun_c2ats_g_file_info_get_edit_name: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_file_info_get_edit_name"
fun fun_c2ats_g_file_info_get_icon: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#g_file_info_get_icon"
fun fun_c2ats_g_file_info_get_symbolic_icon: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#g_file_info_get_symbolic_icon"
fun fun_c2ats_g_file_info_get_content_type: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_file_info_get_content_type"
fun fun_c2ats_g_file_info_get_size: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1) -> type_c2ats_goffset = "mac#g_file_info_get_size"
fun fun_c2ats_g_file_info_get_modification_time: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(type_c2ats_GTimeVal, l2) | ptr l1, ptr l2) -> void = "mac#g_file_info_get_modification_time"
fun fun_c2ats_g_file_info_get_symlink_target: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_file_info_get_symlink_target"
fun fun_c2ats_g_file_info_get_etag: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_file_info_get_etag"
fun fun_c2ats_g_file_info_get_sort_order: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1) -> type_c2ats_gint32 = "mac#g_file_info_get_sort_order"
fun fun_c2ats_g_file_info_set_attribute_mask: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(type_c2ats_GFileAttributeMatcher, l2) | ptr l1, ptr l2) -> void = "mac#g_file_info_set_attribute_mask"
fun fun_c2ats_g_file_info_unset_attribute_mask: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1) -> void = "mac#g_file_info_unset_attribute_mask"
fun fun_c2ats_g_file_info_set_file_type: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1, type_c2ats_GFileType) -> void = "mac#g_file_info_set_file_type"
fun fun_c2ats_g_file_info_set_is_hidden: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_file_info_set_is_hidden"
fun fun_c2ats_g_file_info_set_is_symlink: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_file_info_set_is_symlink"
fun fun_c2ats_g_file_info_set_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#g_file_info_set_name"
fun fun_c2ats_g_file_info_set_display_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#g_file_info_set_display_name"
fun fun_c2ats_g_file_info_set_edit_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#g_file_info_set_edit_name"
fun fun_c2ats_g_file_info_set_icon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(type_c2ats_GIcon, l2) | ptr l1, ptr l2) -> void = "mac#g_file_info_set_icon"
fun fun_c2ats_g_file_info_set_symbolic_icon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(type_c2ats_GIcon, l2) | ptr l1, ptr l2) -> void = "mac#g_file_info_set_symbolic_icon"
fun fun_c2ats_g_file_info_set_content_type: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#g_file_info_set_content_type"
fun fun_c2ats_g_file_info_set_size: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1, type_c2ats_goffset) -> void = "mac#g_file_info_set_size"
fun fun_c2ats_g_file_info_set_modification_time: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(type_c2ats_GTimeVal, l2) | ptr l1, ptr l2) -> void = "mac#g_file_info_set_modification_time"
fun fun_c2ats_g_file_info_set_symlink_target: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#g_file_info_set_symlink_target"
fun fun_c2ats_g_file_info_set_sort_order: {l1:addr} (!ptr_v_1(type_c2ats_GFileInfo, l1) | ptr l1, type_c2ats_gint32) -> void = "mac#g_file_info_set_sort_order"
fun fun_c2ats_g_file_attribute_matcher_get_type: () -> type_c2ats_GType = "mac#g_file_attribute_matcher_get_type"
fun fun_c2ats_g_file_attribute_matcher_new: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFileAttributeMatcher, l2) | ptr l2) = "mac#g_file_attribute_matcher_new"
fun fun_c2ats_g_file_attribute_matcher_ref: {l1:addr} (!ptr_v_1(type_c2ats_GFileAttributeMatcher, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFileAttributeMatcher, l2) | ptr l2) = "mac#g_file_attribute_matcher_ref"
fun fun_c2ats_g_file_attribute_matcher_unref: {l1:addr} (!ptr_v_1(type_c2ats_GFileAttributeMatcher, l1) | ptr l1) -> void = "mac#g_file_attribute_matcher_unref"
fun fun_c2ats_g_file_attribute_matcher_subtract: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileAttributeMatcher, l1), !ptr_v_1(type_c2ats_GFileAttributeMatcher, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GFileAttributeMatcher, l3) | ptr l3) = "mac#g_file_attribute_matcher_subtract"
fun fun_c2ats_g_file_attribute_matcher_matches: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileAttributeMatcher, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_file_attribute_matcher_matches"
fun fun_c2ats_g_file_attribute_matcher_matches_only: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileAttributeMatcher, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_file_attribute_matcher_matches_only"
fun fun_c2ats_g_file_attribute_matcher_enumerate_namespace: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFileAttributeMatcher, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_file_attribute_matcher_enumerate_namespace"
fun fun_c2ats_g_file_attribute_matcher_enumerate_next: {l1:addr} (!ptr_v_1(type_c2ats_GFileAttributeMatcher, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_file_attribute_matcher_enumerate_next"
fun fun_c2ats_g_file_attribute_matcher_to_string: {l1:addr} (!ptr_v_1(type_c2ats_GFileAttributeMatcher, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_file_attribute_matcher_to_string"
// File: /usr/include/glib-2.0/gio/gfileinputstream.h
abst@ype struct_c2ats__GFileInputStreamClass // FIXME! Forward declaration.
typedef type_c2ats_GFileInputStreamClass = struct_c2ats__GFileInputStreamClass
abst@ype struct_c2ats__GFileInputStreamPrivate // FIXME! Forward declaration.
typedef type_c2ats_GFileInputStreamPrivate = struct_c2ats__GFileInputStreamPrivate
typedef struct_c2ats__GFileInputStream = $extype_struct"struct _GFileInputStream" of {
  parent_instance = type_c2ats_GInputStream,
  priv = ptr (* cPtr0(type_c2ats_GFileInputStreamPrivate) *)
}
typedef struct_c2ats__GFileInputStreamClass = $extype_struct"struct _GFileInputStreamClass" of {
  parent_class = type_c2ats_GInputStreamClass,
  tell = {l1:addr} (!ptr_v_1(type_c2ats_GFileInputStream, l1) | ptr l1) -> type_c2ats_goffset,
  can_seek = {l1:addr} (!ptr_v_1(type_c2ats_GFileInputStream, l1) | ptr l1) -> type_c2ats_gboolean,
  seek = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_goffset, type_c2ats_GSeekType, ptr l2, ptr l3) -> type_c2ats_gboolean,
  query_info = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFileInputStream, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GFileInfo, l5) | ptr l5),
  query_info_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFileInputStream, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  query_info_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileInputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileInfo, l4) | ptr l4),
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void
}
fun fun_c2ats_g_file_input_stream_get_type: () -> type_c2ats_GType = "mac#g_file_input_stream_get_type"
fun fun_c2ats_g_file_input_stream_query_info: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFileInputStream, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GFileInfo, l5) | ptr l5) = "mac#g_file_input_stream_query_info"
fun fun_c2ats_g_file_input_stream_query_info_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFileInputStream, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_input_stream_query_info_async"
fun fun_c2ats_g_file_input_stream_query_info_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileInputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileInfo, l4) | ptr l4) = "mac#g_file_input_stream_query_info_finish"
// File: /usr/include/glib-2.0/gio/gioerror.h
fun fun_c2ats_g_io_error_quark: () -> type_c2ats_GQuark = "mac#g_io_error_quark"
fun fun_c2ats_g_io_error_from_errno: (type_c2ats_gint) -> type_c2ats_GIOErrorEnum = "mac#g_io_error_from_errno"
// File: /usr/include/glib-2.0/gio/giostream.h
abst@ype struct_c2ats__GIOStreamPrivate // FIXME! Forward declaration.
typedef type_c2ats_GIOStreamPrivate = struct_c2ats__GIOStreamPrivate
abst@ype struct_c2ats__GIOStreamClass // FIXME! Forward declaration.
typedef type_c2ats_GIOStreamClass = struct_c2ats__GIOStreamClass
typedef struct_c2ats__GIOStream = $extype_struct"struct _GIOStream" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GIOStreamPrivate) *)
}
typedef struct_c2ats__GIOStreamClass = $extype_struct"struct _GIOStreamClass" of {
  parent_class = type_c2ats_GObjectClass,
  get_input_stream = {l1:addr} (!ptr_v_1(type_c2ats_GIOStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GInputStream, l2) | ptr l2),
  get_output_stream = {l1:addr} (!ptr_v_1(type_c2ats_GIOStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GOutputStream, l2) | ptr l2),
  close_fn = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GIOStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  close_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GIOStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  close_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GIOStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void,
  _g_reserved6 = () -> void,
  _g_reserved7 = () -> void,
  _g_reserved8 = () -> void,
  _g_reserved9 = () -> void,
  _g_reserved10 = () -> void
}
fun fun_c2ats_g_io_stream_get_type: () -> type_c2ats_GType = "mac#g_io_stream_get_type"
fun fun_c2ats_g_io_stream_get_input_stream: {l1:addr} (!ptr_v_1(type_c2ats_GIOStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GInputStream, l2) | ptr l2) = "mac#g_io_stream_get_input_stream"
fun fun_c2ats_g_io_stream_get_output_stream: {l1:addr} (!ptr_v_1(type_c2ats_GIOStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GOutputStream, l2) | ptr l2) = "mac#g_io_stream_get_output_stream"
fun fun_c2ats_g_io_stream_splice_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GIOStream, l1), !ptr_v_1(type_c2ats_GIOStream, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_GIOStreamSpliceFlags, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_io_stream_splice_async"
fun fun_c2ats_g_io_stream_splice_finish: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_io_stream_splice_finish"
fun fun_c2ats_g_io_stream_close: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GIOStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_io_stream_close"
fun fun_c2ats_g_io_stream_close_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GIOStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_io_stream_close_async"
fun fun_c2ats_g_io_stream_close_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GIOStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_io_stream_close_finish"
fun fun_c2ats_g_io_stream_is_closed: {l1:addr} (!ptr_v_1(type_c2ats_GIOStream, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_io_stream_is_closed"
fun fun_c2ats_g_io_stream_has_pending: {l1:addr} (!ptr_v_1(type_c2ats_GIOStream, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_io_stream_has_pending"
fun fun_c2ats_g_io_stream_set_pending: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GIOStream, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_io_stream_set_pending"
fun fun_c2ats_g_io_stream_clear_pending: {l1:addr} (!ptr_v_1(type_c2ats_GIOStream, l1) | ptr l1) -> void = "mac#g_io_stream_clear_pending"
// File: /usr/include/glib-2.0/gio/gfileiostream.h
abst@ype struct_c2ats__GFileIOStreamClass // FIXME! Forward declaration.
typedef type_c2ats_GFileIOStreamClass = struct_c2ats__GFileIOStreamClass
abst@ype struct_c2ats__GFileIOStreamPrivate // FIXME! Forward declaration.
typedef type_c2ats_GFileIOStreamPrivate = struct_c2ats__GFileIOStreamPrivate
typedef struct_c2ats__GFileIOStream = $extype_struct"struct _GFileIOStream" of {
  parent_instance = type_c2ats_GIOStream,
  priv = ptr (* cPtr0(type_c2ats_GFileIOStreamPrivate) *)
}
typedef struct_c2ats__GFileIOStreamClass = $extype_struct"struct _GFileIOStreamClass" of {
  parent_class = type_c2ats_GIOStreamClass,
  tell = {l1:addr} (!ptr_v_1(type_c2ats_GFileIOStream, l1) | ptr l1) -> type_c2ats_goffset,
  can_seek = {l1:addr} (!ptr_v_1(type_c2ats_GFileIOStream, l1) | ptr l1) -> type_c2ats_gboolean,
  seek = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileIOStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_goffset, type_c2ats_GSeekType, ptr l2, ptr l3) -> type_c2ats_gboolean,
  can_truncate = {l1:addr} (!ptr_v_1(type_c2ats_GFileIOStream, l1) | ptr l1) -> type_c2ats_gboolean,
  truncate_fn = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileIOStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_goffset, ptr l2, ptr l3) -> type_c2ats_gboolean,
  query_info = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFileIOStream, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GFileInfo, l5) | ptr l5),
  query_info_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFileIOStream, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  query_info_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileIOStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileInfo, l4) | ptr l4),
  get_etag = {l1:addr} (!ptr_v_1(type_c2ats_GFileIOStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2),
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void
}
fun fun_c2ats_g_file_io_stream_get_type: () -> type_c2ats_GType = "mac#g_file_io_stream_get_type"
fun fun_c2ats_g_file_io_stream_query_info: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFileIOStream, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GFileInfo, l5) | ptr l5) = "mac#g_file_io_stream_query_info"
fun fun_c2ats_g_file_io_stream_query_info_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFileIOStream, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_io_stream_query_info_async"
fun fun_c2ats_g_file_io_stream_query_info_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileIOStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileInfo, l4) | ptr l4) = "mac#g_file_io_stream_query_info_finish"
fun fun_c2ats_g_file_io_stream_get_etag: {l1:addr} (!ptr_v_1(type_c2ats_GFileIOStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_file_io_stream_get_etag"
// File: /usr/include/glib-2.0/gio/gfilemonitor.h
abst@ype struct_c2ats__GFileMonitorClass // FIXME! Forward declaration.
typedef type_c2ats_GFileMonitorClass = struct_c2ats__GFileMonitorClass
abst@ype struct_c2ats__GFileMonitorPrivate // FIXME! Forward declaration.
typedef type_c2ats_GFileMonitorPrivate = struct_c2ats__GFileMonitorPrivate
typedef struct_c2ats__GFileMonitor = $extype_struct"struct _GFileMonitor" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GFileMonitorPrivate) *)
}
typedef struct_c2ats__GFileMonitorClass = $extype_struct"struct _GFileMonitorClass" of {
  parent_class = type_c2ats_GObjectClass,
  changed = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFileMonitor, l1), !ptr_v_1(type_c2ats_GFile, l2), !ptr_v_1(type_c2ats_GFile, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GFileMonitorEvent) -> void,
  cancel = {l1:addr} (!ptr_v_1(type_c2ats_GFileMonitor, l1) | ptr l1) -> type_c2ats_gboolean,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void
}
fun fun_c2ats_g_file_monitor_get_type: () -> type_c2ats_GType = "mac#g_file_monitor_get_type"
fun fun_c2ats_g_file_monitor_cancel: {l1:addr} (!ptr_v_1(type_c2ats_GFileMonitor, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_file_monitor_cancel"
fun fun_c2ats_g_file_monitor_is_cancelled: {l1:addr} (!ptr_v_1(type_c2ats_GFileMonitor, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_file_monitor_is_cancelled"
fun fun_c2ats_g_file_monitor_set_rate_limit: {l1:addr} (!ptr_v_1(type_c2ats_GFileMonitor, l1) | ptr l1, type_c2ats_gint) -> void = "mac#g_file_monitor_set_rate_limit"
fun fun_c2ats_g_file_monitor_emit_event: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFileMonitor, l1), !ptr_v_1(type_c2ats_GFile, l2), !ptr_v_1(type_c2ats_GFile, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GFileMonitorEvent) -> void = "mac#g_file_monitor_emit_event"
// File: /usr/include/glib-2.0/gio/gfilenamecompleter.h
abst@ype struct_c2ats__GFilenameCompleterClass // FIXME! Forward declaration.
typedef type_c2ats_GFilenameCompleterClass = struct_c2ats__GFilenameCompleterClass
typedef struct_c2ats__GFilenameCompleterClass = $extype_struct"struct _GFilenameCompleterClass" of {
  parent_class = type_c2ats_GObjectClass,
  got_completion_data = {l1:addr} (!ptr_v_1(type_c2ats_GFilenameCompleter, l1) | ptr l1) -> void,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void
}
fun fun_c2ats_g_filename_completer_get_type: () -> type_c2ats_GType = "mac#g_filename_completer_get_type"
fun fun_c2ats_g_filename_completer_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GFilenameCompleter, l1) | ptr l1) = "mac#g_filename_completer_new"
fun fun_c2ats_g_filename_completer_get_completion_suffix: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFilenameCompleter, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(char, l3) | ptr l3) = "mac#g_filename_completer_get_completion_suffix"
fun fun_c2ats_g_filename_completer_get_completions: {l1,l2:addr} (!ptr_v_1(type_c2ats_GFilenameCompleter, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(char, l3, l3_1) | ptr l3) = "mac#g_filename_completer_get_completions"
fun fun_c2ats_g_filename_completer_set_dirs_only: {l1:addr} (!ptr_v_1(type_c2ats_GFilenameCompleter, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_filename_completer_set_dirs_only"
// File: /usr/include/glib-2.0/gio/gfileoutputstream.h
abst@ype struct_c2ats__GFileOutputStreamClass // FIXME! Forward declaration.
typedef type_c2ats_GFileOutputStreamClass = struct_c2ats__GFileOutputStreamClass
abst@ype struct_c2ats__GFileOutputStreamPrivate // FIXME! Forward declaration.
typedef type_c2ats_GFileOutputStreamPrivate = struct_c2ats__GFileOutputStreamPrivate
typedef struct_c2ats__GFileOutputStream = $extype_struct"struct _GFileOutputStream" of {
  parent_instance = type_c2ats_GOutputStream,
  priv = ptr (* cPtr0(type_c2ats_GFileOutputStreamPrivate) *)
}
typedef struct_c2ats__GFileOutputStreamClass = $extype_struct"struct _GFileOutputStreamClass" of {
  parent_class = type_c2ats_GOutputStreamClass,
  tell = {l1:addr} (!ptr_v_1(type_c2ats_GFileOutputStream, l1) | ptr l1) -> type_c2ats_goffset,
  can_seek = {l1:addr} (!ptr_v_1(type_c2ats_GFileOutputStream, l1) | ptr l1) -> type_c2ats_gboolean,
  seek = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_goffset, type_c2ats_GSeekType, ptr l2, ptr l3) -> type_c2ats_gboolean,
  can_truncate = {l1:addr} (!ptr_v_1(type_c2ats_GFileOutputStream, l1) | ptr l1) -> type_c2ats_gboolean,
  truncate_fn = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_goffset, ptr l2, ptr l3) -> type_c2ats_gboolean,
  query_info = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFileOutputStream, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GFileInfo, l5) | ptr l5),
  query_info_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFileOutputStream, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  query_info_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileOutputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileInfo, l4) | ptr l4),
  get_etag = {l1:addr} (!ptr_v_1(type_c2ats_GFileOutputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2),
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void
}
fun fun_c2ats_g_file_output_stream_get_type: () -> type_c2ats_GType = "mac#g_file_output_stream_get_type"
fun fun_c2ats_g_file_output_stream_query_info: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GFileOutputStream, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GFileInfo, l5) | ptr l5) = "mac#g_file_output_stream_query_info"
fun fun_c2ats_g_file_output_stream_query_info_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GFileOutputStream, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, int, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_file_output_stream_query_info_async"
fun fun_c2ats_g_file_output_stream_query_info_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GFileOutputStream, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GFileInfo, l4) | ptr l4) = "mac#g_file_output_stream_query_info_finish"
fun fun_c2ats_g_file_output_stream_get_etag: {l1:addr} (!ptr_v_1(type_c2ats_GFileOutputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_file_output_stream_get_etag"
// File: /usr/include/glib-2.0/gio/ginetaddress.h
abst@ype struct_c2ats__GInetAddressClass // FIXME! Forward declaration.
typedef type_c2ats_GInetAddressClass = struct_c2ats__GInetAddressClass
abst@ype struct_c2ats__GInetAddressPrivate // FIXME! Forward declaration.
typedef type_c2ats_GInetAddressPrivate = struct_c2ats__GInetAddressPrivate
typedef struct_c2ats__GInetAddress = $extype_struct"struct _GInetAddress" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GInetAddressPrivate) *)
}
typedef struct_c2ats__GInetAddressClass = $extype_struct"struct _GInetAddressClass" of {
  parent_class = type_c2ats_GObjectClass,
  to_string = {l1:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  to_bytes = {l1:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_guint8, l2) | ptr l2)
}
fun fun_c2ats_g_inet_address_get_type: () -> type_c2ats_GType = "mac#g_inet_address_get_type"
fun fun_c2ats_g_inet_address_new_from_string: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GInetAddress, l2) | ptr l2) = "mac#g_inet_address_new_from_string"
fun fun_c2ats_g_inet_address_new_from_bytes: {l1:addr} (!ptr_v_1(type_c2ats_guint8, l1) | ptr l1, type_c2ats_GSocketFamily) -> [l2:addr] (ptr_v_1(type_c2ats_GInetAddress, l2) | ptr l2) = "mac#g_inet_address_new_from_bytes"
fun fun_c2ats_g_inet_address_new_loopback: (type_c2ats_GSocketFamily) -> [l1:addr] (ptr_v_1(type_c2ats_GInetAddress, l1) | ptr l1) = "mac#g_inet_address_new_loopback"
fun fun_c2ats_g_inet_address_new_any: (type_c2ats_GSocketFamily) -> [l1:addr] (ptr_v_1(type_c2ats_GInetAddress, l1) | ptr l1) = "mac#g_inet_address_new_any"
fun fun_c2ats_g_inet_address_equal: {l1,l2:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1), !ptr_v_1(type_c2ats_GInetAddress, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_inet_address_equal"
fun fun_c2ats_g_inet_address_to_string: {l1:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_inet_address_to_string"
fun fun_c2ats_g_inet_address_to_bytes: {l1:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_guint8, l2) | ptr l2) = "mac#g_inet_address_to_bytes"
fun fun_c2ats_g_inet_address_get_native_size: {l1:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1) | ptr l1) -> type_c2ats_gsize = "mac#g_inet_address_get_native_size"
fun fun_c2ats_g_inet_address_get_family: {l1:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1) | ptr l1) -> type_c2ats_GSocketFamily = "mac#g_inet_address_get_family"
fun fun_c2ats_g_inet_address_get_is_any: {l1:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_inet_address_get_is_any"
fun fun_c2ats_g_inet_address_get_is_loopback: {l1:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_inet_address_get_is_loopback"
fun fun_c2ats_g_inet_address_get_is_link_local: {l1:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_inet_address_get_is_link_local"
fun fun_c2ats_g_inet_address_get_is_site_local: {l1:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_inet_address_get_is_site_local"
fun fun_c2ats_g_inet_address_get_is_multicast: {l1:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_inet_address_get_is_multicast"
fun fun_c2ats_g_inet_address_get_is_mc_global: {l1:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_inet_address_get_is_mc_global"
fun fun_c2ats_g_inet_address_get_is_mc_link_local: {l1:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_inet_address_get_is_mc_link_local"
fun fun_c2ats_g_inet_address_get_is_mc_node_local: {l1:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_inet_address_get_is_mc_node_local"
fun fun_c2ats_g_inet_address_get_is_mc_org_local: {l1:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_inet_address_get_is_mc_org_local"
fun fun_c2ats_g_inet_address_get_is_mc_site_local: {l1:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_inet_address_get_is_mc_site_local"
// File: /usr/include/glib-2.0/gio/ginetaddressmask.h
abst@ype struct_c2ats__GInetAddressMaskClass // FIXME! Forward declaration.
typedef type_c2ats_GInetAddressMaskClass = struct_c2ats__GInetAddressMaskClass
abst@ype struct_c2ats__GInetAddressMaskPrivate // FIXME! Forward declaration.
typedef type_c2ats_GInetAddressMaskPrivate = struct_c2ats__GInetAddressMaskPrivate
typedef struct_c2ats__GInetAddressMask = $extype_struct"struct _GInetAddressMask" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GInetAddressMaskPrivate) *)
}
typedef struct_c2ats__GInetAddressMaskClass = $extype_struct"struct _GInetAddressMaskClass" of {
  parent_class = type_c2ats_GObjectClass
}
fun fun_c2ats_g_inet_address_mask_get_type: () -> type_c2ats_GType = "mac#g_inet_address_mask_get_type"
fun fun_c2ats_g_inet_address_mask_new: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_guint, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GInetAddressMask, l3) | ptr l3) = "mac#g_inet_address_mask_new"
fun fun_c2ats_g_inet_address_mask_new_from_string: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GInetAddressMask, l3) | ptr l3) = "mac#g_inet_address_mask_new_from_string"
fun fun_c2ats_g_inet_address_mask_to_string: {l1:addr} (!ptr_v_1(type_c2ats_GInetAddressMask, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_inet_address_mask_to_string"
fun fun_c2ats_g_inet_address_mask_get_family: {l1:addr} (!ptr_v_1(type_c2ats_GInetAddressMask, l1) | ptr l1) -> type_c2ats_GSocketFamily = "mac#g_inet_address_mask_get_family"
fun fun_c2ats_g_inet_address_mask_get_address: {l1:addr} (!ptr_v_1(type_c2ats_GInetAddressMask, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GInetAddress, l2) | ptr l2) = "mac#g_inet_address_mask_get_address"
fun fun_c2ats_g_inet_address_mask_get_length: {l1:addr} (!ptr_v_1(type_c2ats_GInetAddressMask, l1) | ptr l1) -> type_c2ats_guint = "mac#g_inet_address_mask_get_length"
fun fun_c2ats_g_inet_address_mask_matches: {l1,l2:addr} (!ptr_v_1(type_c2ats_GInetAddressMask, l1), !ptr_v_1(type_c2ats_GInetAddress, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_inet_address_mask_matches"
fun fun_c2ats_g_inet_address_mask_equal: {l1,l2:addr} (!ptr_v_1(type_c2ats_GInetAddressMask, l1), !ptr_v_1(type_c2ats_GInetAddressMask, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_inet_address_mask_equal"
// File: /usr/include/glib-2.0/gio/gsocketaddress.h
abst@ype struct_c2ats__GSocketAddressClass // FIXME! Forward declaration.
typedef type_c2ats_GSocketAddressClass = struct_c2ats__GSocketAddressClass
typedef struct_c2ats__GSocketAddress = $extype_struct"struct _GSocketAddress" of {
  parent_instance = type_c2ats_GObject
}
typedef struct_c2ats__GSocketAddressClass = $extype_struct"struct _GSocketAddressClass" of {
  parent_class = type_c2ats_GObjectClass,
  get_family = {l1:addr} (!ptr_v_1(type_c2ats_GSocketAddress, l1) | ptr l1) -> type_c2ats_GSocketFamily,
  get_native_size = {l1:addr} (!ptr_v_1(type_c2ats_GSocketAddress, l1) | ptr l1) -> type_c2ats_gssize,
  to_native = {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GSocketAddress, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_gpointer, type_c2ats_gsize, ptr l2) -> type_c2ats_gboolean
}
fun fun_c2ats_g_socket_address_get_type: () -> type_c2ats_GType = "mac#g_socket_address_get_type"
fun fun_c2ats_g_socket_address_get_family: {l1:addr} (!ptr_v_1(type_c2ats_GSocketAddress, l1) | ptr l1) -> type_c2ats_GSocketFamily = "mac#g_socket_address_get_family"
fun fun_c2ats_g_socket_address_new_from_native: (type_c2ats_gpointer, type_c2ats_gsize) -> [l1:addr] (ptr_v_1(type_c2ats_GSocketAddress, l1) | ptr l1) = "mac#g_socket_address_new_from_native"
fun fun_c2ats_g_socket_address_to_native: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GSocketAddress, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_gpointer, type_c2ats_gsize, ptr l2) -> type_c2ats_gboolean = "mac#g_socket_address_to_native"
fun fun_c2ats_g_socket_address_get_native_size: {l1:addr} (!ptr_v_1(type_c2ats_GSocketAddress, l1) | ptr l1) -> type_c2ats_gssize = "mac#g_socket_address_get_native_size"
// File: /usr/include/glib-2.0/gio/ginetsocketaddress.h
abst@ype struct_c2ats__GInetSocketAddressClass // FIXME! Forward declaration.
typedef type_c2ats_GInetSocketAddressClass = struct_c2ats__GInetSocketAddressClass
abst@ype struct_c2ats__GInetSocketAddressPrivate // FIXME! Forward declaration.
typedef type_c2ats_GInetSocketAddressPrivate = struct_c2ats__GInetSocketAddressPrivate
typedef struct_c2ats__GInetSocketAddress = $extype_struct"struct _GInetSocketAddress" of {
  parent_instance = type_c2ats_GSocketAddress,
  priv = ptr (* cPtr0(type_c2ats_GInetSocketAddressPrivate) *)
}
typedef struct_c2ats__GInetSocketAddressClass = $extype_struct"struct _GInetSocketAddressClass" of {
  parent_class = type_c2ats_GSocketAddressClass
}
fun fun_c2ats_g_inet_socket_address_get_type: () -> type_c2ats_GType = "mac#g_inet_socket_address_get_type"
fun fun_c2ats_g_inet_socket_address_new: {l1:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1) | ptr l1, type_c2ats_guint16) -> [l2:addr] (ptr_v_1(type_c2ats_GSocketAddress, l2) | ptr l2) = "mac#g_inet_socket_address_new"
fun fun_c2ats_g_inet_socket_address_new_from_string: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GSocketAddress, l2) | ptr l2) = "mac#g_inet_socket_address_new_from_string"
fun fun_c2ats_g_inet_socket_address_get_address: {l1:addr} (!ptr_v_1(type_c2ats_GInetSocketAddress, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GInetAddress, l2) | ptr l2) = "mac#g_inet_socket_address_get_address"
fun fun_c2ats_g_inet_socket_address_get_port: {l1:addr} (!ptr_v_1(type_c2ats_GInetSocketAddress, l1) | ptr l1) -> type_c2ats_guint16 = "mac#g_inet_socket_address_get_port"
fun fun_c2ats_g_inet_socket_address_get_flowinfo: {l1:addr} (!ptr_v_1(type_c2ats_GInetSocketAddress, l1) | ptr l1) -> type_c2ats_guint32 = "mac#g_inet_socket_address_get_flowinfo"
fun fun_c2ats_g_inet_socket_address_get_scope_id: {l1:addr} (!ptr_v_1(type_c2ats_GInetSocketAddress, l1) | ptr l1) -> type_c2ats_guint32 = "mac#g_inet_socket_address_get_scope_id"
// File: /usr/include/glib-2.0/gio/gioenumtypes.h
fun fun_c2ats_g_app_info_create_flags_get_type: () -> type_c2ats_GType = "mac#g_app_info_create_flags_get_type"
fun fun_c2ats_g_converter_flags_get_type: () -> type_c2ats_GType = "mac#g_converter_flags_get_type"
fun fun_c2ats_g_converter_result_get_type: () -> type_c2ats_GType = "mac#g_converter_result_get_type"
fun fun_c2ats_g_data_stream_byte_order_get_type: () -> type_c2ats_GType = "mac#g_data_stream_byte_order_get_type"
fun fun_c2ats_g_data_stream_newline_type_get_type: () -> type_c2ats_GType = "mac#g_data_stream_newline_type_get_type"
fun fun_c2ats_g_file_attribute_type_get_type: () -> type_c2ats_GType = "mac#g_file_attribute_type_get_type"
fun fun_c2ats_g_file_attribute_info_flags_get_type: () -> type_c2ats_GType = "mac#g_file_attribute_info_flags_get_type"
fun fun_c2ats_g_file_attribute_status_get_type: () -> type_c2ats_GType = "mac#g_file_attribute_status_get_type"
fun fun_c2ats_g_file_query_info_flags_get_type: () -> type_c2ats_GType = "mac#g_file_query_info_flags_get_type"
fun fun_c2ats_g_file_create_flags_get_type: () -> type_c2ats_GType = "mac#g_file_create_flags_get_type"
fun fun_c2ats_g_file_measure_flags_get_type: () -> type_c2ats_GType = "mac#g_file_measure_flags_get_type"
fun fun_c2ats_g_mount_mount_flags_get_type: () -> type_c2ats_GType = "mac#g_mount_mount_flags_get_type"
fun fun_c2ats_g_mount_unmount_flags_get_type: () -> type_c2ats_GType = "mac#g_mount_unmount_flags_get_type"
fun fun_c2ats_g_drive_start_flags_get_type: () -> type_c2ats_GType = "mac#g_drive_start_flags_get_type"
fun fun_c2ats_g_drive_start_stop_type_get_type: () -> type_c2ats_GType = "mac#g_drive_start_stop_type_get_type"
fun fun_c2ats_g_file_copy_flags_get_type: () -> type_c2ats_GType = "mac#g_file_copy_flags_get_type"
fun fun_c2ats_g_file_monitor_flags_get_type: () -> type_c2ats_GType = "mac#g_file_monitor_flags_get_type"
fun fun_c2ats_g_file_type_get_type: () -> type_c2ats_GType = "mac#g_file_type_get_type"
fun fun_c2ats_g_filesystem_preview_type_get_type: () -> type_c2ats_GType = "mac#g_filesystem_preview_type_get_type"
fun fun_c2ats_g_file_monitor_event_get_type: () -> type_c2ats_GType = "mac#g_file_monitor_event_get_type"
fun fun_c2ats_g_io_error_enum_get_type: () -> type_c2ats_GType = "mac#g_io_error_enum_get_type"
fun fun_c2ats_g_ask_password_flags_get_type: () -> type_c2ats_GType = "mac#g_ask_password_flags_get_type"
fun fun_c2ats_g_password_save_get_type: () -> type_c2ats_GType = "mac#g_password_save_get_type"
fun fun_c2ats_g_mount_operation_result_get_type: () -> type_c2ats_GType = "mac#g_mount_operation_result_get_type"
fun fun_c2ats_g_output_stream_splice_flags_get_type: () -> type_c2ats_GType = "mac#g_output_stream_splice_flags_get_type"
fun fun_c2ats_g_io_stream_splice_flags_get_type: () -> type_c2ats_GType = "mac#g_io_stream_splice_flags_get_type"
fun fun_c2ats_g_emblem_origin_get_type: () -> type_c2ats_GType = "mac#g_emblem_origin_get_type"
fun fun_c2ats_g_resolver_error_get_type: () -> type_c2ats_GType = "mac#g_resolver_error_get_type"
fun fun_c2ats_g_resolver_record_type_get_type: () -> type_c2ats_GType = "mac#g_resolver_record_type_get_type"
fun fun_c2ats_g_resource_error_get_type: () -> type_c2ats_GType = "mac#g_resource_error_get_type"
fun fun_c2ats_g_resource_flags_get_type: () -> type_c2ats_GType = "mac#g_resource_flags_get_type"
fun fun_c2ats_g_resource_lookup_flags_get_type: () -> type_c2ats_GType = "mac#g_resource_lookup_flags_get_type"
fun fun_c2ats_g_socket_family_get_type: () -> type_c2ats_GType = "mac#g_socket_family_get_type"
fun fun_c2ats_g_socket_type_get_type: () -> type_c2ats_GType = "mac#g_socket_type_get_type"
fun fun_c2ats_g_socket_msg_flags_get_type: () -> type_c2ats_GType = "mac#g_socket_msg_flags_get_type"
fun fun_c2ats_g_socket_protocol_get_type: () -> type_c2ats_GType = "mac#g_socket_protocol_get_type"
fun fun_c2ats_g_zlib_compressor_format_get_type: () -> type_c2ats_GType = "mac#g_zlib_compressor_format_get_type"
fun fun_c2ats_g_unix_socket_address_type_get_type: () -> type_c2ats_GType = "mac#g_unix_socket_address_type_get_type"
fun fun_c2ats_g_bus_type_get_type: () -> type_c2ats_GType = "mac#g_bus_type_get_type"
fun fun_c2ats_g_bus_name_owner_flags_get_type: () -> type_c2ats_GType = "mac#g_bus_name_owner_flags_get_type"
fun fun_c2ats_g_bus_name_watcher_flags_get_type: () -> type_c2ats_GType = "mac#g_bus_name_watcher_flags_get_type"
fun fun_c2ats_g_dbus_proxy_flags_get_type: () -> type_c2ats_GType = "mac#g_dbus_proxy_flags_get_type"
fun fun_c2ats_g_dbus_error_get_type: () -> type_c2ats_GType = "mac#g_dbus_error_get_type"
fun fun_c2ats_g_dbus_connection_flags_get_type: () -> type_c2ats_GType = "mac#g_dbus_connection_flags_get_type"
fun fun_c2ats_g_dbus_capability_flags_get_type: () -> type_c2ats_GType = "mac#g_dbus_capability_flags_get_type"
fun fun_c2ats_g_dbus_call_flags_get_type: () -> type_c2ats_GType = "mac#g_dbus_call_flags_get_type"
fun fun_c2ats_g_dbus_message_type_get_type: () -> type_c2ats_GType = "mac#g_dbus_message_type_get_type"
fun fun_c2ats_g_dbus_message_flags_get_type: () -> type_c2ats_GType = "mac#g_dbus_message_flags_get_type"
fun fun_c2ats_g_dbus_message_header_field_get_type: () -> type_c2ats_GType = "mac#g_dbus_message_header_field_get_type"
fun fun_c2ats_g_dbus_property_info_flags_get_type: () -> type_c2ats_GType = "mac#g_dbus_property_info_flags_get_type"
fun fun_c2ats_g_dbus_subtree_flags_get_type: () -> type_c2ats_GType = "mac#g_dbus_subtree_flags_get_type"
fun fun_c2ats_g_dbus_server_flags_get_type: () -> type_c2ats_GType = "mac#g_dbus_server_flags_get_type"
fun fun_c2ats_g_dbus_signal_flags_get_type: () -> type_c2ats_GType = "mac#g_dbus_signal_flags_get_type"
fun fun_c2ats_g_dbus_send_message_flags_get_type: () -> type_c2ats_GType = "mac#g_dbus_send_message_flags_get_type"
fun fun_c2ats_g_credentials_type_get_type: () -> type_c2ats_GType = "mac#g_credentials_type_get_type"
fun fun_c2ats_g_dbus_message_byte_order_get_type: () -> type_c2ats_GType = "mac#g_dbus_message_byte_order_get_type"
fun fun_c2ats_g_application_flags_get_type: () -> type_c2ats_GType = "mac#g_application_flags_get_type"
fun fun_c2ats_g_tls_error_get_type: () -> type_c2ats_GType = "mac#g_tls_error_get_type"
fun fun_c2ats_g_tls_certificate_flags_get_type: () -> type_c2ats_GType = "mac#g_tls_certificate_flags_get_type"
fun fun_c2ats_g_tls_authentication_mode_get_type: () -> type_c2ats_GType = "mac#g_tls_authentication_mode_get_type"
fun fun_c2ats_g_tls_rehandshake_mode_get_type: () -> type_c2ats_GType = "mac#g_tls_rehandshake_mode_get_type"
fun fun_c2ats_g_tls_password_flags_get_type: () -> type_c2ats_GType = "mac#g_tls_password_flags_get_type"
fun fun_c2ats_g_tls_interaction_result_get_type: () -> type_c2ats_GType = "mac#g_tls_interaction_result_get_type"
fun fun_c2ats_g_dbus_interface_skeleton_flags_get_type: () -> type_c2ats_GType = "mac#g_dbus_interface_skeleton_flags_get_type"
fun fun_c2ats_g_dbus_object_manager_client_flags_get_type: () -> type_c2ats_GType = "mac#g_dbus_object_manager_client_flags_get_type"
fun fun_c2ats_g_tls_database_verify_flags_get_type: () -> type_c2ats_GType = "mac#g_tls_database_verify_flags_get_type"
fun fun_c2ats_g_tls_database_lookup_flags_get_type: () -> type_c2ats_GType = "mac#g_tls_database_lookup_flags_get_type"
fun fun_c2ats_g_tls_certificate_request_flags_get_type: () -> type_c2ats_GType = "mac#g_tls_certificate_request_flags_get_type"
fun fun_c2ats_g_io_module_scope_flags_get_type: () -> type_c2ats_GType = "mac#g_io_module_scope_flags_get_type"
fun fun_c2ats_g_socket_client_event_get_type: () -> type_c2ats_GType = "mac#g_socket_client_event_get_type"
fun fun_c2ats_g_socket_listener_event_get_type: () -> type_c2ats_GType = "mac#g_socket_listener_event_get_type"
fun fun_c2ats_g_test_dbus_flags_get_type: () -> type_c2ats_GType = "mac#g_test_dbus_flags_get_type"
fun fun_c2ats_g_subprocess_flags_get_type: () -> type_c2ats_GType = "mac#g_subprocess_flags_get_type"
fun fun_c2ats_g_notification_priority_get_type: () -> type_c2ats_GType = "mac#g_notification_priority_get_type"
fun fun_c2ats_g_network_connectivity_get_type: () -> type_c2ats_GType = "mac#g_network_connectivity_get_type"
fun fun_c2ats_g_settings_bind_flags_get_type: () -> type_c2ats_GType = "mac#g_settings_bind_flags_get_type"
// File: /usr/include/glib-2.0/gmodule.h
typedef type_c2ats_GModuleFlags = int
#define enum_c2ats_G_MODULE_BIND_LAZY 1 << 0
#define enum_c2ats_G_MODULE_BIND_LOCAL 1 << 1
#define enum_c2ats_G_MODULE_BIND_MASK 0x3
abst@ype struct_c2ats__GModule // FIXME! Forward declaration.
typedef type_c2ats_GModule = struct_c2ats__GModule
typedef type_c2ats_GModuleCheckInit = {l1:addr} (!ptr_v_1(type_c2ats_GModule, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2)
typedef type_c2ats_GModuleUnload = {l1:addr} (!ptr_v_1(type_c2ats_GModule, l1) | ptr l1) -> void
fun fun_c2ats_g_module_supported: () -> type_c2ats_gboolean = "mac#g_module_supported"
fun fun_c2ats_g_module_open: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_GModuleFlags) -> [l2:addr] (ptr_v_1(type_c2ats_GModule, l2) | ptr l2) = "mac#g_module_open"
fun fun_c2ats_g_module_close: {l1:addr} (!ptr_v_1(type_c2ats_GModule, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_module_close"
fun fun_c2ats_g_module_make_resident: {l1:addr} (!ptr_v_1(type_c2ats_GModule, l1) | ptr l1) -> void = "mac#g_module_make_resident"
fun fun_c2ats_g_module_error: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#g_module_error"
fun fun_c2ats_g_module_symbol: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GModule, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gpointer, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_module_symbol"
fun fun_c2ats_g_module_name: {l1:addr} (!ptr_v_1(type_c2ats_GModule, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_module_name"
fun fun_c2ats_g_module_build_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_module_build_path"
// File: /usr/include/glib-2.0/gio/giomodule.h
abst@ype struct_c2ats__GIOModuleScope // FIXME! Forward declaration.
typedef type_c2ats_GIOModuleScope = struct_c2ats__GIOModuleScope
fun fun_c2ats_g_io_module_scope_new: (type_c2ats_GIOModuleScopeFlags) -> [l1:addr] (ptr_v_1(type_c2ats_GIOModuleScope, l1) | ptr l1) = "mac#g_io_module_scope_new"
fun fun_c2ats_g_io_module_scope_free: {l1:addr} (!ptr_v_1(type_c2ats_GIOModuleScope, l1) | ptr l1) -> void = "mac#g_io_module_scope_free"
fun fun_c2ats_g_io_module_scope_block: {l1,l2:addr} (!ptr_v_1(type_c2ats_GIOModuleScope, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_io_module_scope_block"
abst@ype struct_c2ats__GIOModuleClass // FIXME! Forward declaration.
typedef type_c2ats_GIOModuleClass = struct_c2ats__GIOModuleClass
fun fun_c2ats_g_io_module_get_type: () -> type_c2ats_GType = "mac#g_io_module_get_type"
fun fun_c2ats_g_io_module_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIOModule, l2) | ptr l2) = "mac#g_io_module_new"
fun fun_c2ats_g_io_modules_scan_all_in_directory: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> void = "mac#g_io_modules_scan_all_in_directory"
fun fun_c2ats_g_io_modules_load_all_in_directory: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_io_modules_load_all_in_directory"
fun fun_c2ats_g_io_modules_scan_all_in_directory_with_scope: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GIOModuleScope, l2) | ptr l1, ptr l2) -> void = "mac#g_io_modules_scan_all_in_directory_with_scope"
fun fun_c2ats_g_io_modules_load_all_in_directory_with_scope: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GIOModuleScope, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GList, l3) | ptr l3) = "mac#g_io_modules_load_all_in_directory_with_scope"
fun fun_c2ats_g_io_extension_point_register: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIOExtensionPoint, l2) | ptr l2) = "mac#g_io_extension_point_register"
fun fun_c2ats_g_io_extension_point_lookup: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIOExtensionPoint, l2) | ptr l2) = "mac#g_io_extension_point_lookup"
fun fun_c2ats_g_io_extension_point_set_required_type: {l1:addr} (!ptr_v_1(type_c2ats_GIOExtensionPoint, l1) | ptr l1, type_c2ats_GType) -> void = "mac#g_io_extension_point_set_required_type"
fun fun_c2ats_g_io_extension_point_get_required_type: {l1:addr} (!ptr_v_1(type_c2ats_GIOExtensionPoint, l1) | ptr l1) -> type_c2ats_GType = "mac#g_io_extension_point_get_required_type"
fun fun_c2ats_g_io_extension_point_get_extensions: {l1:addr} (!ptr_v_1(type_c2ats_GIOExtensionPoint, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_io_extension_point_get_extensions"
fun fun_c2ats_g_io_extension_point_get_extension_by_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GIOExtensionPoint, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GIOExtension, l3) | ptr l3) = "mac#g_io_extension_point_get_extension_by_name"
fun fun_c2ats_g_io_extension_point_implement: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2) | ptr l1, type_c2ats_GType, ptr l2, type_c2ats_gint) -> [l3:addr] (ptr_v_1(type_c2ats_GIOExtension, l3) | ptr l3) = "mac#g_io_extension_point_implement"
fun fun_c2ats_g_io_extension_get_type: {l1:addr} (!ptr_v_1(type_c2ats_GIOExtension, l1) | ptr l1) -> type_c2ats_GType = "mac#g_io_extension_get_type"
fun fun_c2ats_g_io_extension_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GIOExtension, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_io_extension_get_name"
fun fun_c2ats_g_io_extension_get_priority: {l1:addr} (!ptr_v_1(type_c2ats_GIOExtension, l1) | ptr l1) -> type_c2ats_gint = "mac#g_io_extension_get_priority"
fun fun_c2ats_g_io_extension_ref_class: {l1:addr} (!ptr_v_1(type_c2ats_GIOExtension, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTypeClass, l2) | ptr l2) = "mac#g_io_extension_ref_class"
fun fun_c2ats_g_io_module_load: {l1:addr} (!ptr_v_1(type_c2ats_GIOModule, l1) | ptr l1) -> void = "mac#g_io_module_load"
fun fun_c2ats_g_io_module_unload: {l1:addr} (!ptr_v_1(type_c2ats_GIOModule, l1) | ptr l1) -> void = "mac#g_io_module_unload"
fun fun_c2ats_g_io_module_query: () -> [l1,l1_1:addr] (ptr_v_2(char, l1, l1_1) | ptr l1) = "mac#g_io_module_query"
// File: /usr/include/glib-2.0/gio/gioscheduler.h
fun fun_c2ats_g_io_scheduler_push_job: {l1:addr} (!ptr_v_1(type_c2ats_GCancellable, l1) | type_c2ats_GIOSchedulerJobFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify, type_c2ats_gint, ptr l1) -> void = "mac#g_io_scheduler_push_job"
fun fun_c2ats_g_io_scheduler_cancel_all_jobs: () -> void = "mac#g_io_scheduler_cancel_all_jobs"
fun fun_c2ats_g_io_scheduler_job_send_to_mainloop: {l1:addr} (!ptr_v_1(type_c2ats_GIOSchedulerJob, l1) | ptr l1, type_c2ats_GSourceFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_gboolean = "mac#g_io_scheduler_job_send_to_mainloop"
fun fun_c2ats_g_io_scheduler_job_send_to_mainloop_async: {l1:addr} (!ptr_v_1(type_c2ats_GIOSchedulerJob, l1) | ptr l1, type_c2ats_GSourceFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#g_io_scheduler_job_send_to_mainloop_async"
// File: /usr/include/glib-2.0/gio/gloadableicon.h
abst@ype struct_c2ats__GLoadableIconIface // FIXME! Forward declaration.
typedef type_c2ats_GLoadableIconIface = struct_c2ats__GLoadableIconIface
typedef struct_c2ats__GLoadableIconIface = $extype_struct"struct _GLoadableIconIface" of {
  g_iface = type_c2ats_GTypeInterface,
  load = {l1,l2,l2_1,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GLoadableIcon, l1), !ptr_v_2(char, l2, l2_1), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, int, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GInputStream, l5) | ptr l5),
  load_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GLoadableIcon, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  load_finish = {l1,l2,l3,l3_1,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GLoadableIcon, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(char, l3, l3_1), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GInputStream, l5) | ptr l5)
}
fun fun_c2ats_g_loadable_icon_get_type: () -> type_c2ats_GType = "mac#g_loadable_icon_get_type"
fun fun_c2ats_g_loadable_icon_load: {l1,l2,l2_1,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GLoadableIcon, l1), !ptr_v_2(char, l2, l2_1), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, int, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GInputStream, l5) | ptr l5) = "mac#g_loadable_icon_load"
fun fun_c2ats_g_loadable_icon_load_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GLoadableIcon, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_loadable_icon_load_async"
fun fun_c2ats_g_loadable_icon_load_finish: {l1,l2,l3,l3_1,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GLoadableIcon, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(char, l3, l3_1), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GInputStream, l5) | ptr l5) = "mac#g_loadable_icon_load_finish"
// File: /usr/include/glib-2.0/gio/gmemoryinputstream.h
abst@ype struct_c2ats__GMemoryInputStreamClass // FIXME! Forward declaration.
typedef type_c2ats_GMemoryInputStreamClass = struct_c2ats__GMemoryInputStreamClass
abst@ype struct_c2ats__GMemoryInputStreamPrivate // FIXME! Forward declaration.
typedef type_c2ats_GMemoryInputStreamPrivate = struct_c2ats__GMemoryInputStreamPrivate
typedef struct_c2ats__GMemoryInputStream = $extype_struct"struct _GMemoryInputStream" of {
  parent_instance = type_c2ats_GInputStream,
  priv = ptr (* cPtr0(type_c2ats_GMemoryInputStreamPrivate) *)
}
typedef struct_c2ats__GMemoryInputStreamClass = $extype_struct"struct _GMemoryInputStreamClass" of {
  parent_class = type_c2ats_GInputStreamClass,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void
}
fun fun_c2ats_g_memory_input_stream_get_type: () -> type_c2ats_GType = "mac#g_memory_input_stream_get_type"
fun fun_c2ats_g_memory_input_stream_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GInputStream, l1) | ptr l1) = "mac#g_memory_input_stream_new"
fun fun_c2ats_g_memory_input_stream_new_from_data: (ptr, type_c2ats_gssize, type_c2ats_GDestroyNotify) -> [l1:addr] (ptr_v_1(type_c2ats_GInputStream, l1) | ptr l1) = "mac#g_memory_input_stream_new_from_data"
fun fun_c2ats_g_memory_input_stream_new_from_bytes: {l1:addr} (!ptr_v_1(type_c2ats_GBytes, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GInputStream, l2) | ptr l2) = "mac#g_memory_input_stream_new_from_bytes"
fun fun_c2ats_g_memory_input_stream_add_data: {l1:addr} (!ptr_v_1(type_c2ats_GMemoryInputStream, l1) | ptr l1, ptr, type_c2ats_gssize, type_c2ats_GDestroyNotify) -> void = "mac#g_memory_input_stream_add_data"
fun fun_c2ats_g_memory_input_stream_add_bytes: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMemoryInputStream, l1), !ptr_v_1(type_c2ats_GBytes, l2) | ptr l1, ptr l2) -> void = "mac#g_memory_input_stream_add_bytes"
// File: /usr/include/glib-2.0/gio/gmemoryoutputstream.h
abst@ype struct_c2ats__GMemoryOutputStreamClass // FIXME! Forward declaration.
typedef type_c2ats_GMemoryOutputStreamClass = struct_c2ats__GMemoryOutputStreamClass
abst@ype struct_c2ats__GMemoryOutputStreamPrivate // FIXME! Forward declaration.
typedef type_c2ats_GMemoryOutputStreamPrivate = struct_c2ats__GMemoryOutputStreamPrivate
typedef struct_c2ats__GMemoryOutputStream = $extype_struct"struct _GMemoryOutputStream" of {
  parent_instance = type_c2ats_GOutputStream,
  priv = ptr (* cPtr0(type_c2ats_GMemoryOutputStreamPrivate) *)
}
typedef struct_c2ats__GMemoryOutputStreamClass = $extype_struct"struct _GMemoryOutputStreamClass" of {
  parent_class = type_c2ats_GOutputStreamClass,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void
}
typedef type_c2ats_GReallocFunc = (type_c2ats_gpointer, type_c2ats_gsize) -> type_c2ats_gpointer
fun fun_c2ats_g_memory_output_stream_get_type: () -> type_c2ats_GType = "mac#g_memory_output_stream_get_type"
fun fun_c2ats_g_memory_output_stream_new: (type_c2ats_gpointer, type_c2ats_gsize, type_c2ats_GReallocFunc, type_c2ats_GDestroyNotify) -> [l1:addr] (ptr_v_1(type_c2ats_GOutputStream, l1) | ptr l1) = "mac#g_memory_output_stream_new"
fun fun_c2ats_g_memory_output_stream_new_resizable: () -> [l1:addr] (ptr_v_1(type_c2ats_GOutputStream, l1) | ptr l1) = "mac#g_memory_output_stream_new_resizable"
fun fun_c2ats_g_memory_output_stream_get_data: {l1:addr} (!ptr_v_1(type_c2ats_GMemoryOutputStream, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_memory_output_stream_get_data"
fun fun_c2ats_g_memory_output_stream_get_size: {l1:addr} (!ptr_v_1(type_c2ats_GMemoryOutputStream, l1) | ptr l1) -> type_c2ats_gsize = "mac#g_memory_output_stream_get_size"
fun fun_c2ats_g_memory_output_stream_get_data_size: {l1:addr} (!ptr_v_1(type_c2ats_GMemoryOutputStream, l1) | ptr l1) -> type_c2ats_gsize = "mac#g_memory_output_stream_get_data_size"
fun fun_c2ats_g_memory_output_stream_steal_data: {l1:addr} (!ptr_v_1(type_c2ats_GMemoryOutputStream, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_memory_output_stream_steal_data"
fun fun_c2ats_g_memory_output_stream_steal_as_bytes: {l1:addr} (!ptr_v_1(type_c2ats_GMemoryOutputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GBytes, l2) | ptr l2) = "mac#g_memory_output_stream_steal_as_bytes"
// File: /usr/include/glib-2.0/gio/gmount.h
abst@ype struct_c2ats__GMountIface // FIXME! Forward declaration.
typedef type_c2ats_GMountIface = struct_c2ats__GMountIface
typedef struct_c2ats__GMountIface = $extype_struct"struct _GMountIface" of {
  g_iface = type_c2ats_GTypeInterface,
  changed = {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> void,
  unmounted = {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> void,
  get_root = {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2),
  get_name = {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2),
  get_icon = {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2),
  get_uuid = {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2),
  get_volume = {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVolume, l2) | ptr l2),
  get_drive = {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDrive, l2) | ptr l2),
  can_unmount = {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> type_c2ats_gboolean,
  can_eject = {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> type_c2ats_gboolean,
  unmount = {l1,l2:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  unmount_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  eject = {l1,l2:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  eject_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  remount = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountMountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  remount_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  guess_content_type = {l1,l2:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_gboolean, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  guess_content_type_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4,l4_1:addr] (ptr_v_2(type_c2ats_gchar, l4, l4_1) | ptr l4),
  guess_content_type_sync = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_gboolean, ptr l2, ptr l3) -> [l4,l4_1:addr] (ptr_v_2(type_c2ats_gchar, l4, l4_1) | ptr l4),
  pre_unmount = {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> void,
  unmount_with_operation = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  unmount_with_operation_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  eject_with_operation = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  eject_with_operation_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  get_default_location = {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2),
  get_sort_key = {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  get_symbolic_icon = {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2)
}
fun fun_c2ats_g_mount_get_type: () -> type_c2ats_GType = "mac#g_mount_get_type"
fun fun_c2ats_g_mount_get_root: {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2) = "mac#g_mount_get_root"
fun fun_c2ats_g_mount_get_default_location: {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2) = "mac#g_mount_get_default_location"
fun fun_c2ats_g_mount_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_mount_get_name"
fun fun_c2ats_g_mount_get_icon: {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#g_mount_get_icon"
fun fun_c2ats_g_mount_get_symbolic_icon: {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#g_mount_get_symbolic_icon"
fun fun_c2ats_g_mount_get_uuid: {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_mount_get_uuid"
fun fun_c2ats_g_mount_get_volume: {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVolume, l2) | ptr l2) = "mac#g_mount_get_volume"
fun fun_c2ats_g_mount_get_drive: {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDrive, l2) | ptr l2) = "mac#g_mount_get_drive"
fun fun_c2ats_g_mount_can_unmount: {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_mount_can_unmount"
fun fun_c2ats_g_mount_can_eject: {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_mount_can_eject"
fun fun_c2ats_g_mount_unmount: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_mount_unmount"
fun fun_c2ats_g_mount_unmount_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_mount_unmount_finish"
fun fun_c2ats_g_mount_eject: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_mount_eject"
fun fun_c2ats_g_mount_eject_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_mount_eject_finish"
fun fun_c2ats_g_mount_remount: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountMountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_mount_remount"
fun fun_c2ats_g_mount_remount_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_mount_remount_finish"
fun fun_c2ats_g_mount_guess_content_type: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_gboolean, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_mount_guess_content_type"
fun fun_c2ats_g_mount_guess_content_type_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4,l4_1:addr] (ptr_v_2(type_c2ats_gchar, l4, l4_1) | ptr l4) = "mac#g_mount_guess_content_type_finish"
fun fun_c2ats_g_mount_guess_content_type_sync: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_gboolean, ptr l2, ptr l3) -> [l4,l4_1:addr] (ptr_v_2(type_c2ats_gchar, l4, l4_1) | ptr l4) = "mac#g_mount_guess_content_type_sync"
fun fun_c2ats_g_mount_is_shadowed: {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_mount_is_shadowed"
fun fun_c2ats_g_mount_shadow: {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> void = "mac#g_mount_shadow"
fun fun_c2ats_g_mount_unshadow: {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> void = "mac#g_mount_unshadow"
fun fun_c2ats_g_mount_unmount_with_operation: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_mount_unmount_with_operation"
fun fun_c2ats_g_mount_unmount_with_operation_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_mount_unmount_with_operation_finish"
fun fun_c2ats_g_mount_eject_with_operation: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_mount_eject_with_operation"
fun fun_c2ats_g_mount_eject_with_operation_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_mount_eject_with_operation_finish"
fun fun_c2ats_g_mount_get_sort_key: {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_mount_get_sort_key"
// File: /usr/include/glib-2.0/gio/gmountoperation.h
abst@ype struct_c2ats__GMountOperationClass // FIXME! Forward declaration.
typedef type_c2ats_GMountOperationClass = struct_c2ats__GMountOperationClass
abst@ype struct_c2ats__GMountOperationPrivate // FIXME! Forward declaration.
typedef type_c2ats_GMountOperationPrivate = struct_c2ats__GMountOperationPrivate
typedef struct_c2ats__GMountOperation = $extype_struct"struct _GMountOperation" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GMountOperationPrivate) *)
}
typedef struct_c2ats__GMountOperationClass = $extype_struct"struct _GMountOperationClass" of {
  parent_class = type_c2ats_GObjectClass,
  ask_password = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GMountOperation, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3), !ptr_v_1(char, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_GAskPasswordFlags) -> void,
  ask_question = {l1,l2:addr} (!ptr_v_1(type_c2ats_GMountOperation, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, @[cPtr0(char)][0]) -> void,
  reply = {l1:addr} (!ptr_v_1(type_c2ats_GMountOperation, l1) | ptr l1, type_c2ats_GMountOperationResult) -> void,
  aborted = {l1:addr} (!ptr_v_1(type_c2ats_GMountOperation, l1) | ptr l1) -> void,
  show_processes = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMountOperation, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GArray, l3) | ptr l1, ptr l2, ptr l3, @[cPtr0(type_c2ats_gchar)][0]) -> void,
  show_unmount_progress = {l1,l2:addr} (!ptr_v_1(type_c2ats_GMountOperation, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint64, type_c2ats_gint64) -> void,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void,
  _g_reserved6 = () -> void,
  _g_reserved7 = () -> void,
  _g_reserved8 = () -> void,
  _g_reserved9 = () -> void
}
fun fun_c2ats_g_mount_operation_get_type: () -> type_c2ats_GType = "mac#g_mount_operation_get_type"
fun fun_c2ats_g_mount_operation_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GMountOperation, l1) | ptr l1) = "mac#g_mount_operation_new"
fun fun_c2ats_g_mount_operation_get_username: {l1:addr} (!ptr_v_1(type_c2ats_GMountOperation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_mount_operation_get_username"
fun fun_c2ats_g_mount_operation_set_username: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMountOperation, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#g_mount_operation_set_username"
fun fun_c2ats_g_mount_operation_get_password: {l1:addr} (!ptr_v_1(type_c2ats_GMountOperation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_mount_operation_get_password"
fun fun_c2ats_g_mount_operation_set_password: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMountOperation, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#g_mount_operation_set_password"
fun fun_c2ats_g_mount_operation_get_anonymous: {l1:addr} (!ptr_v_1(type_c2ats_GMountOperation, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_mount_operation_get_anonymous"
fun fun_c2ats_g_mount_operation_set_anonymous: {l1:addr} (!ptr_v_1(type_c2ats_GMountOperation, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_mount_operation_set_anonymous"
fun fun_c2ats_g_mount_operation_get_domain: {l1:addr} (!ptr_v_1(type_c2ats_GMountOperation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_mount_operation_get_domain"
fun fun_c2ats_g_mount_operation_set_domain: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMountOperation, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#g_mount_operation_set_domain"
fun fun_c2ats_g_mount_operation_get_password_save: {l1:addr} (!ptr_v_1(type_c2ats_GMountOperation, l1) | ptr l1) -> type_c2ats_GPasswordSave = "mac#g_mount_operation_get_password_save"
fun fun_c2ats_g_mount_operation_set_password_save: {l1:addr} (!ptr_v_1(type_c2ats_GMountOperation, l1) | ptr l1, type_c2ats_GPasswordSave) -> void = "mac#g_mount_operation_set_password_save"
fun fun_c2ats_g_mount_operation_get_choice: {l1:addr} (!ptr_v_1(type_c2ats_GMountOperation, l1) | ptr l1) -> int = "mac#g_mount_operation_get_choice"
fun fun_c2ats_g_mount_operation_set_choice: {l1:addr} (!ptr_v_1(type_c2ats_GMountOperation, l1) | ptr l1, int) -> void = "mac#g_mount_operation_set_choice"
fun fun_c2ats_g_mount_operation_reply: {l1:addr} (!ptr_v_1(type_c2ats_GMountOperation, l1) | ptr l1, type_c2ats_GMountOperationResult) -> void = "mac#g_mount_operation_reply"
// File: /usr/include/glib-2.0/gio/gvolumemonitor.h
abst@ype struct_c2ats__GVolumeMonitorClass // FIXME! Forward declaration.
typedef type_c2ats_GVolumeMonitorClass = struct_c2ats__GVolumeMonitorClass
typedef struct_c2ats__GVolumeMonitor = $extype_struct"struct _GVolumeMonitor" of {
  parent_instance = type_c2ats_GObject,
  priv = type_c2ats_gpointer
}
typedef struct_c2ats__GVolumeMonitorClass = $extype_struct"struct _GVolumeMonitorClass" of {
  parent_class = type_c2ats_GObjectClass,
  volume_added = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1), !ptr_v_1(type_c2ats_GVolume, l2) | ptr l1, ptr l2) -> void,
  volume_removed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1), !ptr_v_1(type_c2ats_GVolume, l2) | ptr l1, ptr l2) -> void,
  volume_changed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1), !ptr_v_1(type_c2ats_GVolume, l2) | ptr l1, ptr l2) -> void,
  mount_added = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1), !ptr_v_1(type_c2ats_GMount, l2) | ptr l1, ptr l2) -> void,
  mount_removed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1), !ptr_v_1(type_c2ats_GMount, l2) | ptr l1, ptr l2) -> void,
  mount_pre_unmount = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1), !ptr_v_1(type_c2ats_GMount, l2) | ptr l1, ptr l2) -> void,
  mount_changed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1), !ptr_v_1(type_c2ats_GMount, l2) | ptr l1, ptr l2) -> void,
  drive_connected = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1), !ptr_v_1(type_c2ats_GDrive, l2) | ptr l1, ptr l2) -> void,
  drive_disconnected = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1), !ptr_v_1(type_c2ats_GDrive, l2) | ptr l1, ptr l2) -> void,
  drive_changed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1), !ptr_v_1(type_c2ats_GDrive, l2) | ptr l1, ptr l2) -> void,
  is_supported = () -> type_c2ats_gboolean,
  get_connected_drives = {l1:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2),
  get_volumes = {l1:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2),
  get_mounts = {l1:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2),
  get_volume_for_uuid = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVolume, l3) | ptr l3),
  get_mount_for_uuid = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GMount, l3) | ptr l3),
  adopt_orphan_mount = {l1,l2:addr} (!ptr_v_1(type_c2ats_GMount, l1), !ptr_v_1(type_c2ats_GVolumeMonitor, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVolume, l3) | ptr l3),
  drive_eject_button = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1), !ptr_v_1(type_c2ats_GDrive, l2) | ptr l1, ptr l2) -> void,
  drive_stop_button = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1), !ptr_v_1(type_c2ats_GDrive, l2) | ptr l1, ptr l2) -> void,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void,
  _g_reserved6 = () -> void
}
fun fun_c2ats_g_volume_monitor_get_type: () -> type_c2ats_GType = "mac#g_volume_monitor_get_type"
fun fun_c2ats_g_volume_monitor_get: () -> [l1:addr] (ptr_v_1(type_c2ats_GVolumeMonitor, l1) | ptr l1) = "mac#g_volume_monitor_get"
fun fun_c2ats_g_volume_monitor_get_connected_drives: {l1:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_volume_monitor_get_connected_drives"
fun fun_c2ats_g_volume_monitor_get_volumes: {l1:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_volume_monitor_get_volumes"
fun fun_c2ats_g_volume_monitor_get_mounts: {l1:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_volume_monitor_get_mounts"
fun fun_c2ats_g_volume_monitor_get_volume_for_uuid: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVolume, l3) | ptr l3) = "mac#g_volume_monitor_get_volume_for_uuid"
fun fun_c2ats_g_volume_monitor_get_mount_for_uuid: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolumeMonitor, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GMount, l3) | ptr l3) = "mac#g_volume_monitor_get_mount_for_uuid"
fun fun_c2ats_g_volume_monitor_adopt_orphan_mount: {l1:addr} (!ptr_v_1(type_c2ats_GMount, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVolume, l2) | ptr l2) = "mac#g_volume_monitor_adopt_orphan_mount"
// File: /usr/include/glib-2.0/gio/gnativevolumemonitor.h
abst@ype struct_c2ats__GNativeVolumeMonitor // FIXME! Forward declaration.
typedef type_c2ats_GNativeVolumeMonitor = struct_c2ats__GNativeVolumeMonitor
abst@ype struct_c2ats__GNativeVolumeMonitorClass // FIXME! Forward declaration.
typedef type_c2ats_GNativeVolumeMonitorClass = struct_c2ats__GNativeVolumeMonitorClass
typedef struct_c2ats__GNativeVolumeMonitor = $extype_struct"struct _GNativeVolumeMonitor" of {
  parent_instance = type_c2ats_GVolumeMonitor
}
typedef struct_c2ats__GNativeVolumeMonitorClass = $extype_struct"struct _GNativeVolumeMonitorClass" of {
  parent_class = type_c2ats_GVolumeMonitorClass,
  get_mount_for_mount_path = {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GMount, l3) | ptr l3)
}
fun fun_c2ats_g_native_volume_monitor_get_type: () -> type_c2ats_GType = "mac#g_native_volume_monitor_get_type"
// File: /usr/include/glib-2.0/gio/gnetworkaddress.h
abst@ype struct_c2ats__GNetworkAddressClass // FIXME! Forward declaration.
typedef type_c2ats_GNetworkAddressClass = struct_c2ats__GNetworkAddressClass
abst@ype struct_c2ats__GNetworkAddressPrivate // FIXME! Forward declaration.
typedef type_c2ats_GNetworkAddressPrivate = struct_c2ats__GNetworkAddressPrivate
typedef struct_c2ats__GNetworkAddress = $extype_struct"struct _GNetworkAddress" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GNetworkAddressPrivate) *)
}
typedef struct_c2ats__GNetworkAddressClass = $extype_struct"struct _GNetworkAddressClass" of {
  parent_class = type_c2ats_GObjectClass
}
fun fun_c2ats_g_network_address_get_type: () -> type_c2ats_GType = "mac#g_network_address_get_type"
fun fun_c2ats_g_network_address_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_guint16) -> [l2:addr] (ptr_v_1(type_c2ats_GSocketConnectable, l2) | ptr l2) = "mac#g_network_address_new"
fun fun_c2ats_g_network_address_new_loopback: (type_c2ats_guint16) -> [l1:addr] (ptr_v_1(type_c2ats_GSocketConnectable, l1) | ptr l1) = "mac#g_network_address_new_loopback"
fun fun_c2ats_g_network_address_parse: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_guint16, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSocketConnectable, l3) | ptr l3) = "mac#g_network_address_parse"
fun fun_c2ats_g_network_address_parse_uri: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_guint16, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSocketConnectable, l3) | ptr l3) = "mac#g_network_address_parse_uri"
fun fun_c2ats_g_network_address_get_hostname: {l1:addr} (!ptr_v_1(type_c2ats_GNetworkAddress, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_network_address_get_hostname"
fun fun_c2ats_g_network_address_get_port: {l1:addr} (!ptr_v_1(type_c2ats_GNetworkAddress, l1) | ptr l1) -> type_c2ats_guint16 = "mac#g_network_address_get_port"
fun fun_c2ats_g_network_address_get_scheme: {l1:addr} (!ptr_v_1(type_c2ats_GNetworkAddress, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_network_address_get_scheme"
// File: /usr/include/glib-2.0/gio/gnetworkmonitor.h
abst@ype struct_c2ats__GNetworkMonitorInterface // FIXME! Forward declaration.
typedef type_c2ats_GNetworkMonitorInterface = struct_c2ats__GNetworkMonitorInterface
typedef struct_c2ats__GNetworkMonitorInterface = $extype_struct"struct _GNetworkMonitorInterface" of {
  g_iface = type_c2ats_GTypeInterface,
  network_changed = {l1:addr} (!ptr_v_1(type_c2ats_GNetworkMonitor, l1) | ptr l1, type_c2ats_gboolean) -> void,
  can_reach = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GNetworkMonitor, l1), !ptr_v_1(type_c2ats_GSocketConnectable, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean,
  can_reach_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GNetworkMonitor, l1), !ptr_v_1(type_c2ats_GSocketConnectable, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  can_reach_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GNetworkMonitor, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean
}
fun fun_c2ats_g_network_monitor_get_type: () -> type_c2ats_GType = "mac#g_network_monitor_get_type"
fun fun_c2ats_g_network_monitor_get_default: () -> [l1:addr] (ptr_v_1(type_c2ats_GNetworkMonitor, l1) | ptr l1) = "mac#g_network_monitor_get_default"
fun fun_c2ats_g_network_monitor_get_network_available: {l1:addr} (!ptr_v_1(type_c2ats_GNetworkMonitor, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_network_monitor_get_network_available"
fun fun_c2ats_g_network_monitor_get_network_metered: {l1:addr} (!ptr_v_1(type_c2ats_GNetworkMonitor, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_network_monitor_get_network_metered"
fun fun_c2ats_g_network_monitor_get_connectivity: {l1:addr} (!ptr_v_1(type_c2ats_GNetworkMonitor, l1) | ptr l1) -> type_c2ats_GNetworkConnectivity = "mac#g_network_monitor_get_connectivity"
fun fun_c2ats_g_network_monitor_can_reach: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GNetworkMonitor, l1), !ptr_v_1(type_c2ats_GSocketConnectable, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_network_monitor_can_reach"
fun fun_c2ats_g_network_monitor_can_reach_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GNetworkMonitor, l1), !ptr_v_1(type_c2ats_GSocketConnectable, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_network_monitor_can_reach_async"
fun fun_c2ats_g_network_monitor_can_reach_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GNetworkMonitor, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_network_monitor_can_reach_finish"
// File: /usr/include/glib-2.0/gio/gnetworkservice.h
abst@ype struct_c2ats__GNetworkServiceClass // FIXME! Forward declaration.
typedef type_c2ats_GNetworkServiceClass = struct_c2ats__GNetworkServiceClass
abst@ype struct_c2ats__GNetworkServicePrivate // FIXME! Forward declaration.
typedef type_c2ats_GNetworkServicePrivate = struct_c2ats__GNetworkServicePrivate
typedef struct_c2ats__GNetworkService = $extype_struct"struct _GNetworkService" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GNetworkServicePrivate) *)
}
typedef struct_c2ats__GNetworkServiceClass = $extype_struct"struct _GNetworkServiceClass" of {
  parent_class = type_c2ats_GObjectClass
}
fun fun_c2ats_g_network_service_get_type: () -> type_c2ats_GType = "mac#g_network_service_get_type"
fun fun_c2ats_g_network_service_new: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GSocketConnectable, l4) | ptr l4) = "mac#g_network_service_new"
fun fun_c2ats_g_network_service_get_service: {l1:addr} (!ptr_v_1(type_c2ats_GNetworkService, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_network_service_get_service"
fun fun_c2ats_g_network_service_get_protocol: {l1:addr} (!ptr_v_1(type_c2ats_GNetworkService, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_network_service_get_protocol"
fun fun_c2ats_g_network_service_get_domain: {l1:addr} (!ptr_v_1(type_c2ats_GNetworkService, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_network_service_get_domain"
fun fun_c2ats_g_network_service_get_scheme: {l1:addr} (!ptr_v_1(type_c2ats_GNetworkService, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_network_service_get_scheme"
fun fun_c2ats_g_network_service_set_scheme: {l1,l2:addr} (!ptr_v_1(type_c2ats_GNetworkService, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_network_service_set_scheme"
// File: /usr/include/glib-2.0/gio/gpermission.h
abst@ype struct_c2ats__GPermissionPrivate // FIXME! Forward declaration.
typedef type_c2ats_GPermissionPrivate = struct_c2ats__GPermissionPrivate
abst@ype struct_c2ats__GPermissionClass // FIXME! Forward declaration.
typedef type_c2ats_GPermissionClass = struct_c2ats__GPermissionClass
typedef struct_c2ats__GPermission = $extype_struct"struct _GPermission" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GPermissionPrivate) *)
}
typedef struct_c2ats__GPermissionClass = $extype_struct"struct _GPermissionClass" of {
  parent_class = type_c2ats_GObjectClass,
  acquire = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GPermission, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  acquire_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GPermission, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  acquire_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GPermission, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  release = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GPermission, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  release_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GPermission, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  release_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GPermission, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  reserved = @[type_c2ats_gpointer][16]
}
fun fun_c2ats_g_permission_get_type: () -> type_c2ats_GType = "mac#g_permission_get_type"
fun fun_c2ats_g_permission_acquire: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GPermission, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_permission_acquire"
fun fun_c2ats_g_permission_acquire_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GPermission, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_permission_acquire_async"
fun fun_c2ats_g_permission_acquire_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GPermission, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_permission_acquire_finish"
fun fun_c2ats_g_permission_release: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GPermission, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_permission_release"
fun fun_c2ats_g_permission_release_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GPermission, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_permission_release_async"
fun fun_c2ats_g_permission_release_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GPermission, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_permission_release_finish"
fun fun_c2ats_g_permission_get_allowed: {l1:addr} (!ptr_v_1(type_c2ats_GPermission, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_permission_get_allowed"
fun fun_c2ats_g_permission_get_can_acquire: {l1:addr} (!ptr_v_1(type_c2ats_GPermission, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_permission_get_can_acquire"
fun fun_c2ats_g_permission_get_can_release: {l1:addr} (!ptr_v_1(type_c2ats_GPermission, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_permission_get_can_release"
fun fun_c2ats_g_permission_impl_update: {l1:addr} (!ptr_v_1(type_c2ats_GPermission, l1) | ptr l1, type_c2ats_gboolean, type_c2ats_gboolean, type_c2ats_gboolean) -> void = "mac#g_permission_impl_update"
// File: /usr/include/glib-2.0/gio/gpollableinputstream.h
abst@ype struct_c2ats__GPollableInputStreamInterface // FIXME! Forward declaration.
typedef type_c2ats_GPollableInputStreamInterface = struct_c2ats__GPollableInputStreamInterface
typedef struct_c2ats__GPollableInputStreamInterface = $extype_struct"struct _GPollableInputStreamInterface" of {
  g_iface = type_c2ats_GTypeInterface,
  can_poll = {l1:addr} (!ptr_v_1(type_c2ats_GPollableInputStream, l1) | ptr l1) -> type_c2ats_gboolean,
  is_readable = {l1:addr} (!ptr_v_1(type_c2ats_GPollableInputStream, l1) | ptr l1) -> type_c2ats_gboolean,
  create_source = {l1,l2:addr} (!ptr_v_1(type_c2ats_GPollableInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSource, l3) | ptr l3),
  read_nonblocking = {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GPollableInputStream, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr, type_c2ats_gsize, ptr l2) -> type_c2ats_gssize
}
fun fun_c2ats_g_pollable_input_stream_get_type: () -> type_c2ats_GType = "mac#g_pollable_input_stream_get_type"
fun fun_c2ats_g_pollable_input_stream_can_poll: {l1:addr} (!ptr_v_1(type_c2ats_GPollableInputStream, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_pollable_input_stream_can_poll"
fun fun_c2ats_g_pollable_input_stream_is_readable: {l1:addr} (!ptr_v_1(type_c2ats_GPollableInputStream, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_pollable_input_stream_is_readable"
fun fun_c2ats_g_pollable_input_stream_create_source: {l1,l2:addr} (!ptr_v_1(type_c2ats_GPollableInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSource, l3) | ptr l3) = "mac#g_pollable_input_stream_create_source"
fun fun_c2ats_g_pollable_input_stream_read_nonblocking: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GPollableInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr, type_c2ats_gsize, ptr l2, ptr l3) -> type_c2ats_gssize = "mac#g_pollable_input_stream_read_nonblocking"
// File: /usr/include/glib-2.0/gio/gpollableoutputstream.h
abst@ype struct_c2ats__GPollableOutputStreamInterface // FIXME! Forward declaration.
typedef type_c2ats_GPollableOutputStreamInterface = struct_c2ats__GPollableOutputStreamInterface
typedef struct_c2ats__GPollableOutputStreamInterface = $extype_struct"struct _GPollableOutputStreamInterface" of {
  g_iface = type_c2ats_GTypeInterface,
  can_poll = {l1:addr} (!ptr_v_1(type_c2ats_GPollableOutputStream, l1) | ptr l1) -> type_c2ats_gboolean,
  is_writable = {l1:addr} (!ptr_v_1(type_c2ats_GPollableOutputStream, l1) | ptr l1) -> type_c2ats_gboolean,
  create_source = {l1,l2:addr} (!ptr_v_1(type_c2ats_GPollableOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSource, l3) | ptr l3),
  write_nonblocking = {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GPollableOutputStream, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr, type_c2ats_gsize, ptr l2) -> type_c2ats_gssize
}
fun fun_c2ats_g_pollable_output_stream_get_type: () -> type_c2ats_GType = "mac#g_pollable_output_stream_get_type"
fun fun_c2ats_g_pollable_output_stream_can_poll: {l1:addr} (!ptr_v_1(type_c2ats_GPollableOutputStream, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_pollable_output_stream_can_poll"
fun fun_c2ats_g_pollable_output_stream_is_writable: {l1:addr} (!ptr_v_1(type_c2ats_GPollableOutputStream, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_pollable_output_stream_is_writable"
fun fun_c2ats_g_pollable_output_stream_create_source: {l1,l2:addr} (!ptr_v_1(type_c2ats_GPollableOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSource, l3) | ptr l3) = "mac#g_pollable_output_stream_create_source"
fun fun_c2ats_g_pollable_output_stream_write_nonblocking: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GPollableOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr, type_c2ats_gsize, ptr l2, ptr l3) -> type_c2ats_gssize = "mac#g_pollable_output_stream_write_nonblocking"
// File: /usr/include/glib-2.0/gio/gpollableutils.h
fun fun_c2ats_g_pollable_source_new: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSource, l2) | ptr l2) = "mac#g_pollable_source_new"
fun fun_c2ats_g_pollable_source_new_full: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSource, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | type_c2ats_gpointer, ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSource, l3) | ptr l3) = "mac#g_pollable_source_new_full"
fun fun_c2ats_g_pollable_stream_read: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr, type_c2ats_gsize, type_c2ats_gboolean, ptr l2, ptr l3) -> type_c2ats_gssize = "mac#g_pollable_stream_read"
fun fun_c2ats_g_pollable_stream_write: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr, type_c2ats_gsize, type_c2ats_gboolean, ptr l2, ptr l3) -> type_c2ats_gssize = "mac#g_pollable_stream_write"
fun fun_c2ats_g_pollable_stream_write_all: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GOutputStream, l1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr, type_c2ats_gsize, type_c2ats_gboolean, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_pollable_stream_write_all"
// File: /usr/include/glib-2.0/gio/gpropertyaction.h
fun fun_c2ats_g_property_action_get_type: () -> type_c2ats_GType = "mac#g_property_action_get_type"
fun fun_c2ats_g_property_action_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gpointer, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GPropertyAction, l3) | ptr l3) = "mac#g_property_action_new"
// File: /usr/include/glib-2.0/gio/gproxy.h
abst@ype struct_c2ats__GProxyInterface // FIXME! Forward declaration.
typedef type_c2ats_GProxyInterface = struct_c2ats__GProxyInterface
typedef struct_c2ats__GProxyInterface = $extype_struct"struct _GProxyInterface" of {
  g_iface = type_c2ats_GTypeInterface,
  connect = {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GProxy, l1), !ptr_v_1(type_c2ats_GIOStream, l2), !ptr_v_1(type_c2ats_GProxyAddress, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GIOStream, l6) | ptr l6),
  connect_async = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GProxy, l1), !ptr_v_1(type_c2ats_GIOStream, l2), !ptr_v_1(type_c2ats_GProxyAddress, l3), !ptr_v_1(type_c2ats_GCancellable, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  connect_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GProxy, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GIOStream, l4) | ptr l4),
  supports_hostname = {l1:addr} (!ptr_v_1(type_c2ats_GProxy, l1) | ptr l1) -> type_c2ats_gboolean
}
fun fun_c2ats_g_proxy_get_type: () -> type_c2ats_GType = "mac#g_proxy_get_type"
fun fun_c2ats_g_proxy_get_default_for_protocol: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GProxy, l2) | ptr l2) = "mac#g_proxy_get_default_for_protocol"
fun fun_c2ats_g_proxy_connect: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GProxy, l1), !ptr_v_1(type_c2ats_GIOStream, l2), !ptr_v_1(type_c2ats_GProxyAddress, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GIOStream, l6) | ptr l6) = "mac#g_proxy_connect"
fun fun_c2ats_g_proxy_connect_async: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GProxy, l1), !ptr_v_1(type_c2ats_GIOStream, l2), !ptr_v_1(type_c2ats_GProxyAddress, l3), !ptr_v_1(type_c2ats_GCancellable, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_proxy_connect_async"
fun fun_c2ats_g_proxy_connect_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GProxy, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GIOStream, l4) | ptr l4) = "mac#g_proxy_connect_finish"
fun fun_c2ats_g_proxy_supports_hostname: {l1:addr} (!ptr_v_1(type_c2ats_GProxy, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_proxy_supports_hostname"
// File: /usr/include/glib-2.0/gio/gproxyaddress.h
abst@ype struct_c2ats__GProxyAddressClass // FIXME! Forward declaration.
typedef type_c2ats_GProxyAddressClass = struct_c2ats__GProxyAddressClass
abst@ype struct_c2ats__GProxyAddressPrivate // FIXME! Forward declaration.
typedef type_c2ats_GProxyAddressPrivate = struct_c2ats__GProxyAddressPrivate
typedef struct_c2ats__GProxyAddress = $extype_struct"struct _GProxyAddress" of {
  parent_instance = type_c2ats_GInetSocketAddress,
  priv = ptr (* cPtr0(type_c2ats_GProxyAddressPrivate) *)
}
typedef struct_c2ats__GProxyAddressClass = $extype_struct"struct _GProxyAddressClass" of {
  parent_class = type_c2ats_GInetSocketAddressClass
}
fun fun_c2ats_g_proxy_address_get_type: () -> type_c2ats_GType = "mac#g_proxy_address_get_type"
fun fun_c2ats_g_proxy_address_new: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GInetAddress, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gchar, l5) | ptr l1, type_c2ats_guint16, ptr l2, ptr l3, type_c2ats_guint16, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GSocketAddress, l6) | ptr l6) = "mac#g_proxy_address_new"
fun fun_c2ats_g_proxy_address_get_protocol: {l1:addr} (!ptr_v_1(type_c2ats_GProxyAddress, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_proxy_address_get_protocol"
fun fun_c2ats_g_proxy_address_get_destination_protocol: {l1:addr} (!ptr_v_1(type_c2ats_GProxyAddress, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_proxy_address_get_destination_protocol"
fun fun_c2ats_g_proxy_address_get_destination_hostname: {l1:addr} (!ptr_v_1(type_c2ats_GProxyAddress, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_proxy_address_get_destination_hostname"
fun fun_c2ats_g_proxy_address_get_destination_port: {l1:addr} (!ptr_v_1(type_c2ats_GProxyAddress, l1) | ptr l1) -> type_c2ats_guint16 = "mac#g_proxy_address_get_destination_port"
fun fun_c2ats_g_proxy_address_get_username: {l1:addr} (!ptr_v_1(type_c2ats_GProxyAddress, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_proxy_address_get_username"
fun fun_c2ats_g_proxy_address_get_password: {l1:addr} (!ptr_v_1(type_c2ats_GProxyAddress, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_proxy_address_get_password"
fun fun_c2ats_g_proxy_address_get_uri: {l1:addr} (!ptr_v_1(type_c2ats_GProxyAddress, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_proxy_address_get_uri"
// File: /usr/include/glib-2.0/gio/gsocketaddressenumerator.h
abst@ype struct_c2ats__GSocketAddressEnumeratorClass // FIXME! Forward declaration.
typedef type_c2ats_GSocketAddressEnumeratorClass = struct_c2ats__GSocketAddressEnumeratorClass
typedef struct_c2ats__GSocketAddressEnumerator = $extype_struct"struct _GSocketAddressEnumerator" of {
  parent_instance = type_c2ats_GObject
}
typedef struct_c2ats__GSocketAddressEnumeratorClass = $extype_struct"struct _GSocketAddressEnumeratorClass" of {
  parent_class = type_c2ats_GObjectClass,
  next = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSocketAddressEnumerator, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GSocketAddress, l4) | ptr l4),
  next_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GSocketAddressEnumerator, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  next_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSocketAddressEnumerator, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GSocketAddress, l4) | ptr l4)
}
fun fun_c2ats_g_socket_address_enumerator_get_type: () -> type_c2ats_GType = "mac#g_socket_address_enumerator_get_type"
fun fun_c2ats_g_socket_address_enumerator_next: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSocketAddressEnumerator, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GSocketAddress, l4) | ptr l4) = "mac#g_socket_address_enumerator_next"
fun fun_c2ats_g_socket_address_enumerator_next_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSocketAddressEnumerator, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_socket_address_enumerator_next_async"
fun fun_c2ats_g_socket_address_enumerator_next_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSocketAddressEnumerator, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GSocketAddress, l4) | ptr l4) = "mac#g_socket_address_enumerator_next_finish"
// File: /usr/include/glib-2.0/gio/gproxyaddressenumerator.h
abst@ype struct_c2ats__GProxyAddressEnumeratorClass // FIXME! Forward declaration.
typedef type_c2ats_GProxyAddressEnumeratorClass = struct_c2ats__GProxyAddressEnumeratorClass
abst@ype struct_c2ats__GProxyAddressEnumeratorPrivate // FIXME! Forward declaration.
typedef type_c2ats_GProxyAddressEnumeratorPrivate = struct_c2ats__GProxyAddressEnumeratorPrivate
typedef struct_c2ats__GProxyAddressEnumerator = $extype_struct"struct _GProxyAddressEnumerator" of {
  parent_instance = type_c2ats_GSocketAddressEnumerator,
  priv = ptr (* cPtr0(type_c2ats_GProxyAddressEnumeratorPrivate) *)
}
typedef struct_c2ats__GProxyAddressEnumeratorClass = $extype_struct"struct _GProxyAddressEnumeratorClass" of {
  parent_class = type_c2ats_GSocketAddressEnumeratorClass,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void,
  _g_reserved6 = () -> void,
  _g_reserved7 = () -> void
}
fun fun_c2ats_g_proxy_address_enumerator_get_type: () -> type_c2ats_GType = "mac#g_proxy_address_enumerator_get_type"
// File: /usr/include/glib-2.0/gio/gproxyresolver.h
abst@ype struct_c2ats__GProxyResolverInterface // FIXME! Forward declaration.
typedef type_c2ats_GProxyResolverInterface = struct_c2ats__GProxyResolverInterface
typedef struct_c2ats__GProxyResolverInterface = $extype_struct"struct _GProxyResolverInterface" of {
  g_iface = type_c2ats_GTypeInterface,
  is_supported = {l1:addr} (!ptr_v_1(type_c2ats_GProxyResolver, l1) | ptr l1) -> type_c2ats_gboolean,
  lookup = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GProxyResolver, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5,l5_1:addr] (ptr_v_2(type_c2ats_gchar, l5, l5_1) | ptr l5),
  lookup_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GProxyResolver, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  lookup_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GProxyResolver, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4,l4_1:addr] (ptr_v_2(type_c2ats_gchar, l4, l4_1) | ptr l4)
}
fun fun_c2ats_g_proxy_resolver_get_type: () -> type_c2ats_GType = "mac#g_proxy_resolver_get_type"
fun fun_c2ats_g_proxy_resolver_get_default: () -> [l1:addr] (ptr_v_1(type_c2ats_GProxyResolver, l1) | ptr l1) = "mac#g_proxy_resolver_get_default"
fun fun_c2ats_g_proxy_resolver_is_supported: {l1:addr} (!ptr_v_1(type_c2ats_GProxyResolver, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_proxy_resolver_is_supported"
fun fun_c2ats_g_proxy_resolver_lookup: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GProxyResolver, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5,l5_1:addr] (ptr_v_2(type_c2ats_gchar, l5, l5_1) | ptr l5) = "mac#g_proxy_resolver_lookup"
fun fun_c2ats_g_proxy_resolver_lookup_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GProxyResolver, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_proxy_resolver_lookup_async"
fun fun_c2ats_g_proxy_resolver_lookup_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GProxyResolver, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4,l4_1:addr] (ptr_v_2(type_c2ats_gchar, l4, l4_1) | ptr l4) = "mac#g_proxy_resolver_lookup_finish"
// File: /usr/include/glib-2.0/gio/gresolver.h
abst@ype struct_c2ats__GResolverPrivate // FIXME! Forward declaration.
typedef type_c2ats_GResolverPrivate = struct_c2ats__GResolverPrivate
abst@ype struct_c2ats__GResolverClass // FIXME! Forward declaration.
typedef type_c2ats_GResolverClass = struct_c2ats__GResolverClass
typedef struct_c2ats__GResolver = $extype_struct"struct _GResolver" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GResolverPrivate) *)
}
typedef struct_c2ats__GResolverClass = $extype_struct"struct _GResolverClass" of {
  parent_class = type_c2ats_GObjectClass,
  reload = {l1:addr} (!ptr_v_1(type_c2ats_GResolver, l1) | ptr l1) -> void,
  lookup_by_name = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GList, l5) | ptr l5),
  lookup_by_name_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  lookup_by_name_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GList, l4) | ptr l4),
  lookup_by_address = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_GInetAddress, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_gchar, l5) | ptr l5),
  lookup_by_address_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_GInetAddress, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  lookup_by_address_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4),
  lookup_service = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GList, l5) | ptr l5),
  lookup_service_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  lookup_service_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GList, l4) | ptr l4),
  lookup_records = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GResolverRecordType, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GList, l5) | ptr l5),
  lookup_records_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_GResolverRecordType, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  lookup_records_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GList, l4) | ptr l4),
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void,
  _g_reserved6 = () -> void
}
fun fun_c2ats_g_resolver_get_type: () -> type_c2ats_GType = "mac#g_resolver_get_type"
fun fun_c2ats_g_resolver_get_default: () -> [l1:addr] (ptr_v_1(type_c2ats_GResolver, l1) | ptr l1) = "mac#g_resolver_get_default"
fun fun_c2ats_g_resolver_set_default: {l1:addr} (!ptr_v_1(type_c2ats_GResolver, l1) | ptr l1) -> void = "mac#g_resolver_set_default"
fun fun_c2ats_g_resolver_lookup_by_name: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GList, l5) | ptr l5) = "mac#g_resolver_lookup_by_name"
fun fun_c2ats_g_resolver_lookup_by_name_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_resolver_lookup_by_name_async"
fun fun_c2ats_g_resolver_lookup_by_name_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GList, l4) | ptr l4) = "mac#g_resolver_lookup_by_name_finish"
fun fun_c2ats_g_resolver_free_addresses: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1) -> void = "mac#g_resolver_free_addresses"
fun fun_c2ats_g_resolver_lookup_by_address: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_GInetAddress, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_gchar, l5) | ptr l5) = "mac#g_resolver_lookup_by_address"
fun fun_c2ats_g_resolver_lookup_by_address_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_GInetAddress, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_resolver_lookup_by_address_async"
fun fun_c2ats_g_resolver_lookup_by_address_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#g_resolver_lookup_by_address_finish"
fun fun_c2ats_g_resolver_lookup_service: {l1,l2,l3,l4,l5,l6,l6_1:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_GCancellable, l5), !ptr_v_2(type_c2ats_GError, l6, l6_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> [l7:addr] (ptr_v_1(type_c2ats_GList, l7) | ptr l7) = "mac#g_resolver_lookup_service"
fun fun_c2ats_g_resolver_lookup_service_async: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_GCancellable, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_resolver_lookup_service_async"
fun fun_c2ats_g_resolver_lookup_service_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GList, l4) | ptr l4) = "mac#g_resolver_lookup_service_finish"
fun fun_c2ats_g_resolver_lookup_records: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GResolverRecordType, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GList, l5) | ptr l5) = "mac#g_resolver_lookup_records"
fun fun_c2ats_g_resolver_lookup_records_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_GResolverRecordType, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_resolver_lookup_records_async"
fun fun_c2ats_g_resolver_lookup_records_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GResolver, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GList, l4) | ptr l4) = "mac#g_resolver_lookup_records_finish"
fun fun_c2ats_g_resolver_free_targets: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1) -> void = "mac#g_resolver_free_targets"
fun fun_c2ats_g_resolver_error_quark: () -> type_c2ats_GQuark = "mac#g_resolver_error_quark"
// File: /usr/include/glib-2.0/gio/gresource.h
fun fun_c2ats_g_resource_error_quark: () -> type_c2ats_GQuark = "mac#g_resource_error_quark"
abst@ype struct_c2ats__GStaticResource // FIXME! Forward declaration.
typedef type_c2ats_GStaticResource = struct_c2ats__GStaticResource
typedef struct_c2ats__GStaticResource = $extype_struct"struct _GStaticResource" of {
  data = ptr (* cPtr0(type_c2ats_guint8) *),
  data_len = type_c2ats_gsize,
  resource = ptr (* cPtr0(type_c2ats_GResource) *),
  next = ptr (* cPtr0(type_c2ats_GStaticResource) *),
  padding = type_c2ats_gpointer
}
fun fun_c2ats_g_resource_get_type: () -> type_c2ats_GType = "mac#g_resource_get_type"
fun fun_c2ats_g_resource_new_from_data: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GBytes, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GResource, l3) | ptr l3) = "mac#g_resource_new_from_data"
fun fun_c2ats_g_resource_ref: {l1:addr} (!ptr_v_1(type_c2ats_GResource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GResource, l2) | ptr l2) = "mac#g_resource_ref"
fun fun_c2ats_g_resource_unref: {l1:addr} (!ptr_v_1(type_c2ats_GResource, l1) | ptr l1) -> void = "mac#g_resource_unref"
fun fun_c2ats_g_resource_load: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GResource, l3) | ptr l3) = "mac#g_resource_load"
fun fun_c2ats_g_resource_open_stream: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GResource, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_GResourceLookupFlags, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GInputStream, l4) | ptr l4) = "mac#g_resource_open_stream"
fun fun_c2ats_g_resource_lookup_data: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GResource, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_GResourceLookupFlags, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GBytes, l4) | ptr l4) = "mac#g_resource_lookup_data"
fun fun_c2ats_g_resource_enumerate_children: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GResource, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_GResourceLookupFlags, ptr l3) -> [l4,l4_1:addr] (ptr_v_2(char, l4, l4_1) | ptr l4) = "mac#g_resource_enumerate_children"
fun fun_c2ats_g_resource_get_info: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GResource, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_1(type_c2ats_guint32, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, type_c2ats_GResourceLookupFlags, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#g_resource_get_info"
fun fun_c2ats_g_resources_register: {l1:addr} (!ptr_v_1(type_c2ats_GResource, l1) | ptr l1) -> void = "mac#g_resources_register"
fun fun_c2ats_g_resources_unregister: {l1:addr} (!ptr_v_1(type_c2ats_GResource, l1) | ptr l1) -> void = "mac#g_resources_unregister"
fun fun_c2ats_g_resources_open_stream: {l1,l2,l2_1:addr} (!ptr_v_1(char, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_GResourceLookupFlags, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GInputStream, l3) | ptr l3) = "mac#g_resources_open_stream"
fun fun_c2ats_g_resources_lookup_data: {l1,l2,l2_1:addr} (!ptr_v_1(char, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_GResourceLookupFlags, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GBytes, l3) | ptr l3) = "mac#g_resources_lookup_data"
fun fun_c2ats_g_resources_enumerate_children: {l1,l2,l2_1:addr} (!ptr_v_1(char, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_GResourceLookupFlags, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(char, l3, l3_1) | ptr l3) = "mac#g_resources_enumerate_children"
fun fun_c2ats_g_resources_get_info: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(char, l1), !ptr_v_1(type_c2ats_gsize, l2), !ptr_v_1(type_c2ats_guint32, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, type_c2ats_GResourceLookupFlags, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_resources_get_info"
fun fun_c2ats_g_static_resource_init: {l1:addr} (!ptr_v_1(type_c2ats_GStaticResource, l1) | ptr l1) -> void = "mac#g_static_resource_init"
fun fun_c2ats_g_static_resource_fini: {l1:addr} (!ptr_v_1(type_c2ats_GStaticResource, l1) | ptr l1) -> void = "mac#g_static_resource_fini"
fun fun_c2ats_g_static_resource_get_resource: {l1:addr} (!ptr_v_1(type_c2ats_GStaticResource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GResource, l2) | ptr l2) = "mac#g_static_resource_get_resource"
// File: /usr/include/glib-2.0/gio/gseekable.h
abst@ype struct_c2ats__GSeekableIface // FIXME! Forward declaration.
typedef type_c2ats_GSeekableIface = struct_c2ats__GSeekableIface
typedef struct_c2ats__GSeekableIface = $extype_struct"struct _GSeekableIface" of {
  g_iface = type_c2ats_GTypeInterface,
  tell = {l1:addr} (!ptr_v_1(type_c2ats_GSeekable, l1) | ptr l1) -> type_c2ats_goffset,
  can_seek = {l1:addr} (!ptr_v_1(type_c2ats_GSeekable, l1) | ptr l1) -> type_c2ats_gboolean,
  seek = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSeekable, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_goffset, type_c2ats_GSeekType, ptr l2, ptr l3) -> type_c2ats_gboolean,
  can_truncate = {l1:addr} (!ptr_v_1(type_c2ats_GSeekable, l1) | ptr l1) -> type_c2ats_gboolean,
  truncate_fn = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSeekable, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_goffset, ptr l2, ptr l3) -> type_c2ats_gboolean
}
fun fun_c2ats_g_seekable_get_type: () -> type_c2ats_GType = "mac#g_seekable_get_type"
fun fun_c2ats_g_seekable_tell: {l1:addr} (!ptr_v_1(type_c2ats_GSeekable, l1) | ptr l1) -> type_c2ats_goffset = "mac#g_seekable_tell"
fun fun_c2ats_g_seekable_can_seek: {l1:addr} (!ptr_v_1(type_c2ats_GSeekable, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_seekable_can_seek"
fun fun_c2ats_g_seekable_seek: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSeekable, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_goffset, type_c2ats_GSeekType, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_seekable_seek"
fun fun_c2ats_g_seekable_can_truncate: {l1:addr} (!ptr_v_1(type_c2ats_GSeekable, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_seekable_can_truncate"
fun fun_c2ats_g_seekable_truncate: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSeekable, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_goffset, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_seekable_truncate"
// File: /usr/include/glib-2.0/gio/gsettingsschema.h
abst@ype struct_c2ats__GSettingsSchemaSource // FIXME! Forward declaration.
typedef type_c2ats_GSettingsSchemaSource = struct_c2ats__GSettingsSchemaSource
abst@ype struct_c2ats__GSettingsSchema // FIXME! Forward declaration.
typedef type_c2ats_GSettingsSchema = struct_c2ats__GSettingsSchema
abst@ype struct_c2ats__GSettingsSchemaKey // FIXME! Forward declaration.
typedef type_c2ats_GSettingsSchemaKey = struct_c2ats__GSettingsSchemaKey
fun fun_c2ats_g_settings_schema_source_get_type: () -> type_c2ats_GType = "mac#g_settings_schema_source_get_type"
fun fun_c2ats_g_settings_schema_source_get_default: () -> [l1:addr] (ptr_v_1(type_c2ats_GSettingsSchemaSource, l1) | ptr l1) = "mac#g_settings_schema_source_get_default"
fun fun_c2ats_g_settings_schema_source_ref: {l1:addr} (!ptr_v_1(type_c2ats_GSettingsSchemaSource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSettingsSchemaSource, l2) | ptr l2) = "mac#g_settings_schema_source_ref"
fun fun_c2ats_g_settings_schema_source_unref: {l1:addr} (!ptr_v_1(type_c2ats_GSettingsSchemaSource, l1) | ptr l1) -> void = "mac#g_settings_schema_source_unref"
fun fun_c2ats_g_settings_schema_source_new_from_directory: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GSettingsSchemaSource, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gboolean, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GSettingsSchemaSource, l4) | ptr l4) = "mac#g_settings_schema_source_new_from_directory"
fun fun_c2ats_g_settings_schema_source_lookup: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettingsSchemaSource, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> [l3:addr] (ptr_v_1(type_c2ats_GSettingsSchema, l3) | ptr l3) = "mac#g_settings_schema_source_lookup"
fun fun_c2ats_g_settings_schema_source_list_schemas: {l1,l2,l2_1,l2_2,l3,l3_1,l3_2:addr} (!ptr_v_1(type_c2ats_GSettingsSchemaSource, l1), !ptr_v_3(type_c2ats_gchar, l2, l2_1, l2_2), !ptr_v_3(type_c2ats_gchar, l3, l3_1, l3_2) | ptr l1, type_c2ats_gboolean, ptr l2, ptr l3) -> void = "mac#g_settings_schema_source_list_schemas"
fun fun_c2ats_g_settings_schema_get_type: () -> type_c2ats_GType = "mac#g_settings_schema_get_type"
fun fun_c2ats_g_settings_schema_ref: {l1:addr} (!ptr_v_1(type_c2ats_GSettingsSchema, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSettingsSchema, l2) | ptr l2) = "mac#g_settings_schema_ref"
fun fun_c2ats_g_settings_schema_unref: {l1:addr} (!ptr_v_1(type_c2ats_GSettingsSchema, l1) | ptr l1) -> void = "mac#g_settings_schema_unref"
fun fun_c2ats_g_settings_schema_get_id: {l1:addr} (!ptr_v_1(type_c2ats_GSettingsSchema, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_settings_schema_get_id"
fun fun_c2ats_g_settings_schema_get_path: {l1:addr} (!ptr_v_1(type_c2ats_GSettingsSchema, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_settings_schema_get_path"
fun fun_c2ats_g_settings_schema_get_key: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettingsSchema, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSettingsSchemaKey, l3) | ptr l3) = "mac#g_settings_schema_get_key"
fun fun_c2ats_g_settings_schema_has_key: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettingsSchema, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_settings_schema_has_key"
fun fun_c2ats_g_settings_schema_list_keys: {l1:addr} (!ptr_v_1(type_c2ats_GSettingsSchema, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#g_settings_schema_list_keys"
fun fun_c2ats_g_settings_schema_list_children: {l1:addr} (!ptr_v_1(type_c2ats_GSettingsSchema, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#g_settings_schema_list_children"
fun fun_c2ats_g_settings_schema_key_get_type: () -> type_c2ats_GType = "mac#g_settings_schema_key_get_type"
fun fun_c2ats_g_settings_schema_key_ref: {l1:addr} (!ptr_v_1(type_c2ats_GSettingsSchemaKey, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSettingsSchemaKey, l2) | ptr l2) = "mac#g_settings_schema_key_ref"
fun fun_c2ats_g_settings_schema_key_unref: {l1:addr} (!ptr_v_1(type_c2ats_GSettingsSchemaKey, l1) | ptr l1) -> void = "mac#g_settings_schema_key_unref"
fun fun_c2ats_g_settings_schema_key_get_value_type: {l1:addr} (!ptr_v_1(type_c2ats_GSettingsSchemaKey, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantType, l2) | ptr l2) = "mac#g_settings_schema_key_get_value_type"
fun fun_c2ats_g_settings_schema_key_get_default_value: {l1:addr} (!ptr_v_1(type_c2ats_GSettingsSchemaKey, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_settings_schema_key_get_default_value"
fun fun_c2ats_g_settings_schema_key_get_range: {l1:addr} (!ptr_v_1(type_c2ats_GSettingsSchemaKey, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_settings_schema_key_get_range"
fun fun_c2ats_g_settings_schema_key_range_check: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettingsSchemaKey, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_settings_schema_key_range_check"
fun fun_c2ats_g_settings_schema_key_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GSettingsSchemaKey, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_settings_schema_key_get_name"
fun fun_c2ats_g_settings_schema_key_get_summary: {l1:addr} (!ptr_v_1(type_c2ats_GSettingsSchemaKey, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_settings_schema_key_get_summary"
fun fun_c2ats_g_settings_schema_key_get_description: {l1:addr} (!ptr_v_1(type_c2ats_GSettingsSchemaKey, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_settings_schema_key_get_description"
// File: /usr/include/glib-2.0/gio/gsettings.h
abst@ype struct_c2ats__GSettingsPrivate // FIXME! Forward declaration.
typedef type_c2ats_GSettingsPrivate = struct_c2ats__GSettingsPrivate
abst@ype struct_c2ats__GSettingsClass // FIXME! Forward declaration.
typedef type_c2ats_GSettingsClass = struct_c2ats__GSettingsClass
typedef struct_c2ats__GSettingsClass = $extype_struct"struct _GSettingsClass" of {
  parent_class = type_c2ats_GObjectClass,
  writable_changed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  changed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  writable_change_event = {l1:addr} (!ptr_v_1(type_c2ats_GSettings, l1) | ptr l1, type_c2ats_GQuark) -> type_c2ats_gboolean,
  change_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_GQuark, l2) | ptr l1, ptr l2, type_c2ats_gint) -> type_c2ats_gboolean,
  padding = @[type_c2ats_gpointer][20]
}
typedef struct_c2ats__GSettings = $extype_struct"struct _GSettings" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GSettingsPrivate) *)
}
fun fun_c2ats_g_settings_get_type: () -> type_c2ats_GType = "mac#g_settings_get_type"
fun fun_c2ats_g_settings_list_schemas: () -> [l1,l1_1:addr] (ptr_v_2(type_c2ats_gchar, l1, l1_1) | ptr l1) = "mac#g_settings_list_schemas"
fun fun_c2ats_g_settings_list_relocatable_schemas: () -> [l1,l1_1:addr] (ptr_v_2(type_c2ats_gchar, l1, l1_1) | ptr l1) = "mac#g_settings_list_relocatable_schemas"
fun fun_c2ats_g_settings_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSettings, l2) | ptr l2) = "mac#g_settings_new"
fun fun_c2ats_g_settings_new_with_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSettings, l3) | ptr l3) = "mac#g_settings_new_with_path"
fun fun_c2ats_g_settings_new_with_backend: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GSettingsBackend, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSettings, l3) | ptr l3) = "mac#g_settings_new_with_backend"
fun fun_c2ats_g_settings_new_with_backend_and_path: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GSettingsBackend, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GSettings, l4) | ptr l4) = "mac#g_settings_new_with_backend_and_path"
fun fun_c2ats_g_settings_new_full: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSettingsSchema, l1), !ptr_v_1(type_c2ats_GSettingsBackend, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GSettings, l4) | ptr l4) = "mac#g_settings_new_full"
fun fun_c2ats_g_settings_list_children: {l1:addr} (!ptr_v_1(type_c2ats_GSettings, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#g_settings_list_children"
fun fun_c2ats_g_settings_list_keys: {l1:addr} (!ptr_v_1(type_c2ats_GSettings, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#g_settings_list_keys"
fun fun_c2ats_g_settings_get_range: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVariant, l3) | ptr l3) = "mac#g_settings_get_range"
fun fun_c2ats_g_settings_range_check: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_settings_range_check"
fun fun_c2ats_g_settings_set_value: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_settings_set_value"
fun fun_c2ats_g_settings_get_value: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVariant, l3) | ptr l3) = "mac#g_settings_get_value"
fun fun_c2ats_g_settings_get_user_value: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVariant, l3) | ptr l3) = "mac#g_settings_get_user_value"
fun fun_c2ats_g_settings_get_default_value: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GVariant, l3) | ptr l3) = "mac#g_settings_get_default_value"
fun fun_c2ats_g_settings_set: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_settings_set"
fun fun_c2ats_g_settings_get: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_settings_get"
fun fun_c2ats_g_settings_reset: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_settings_reset"
fun fun_c2ats_g_settings_get_int: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#g_settings_get_int"
fun fun_c2ats_g_settings_set_int: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint) -> type_c2ats_gboolean = "mac#g_settings_set_int"
fun fun_c2ats_g_settings_get_int64: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gint64 = "mac#g_settings_get_int64"
fun fun_c2ats_g_settings_set_int64: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint64) -> type_c2ats_gboolean = "mac#g_settings_set_int64"
fun fun_c2ats_g_settings_get_uint: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_guint = "mac#g_settings_get_uint"
fun fun_c2ats_g_settings_set_uint: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_guint) -> type_c2ats_gboolean = "mac#g_settings_set_uint"
fun fun_c2ats_g_settings_get_uint64: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_guint64 = "mac#g_settings_get_uint64"
fun fun_c2ats_g_settings_set_uint64: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_guint64) -> type_c2ats_gboolean = "mac#g_settings_set_uint64"
fun fun_c2ats_g_settings_get_string: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_settings_get_string"
fun fun_c2ats_g_settings_set_string: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_settings_set_string"
fun fun_c2ats_g_settings_get_boolean: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_settings_get_boolean"
fun fun_c2ats_g_settings_set_boolean: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#g_settings_set_boolean"
fun fun_c2ats_g_settings_get_double: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gdouble = "mac#g_settings_get_double"
fun fun_c2ats_g_settings_set_double: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gdouble) -> type_c2ats_gboolean = "mac#g_settings_set_double"
fun fun_c2ats_g_settings_get_strv: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#g_settings_get_strv"
fun fun_c2ats_g_settings_set_strv: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_settings_set_strv"
fun fun_c2ats_g_settings_get_enum: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#g_settings_get_enum"
fun fun_c2ats_g_settings_set_enum: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint) -> type_c2ats_gboolean = "mac#g_settings_set_enum"
fun fun_c2ats_g_settings_get_flags: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_guint = "mac#g_settings_get_flags"
fun fun_c2ats_g_settings_set_flags: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_guint) -> type_c2ats_gboolean = "mac#g_settings_set_flags"
fun fun_c2ats_g_settings_get_child: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSettings, l3) | ptr l3) = "mac#g_settings_get_child"
fun fun_c2ats_g_settings_is_writable: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_settings_is_writable"
fun fun_c2ats_g_settings_delay: {l1:addr} (!ptr_v_1(type_c2ats_GSettings, l1) | ptr l1) -> void = "mac#g_settings_delay"
fun fun_c2ats_g_settings_apply: {l1:addr} (!ptr_v_1(type_c2ats_GSettings, l1) | ptr l1) -> void = "mac#g_settings_apply"
fun fun_c2ats_g_settings_revert: {l1:addr} (!ptr_v_1(type_c2ats_GSettings, l1) | ptr l1) -> void = "mac#g_settings_revert"
fun fun_c2ats_g_settings_get_has_unapplied: {l1:addr} (!ptr_v_1(type_c2ats_GSettings, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_settings_get_has_unapplied"
fun fun_c2ats_g_settings_sync: () -> void = "mac#g_settings_sync"
typedef type_c2ats_GSettingsBindSetMapping = {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_GVariantType, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> [l3:addr] (ptr_v_1(type_c2ats_GVariant, l3) | ptr l3)
typedef type_c2ats_GSettingsBindGetMapping = {l1,l2:addr} (!ptr_v_1(type_c2ats_GValue, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GSettingsGetMapping = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVariant, l1), !ptr_v_1(type_c2ats_gpointer, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GSettingsBindFlags = int
#define enum_c2ats_G_SETTINGS_BIND_DEFAULT 0
#define enum_c2ats_G_SETTINGS_BIND_GET 1 << 0
#define enum_c2ats_G_SETTINGS_BIND_SET 1 << 1
#define enum_c2ats_G_SETTINGS_BIND_NO_SENSITIVITY 1 << 2
#define enum_c2ats_G_SETTINGS_BIND_GET_NO_CHANGES 1 << 3
#define enum_c2ats_G_SETTINGS_BIND_INVERT_BOOLEAN 1 << 4
fun fun_c2ats_g_settings_bind: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, type_c2ats_gpointer, ptr l3, type_c2ats_GSettingsBindFlags) -> void = "mac#g_settings_bind"
fun fun_c2ats_g_settings_bind_with_mapping: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, type_c2ats_gpointer, ptr l3, type_c2ats_GSettingsBindFlags, type_c2ats_GSettingsBindGetMapping, type_c2ats_GSettingsBindSetMapping, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#g_settings_bind_with_mapping"
fun fun_c2ats_g_settings_bind_writable: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, type_c2ats_gpointer, ptr l3, type_c2ats_gboolean) -> void = "mac#g_settings_bind_writable"
fun fun_c2ats_g_settings_unbind: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_gpointer, ptr l1) -> void = "mac#g_settings_unbind"
fun fun_c2ats_g_settings_create_action: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GAction, l3) | ptr l3) = "mac#g_settings_create_action"
fun fun_c2ats_g_settings_get_mapped: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GSettingsGetMapping, type_c2ats_gpointer) -> type_c2ats_gpointer = "mac#g_settings_get_mapped"
// File: /usr/include/glib-2.0/gio/gsimpleaction.h
fun fun_c2ats_g_simple_action_get_type: () -> type_c2ats_GType = "mac#g_simple_action_get_type"
fun fun_c2ats_g_simple_action_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GVariantType, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSimpleAction, l3) | ptr l3) = "mac#g_simple_action_new"
fun fun_c2ats_g_simple_action_new_stateful: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GVariantType, l2), !ptr_v_1(type_c2ats_GVariant, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GSimpleAction, l4) | ptr l4) = "mac#g_simple_action_new_stateful"
fun fun_c2ats_g_simple_action_set_enabled: {l1:addr} (!ptr_v_1(type_c2ats_GSimpleAction, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_simple_action_set_enabled"
fun fun_c2ats_g_simple_action_set_state: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSimpleAction, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> void = "mac#g_simple_action_set_state"
fun fun_c2ats_g_simple_action_set_state_hint: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSimpleAction, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> void = "mac#g_simple_action_set_state_hint"
// File: /usr/include/glib-2.0/gio/gsimpleactiongroup.h
abst@ype struct_c2ats__GSimpleActionGroupPrivate // FIXME! Forward declaration.
typedef type_c2ats_GSimpleActionGroupPrivate = struct_c2ats__GSimpleActionGroupPrivate
abst@ype struct_c2ats__GSimpleActionGroupClass // FIXME! Forward declaration.
typedef type_c2ats_GSimpleActionGroupClass = struct_c2ats__GSimpleActionGroupClass
typedef struct_c2ats__GSimpleActionGroup = $extype_struct"struct _GSimpleActionGroup" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GSimpleActionGroupPrivate) *)
}
typedef struct_c2ats__GSimpleActionGroupClass = $extype_struct"struct _GSimpleActionGroupClass" of {
  parent_class = type_c2ats_GObjectClass,
  padding = @[type_c2ats_gpointer][12]
}
fun fun_c2ats_g_simple_action_group_get_type: () -> type_c2ats_GType = "mac#g_simple_action_group_get_type"
fun fun_c2ats_g_simple_action_group_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GSimpleActionGroup, l1) | ptr l1) = "mac#g_simple_action_group_new"
fun fun_c2ats_g_simple_action_group_lookup: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSimpleActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GAction, l3) | ptr l3) = "mac#g_simple_action_group_lookup"
fun fun_c2ats_g_simple_action_group_insert: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSimpleActionGroup, l1), !ptr_v_1(type_c2ats_GAction, l2) | ptr l1, ptr l2) -> void = "mac#g_simple_action_group_insert"
fun fun_c2ats_g_simple_action_group_remove: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSimpleActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_simple_action_group_remove"
fun fun_c2ats_g_simple_action_group_add_entries: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSimpleActionGroup, l1), !ptr_v_1(type_c2ats_GActionEntry, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gpointer) -> void = "mac#g_simple_action_group_add_entries"
// File: /usr/include/glib-2.0/gio/gsimpleasyncresult.h
abst@ype struct_c2ats__GSimpleAsyncResultClass // FIXME! Forward declaration.
typedef type_c2ats_GSimpleAsyncResultClass = struct_c2ats__GSimpleAsyncResultClass
fun fun_c2ats_g_simple_async_result_get_type: () -> type_c2ats_GType = "mac#g_simple_async_result_get_type"
fun fun_c2ats_g_simple_async_result_new: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GSimpleAsyncResult, l2) | ptr l2) = "mac#g_simple_async_result_new"
fun fun_c2ats_g_simple_async_result_new_error: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(char, l2) | ptr l1, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer, type_c2ats_GQuark, type_c2ats_gint, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSimpleAsyncResult, l3) | ptr l3) = "mac#g_simple_async_result_new_error"
fun fun_c2ats_g_simple_async_result_new_from_error: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_GError, l2) | ptr l1, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSimpleAsyncResult, l3) | ptr l3) = "mac#g_simple_async_result_new_from_error"
fun fun_c2ats_g_simple_async_result_new_take_error: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_GError, l2) | ptr l1, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSimpleAsyncResult, l3) | ptr l3) = "mac#g_simple_async_result_new_take_error"
fun fun_c2ats_g_simple_async_result_set_op_res_gpointer: {l1:addr} (!ptr_v_1(type_c2ats_GSimpleAsyncResult, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#g_simple_async_result_set_op_res_gpointer"
fun fun_c2ats_g_simple_async_result_get_op_res_gpointer: {l1:addr} (!ptr_v_1(type_c2ats_GSimpleAsyncResult, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_simple_async_result_get_op_res_gpointer"
fun fun_c2ats_g_simple_async_result_set_op_res_gssize: {l1:addr} (!ptr_v_1(type_c2ats_GSimpleAsyncResult, l1) | ptr l1, type_c2ats_gssize) -> void = "mac#g_simple_async_result_set_op_res_gssize"
fun fun_c2ats_g_simple_async_result_get_op_res_gssize: {l1:addr} (!ptr_v_1(type_c2ats_GSimpleAsyncResult, l1) | ptr l1) -> type_c2ats_gssize = "mac#g_simple_async_result_get_op_res_gssize"
fun fun_c2ats_g_simple_async_result_set_op_res_gboolean: {l1:addr} (!ptr_v_1(type_c2ats_GSimpleAsyncResult, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_simple_async_result_set_op_res_gboolean"
fun fun_c2ats_g_simple_async_result_get_op_res_gboolean: {l1:addr} (!ptr_v_1(type_c2ats_GSimpleAsyncResult, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_simple_async_result_get_op_res_gboolean"
fun fun_c2ats_g_simple_async_result_set_check_cancellable: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSimpleAsyncResult, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2) -> void = "mac#g_simple_async_result_set_check_cancellable"
fun fun_c2ats_g_simple_async_result_get_source_tag: {l1:addr} (!ptr_v_1(type_c2ats_GSimpleAsyncResult, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_simple_async_result_get_source_tag"
fun fun_c2ats_g_simple_async_result_set_handle_cancellation: {l1:addr} (!ptr_v_1(type_c2ats_GSimpleAsyncResult, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_simple_async_result_set_handle_cancellation"
fun fun_c2ats_g_simple_async_result_complete: {l1:addr} (!ptr_v_1(type_c2ats_GSimpleAsyncResult, l1) | ptr l1) -> void = "mac#g_simple_async_result_complete"
fun fun_c2ats_g_simple_async_result_complete_in_idle: {l1:addr} (!ptr_v_1(type_c2ats_GSimpleAsyncResult, l1) | ptr l1) -> void = "mac#g_simple_async_result_complete_in_idle"
fun fun_c2ats_g_simple_async_result_run_in_thread: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSimpleAsyncResult, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GSimpleAsyncThreadFunc, int, ptr l2) -> void = "mac#g_simple_async_result_run_in_thread"
fun fun_c2ats_g_simple_async_result_set_from_error: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSimpleAsyncResult, l1), !ptr_v_1(type_c2ats_GError, l2) | ptr l1, ptr l2) -> void = "mac#g_simple_async_result_set_from_error"
fun fun_c2ats_g_simple_async_result_take_error: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSimpleAsyncResult, l1), !ptr_v_1(type_c2ats_GError, l2) | ptr l1, ptr l2) -> void = "mac#g_simple_async_result_take_error"
fun fun_c2ats_g_simple_async_result_propagate_error: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GSimpleAsyncResult, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_simple_async_result_propagate_error"
fun fun_c2ats_g_simple_async_result_set_error: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSimpleAsyncResult, l1), !ptr_v_1(char, l2) | ptr l1, type_c2ats_GQuark, type_c2ats_gint, ptr l2) -> void = "mac#g_simple_async_result_set_error"
fun fun_c2ats_g_simple_async_result_set_error_va: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSimpleAsyncResult, l1), !ptr_v_1(char, l2) | ptr l1, type_c2ats_GQuark, type_c2ats_gint, ptr l2, type_c2ats_va_list) -> void = "mac#g_simple_async_result_set_error_va"
fun fun_c2ats_g_simple_async_result_is_valid: {l1,l2:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1), !ptr_v_1(type_c2ats_GObject, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#g_simple_async_result_is_valid"
fun fun_c2ats_g_simple_async_report_error_in_idle: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(char, l2) | ptr l1, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer, type_c2ats_GQuark, type_c2ats_gint, ptr l2) -> void = "mac#g_simple_async_report_error_in_idle"
fun fun_c2ats_g_simple_async_report_gerror_in_idle: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_GError, l2) | ptr l1, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer, ptr l2) -> void = "mac#g_simple_async_report_gerror_in_idle"
fun fun_c2ats_g_simple_async_report_take_gerror_in_idle: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_GError, l2) | ptr l1, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer, ptr l2) -> void = "mac#g_simple_async_report_take_gerror_in_idle"
// File: /usr/include/glib-2.0/gio/gsimpleiostream.h
fun fun_c2ats_g_simple_io_stream_get_type: () -> type_c2ats_GType = "mac#g_simple_io_stream_get_type"
fun fun_c2ats_g_simple_io_stream_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GOutputStream, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GIOStream, l3) | ptr l3) = "mac#g_simple_io_stream_new"
// File: /usr/include/glib-2.0/gio/gsimplepermission.h
fun fun_c2ats_g_simple_permission_get_type: () -> type_c2ats_GType = "mac#g_simple_permission_get_type"
fun fun_c2ats_g_simple_permission_new: (type_c2ats_gboolean) -> [l1:addr] (ptr_v_1(type_c2ats_GPermission, l1) | ptr l1) = "mac#g_simple_permission_new"
// File: /usr/include/glib-2.0/gio/gsocketclient.h
abst@ype struct_c2ats__GSocketClientPrivate // FIXME! Forward declaration.
typedef type_c2ats_GSocketClientPrivate = struct_c2ats__GSocketClientPrivate
abst@ype struct_c2ats__GSocketClientClass // FIXME! Forward declaration.
typedef type_c2ats_GSocketClientClass = struct_c2ats__GSocketClientClass
typedef struct_c2ats__GSocketClientClass = $extype_struct"struct _GSocketClientClass" of {
  parent_class = type_c2ats_GObjectClass,
  event = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1), !ptr_v_1(type_c2ats_GSocketConnectable, l2), !ptr_v_1(type_c2ats_GIOStream, l3) | ptr l1, type_c2ats_GSocketClientEvent, ptr l2, ptr l3) -> void,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void
}
typedef struct_c2ats__GSocketClient = $extype_struct"struct _GSocketClient" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GSocketClientPrivate) *)
}
fun fun_c2ats_g_socket_client_get_type: () -> type_c2ats_GType = "mac#g_socket_client_get_type"
fun fun_c2ats_g_socket_client_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GSocketClient, l1) | ptr l1) = "mac#g_socket_client_new"
fun fun_c2ats_g_socket_client_get_family: {l1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1) | ptr l1) -> type_c2ats_GSocketFamily = "mac#g_socket_client_get_family"
fun fun_c2ats_g_socket_client_set_family: {l1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1) | ptr l1, type_c2ats_GSocketFamily) -> void = "mac#g_socket_client_set_family"
fun fun_c2ats_g_socket_client_get_socket_type: {l1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1) | ptr l1) -> type_c2ats_GSocketType = "mac#g_socket_client_get_socket_type"
fun fun_c2ats_g_socket_client_set_socket_type: {l1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1) | ptr l1, type_c2ats_GSocketType) -> void = "mac#g_socket_client_set_socket_type"
fun fun_c2ats_g_socket_client_get_protocol: {l1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1) | ptr l1) -> type_c2ats_GSocketProtocol = "mac#g_socket_client_get_protocol"
fun fun_c2ats_g_socket_client_set_protocol: {l1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1) | ptr l1, type_c2ats_GSocketProtocol) -> void = "mac#g_socket_client_set_protocol"
fun fun_c2ats_g_socket_client_get_local_address: {l1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSocketAddress, l2) | ptr l2) = "mac#g_socket_client_get_local_address"
fun fun_c2ats_g_socket_client_set_local_address: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1), !ptr_v_1(type_c2ats_GSocketAddress, l2) | ptr l1, ptr l2) -> void = "mac#g_socket_client_set_local_address"
fun fun_c2ats_g_socket_client_get_timeout: {l1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1) | ptr l1) -> type_c2ats_guint = "mac#g_socket_client_get_timeout"
fun fun_c2ats_g_socket_client_set_timeout: {l1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_socket_client_set_timeout"
fun fun_c2ats_g_socket_client_get_enable_proxy: {l1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_socket_client_get_enable_proxy"
fun fun_c2ats_g_socket_client_set_enable_proxy: {l1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_socket_client_set_enable_proxy"
fun fun_c2ats_g_socket_client_get_tls: {l1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_socket_client_get_tls"
fun fun_c2ats_g_socket_client_set_tls: {l1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_socket_client_set_tls"
fun fun_c2ats_g_socket_client_get_tls_validation_flags: {l1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1) | ptr l1) -> type_c2ats_GTlsCertificateFlags = "mac#g_socket_client_get_tls_validation_flags"
fun fun_c2ats_g_socket_client_set_tls_validation_flags: {l1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1) | ptr l1, type_c2ats_GTlsCertificateFlags) -> void = "mac#g_socket_client_set_tls_validation_flags"
fun fun_c2ats_g_socket_client_get_proxy_resolver: {l1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GProxyResolver, l2) | ptr l2) = "mac#g_socket_client_get_proxy_resolver"
fun fun_c2ats_g_socket_client_set_proxy_resolver: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1), !ptr_v_1(type_c2ats_GProxyResolver, l2) | ptr l1, ptr l2) -> void = "mac#g_socket_client_set_proxy_resolver"
fun fun_c2ats_g_socket_client_connect: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1), !ptr_v_1(type_c2ats_GSocketConnectable, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GSocketConnection, l5) | ptr l5) = "mac#g_socket_client_connect"
fun fun_c2ats_g_socket_client_connect_to_host: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_guint16, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GSocketConnection, l5) | ptr l5) = "mac#g_socket_client_connect_to_host"
fun fun_c2ats_g_socket_client_connect_to_service: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GSocketConnection, l6) | ptr l6) = "mac#g_socket_client_connect_to_service"
fun fun_c2ats_g_socket_client_connect_to_uri: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_guint16, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GSocketConnection, l5) | ptr l5) = "mac#g_socket_client_connect_to_uri"
fun fun_c2ats_g_socket_client_connect_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1), !ptr_v_1(type_c2ats_GSocketConnectable, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_socket_client_connect_async"
fun fun_c2ats_g_socket_client_connect_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GSocketConnection, l4) | ptr l4) = "mac#g_socket_client_connect_finish"
fun fun_c2ats_g_socket_client_connect_to_host_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_guint16, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_socket_client_connect_to_host_async"
fun fun_c2ats_g_socket_client_connect_to_host_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GSocketConnection, l4) | ptr l4) = "mac#g_socket_client_connect_to_host_finish"
fun fun_c2ats_g_socket_client_connect_to_service_async: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GCancellable, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_socket_client_connect_to_service_async"
fun fun_c2ats_g_socket_client_connect_to_service_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GSocketConnection, l4) | ptr l4) = "mac#g_socket_client_connect_to_service_finish"
fun fun_c2ats_g_socket_client_connect_to_uri_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_guint16, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_socket_client_connect_to_uri_async"
fun fun_c2ats_g_socket_client_connect_to_uri_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GSocketConnection, l4) | ptr l4) = "mac#g_socket_client_connect_to_uri_finish"
fun fun_c2ats_g_socket_client_add_application_proxy: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSocketClient, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_socket_client_add_application_proxy"
// File: /usr/include/glib-2.0/gio/gsocketconnectable.h
abst@ype struct_c2ats__GSocketConnectableIface // FIXME! Forward declaration.
typedef type_c2ats_GSocketConnectableIface = struct_c2ats__GSocketConnectableIface
typedef struct_c2ats__GSocketConnectableIface = $extype_struct"struct _GSocketConnectableIface" of {
  g_iface = type_c2ats_GTypeInterface,
  enumerate = {l1:addr} (!ptr_v_1(type_c2ats_GSocketConnectable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSocketAddressEnumerator, l2) | ptr l2),
  proxy_enumerate = {l1:addr} (!ptr_v_1(type_c2ats_GSocketConnectable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSocketAddressEnumerator, l2) | ptr l2),
  to_string = {l1:addr} (!ptr_v_1(type_c2ats_GSocketConnectable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2)
}
fun fun_c2ats_g_socket_connectable_get_type: () -> type_c2ats_GType = "mac#g_socket_connectable_get_type"
fun fun_c2ats_g_socket_connectable_enumerate: {l1:addr} (!ptr_v_1(type_c2ats_GSocketConnectable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSocketAddressEnumerator, l2) | ptr l2) = "mac#g_socket_connectable_enumerate"
fun fun_c2ats_g_socket_connectable_proxy_enumerate: {l1:addr} (!ptr_v_1(type_c2ats_GSocketConnectable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSocketAddressEnumerator, l2) | ptr l2) = "mac#g_socket_connectable_proxy_enumerate"
fun fun_c2ats_g_socket_connectable_to_string: {l1:addr} (!ptr_v_1(type_c2ats_GSocketConnectable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_socket_connectable_to_string"
// File: /usr/include/glib-2.0/gio/gsocket.h
abst@ype struct_c2ats__GSocketPrivate // FIXME! Forward declaration.
typedef type_c2ats_GSocketPrivate = struct_c2ats__GSocketPrivate
abst@ype struct_c2ats__GSocketClass // FIXME! Forward declaration.
typedef type_c2ats_GSocketClass = struct_c2ats__GSocketClass
typedef struct_c2ats__GSocketClass = $extype_struct"struct _GSocketClass" of {
  parent_class = type_c2ats_GObjectClass,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void,
  _g_reserved6 = () -> void,
  _g_reserved7 = () -> void,
  _g_reserved8 = () -> void,
  _g_reserved9 = () -> void,
  _g_reserved10 = () -> void
}
typedef struct_c2ats__GSocket = $extype_struct"struct _GSocket" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GSocketPrivate) *)
}
fun fun_c2ats_g_socket_get_type: () -> type_c2ats_GType = "mac#g_socket_get_type"
fun fun_c2ats_g_socket_new: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GError, l1, l1_1) | type_c2ats_GSocketFamily, type_c2ats_GSocketType, type_c2ats_GSocketProtocol, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSocket, l2) | ptr l2) = "mac#g_socket_new"
fun fun_c2ats_g_socket_new_from_fd: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GError, l1, l1_1) | type_c2ats_gint, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSocket, l2) | ptr l2) = "mac#g_socket_new_from_fd"
fun fun_c2ats_g_socket_get_fd: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1) -> int = "mac#g_socket_get_fd"
fun fun_c2ats_g_socket_get_family: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1) -> type_c2ats_GSocketFamily = "mac#g_socket_get_family"
fun fun_c2ats_g_socket_get_socket_type: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1) -> type_c2ats_GSocketType = "mac#g_socket_get_socket_type"
fun fun_c2ats_g_socket_get_protocol: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1) -> type_c2ats_GSocketProtocol = "mac#g_socket_get_protocol"
fun fun_c2ats_g_socket_get_local_address: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSocketAddress, l3) | ptr l3) = "mac#g_socket_get_local_address"
fun fun_c2ats_g_socket_get_remote_address: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSocketAddress, l3) | ptr l3) = "mac#g_socket_get_remote_address"
fun fun_c2ats_g_socket_set_blocking: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_socket_set_blocking"
fun fun_c2ats_g_socket_get_blocking: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_socket_get_blocking"
fun fun_c2ats_g_socket_set_keepalive: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_socket_set_keepalive"
fun fun_c2ats_g_socket_get_keepalive: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_socket_get_keepalive"
fun fun_c2ats_g_socket_get_listen_backlog: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1) -> type_c2ats_gint = "mac#g_socket_get_listen_backlog"
fun fun_c2ats_g_socket_set_listen_backlog: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1, type_c2ats_gint) -> void = "mac#g_socket_set_listen_backlog"
fun fun_c2ats_g_socket_get_timeout: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1) -> type_c2ats_guint = "mac#g_socket_get_timeout"
fun fun_c2ats_g_socket_set_timeout: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_socket_set_timeout"
fun fun_c2ats_g_socket_get_ttl: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1) -> type_c2ats_guint = "mac#g_socket_get_ttl"
fun fun_c2ats_g_socket_set_ttl: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_socket_set_ttl"
fun fun_c2ats_g_socket_get_broadcast: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_socket_get_broadcast"
fun fun_c2ats_g_socket_set_broadcast: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_socket_set_broadcast"
fun fun_c2ats_g_socket_get_multicast_loopback: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_socket_get_multicast_loopback"
fun fun_c2ats_g_socket_set_multicast_loopback: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_socket_set_multicast_loopback"
fun fun_c2ats_g_socket_get_multicast_ttl: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1) -> type_c2ats_guint = "mac#g_socket_get_multicast_ttl"
fun fun_c2ats_g_socket_set_multicast_ttl: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_socket_set_multicast_ttl"
fun fun_c2ats_g_socket_is_connected: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_socket_is_connected"
fun fun_c2ats_g_socket_bind: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_1(type_c2ats_GSocketAddress, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gboolean, ptr l3) -> type_c2ats_gboolean = "mac#g_socket_bind"
fun fun_c2ats_g_socket_join_multicast_group: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_1(type_c2ats_GInetAddress, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gboolean, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_socket_join_multicast_group"
fun fun_c2ats_g_socket_leave_multicast_group: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_1(type_c2ats_GInetAddress, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gboolean, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_socket_leave_multicast_group"
fun fun_c2ats_g_socket_connect: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_1(type_c2ats_GSocketAddress, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_socket_connect"
fun fun_c2ats_g_socket_check_connect_result: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_socket_check_connect_result"
fun fun_c2ats_g_socket_get_available_bytes: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1) -> type_c2ats_gssize = "mac#g_socket_get_available_bytes"
fun fun_c2ats_g_socket_condition_check: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1, type_c2ats_GIOCondition) -> type_c2ats_GIOCondition = "mac#g_socket_condition_check"
fun fun_c2ats_g_socket_condition_wait: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_GIOCondition, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_socket_condition_wait"
fun fun_c2ats_g_socket_condition_timed_wait: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_GIOCondition, type_c2ats_gint64, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_socket_condition_timed_wait"
fun fun_c2ats_g_socket_accept: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GSocket, l4) | ptr l4) = "mac#g_socket_accept"
fun fun_c2ats_g_socket_listen: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_socket_listen"
fun fun_c2ats_g_socket_receive: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gsize, ptr l3, ptr l4) -> type_c2ats_gssize = "mac#g_socket_receive"
fun fun_c2ats_g_socket_receive_from: {l1,l2,l2_1,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_2(type_c2ats_GSocketAddress, l2, l2_1), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, type_c2ats_gsize, ptr l4, ptr l5) -> type_c2ats_gssize = "mac#g_socket_receive_from"
fun fun_c2ats_g_socket_send: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gsize, ptr l3, ptr l4) -> type_c2ats_gssize = "mac#g_socket_send"
fun fun_c2ats_g_socket_send_to: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_1(type_c2ats_GSocketAddress, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, type_c2ats_gsize, ptr l4, ptr l5) -> type_c2ats_gssize = "mac#g_socket_send_to"
fun fun_c2ats_g_socket_receive_message: {l1,l2,l2_1,l3,l4,l4_1,l4_2,l5,l6,l7,l8,l8_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_2(type_c2ats_GSocketAddress, l2, l2_1), !ptr_v_1(type_c2ats_GInputVector, l3), !ptr_v_3(type_c2ats_GSocketControlMessage, l4, l4_1, l4_2), !ptr_v_1(type_c2ats_gint, l5), !ptr_v_1(type_c2ats_gint, l6), !ptr_v_1(type_c2ats_GCancellable, l7), !ptr_v_2(type_c2ats_GError, l8, l8_1) | ptr l1, ptr l2, ptr l3, type_c2ats_gint, ptr l4, ptr l5, ptr l6, ptr l7, ptr l8) -> type_c2ats_gssize = "mac#g_socket_receive_message"
fun fun_c2ats_g_socket_send_message: {l1,l2,l3,l4,l4_1,l5,l6,l6_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_1(type_c2ats_GSocketAddress, l2), !ptr_v_1(type_c2ats_GOutputVector, l3), !ptr_v_2(type_c2ats_GSocketControlMessage, l4, l4_1), !ptr_v_1(type_c2ats_GCancellable, l5), !ptr_v_2(type_c2ats_GError, l6, l6_1) | ptr l1, ptr l2, ptr l3, type_c2ats_gint, ptr l4, type_c2ats_gint, type_c2ats_gint, ptr l5, ptr l6) -> type_c2ats_gssize = "mac#g_socket_send_message"
fun fun_c2ats_g_socket_receive_messages: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_1(type_c2ats_GInputMessage, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_gint, ptr l3, ptr l4) -> type_c2ats_gint = "mac#g_socket_receive_messages"
fun fun_c2ats_g_socket_send_messages: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_1(type_c2ats_GOutputMessage, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_gint, ptr l3, ptr l4) -> type_c2ats_gint = "mac#g_socket_send_messages"
fun fun_c2ats_g_socket_close: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_socket_close"
fun fun_c2ats_g_socket_shutdown: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_gboolean, type_c2ats_gboolean, ptr l2) -> type_c2ats_gboolean = "mac#g_socket_shutdown"
fun fun_c2ats_g_socket_is_closed: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_socket_is_closed"
fun fun_c2ats_g_socket_create_source: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GIOCondition, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSource, l3) | ptr l3) = "mac#g_socket_create_source"
fun fun_c2ats_g_socket_speaks_ipv4: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_socket_speaks_ipv4"
fun fun_c2ats_g_socket_get_credentials: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GCredentials, l3) | ptr l3) = "mac#g_socket_get_credentials"
fun fun_c2ats_g_socket_receive_with_blocking: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gsize, type_c2ats_gboolean, ptr l3, ptr l4) -> type_c2ats_gssize = "mac#g_socket_receive_with_blocking"
fun fun_c2ats_g_socket_send_with_blocking: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gsize, type_c2ats_gboolean, ptr l3, ptr l4) -> type_c2ats_gssize = "mac#g_socket_send_with_blocking"
fun fun_c2ats_g_socket_get_option: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_gint, type_c2ats_gint, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_socket_get_option"
fun fun_c2ats_g_socket_set_option: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GSocket, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, ptr l2) -> type_c2ats_gboolean = "mac#g_socket_set_option"
// File: /usr/include/glib-2.0/gio/gsocketconnection.h
abst@ype struct_c2ats__GSocketConnectionPrivate // FIXME! Forward declaration.
typedef type_c2ats_GSocketConnectionPrivate = struct_c2ats__GSocketConnectionPrivate
abst@ype struct_c2ats__GSocketConnectionClass // FIXME! Forward declaration.
typedef type_c2ats_GSocketConnectionClass = struct_c2ats__GSocketConnectionClass
typedef struct_c2ats__GSocketConnectionClass = $extype_struct"struct _GSocketConnectionClass" of {
  parent_class = type_c2ats_GIOStreamClass,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void,
  _g_reserved6 = () -> void
}
typedef struct_c2ats__GSocketConnection = $extype_struct"struct _GSocketConnection" of {
  parent_instance = type_c2ats_GIOStream,
  priv = ptr (* cPtr0(type_c2ats_GSocketConnectionPrivate) *)
}
fun fun_c2ats_g_socket_connection_get_type: () -> type_c2ats_GType = "mac#g_socket_connection_get_type"
fun fun_c2ats_g_socket_connection_is_connected: {l1:addr} (!ptr_v_1(type_c2ats_GSocketConnection, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_socket_connection_is_connected"
fun fun_c2ats_g_socket_connection_connect: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GSocketConnection, l1), !ptr_v_1(type_c2ats_GSocketAddress, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_socket_connection_connect"
fun fun_c2ats_g_socket_connection_connect_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSocketConnection, l1), !ptr_v_1(type_c2ats_GSocketAddress, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_socket_connection_connect_async"
fun fun_c2ats_g_socket_connection_connect_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSocketConnection, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_socket_connection_connect_finish"
fun fun_c2ats_g_socket_connection_get_socket: {l1:addr} (!ptr_v_1(type_c2ats_GSocketConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSocket, l2) | ptr l2) = "mac#g_socket_connection_get_socket"
fun fun_c2ats_g_socket_connection_get_local_address: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GSocketConnection, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSocketAddress, l3) | ptr l3) = "mac#g_socket_connection_get_local_address"
fun fun_c2ats_g_socket_connection_get_remote_address: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GSocketConnection, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSocketAddress, l3) | ptr l3) = "mac#g_socket_connection_get_remote_address"
fun fun_c2ats_g_socket_connection_factory_register_type: (type_c2ats_GType, type_c2ats_GSocketFamily, type_c2ats_GSocketType, type_c2ats_gint) -> void = "mac#g_socket_connection_factory_register_type"
fun fun_c2ats_g_socket_connection_factory_lookup_type: (type_c2ats_GSocketFamily, type_c2ats_GSocketType, type_c2ats_gint) -> type_c2ats_GType = "mac#g_socket_connection_factory_lookup_type"
fun fun_c2ats_g_socket_connection_factory_create_connection: {l1:addr} (!ptr_v_1(type_c2ats_GSocket, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSocketConnection, l2) | ptr l2) = "mac#g_socket_connection_factory_create_connection"
// File: /usr/include/glib-2.0/gio/gsocketcontrolmessage.h
abst@ype struct_c2ats__GSocketControlMessagePrivate // FIXME! Forward declaration.
typedef type_c2ats_GSocketControlMessagePrivate = struct_c2ats__GSocketControlMessagePrivate
abst@ype struct_c2ats__GSocketControlMessageClass // FIXME! Forward declaration.
typedef type_c2ats_GSocketControlMessageClass = struct_c2ats__GSocketControlMessageClass
typedef struct_c2ats__GSocketControlMessageClass = $extype_struct"struct _GSocketControlMessageClass" of {
  parent_class = type_c2ats_GObjectClass,
  get_size = {l1:addr} (!ptr_v_1(type_c2ats_GSocketControlMessage, l1) | ptr l1) -> type_c2ats_gsize,
  get_level = {l1:addr} (!ptr_v_1(type_c2ats_GSocketControlMessage, l1) | ptr l1) -> int,
  get_type = {l1:addr} (!ptr_v_1(type_c2ats_GSocketControlMessage, l1) | ptr l1) -> int,
  serialize = {l1:addr} (!ptr_v_1(type_c2ats_GSocketControlMessage, l1) | ptr l1, type_c2ats_gpointer) -> void,
  deserialize = (int, int, type_c2ats_gsize, type_c2ats_gpointer) -> [l1:addr] (ptr_v_1(type_c2ats_GSocketControlMessage, l1) | ptr l1),
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void
}
typedef struct_c2ats__GSocketControlMessage = $extype_struct"struct _GSocketControlMessage" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GSocketControlMessagePrivate) *)
}
fun fun_c2ats_g_socket_control_message_get_type: () -> type_c2ats_GType = "mac#g_socket_control_message_get_type"
fun fun_c2ats_g_socket_control_message_get_size: {l1:addr} (!ptr_v_1(type_c2ats_GSocketControlMessage, l1) | ptr l1) -> type_c2ats_gsize = "mac#g_socket_control_message_get_size"
fun fun_c2ats_g_socket_control_message_get_level: {l1:addr} (!ptr_v_1(type_c2ats_GSocketControlMessage, l1) | ptr l1) -> int = "mac#g_socket_control_message_get_level"
fun fun_c2ats_g_socket_control_message_get_msg_type: {l1:addr} (!ptr_v_1(type_c2ats_GSocketControlMessage, l1) | ptr l1) -> int = "mac#g_socket_control_message_get_msg_type"
fun fun_c2ats_g_socket_control_message_serialize: {l1:addr} (!ptr_v_1(type_c2ats_GSocketControlMessage, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_socket_control_message_serialize"
fun fun_c2ats_g_socket_control_message_deserialize: (int, int, type_c2ats_gsize, type_c2ats_gpointer) -> [l1:addr] (ptr_v_1(type_c2ats_GSocketControlMessage, l1) | ptr l1) = "mac#g_socket_control_message_deserialize"
// File: /usr/include/glib-2.0/gio/gsocketlistener.h
abst@ype struct_c2ats__GSocketListenerPrivate // FIXME! Forward declaration.
typedef type_c2ats_GSocketListenerPrivate = struct_c2ats__GSocketListenerPrivate
abst@ype struct_c2ats__GSocketListenerClass // FIXME! Forward declaration.
typedef type_c2ats_GSocketListenerClass = struct_c2ats__GSocketListenerClass
typedef struct_c2ats__GSocketListenerClass = $extype_struct"struct _GSocketListenerClass" of {
  parent_class = type_c2ats_GObjectClass,
  changed = {l1:addr} (!ptr_v_1(type_c2ats_GSocketListener, l1) | ptr l1) -> void,
  event = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSocketListener, l1), !ptr_v_1(type_c2ats_GSocketListenerEvent, l2), !ptr_v_1(type_c2ats_GSocket, l3) | ptr l1, ptr l2, ptr l3) -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void,
  _g_reserved6 = () -> void
}
typedef struct_c2ats__GSocketListener = $extype_struct"struct _GSocketListener" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GSocketListenerPrivate) *)
}
fun fun_c2ats_g_socket_listener_get_type: () -> type_c2ats_GType = "mac#g_socket_listener_get_type"
fun fun_c2ats_g_socket_listener_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GSocketListener, l1) | ptr l1) = "mac#g_socket_listener_new"
fun fun_c2ats_g_socket_listener_set_backlog: {l1:addr} (!ptr_v_1(type_c2ats_GSocketListener, l1) | ptr l1, int) -> void = "mac#g_socket_listener_set_backlog"
fun fun_c2ats_g_socket_listener_add_socket: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GSocketListener, l1), !ptr_v_1(type_c2ats_GSocket, l2), !ptr_v_1(type_c2ats_GObject, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_socket_listener_add_socket"
fun fun_c2ats_g_socket_listener_add_address: {l1,l2,l3,l4,l4_1,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GSocketListener, l1), !ptr_v_1(type_c2ats_GSocketAddress, l2), !ptr_v_1(type_c2ats_GObject, l3), !ptr_v_2(type_c2ats_GSocketAddress, l4, l4_1), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, type_c2ats_GSocketType, type_c2ats_GSocketProtocol, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#g_socket_listener_add_address"
fun fun_c2ats_g_socket_listener_add_inet_port: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSocketListener, l1), !ptr_v_1(type_c2ats_GObject, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_guint16, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_socket_listener_add_inet_port"
fun fun_c2ats_g_socket_listener_add_any_inet_port: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSocketListener, l1), !ptr_v_1(type_c2ats_GObject, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_guint16 = "mac#g_socket_listener_add_any_inet_port"
fun fun_c2ats_g_socket_listener_accept_socket: {l1,l2,l2_1,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GSocketListener, l1), !ptr_v_2(type_c2ats_GObject, l2, l2_1), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GSocket, l5) | ptr l5) = "mac#g_socket_listener_accept_socket"
fun fun_c2ats_g_socket_listener_accept_socket_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSocketListener, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_socket_listener_accept_socket_async"
fun fun_c2ats_g_socket_listener_accept_socket_finish: {l1,l2,l3,l3_1,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GSocketListener, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GObject, l3, l3_1), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GSocket, l5) | ptr l5) = "mac#g_socket_listener_accept_socket_finish"
fun fun_c2ats_g_socket_listener_accept: {l1,l2,l2_1,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GSocketListener, l1), !ptr_v_2(type_c2ats_GObject, l2, l2_1), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GSocketConnection, l5) | ptr l5) = "mac#g_socket_listener_accept"
fun fun_c2ats_g_socket_listener_accept_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSocketListener, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_socket_listener_accept_async"
fun fun_c2ats_g_socket_listener_accept_finish: {l1,l2,l3,l3_1,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GSocketListener, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GObject, l3, l3_1), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GSocketConnection, l5) | ptr l5) = "mac#g_socket_listener_accept_finish"
fun fun_c2ats_g_socket_listener_close: {l1:addr} (!ptr_v_1(type_c2ats_GSocketListener, l1) | ptr l1) -> void = "mac#g_socket_listener_close"
// File: /usr/include/glib-2.0/gio/gsocketservice.h
abst@ype struct_c2ats__GSocketServicePrivate // FIXME! Forward declaration.
typedef type_c2ats_GSocketServicePrivate = struct_c2ats__GSocketServicePrivate
abst@ype struct_c2ats__GSocketServiceClass // FIXME! Forward declaration.
typedef type_c2ats_GSocketServiceClass = struct_c2ats__GSocketServiceClass
typedef struct_c2ats__GSocketServiceClass = $extype_struct"struct _GSocketServiceClass" of {
  parent_class = type_c2ats_GSocketListenerClass,
  incoming = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSocketService, l1), !ptr_v_1(type_c2ats_GSocketConnection, l2), !ptr_v_1(type_c2ats_GObject, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void,
  _g_reserved6 = () -> void
}
typedef struct_c2ats__GSocketService = $extype_struct"struct _GSocketService" of {
  parent_instance = type_c2ats_GSocketListener,
  priv = ptr (* cPtr0(type_c2ats_GSocketServicePrivate) *)
}
fun fun_c2ats_g_socket_service_get_type: () -> type_c2ats_GType = "mac#g_socket_service_get_type"
fun fun_c2ats_g_socket_service_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GSocketService, l1) | ptr l1) = "mac#g_socket_service_new"
fun fun_c2ats_g_socket_service_start: {l1:addr} (!ptr_v_1(type_c2ats_GSocketService, l1) | ptr l1) -> void = "mac#g_socket_service_start"
fun fun_c2ats_g_socket_service_stop: {l1:addr} (!ptr_v_1(type_c2ats_GSocketService, l1) | ptr l1) -> void = "mac#g_socket_service_stop"
fun fun_c2ats_g_socket_service_is_active: {l1:addr} (!ptr_v_1(type_c2ats_GSocketService, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_socket_service_is_active"
// File: /usr/include/glib-2.0/gio/gsrvtarget.h
fun fun_c2ats_g_srv_target_get_type: () -> type_c2ats_GType = "mac#g_srv_target_get_type"
fun fun_c2ats_g_srv_target_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_guint16, type_c2ats_guint16, type_c2ats_guint16) -> [l2:addr] (ptr_v_1(type_c2ats_GSrvTarget, l2) | ptr l2) = "mac#g_srv_target_new"
fun fun_c2ats_g_srv_target_copy: {l1:addr} (!ptr_v_1(type_c2ats_GSrvTarget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSrvTarget, l2) | ptr l2) = "mac#g_srv_target_copy"
fun fun_c2ats_g_srv_target_free: {l1:addr} (!ptr_v_1(type_c2ats_GSrvTarget, l1) | ptr l1) -> void = "mac#g_srv_target_free"
fun fun_c2ats_g_srv_target_get_hostname: {l1:addr} (!ptr_v_1(type_c2ats_GSrvTarget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_srv_target_get_hostname"
fun fun_c2ats_g_srv_target_get_port: {l1:addr} (!ptr_v_1(type_c2ats_GSrvTarget, l1) | ptr l1) -> type_c2ats_guint16 = "mac#g_srv_target_get_port"
fun fun_c2ats_g_srv_target_get_priority: {l1:addr} (!ptr_v_1(type_c2ats_GSrvTarget, l1) | ptr l1) -> type_c2ats_guint16 = "mac#g_srv_target_get_priority"
fun fun_c2ats_g_srv_target_get_weight: {l1:addr} (!ptr_v_1(type_c2ats_GSrvTarget, l1) | ptr l1) -> type_c2ats_guint16 = "mac#g_srv_target_get_weight"
fun fun_c2ats_g_srv_target_list_sort: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_srv_target_list_sort"
// File: /usr/include/glib-2.0/gio/gsimpleproxyresolver.h
abst@ype struct_c2ats__GSimpleProxyResolver // FIXME! Forward declaration.
typedef type_c2ats_GSimpleProxyResolver = struct_c2ats__GSimpleProxyResolver
abst@ype struct_c2ats__GSimpleProxyResolverPrivate // FIXME! Forward declaration.
typedef type_c2ats_GSimpleProxyResolverPrivate = struct_c2ats__GSimpleProxyResolverPrivate
abst@ype struct_c2ats__GSimpleProxyResolverClass // FIXME! Forward declaration.
typedef type_c2ats_GSimpleProxyResolverClass = struct_c2ats__GSimpleProxyResolverClass
typedef struct_c2ats__GSimpleProxyResolver = $extype_struct"struct _GSimpleProxyResolver" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GSimpleProxyResolverPrivate) *)
}
typedef struct_c2ats__GSimpleProxyResolverClass = $extype_struct"struct _GSimpleProxyResolverClass" of {
  parent_class = type_c2ats_GObjectClass,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void
}
fun fun_c2ats_g_simple_proxy_resolver_get_type: () -> type_c2ats_GType = "mac#g_simple_proxy_resolver_get_type"
fun fun_c2ats_g_simple_proxy_resolver_new: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GProxyResolver, l3) | ptr l3) = "mac#g_simple_proxy_resolver_new"
fun fun_c2ats_g_simple_proxy_resolver_set_default_proxy: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSimpleProxyResolver, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_simple_proxy_resolver_set_default_proxy"
fun fun_c2ats_g_simple_proxy_resolver_set_ignore_hosts: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GSimpleProxyResolver, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l1, ptr l2) -> void = "mac#g_simple_proxy_resolver_set_ignore_hosts"
fun fun_c2ats_g_simple_proxy_resolver_set_uri_proxy: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSimpleProxyResolver, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_simple_proxy_resolver_set_uri_proxy"
// File: /usr/include/glib-2.0/gio/gtask.h
abst@ype struct_c2ats__GTaskClass // FIXME! Forward declaration.
typedef type_c2ats_GTaskClass = struct_c2ats__GTaskClass
fun fun_c2ats_g_task_get_type: () -> type_c2ats_GType = "mac#g_task_get_type"
fun fun_c2ats_g_task_new: {l1:addr} (!ptr_v_1(type_c2ats_GCancellable, l1) | type_c2ats_gpointer, ptr l1, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GTask, l2) | ptr l2) = "mac#g_task_new"
fun fun_c2ats_g_task_report_error: {l1:addr} (!ptr_v_1(type_c2ats_GError, l1) | type_c2ats_gpointer, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer, type_c2ats_gpointer, ptr l1) -> void = "mac#g_task_report_error"
fun fun_c2ats_g_task_report_new_error: {l1:addr} (!ptr_v_1(char, l1) | type_c2ats_gpointer, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer, type_c2ats_gpointer, type_c2ats_GQuark, type_c2ats_gint, ptr l1) -> void = "mac#g_task_report_new_error"
fun fun_c2ats_g_task_set_task_data: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#g_task_set_task_data"
fun fun_c2ats_g_task_set_priority: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1, type_c2ats_gint) -> void = "mac#g_task_set_priority"
fun fun_c2ats_g_task_set_check_cancellable: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_task_set_check_cancellable"
fun fun_c2ats_g_task_set_source_tag: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_task_set_source_tag"
fun fun_c2ats_g_task_get_source_object: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_task_get_source_object"
fun fun_c2ats_g_task_get_task_data: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_task_get_task_data"
fun fun_c2ats_g_task_get_priority: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1) -> type_c2ats_gint = "mac#g_task_get_priority"
fun fun_c2ats_g_task_get_context: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMainContext, l2) | ptr l2) = "mac#g_task_get_context"
fun fun_c2ats_g_task_get_cancellable: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GCancellable, l2) | ptr l2) = "mac#g_task_get_cancellable"
fun fun_c2ats_g_task_get_check_cancellable: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_task_get_check_cancellable"
fun fun_c2ats_g_task_get_source_tag: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1) -> type_c2ats_gpointer = "mac#g_task_get_source_tag"
fun fun_c2ats_g_task_is_valid: (type_c2ats_gpointer, type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#g_task_is_valid"
typedef type_c2ats_GTaskThreadFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GTask, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_gpointer, type_c2ats_gpointer, ptr l2) -> void
fun fun_c2ats_g_task_run_in_thread: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1, type_c2ats_GTaskThreadFunc) -> void = "mac#g_task_run_in_thread"
fun fun_c2ats_g_task_run_in_thread_sync: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1, type_c2ats_GTaskThreadFunc) -> void = "mac#g_task_run_in_thread_sync"
fun fun_c2ats_g_task_set_return_on_cancel: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#g_task_set_return_on_cancel"
fun fun_c2ats_g_task_get_return_on_cancel: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_task_get_return_on_cancel"
fun fun_c2ats_g_task_attach_source: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTask, l1), !ptr_v_1(type_c2ats_GSource, l2) | ptr l1, ptr l2, type_c2ats_GSourceFunc) -> void = "mac#g_task_attach_source"
fun fun_c2ats_g_task_return_pointer: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#g_task_return_pointer"
fun fun_c2ats_g_task_return_boolean: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_task_return_boolean"
fun fun_c2ats_g_task_return_int: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1, type_c2ats_gssize) -> void = "mac#g_task_return_int"
fun fun_c2ats_g_task_return_error: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTask, l1), !ptr_v_1(type_c2ats_GError, l2) | ptr l1, ptr l2) -> void = "mac#g_task_return_error"
fun fun_c2ats_g_task_return_new_error: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTask, l1), !ptr_v_1(char, l2) | ptr l1, type_c2ats_GQuark, type_c2ats_gint, ptr l2) -> void = "mac#g_task_return_new_error"
fun fun_c2ats_g_task_return_error_if_cancelled: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_task_return_error_if_cancelled"
fun fun_c2ats_g_task_propagate_pointer: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GTask, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gpointer = "mac#g_task_propagate_pointer"
fun fun_c2ats_g_task_propagate_boolean: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GTask, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_task_propagate_boolean"
fun fun_c2ats_g_task_propagate_int: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GTask, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gssize = "mac#g_task_propagate_int"
fun fun_c2ats_g_task_had_error: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_task_had_error"
fun fun_c2ats_g_task_get_completed: {l1:addr} (!ptr_v_1(type_c2ats_GTask, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_task_get_completed"
// File: /usr/include/glib-2.0/gio/gsubprocess.h
fun fun_c2ats_g_subprocess_get_type: () -> type_c2ats_GType = "mac#g_subprocess_get_type"
fun fun_c2ats_g_subprocess_new: {l1,l1_1,l2:addr} (!ptr_v_2(type_c2ats_GError, l1, l1_1), !ptr_v_1(type_c2ats_gchar, l2) | type_c2ats_GSubprocessFlags, ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSubprocess, l3) | ptr l3) = "mac#g_subprocess_new"
fun fun_c2ats_g_subprocess_newv: {l1,l1_1,l2,l2_1:addr} (!ptr_v_2(type_c2ats_gchar, l1, l1_1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_GSubprocessFlags, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSubprocess, l3) | ptr l3) = "mac#g_subprocess_newv"
fun fun_c2ats_g_subprocess_get_stdin_pipe: {l1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GOutputStream, l2) | ptr l2) = "mac#g_subprocess_get_stdin_pipe"
fun fun_c2ats_g_subprocess_get_stdout_pipe: {l1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GInputStream, l2) | ptr l2) = "mac#g_subprocess_get_stdout_pipe"
fun fun_c2ats_g_subprocess_get_stderr_pipe: {l1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GInputStream, l2) | ptr l2) = "mac#g_subprocess_get_stderr_pipe"
fun fun_c2ats_g_subprocess_get_identifier: {l1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_subprocess_get_identifier"
fun fun_c2ats_g_subprocess_send_signal: {l1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1) | ptr l1, type_c2ats_gint) -> void = "mac#g_subprocess_send_signal"
fun fun_c2ats_g_subprocess_force_exit: {l1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1) | ptr l1) -> void = "mac#g_subprocess_force_exit"
fun fun_c2ats_g_subprocess_wait: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_subprocess_wait"
fun fun_c2ats_g_subprocess_wait_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_subprocess_wait_async"
fun fun_c2ats_g_subprocess_wait_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_subprocess_wait_finish"
fun fun_c2ats_g_subprocess_wait_check: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_subprocess_wait_check"
fun fun_c2ats_g_subprocess_wait_check_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_subprocess_wait_check_async"
fun fun_c2ats_g_subprocess_wait_check_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_subprocess_wait_check_finish"
fun fun_c2ats_g_subprocess_get_status: {l1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1) | ptr l1) -> type_c2ats_gint = "mac#g_subprocess_get_status"
fun fun_c2ats_g_subprocess_get_successful: {l1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_subprocess_get_successful"
fun fun_c2ats_g_subprocess_get_if_exited: {l1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_subprocess_get_if_exited"
fun fun_c2ats_g_subprocess_get_exit_status: {l1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1) | ptr l1) -> type_c2ats_gint = "mac#g_subprocess_get_exit_status"
fun fun_c2ats_g_subprocess_get_if_signaled: {l1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_subprocess_get_if_signaled"
fun fun_c2ats_g_subprocess_get_term_sig: {l1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1) | ptr l1) -> type_c2ats_gint = "mac#g_subprocess_get_term_sig"
fun fun_c2ats_g_subprocess_communicate: {l1,l2,l3,l4,l4_1,l5,l5_1,l6,l6_1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1), !ptr_v_1(type_c2ats_GBytes, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GBytes, l4, l4_1), !ptr_v_2(type_c2ats_GBytes, l5, l5_1), !ptr_v_2(type_c2ats_GError, l6, l6_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> type_c2ats_gboolean = "mac#g_subprocess_communicate"
fun fun_c2ats_g_subprocess_communicate_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1), !ptr_v_1(type_c2ats_GBytes, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_subprocess_communicate_async"
fun fun_c2ats_g_subprocess_communicate_finish: {l1,l2,l3,l3_1,l4,l4_1,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GBytes, l3, l3_1), !ptr_v_2(type_c2ats_GBytes, l4, l4_1), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#g_subprocess_communicate_finish"
fun fun_c2ats_g_subprocess_communicate_utf8: {l1,l2,l3,l4,l4_1,l5,l5_1,l6,l6_1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(char, l4, l4_1), !ptr_v_2(char, l5, l5_1), !ptr_v_2(type_c2ats_GError, l6, l6_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> type_c2ats_gboolean = "mac#g_subprocess_communicate_utf8"
fun fun_c2ats_g_subprocess_communicate_utf8_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_subprocess_communicate_utf8_async"
fun fun_c2ats_g_subprocess_communicate_utf8_finish: {l1,l2,l3,l3_1,l4,l4_1,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GSubprocess, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(char, l3, l3_1), !ptr_v_2(char, l4, l4_1), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#g_subprocess_communicate_utf8_finish"
// File: /usr/include/glib-2.0/gio/gsubprocesslauncher.h
fun fun_c2ats_g_subprocess_launcher_get_type: () -> type_c2ats_GType = "mac#g_subprocess_launcher_get_type"
fun fun_c2ats_g_subprocess_launcher_new: (type_c2ats_GSubprocessFlags) -> [l1:addr] (ptr_v_1(type_c2ats_GSubprocessLauncher, l1) | ptr l1) = "mac#g_subprocess_launcher_new"
fun fun_c2ats_g_subprocess_launcher_spawn: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GSubprocessLauncher, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GSubprocess, l4) | ptr l4) = "mac#g_subprocess_launcher_spawn"
fun fun_c2ats_g_subprocess_launcher_spawnv: {l1,l2,l2_1,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GSubprocessLauncher, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GSubprocess, l4) | ptr l4) = "mac#g_subprocess_launcher_spawnv"
fun fun_c2ats_g_subprocess_launcher_set_environ: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GSubprocessLauncher, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l1, ptr l2) -> void = "mac#g_subprocess_launcher_set_environ"
fun fun_c2ats_g_subprocess_launcher_setenv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSubprocessLauncher, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean) -> void = "mac#g_subprocess_launcher_setenv"
fun fun_c2ats_g_subprocess_launcher_unsetenv: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSubprocessLauncher, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_subprocess_launcher_unsetenv"
fun fun_c2ats_g_subprocess_launcher_getenv: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSubprocessLauncher, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_subprocess_launcher_getenv"
fun fun_c2ats_g_subprocess_launcher_set_cwd: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSubprocessLauncher, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_subprocess_launcher_set_cwd"
fun fun_c2ats_g_subprocess_launcher_set_flags: {l1:addr} (!ptr_v_1(type_c2ats_GSubprocessLauncher, l1) | ptr l1, type_c2ats_GSubprocessFlags) -> void = "mac#g_subprocess_launcher_set_flags"
fun fun_c2ats_g_subprocess_launcher_set_stdin_file_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSubprocessLauncher, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_subprocess_launcher_set_stdin_file_path"
fun fun_c2ats_g_subprocess_launcher_take_stdin_fd: {l1:addr} (!ptr_v_1(type_c2ats_GSubprocessLauncher, l1) | ptr l1, type_c2ats_gint) -> void = "mac#g_subprocess_launcher_take_stdin_fd"
fun fun_c2ats_g_subprocess_launcher_set_stdout_file_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSubprocessLauncher, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_subprocess_launcher_set_stdout_file_path"
fun fun_c2ats_g_subprocess_launcher_take_stdout_fd: {l1:addr} (!ptr_v_1(type_c2ats_GSubprocessLauncher, l1) | ptr l1, type_c2ats_gint) -> void = "mac#g_subprocess_launcher_take_stdout_fd"
fun fun_c2ats_g_subprocess_launcher_set_stderr_file_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSubprocessLauncher, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_subprocess_launcher_set_stderr_file_path"
fun fun_c2ats_g_subprocess_launcher_take_stderr_fd: {l1:addr} (!ptr_v_1(type_c2ats_GSubprocessLauncher, l1) | ptr l1, type_c2ats_gint) -> void = "mac#g_subprocess_launcher_take_stderr_fd"
fun fun_c2ats_g_subprocess_launcher_take_fd: {l1:addr} (!ptr_v_1(type_c2ats_GSubprocessLauncher, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#g_subprocess_launcher_take_fd"
fun fun_c2ats_g_subprocess_launcher_set_child_setup: {l1:addr} (!ptr_v_1(type_c2ats_GSubprocessLauncher, l1) | ptr l1, type_c2ats_GSpawnChildSetupFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#g_subprocess_launcher_set_child_setup"
// File: /usr/include/glib-2.0/gio/gtcpconnection.h
abst@ype struct_c2ats__GTcpConnectionPrivate // FIXME! Forward declaration.
typedef type_c2ats_GTcpConnectionPrivate = struct_c2ats__GTcpConnectionPrivate
abst@ype struct_c2ats__GTcpConnectionClass // FIXME! Forward declaration.
typedef type_c2ats_GTcpConnectionClass = struct_c2ats__GTcpConnectionClass
typedef struct_c2ats__GTcpConnectionClass = $extype_struct"struct _GTcpConnectionClass" of {
  parent_class = type_c2ats_GSocketConnectionClass
}
typedef struct_c2ats__GTcpConnection = $extype_struct"struct _GTcpConnection" of {
  parent_instance = type_c2ats_GSocketConnection,
  priv = ptr (* cPtr0(type_c2ats_GTcpConnectionPrivate) *)
}
fun fun_c2ats_g_tcp_connection_get_type: () -> type_c2ats_GType = "mac#g_tcp_connection_get_type"
fun fun_c2ats_g_tcp_connection_set_graceful_disconnect: {l1:addr} (!ptr_v_1(type_c2ats_GTcpConnection, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_tcp_connection_set_graceful_disconnect"
fun fun_c2ats_g_tcp_connection_get_graceful_disconnect: {l1:addr} (!ptr_v_1(type_c2ats_GTcpConnection, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_tcp_connection_get_graceful_disconnect"
// File: /usr/include/glib-2.0/gio/gtcpwrapperconnection.h
abst@ype struct_c2ats__GTcpWrapperConnectionPrivate // FIXME! Forward declaration.
typedef type_c2ats_GTcpWrapperConnectionPrivate = struct_c2ats__GTcpWrapperConnectionPrivate
abst@ype struct_c2ats__GTcpWrapperConnectionClass // FIXME! Forward declaration.
typedef type_c2ats_GTcpWrapperConnectionClass = struct_c2ats__GTcpWrapperConnectionClass
typedef struct_c2ats__GTcpWrapperConnectionClass = $extype_struct"struct _GTcpWrapperConnectionClass" of {
  parent_class = type_c2ats_GTcpConnectionClass
}
typedef struct_c2ats__GTcpWrapperConnection = $extype_struct"struct _GTcpWrapperConnection" of {
  parent_instance = type_c2ats_GTcpConnection,
  priv = ptr (* cPtr0(type_c2ats_GTcpWrapperConnectionPrivate) *)
}
fun fun_c2ats_g_tcp_wrapper_connection_get_type: () -> type_c2ats_GType = "mac#g_tcp_wrapper_connection_get_type"
fun fun_c2ats_g_tcp_wrapper_connection_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_GIOStream, l1), !ptr_v_1(type_c2ats_GSocket, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GSocketConnection, l3) | ptr l3) = "mac#g_tcp_wrapper_connection_new"
fun fun_c2ats_g_tcp_wrapper_connection_get_base_io_stream: {l1:addr} (!ptr_v_1(type_c2ats_GTcpWrapperConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIOStream, l2) | ptr l2) = "mac#g_tcp_wrapper_connection_get_base_io_stream"
// File: /usr/include/glib-2.0/gio/gtestdbus.h
fun fun_c2ats_g_test_dbus_get_type: () -> type_c2ats_GType = "mac#g_test_dbus_get_type"
fun fun_c2ats_g_test_dbus_new: (type_c2ats_GTestDBusFlags) -> [l1:addr] (ptr_v_1(type_c2ats_GTestDBus, l1) | ptr l1) = "mac#g_test_dbus_new"
fun fun_c2ats_g_test_dbus_get_flags: {l1:addr} (!ptr_v_1(type_c2ats_GTestDBus, l1) | ptr l1) -> type_c2ats_GTestDBusFlags = "mac#g_test_dbus_get_flags"
fun fun_c2ats_g_test_dbus_get_bus_address: {l1:addr} (!ptr_v_1(type_c2ats_GTestDBus, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_test_dbus_get_bus_address"
fun fun_c2ats_g_test_dbus_add_service_dir: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTestDBus, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_test_dbus_add_service_dir"
fun fun_c2ats_g_test_dbus_up: {l1:addr} (!ptr_v_1(type_c2ats_GTestDBus, l1) | ptr l1) -> void = "mac#g_test_dbus_up"
fun fun_c2ats_g_test_dbus_stop: {l1:addr} (!ptr_v_1(type_c2ats_GTestDBus, l1) | ptr l1) -> void = "mac#g_test_dbus_stop"
fun fun_c2ats_g_test_dbus_down: {l1:addr} (!ptr_v_1(type_c2ats_GTestDBus, l1) | ptr l1) -> void = "mac#g_test_dbus_down"
fun fun_c2ats_g_test_dbus_unset: () -> void = "mac#g_test_dbus_unset"
// File: /usr/include/glib-2.0/gio/gthemedicon.h
abst@ype struct_c2ats__GThemedIconClass // FIXME! Forward declaration.
typedef type_c2ats_GThemedIconClass = struct_c2ats__GThemedIconClass
fun fun_c2ats_g_themed_icon_get_type: () -> type_c2ats_GType = "mac#g_themed_icon_get_type"
fun fun_c2ats_g_themed_icon_new: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#g_themed_icon_new"
fun fun_c2ats_g_themed_icon_new_with_default_fallbacks: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#g_themed_icon_new_with_default_fallbacks"
fun fun_c2ats_g_themed_icon_new_from_names: {l1,l1_1:addr} (!ptr_v_2(char, l1, l1_1) | ptr l1, int) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#g_themed_icon_new_from_names"
fun fun_c2ats_g_themed_icon_prepend_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GThemedIcon, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#g_themed_icon_prepend_name"
fun fun_c2ats_g_themed_icon_append_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GThemedIcon, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#g_themed_icon_append_name"
fun fun_c2ats_g_themed_icon_get_names: {l1:addr} (!ptr_v_1(type_c2ats_GThemedIcon, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#g_themed_icon_get_names"
// File: /usr/include/glib-2.0/gio/gthreadedsocketservice.h
abst@ype struct_c2ats__GThreadedSocketServicePrivate // FIXME! Forward declaration.
typedef type_c2ats_GThreadedSocketServicePrivate = struct_c2ats__GThreadedSocketServicePrivate
abst@ype struct_c2ats__GThreadedSocketServiceClass // FIXME! Forward declaration.
typedef type_c2ats_GThreadedSocketServiceClass = struct_c2ats__GThreadedSocketServiceClass
typedef struct_c2ats__GThreadedSocketServiceClass = $extype_struct"struct _GThreadedSocketServiceClass" of {
  parent_class = type_c2ats_GSocketServiceClass,
  run = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GThreadedSocketService, l1), !ptr_v_1(type_c2ats_GSocketConnection, l2), !ptr_v_1(type_c2ats_GObject, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void
}
typedef struct_c2ats__GThreadedSocketService = $extype_struct"struct _GThreadedSocketService" of {
  parent_instance = type_c2ats_GSocketService,
  priv = ptr (* cPtr0(type_c2ats_GThreadedSocketServicePrivate) *)
}
fun fun_c2ats_g_threaded_socket_service_get_type: () -> type_c2ats_GType = "mac#g_threaded_socket_service_get_type"
fun fun_c2ats_g_threaded_socket_service_new: (int) -> [l1:addr] (ptr_v_1(type_c2ats_GSocketService, l1) | ptr l1) = "mac#g_threaded_socket_service_new"
// File: /usr/include/glib-2.0/gio/gtlsbackend.h
abst@ype struct_c2ats__GTlsBackend // FIXME! Forward declaration.
typedef type_c2ats_GTlsBackend = struct_c2ats__GTlsBackend
abst@ype struct_c2ats__GTlsBackendInterface // FIXME! Forward declaration.
typedef type_c2ats_GTlsBackendInterface = struct_c2ats__GTlsBackendInterface
typedef struct_c2ats__GTlsBackendInterface = $extype_struct"struct _GTlsBackendInterface" of {
  g_iface = type_c2ats_GTypeInterface,
  supports_tls = {l1:addr} (!ptr_v_1(type_c2ats_GTlsBackend, l1) | ptr l1) -> type_c2ats_gboolean,
  get_certificate_type = () -> type_c2ats_GType,
  get_client_connection_type = () -> type_c2ats_GType,
  get_server_connection_type = () -> type_c2ats_GType,
  get_file_database_type = () -> type_c2ats_GType,
  get_default_database = {l1:addr} (!ptr_v_1(type_c2ats_GTlsBackend, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTlsDatabase, l2) | ptr l2),
  supports_dtls = {l1:addr} (!ptr_v_1(type_c2ats_GTlsBackend, l1) | ptr l1) -> type_c2ats_gboolean,
  get_dtls_client_connection_type = () -> type_c2ats_GType,
  get_dtls_server_connection_type = () -> type_c2ats_GType
}
fun fun_c2ats_g_tls_backend_get_type: () -> type_c2ats_GType = "mac#g_tls_backend_get_type"
fun fun_c2ats_g_tls_backend_get_default: () -> [l1:addr] (ptr_v_1(type_c2ats_GTlsBackend, l1) | ptr l1) = "mac#g_tls_backend_get_default"
fun fun_c2ats_g_tls_backend_get_default_database: {l1:addr} (!ptr_v_1(type_c2ats_GTlsBackend, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTlsDatabase, l2) | ptr l2) = "mac#g_tls_backend_get_default_database"
fun fun_c2ats_g_tls_backend_supports_tls: {l1:addr} (!ptr_v_1(type_c2ats_GTlsBackend, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_tls_backend_supports_tls"
fun fun_c2ats_g_tls_backend_supports_dtls: {l1:addr} (!ptr_v_1(type_c2ats_GTlsBackend, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_tls_backend_supports_dtls"
fun fun_c2ats_g_tls_backend_get_certificate_type: {l1:addr} (!ptr_v_1(type_c2ats_GTlsBackend, l1) | ptr l1) -> type_c2ats_GType = "mac#g_tls_backend_get_certificate_type"
fun fun_c2ats_g_tls_backend_get_client_connection_type: {l1:addr} (!ptr_v_1(type_c2ats_GTlsBackend, l1) | ptr l1) -> type_c2ats_GType = "mac#g_tls_backend_get_client_connection_type"
fun fun_c2ats_g_tls_backend_get_server_connection_type: {l1:addr} (!ptr_v_1(type_c2ats_GTlsBackend, l1) | ptr l1) -> type_c2ats_GType = "mac#g_tls_backend_get_server_connection_type"
fun fun_c2ats_g_tls_backend_get_file_database_type: {l1:addr} (!ptr_v_1(type_c2ats_GTlsBackend, l1) | ptr l1) -> type_c2ats_GType = "mac#g_tls_backend_get_file_database_type"
fun fun_c2ats_g_tls_backend_get_dtls_client_connection_type: {l1:addr} (!ptr_v_1(type_c2ats_GTlsBackend, l1) | ptr l1) -> type_c2ats_GType = "mac#g_tls_backend_get_dtls_client_connection_type"
fun fun_c2ats_g_tls_backend_get_dtls_server_connection_type: {l1:addr} (!ptr_v_1(type_c2ats_GTlsBackend, l1) | ptr l1) -> type_c2ats_GType = "mac#g_tls_backend_get_dtls_server_connection_type"
// File: /usr/include/glib-2.0/gio/gtlscertificate.h
abst@ype struct_c2ats__GTlsCertificateClass // FIXME! Forward declaration.
typedef type_c2ats_GTlsCertificateClass = struct_c2ats__GTlsCertificateClass
abst@ype struct_c2ats__GTlsCertificatePrivate // FIXME! Forward declaration.
typedef type_c2ats_GTlsCertificatePrivate = struct_c2ats__GTlsCertificatePrivate
typedef struct_c2ats__GTlsCertificate = $extype_struct"struct _GTlsCertificate" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GTlsCertificatePrivate) *)
}
typedef struct_c2ats__GTlsCertificateClass = $extype_struct"struct _GTlsCertificateClass" of {
  parent_class = type_c2ats_GObjectClass,
  verify = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GTlsCertificate, l1), !ptr_v_1(type_c2ats_GSocketConnectable, l2), !ptr_v_1(type_c2ats_GTlsCertificate, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_GTlsCertificateFlags,
  padding = @[type_c2ats_gpointer][8]
}
fun fun_c2ats_g_tls_certificate_get_type: () -> type_c2ats_GType = "mac#g_tls_certificate_get_type"
fun fun_c2ats_g_tls_certificate_new_from_pem: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_gssize, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GTlsCertificate, l3) | ptr l3) = "mac#g_tls_certificate_new_from_pem"
fun fun_c2ats_g_tls_certificate_new_from_file: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GTlsCertificate, l3) | ptr l3) = "mac#g_tls_certificate_new_from_file"
fun fun_c2ats_g_tls_certificate_new_from_files: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GTlsCertificate, l4) | ptr l4) = "mac#g_tls_certificate_new_from_files"
fun fun_c2ats_g_tls_certificate_list_new_from_file: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GList, l3) | ptr l3) = "mac#g_tls_certificate_list_new_from_file"
fun fun_c2ats_g_tls_certificate_get_issuer: {l1:addr} (!ptr_v_1(type_c2ats_GTlsCertificate, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTlsCertificate, l2) | ptr l2) = "mac#g_tls_certificate_get_issuer"
fun fun_c2ats_g_tls_certificate_verify: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GTlsCertificate, l1), !ptr_v_1(type_c2ats_GSocketConnectable, l2), !ptr_v_1(type_c2ats_GTlsCertificate, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_GTlsCertificateFlags = "mac#g_tls_certificate_verify"
fun fun_c2ats_g_tls_certificate_is_same: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsCertificate, l1), !ptr_v_1(type_c2ats_GTlsCertificate, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_tls_certificate_is_same"
// File: /usr/include/glib-2.0/gio/gtlsconnection.h
abst@ype struct_c2ats__GTlsConnectionClass // FIXME! Forward declaration.
typedef type_c2ats_GTlsConnectionClass = struct_c2ats__GTlsConnectionClass
abst@ype struct_c2ats__GTlsConnectionPrivate // FIXME! Forward declaration.
typedef type_c2ats_GTlsConnectionPrivate = struct_c2ats__GTlsConnectionPrivate
typedef struct_c2ats__GTlsConnection = $extype_struct"struct _GTlsConnection" of {
  parent_instance = type_c2ats_GIOStream,
  priv = ptr (* cPtr0(type_c2ats_GTlsConnectionPrivate) *)
}
typedef struct_c2ats__GTlsConnectionClass = $extype_struct"struct _GTlsConnectionClass" of {
  parent_class = type_c2ats_GIOStreamClass,
  accept_certificate = {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1), !ptr_v_1(type_c2ats_GTlsCertificate, l2) | ptr l1, ptr l2, type_c2ats_GTlsCertificateFlags) -> type_c2ats_gboolean,
  handshake = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  handshake_async = {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  handshake_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  padding = @[type_c2ats_gpointer][8]
}
fun fun_c2ats_g_tls_connection_get_type: () -> type_c2ats_GType = "mac#g_tls_connection_get_type"
fun fun_c2ats_g_tls_connection_set_use_system_certdb: {l1:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_tls_connection_set_use_system_certdb"
fun fun_c2ats_g_tls_connection_get_use_system_certdb: {l1:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_tls_connection_get_use_system_certdb"
fun fun_c2ats_g_tls_connection_set_database: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1), !ptr_v_1(type_c2ats_GTlsDatabase, l2) | ptr l1, ptr l2) -> void = "mac#g_tls_connection_set_database"
fun fun_c2ats_g_tls_connection_get_database: {l1:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTlsDatabase, l2) | ptr l2) = "mac#g_tls_connection_get_database"
fun fun_c2ats_g_tls_connection_set_certificate: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1), !ptr_v_1(type_c2ats_GTlsCertificate, l2) | ptr l1, ptr l2) -> void = "mac#g_tls_connection_set_certificate"
fun fun_c2ats_g_tls_connection_get_certificate: {l1:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTlsCertificate, l2) | ptr l2) = "mac#g_tls_connection_get_certificate"
fun fun_c2ats_g_tls_connection_set_interaction: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1), !ptr_v_1(type_c2ats_GTlsInteraction, l2) | ptr l1, ptr l2) -> void = "mac#g_tls_connection_set_interaction"
fun fun_c2ats_g_tls_connection_get_interaction: {l1:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTlsInteraction, l2) | ptr l2) = "mac#g_tls_connection_get_interaction"
fun fun_c2ats_g_tls_connection_get_peer_certificate: {l1:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTlsCertificate, l2) | ptr l2) = "mac#g_tls_connection_get_peer_certificate"
fun fun_c2ats_g_tls_connection_get_peer_certificate_errors: {l1:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1) | ptr l1) -> type_c2ats_GTlsCertificateFlags = "mac#g_tls_connection_get_peer_certificate_errors"
fun fun_c2ats_g_tls_connection_set_require_close_notify: {l1:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_tls_connection_set_require_close_notify"
fun fun_c2ats_g_tls_connection_get_require_close_notify: {l1:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_tls_connection_get_require_close_notify"
fun fun_c2ats_g_tls_connection_set_rehandshake_mode: {l1:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1) | ptr l1, type_c2ats_GTlsRehandshakeMode) -> void = "mac#g_tls_connection_set_rehandshake_mode"
fun fun_c2ats_g_tls_connection_get_rehandshake_mode: {l1:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1) | ptr l1) -> type_c2ats_GTlsRehandshakeMode = "mac#g_tls_connection_get_rehandshake_mode"
fun fun_c2ats_g_tls_connection_handshake: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_tls_connection_handshake"
fun fun_c2ats_g_tls_connection_handshake_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, int, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_tls_connection_handshake_async"
fun fun_c2ats_g_tls_connection_handshake_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_tls_connection_handshake_finish"
fun fun_c2ats_g_tls_error_quark: () -> type_c2ats_GQuark = "mac#g_tls_error_quark"
fun fun_c2ats_g_tls_connection_emit_accept_certificate: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsConnection, l1), !ptr_v_1(type_c2ats_GTlsCertificate, l2) | ptr l1, ptr l2, type_c2ats_GTlsCertificateFlags) -> type_c2ats_gboolean = "mac#g_tls_connection_emit_accept_certificate"
// File: /usr/include/glib-2.0/gio/gtlsclientconnection.h
abst@ype struct_c2ats__GTlsClientConnectionInterface // FIXME! Forward declaration.
typedef type_c2ats_GTlsClientConnectionInterface = struct_c2ats__GTlsClientConnectionInterface
typedef struct_c2ats__GTlsClientConnectionInterface = $extype_struct"struct _GTlsClientConnectionInterface" of {
  g_iface = type_c2ats_GTypeInterface,
  copy_session_state = {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsClientConnection, l1), !ptr_v_1(type_c2ats_GTlsClientConnection, l2) | ptr l1, ptr l2) -> void
}
fun fun_c2ats_g_tls_client_connection_get_type: () -> type_c2ats_GType = "mac#g_tls_client_connection_get_type"
fun fun_c2ats_g_tls_client_connection_new: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GIOStream, l1), !ptr_v_1(type_c2ats_GSocketConnectable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GIOStream, l4) | ptr l4) = "mac#g_tls_client_connection_new"
fun fun_c2ats_g_tls_client_connection_get_validation_flags: {l1:addr} (!ptr_v_1(type_c2ats_GTlsClientConnection, l1) | ptr l1) -> type_c2ats_GTlsCertificateFlags = "mac#g_tls_client_connection_get_validation_flags"
fun fun_c2ats_g_tls_client_connection_set_validation_flags: {l1:addr} (!ptr_v_1(type_c2ats_GTlsClientConnection, l1) | ptr l1, type_c2ats_GTlsCertificateFlags) -> void = "mac#g_tls_client_connection_set_validation_flags"
fun fun_c2ats_g_tls_client_connection_get_server_identity: {l1:addr} (!ptr_v_1(type_c2ats_GTlsClientConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSocketConnectable, l2) | ptr l2) = "mac#g_tls_client_connection_get_server_identity"
fun fun_c2ats_g_tls_client_connection_set_server_identity: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsClientConnection, l1), !ptr_v_1(type_c2ats_GSocketConnectable, l2) | ptr l1, ptr l2) -> void = "mac#g_tls_client_connection_set_server_identity"
fun fun_c2ats_g_tls_client_connection_get_use_ssl3: {l1:addr} (!ptr_v_1(type_c2ats_GTlsClientConnection, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_tls_client_connection_get_use_ssl3"
fun fun_c2ats_g_tls_client_connection_set_use_ssl3: {l1:addr} (!ptr_v_1(type_c2ats_GTlsClientConnection, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_tls_client_connection_set_use_ssl3"
fun fun_c2ats_g_tls_client_connection_get_accepted_cas: {l1:addr} (!ptr_v_1(type_c2ats_GTlsClientConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_tls_client_connection_get_accepted_cas"
fun fun_c2ats_g_tls_client_connection_copy_session_state: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsClientConnection, l1), !ptr_v_1(type_c2ats_GTlsClientConnection, l2) | ptr l1, ptr l2) -> void = "mac#g_tls_client_connection_copy_session_state"
// File: /usr/include/glib-2.0/gio/gtlsdatabase.h
abst@ype struct_c2ats__GTlsDatabaseClass // FIXME! Forward declaration.
typedef type_c2ats_GTlsDatabaseClass = struct_c2ats__GTlsDatabaseClass
abst@ype struct_c2ats__GTlsDatabasePrivate // FIXME! Forward declaration.
typedef type_c2ats_GTlsDatabasePrivate = struct_c2ats__GTlsDatabasePrivate
typedef struct_c2ats__GTlsDatabase = $extype_struct"struct _GTlsDatabase" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GTlsDatabasePrivate) *)
}
typedef struct_c2ats__GTlsDatabaseClass = $extype_struct"struct _GTlsDatabaseClass" of {
  parent_class = type_c2ats_GObjectClass,
  verify_chain = {l1,l2,l3,l4,l5,l6,l7,l7_1:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GTlsCertificate, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GSocketConnectable, l4), !ptr_v_1(type_c2ats_GTlsInteraction, l5), !ptr_v_1(type_c2ats_GCancellable, l6), !ptr_v_2(type_c2ats_GError, l7, l7_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_GTlsDatabaseVerifyFlags, ptr l6, ptr l7) -> type_c2ats_GTlsCertificateFlags,
  verify_chain_async = {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GTlsCertificate, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GSocketConnectable, l4), !ptr_v_1(type_c2ats_GTlsInteraction, l5), !ptr_v_1(type_c2ats_GCancellable, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_GTlsDatabaseVerifyFlags, ptr l6, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  verify_chain_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_GTlsCertificateFlags,
  create_certificate_handle = {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GTlsCertificate, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3),
  lookup_certificate_for_handle = {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GTlsInteraction, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, type_c2ats_GTlsDatabaseLookupFlags, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GTlsCertificate, l6) | ptr l6),
  lookup_certificate_for_handle_async = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GTlsInteraction, l3), !ptr_v_1(type_c2ats_GCancellable, l4) | ptr l1, ptr l2, ptr l3, type_c2ats_GTlsDatabaseLookupFlags, ptr l4, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  lookup_certificate_for_handle_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GTlsCertificate, l4) | ptr l4),
  lookup_certificate_issuer = {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GTlsCertificate, l2), !ptr_v_1(type_c2ats_GTlsInteraction, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, type_c2ats_GTlsDatabaseLookupFlags, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GTlsCertificate, l6) | ptr l6),
  lookup_certificate_issuer_async = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GTlsCertificate, l2), !ptr_v_1(type_c2ats_GTlsInteraction, l3), !ptr_v_1(type_c2ats_GCancellable, l4) | ptr l1, ptr l2, ptr l3, type_c2ats_GTlsDatabaseLookupFlags, ptr l4, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  lookup_certificate_issuer_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GTlsCertificate, l4) | ptr l4),
  lookup_certificates_issued_by = {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GByteArray, l2), !ptr_v_1(type_c2ats_GTlsInteraction, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, type_c2ats_GTlsDatabaseLookupFlags, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GList, l6) | ptr l6),
  lookup_certificates_issued_by_async = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GByteArray, l2), !ptr_v_1(type_c2ats_GTlsInteraction, l3), !ptr_v_1(type_c2ats_GCancellable, l4) | ptr l1, ptr l2, ptr l3, type_c2ats_GTlsDatabaseLookupFlags, ptr l4, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  lookup_certificates_issued_by_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GList, l4) | ptr l4),
  padding = @[type_c2ats_gpointer][16]
}
fun fun_c2ats_g_tls_database_get_type: () -> type_c2ats_GType = "mac#g_tls_database_get_type"
fun fun_c2ats_g_tls_database_verify_chain: {l1,l2,l3,l4,l5,l6,l7,l7_1:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GTlsCertificate, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GSocketConnectable, l4), !ptr_v_1(type_c2ats_GTlsInteraction, l5), !ptr_v_1(type_c2ats_GCancellable, l6), !ptr_v_2(type_c2ats_GError, l7, l7_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_GTlsDatabaseVerifyFlags, ptr l6, ptr l7) -> type_c2ats_GTlsCertificateFlags = "mac#g_tls_database_verify_chain"
fun fun_c2ats_g_tls_database_verify_chain_async: {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GTlsCertificate, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GSocketConnectable, l4), !ptr_v_1(type_c2ats_GTlsInteraction, l5), !ptr_v_1(type_c2ats_GCancellable, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_GTlsDatabaseVerifyFlags, ptr l6, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_tls_database_verify_chain_async"
fun fun_c2ats_g_tls_database_verify_chain_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_GTlsCertificateFlags = "mac#g_tls_database_verify_chain_finish"
fun fun_c2ats_g_tls_database_create_certificate_handle: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GTlsCertificate, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#g_tls_database_create_certificate_handle"
fun fun_c2ats_g_tls_database_lookup_certificate_for_handle: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GTlsInteraction, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, type_c2ats_GTlsDatabaseLookupFlags, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GTlsCertificate, l6) | ptr l6) = "mac#g_tls_database_lookup_certificate_for_handle"
fun fun_c2ats_g_tls_database_lookup_certificate_for_handle_async: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GTlsInteraction, l3), !ptr_v_1(type_c2ats_GCancellable, l4) | ptr l1, ptr l2, ptr l3, type_c2ats_GTlsDatabaseLookupFlags, ptr l4, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_tls_database_lookup_certificate_for_handle_async"
fun fun_c2ats_g_tls_database_lookup_certificate_for_handle_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GTlsCertificate, l4) | ptr l4) = "mac#g_tls_database_lookup_certificate_for_handle_finish"
fun fun_c2ats_g_tls_database_lookup_certificate_issuer: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GTlsCertificate, l2), !ptr_v_1(type_c2ats_GTlsInteraction, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, type_c2ats_GTlsDatabaseLookupFlags, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GTlsCertificate, l6) | ptr l6) = "mac#g_tls_database_lookup_certificate_issuer"
fun fun_c2ats_g_tls_database_lookup_certificate_issuer_async: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GTlsCertificate, l2), !ptr_v_1(type_c2ats_GTlsInteraction, l3), !ptr_v_1(type_c2ats_GCancellable, l4) | ptr l1, ptr l2, ptr l3, type_c2ats_GTlsDatabaseLookupFlags, ptr l4, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_tls_database_lookup_certificate_issuer_async"
fun fun_c2ats_g_tls_database_lookup_certificate_issuer_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GTlsCertificate, l4) | ptr l4) = "mac#g_tls_database_lookup_certificate_issuer_finish"
fun fun_c2ats_g_tls_database_lookup_certificates_issued_by: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GByteArray, l2), !ptr_v_1(type_c2ats_GTlsInteraction, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, type_c2ats_GTlsDatabaseLookupFlags, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GList, l6) | ptr l6) = "mac#g_tls_database_lookup_certificates_issued_by"
fun fun_c2ats_g_tls_database_lookup_certificates_issued_by_async: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GByteArray, l2), !ptr_v_1(type_c2ats_GTlsInteraction, l3), !ptr_v_1(type_c2ats_GCancellable, l4) | ptr l1, ptr l2, ptr l3, type_c2ats_GTlsDatabaseLookupFlags, ptr l4, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_tls_database_lookup_certificates_issued_by_async"
fun fun_c2ats_g_tls_database_lookup_certificates_issued_by_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GTlsDatabase, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GList, l4) | ptr l4) = "mac#g_tls_database_lookup_certificates_issued_by_finish"
// File: /usr/include/glib-2.0/gio/gtlsfiledatabase.h
abst@ype struct_c2ats__GTlsFileDatabaseInterface // FIXME! Forward declaration.
typedef type_c2ats_GTlsFileDatabaseInterface = struct_c2ats__GTlsFileDatabaseInterface
typedef struct_c2ats__GTlsFileDatabaseInterface = $extype_struct"struct _GTlsFileDatabaseInterface" of {
  g_iface = type_c2ats_GTypeInterface,
  padding = @[type_c2ats_gpointer][8]
}
fun fun_c2ats_g_tls_file_database_get_type: () -> type_c2ats_GType = "mac#g_tls_file_database_get_type"
fun fun_c2ats_g_tls_file_database_new: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GTlsDatabase, l3) | ptr l3) = "mac#g_tls_file_database_new"
// File: /usr/include/glib-2.0/gio/gtlsinteraction.h
abst@ype struct_c2ats__GTlsInteractionClass // FIXME! Forward declaration.
typedef type_c2ats_GTlsInteractionClass = struct_c2ats__GTlsInteractionClass
abst@ype struct_c2ats__GTlsInteractionPrivate // FIXME! Forward declaration.
typedef type_c2ats_GTlsInteractionPrivate = struct_c2ats__GTlsInteractionPrivate
typedef struct_c2ats__GTlsInteraction = $extype_struct"struct _GTlsInteraction" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GTlsInteractionPrivate) *)
}
typedef struct_c2ats__GTlsInteractionClass = $extype_struct"struct _GTlsInteractionClass" of {
  parent_class = type_c2ats_GObjectClass,
  ask_password = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GTlsInteraction, l1), !ptr_v_1(type_c2ats_GTlsPassword, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_GTlsInteractionResult,
  ask_password_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GTlsInteraction, l1), !ptr_v_1(type_c2ats_GTlsPassword, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  ask_password_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GTlsInteraction, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_GTlsInteractionResult,
  request_certificate = {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GTlsInteraction, l1), !ptr_v_1(type_c2ats_GTlsConnection, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GTlsCertificateRequestFlags, ptr l3, ptr l4) -> type_c2ats_GTlsInteractionResult,
  request_certificate_async = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GTlsInteraction, l1), !ptr_v_1(type_c2ats_GTlsConnection, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_GTlsCertificateRequestFlags, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  request_certificate_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GTlsInteraction, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_GTlsInteractionResult,
  padding = @[type_c2ats_gpointer][21]
}
fun fun_c2ats_g_tls_interaction_get_type: () -> type_c2ats_GType = "mac#g_tls_interaction_get_type"
fun fun_c2ats_g_tls_interaction_invoke_ask_password: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GTlsInteraction, l1), !ptr_v_1(type_c2ats_GTlsPassword, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_GTlsInteractionResult = "mac#g_tls_interaction_invoke_ask_password"
fun fun_c2ats_g_tls_interaction_ask_password: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GTlsInteraction, l1), !ptr_v_1(type_c2ats_GTlsPassword, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_GTlsInteractionResult = "mac#g_tls_interaction_ask_password"
fun fun_c2ats_g_tls_interaction_ask_password_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GTlsInteraction, l1), !ptr_v_1(type_c2ats_GTlsPassword, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_tls_interaction_ask_password_async"
fun fun_c2ats_g_tls_interaction_ask_password_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GTlsInteraction, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_GTlsInteractionResult = "mac#g_tls_interaction_ask_password_finish"
fun fun_c2ats_g_tls_interaction_invoke_request_certificate: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GTlsInteraction, l1), !ptr_v_1(type_c2ats_GTlsConnection, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GTlsCertificateRequestFlags, ptr l3, ptr l4) -> type_c2ats_GTlsInteractionResult = "mac#g_tls_interaction_invoke_request_certificate"
fun fun_c2ats_g_tls_interaction_request_certificate: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GTlsInteraction, l1), !ptr_v_1(type_c2ats_GTlsConnection, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GTlsCertificateRequestFlags, ptr l3, ptr l4) -> type_c2ats_GTlsInteractionResult = "mac#g_tls_interaction_request_certificate"
fun fun_c2ats_g_tls_interaction_request_certificate_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GTlsInteraction, l1), !ptr_v_1(type_c2ats_GTlsConnection, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, type_c2ats_GTlsCertificateRequestFlags, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_tls_interaction_request_certificate_async"
fun fun_c2ats_g_tls_interaction_request_certificate_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GTlsInteraction, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_GTlsInteractionResult = "mac#g_tls_interaction_request_certificate_finish"
// File: /usr/include/glib-2.0/gio/gtlsserverconnection.h
abst@ype struct_c2ats__GTlsServerConnectionInterface // FIXME! Forward declaration.
typedef type_c2ats_GTlsServerConnectionInterface = struct_c2ats__GTlsServerConnectionInterface
typedef struct_c2ats__GTlsServerConnectionInterface = $extype_struct"struct _GTlsServerConnectionInterface" of {
  g_iface = type_c2ats_GTypeInterface
}
fun fun_c2ats_g_tls_server_connection_get_type: () -> type_c2ats_GType = "mac#g_tls_server_connection_get_type"
fun fun_c2ats_g_tls_server_connection_new: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GIOStream, l1), !ptr_v_1(type_c2ats_GTlsCertificate, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GIOStream, l4) | ptr l4) = "mac#g_tls_server_connection_new"
// File: /usr/include/glib-2.0/gio/gtlspassword.h
abst@ype struct_c2ats__GTlsPasswordClass // FIXME! Forward declaration.
typedef type_c2ats_GTlsPasswordClass = struct_c2ats__GTlsPasswordClass
abst@ype struct_c2ats__GTlsPasswordPrivate // FIXME! Forward declaration.
typedef type_c2ats_GTlsPasswordPrivate = struct_c2ats__GTlsPasswordPrivate
typedef struct_c2ats__GTlsPassword = $extype_struct"struct _GTlsPassword" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GTlsPasswordPrivate) *)
}
typedef struct_c2ats__GTlsPasswordClass = $extype_struct"struct _GTlsPasswordClass" of {
  parent_class = type_c2ats_GObjectClass,
  get_value = {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsPassword, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_guchar, l3) | ptr l3),
  set_value = {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsPassword, l1), !ptr_v_1(type_c2ats_guchar, l2) | ptr l1, ptr l2, type_c2ats_gssize, type_c2ats_GDestroyNotify) -> void,
  get_default_warning = {l1:addr} (!ptr_v_1(type_c2ats_GTlsPassword, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  padding = @[type_c2ats_gpointer][4]
}
fun fun_c2ats_g_tls_password_get_type: () -> type_c2ats_GType = "mac#g_tls_password_get_type"
fun fun_c2ats_g_tls_password_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_GTlsPasswordFlags, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTlsPassword, l2) | ptr l2) = "mac#g_tls_password_new"
fun fun_c2ats_g_tls_password_get_value: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsPassword, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_guchar, l3) | ptr l3) = "mac#g_tls_password_get_value"
fun fun_c2ats_g_tls_password_set_value: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsPassword, l1), !ptr_v_1(type_c2ats_guchar, l2) | ptr l1, ptr l2, type_c2ats_gssize) -> void = "mac#g_tls_password_set_value"
fun fun_c2ats_g_tls_password_set_value_full: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsPassword, l1), !ptr_v_1(type_c2ats_guchar, l2) | ptr l1, ptr l2, type_c2ats_gssize, type_c2ats_GDestroyNotify) -> void = "mac#g_tls_password_set_value_full"
fun fun_c2ats_g_tls_password_get_flags: {l1:addr} (!ptr_v_1(type_c2ats_GTlsPassword, l1) | ptr l1) -> type_c2ats_GTlsPasswordFlags = "mac#g_tls_password_get_flags"
fun fun_c2ats_g_tls_password_set_flags: {l1:addr} (!ptr_v_1(type_c2ats_GTlsPassword, l1) | ptr l1, type_c2ats_GTlsPasswordFlags) -> void = "mac#g_tls_password_set_flags"
fun fun_c2ats_g_tls_password_get_description: {l1:addr} (!ptr_v_1(type_c2ats_GTlsPassword, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_tls_password_get_description"
fun fun_c2ats_g_tls_password_set_description: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsPassword, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_tls_password_set_description"
fun fun_c2ats_g_tls_password_get_warning: {l1:addr} (!ptr_v_1(type_c2ats_GTlsPassword, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_tls_password_get_warning"
fun fun_c2ats_g_tls_password_set_warning: {l1,l2:addr} (!ptr_v_1(type_c2ats_GTlsPassword, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_tls_password_set_warning"
// File: /usr/include/glib-2.0/gio/gvfs.h
typedef type_c2ats_GVfsFileLookupFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVfs, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> [l3:addr] (ptr_v_1(type_c2ats_GFile, l3) | ptr l3)
abst@ype struct_c2ats__GVfsClass // FIXME! Forward declaration.
typedef type_c2ats_GVfsClass = struct_c2ats__GVfsClass
typedef struct_c2ats__GVfs = $extype_struct"struct _GVfs" of {
  parent_instance = type_c2ats_GObject
}
typedef struct_c2ats__GVfsClass = $extype_struct"struct _GVfsClass" of {
  parent_class = type_c2ats_GObjectClass,
  is_active = {l1:addr} (!ptr_v_1(type_c2ats_GVfs, l1) | ptr l1) -> type_c2ats_gboolean,
  get_file_for_path = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVfs, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GFile, l3) | ptr l3),
  get_file_for_uri = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVfs, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GFile, l3) | ptr l3),
  get_supported_uri_schemes = {l1:addr} (!ptr_v_1(type_c2ats_GVfs, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2),
  parse_name = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVfs, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GFile, l3) | ptr l3),
  local_file_add_info = {l1,l2,l3,l4,l5,l6,l7:addr} (!ptr_v_1(type_c2ats_GVfs, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GFileAttributeMatcher, l3), !ptr_v_1(type_c2ats_GFileInfo, l4), !ptr_v_1(type_c2ats_GCancellable, l5), !ptr_v_1(type_c2ats_gpointer, l6), !ptr_v_1(type_c2ats_GDestroyNotify, l7) | ptr l1, ptr l2, type_c2ats_guint64, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7) -> void,
  add_writable_namespaces = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVfs, l1), !ptr_v_1(type_c2ats_GFileAttributeInfoList, l2) | ptr l1, ptr l2) -> void,
  local_file_set_attributes = {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GVfs, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_GFileInfo, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, type_c2ats_GFileQueryInfoFlags, ptr l4, ptr l5) -> type_c2ats_gboolean,
  local_file_removed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVfs, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void,
  local_file_moved = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GVfs, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3) | ptr l1, ptr l2, ptr l3) -> void,
  deserialize_icon = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVfs, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GIcon, l3) | ptr l3),
  _g_reserved1 = () -> void,
  _g_reserved2 = () -> void,
  _g_reserved3 = () -> void,
  _g_reserved4 = () -> void,
  _g_reserved5 = () -> void,
  _g_reserved6 = () -> void
}
fun fun_c2ats_g_vfs_get_type: () -> type_c2ats_GType = "mac#g_vfs_get_type"
fun fun_c2ats_g_vfs_is_active: {l1:addr} (!ptr_v_1(type_c2ats_GVfs, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_vfs_is_active"
fun fun_c2ats_g_vfs_get_file_for_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVfs, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GFile, l3) | ptr l3) = "mac#g_vfs_get_file_for_path"
fun fun_c2ats_g_vfs_get_file_for_uri: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVfs, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GFile, l3) | ptr l3) = "mac#g_vfs_get_file_for_uri"
fun fun_c2ats_g_vfs_get_supported_uri_schemes: {l1:addr} (!ptr_v_1(type_c2ats_GVfs, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#g_vfs_get_supported_uri_schemes"
fun fun_c2ats_g_vfs_parse_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVfs, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GFile, l3) | ptr l3) = "mac#g_vfs_parse_name"
fun fun_c2ats_g_vfs_get_default: () -> [l1:addr] (ptr_v_1(type_c2ats_GVfs, l1) | ptr l1) = "mac#g_vfs_get_default"
fun fun_c2ats_g_vfs_get_local: () -> [l1:addr] (ptr_v_1(type_c2ats_GVfs, l1) | ptr l1) = "mac#g_vfs_get_local"
fun fun_c2ats_g_vfs_register_uri_scheme: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVfs, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, type_c2ats_GVfsFileLookupFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify, type_c2ats_GVfsFileLookupFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_gboolean = "mac#g_vfs_register_uri_scheme"
fun fun_c2ats_g_vfs_unregister_uri_scheme: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVfs, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_vfs_unregister_uri_scheme"
// File: /usr/include/glib-2.0/gio/gvolume.h
abst@ype struct_c2ats__GVolumeIface // FIXME! Forward declaration.
typedef type_c2ats_GVolumeIface = struct_c2ats__GVolumeIface
typedef struct_c2ats__GVolumeIface = $extype_struct"struct _GVolumeIface" of {
  g_iface = type_c2ats_GTypeInterface,
  changed = {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> void,
  removed = {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> void,
  get_name = {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2),
  get_icon = {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2),
  get_uuid = {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2),
  get_drive = {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDrive, l2) | ptr l2),
  get_mount = {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMount, l2) | ptr l2),
  can_mount = {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> type_c2ats_gboolean,
  can_eject = {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> type_c2ats_gboolean,
  mount_fn = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GVolume, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountMountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  mount_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GVolume, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  eject = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolume, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  eject_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GVolume, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  get_identifier = {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolume, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(char, l3) | ptr l3),
  enumerate_identifiers = {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(char, l2, l2_1) | ptr l2),
  should_automount = {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> type_c2ats_gboolean,
  get_activation_root = {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2),
  eject_with_operation = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GVolume, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void,
  eject_with_operation_finish = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GVolume, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  get_sort_key = {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  get_symbolic_icon = {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2)
}
fun fun_c2ats_g_volume_get_type: () -> type_c2ats_GType = "mac#g_volume_get_type"
fun fun_c2ats_g_volume_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_volume_get_name"
fun fun_c2ats_g_volume_get_icon: {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#g_volume_get_icon"
fun fun_c2ats_g_volume_get_symbolic_icon: {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#g_volume_get_symbolic_icon"
fun fun_c2ats_g_volume_get_uuid: {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#g_volume_get_uuid"
fun fun_c2ats_g_volume_get_drive: {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDrive, l2) | ptr l2) = "mac#g_volume_get_drive"
fun fun_c2ats_g_volume_get_mount: {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMount, l2) | ptr l2) = "mac#g_volume_get_mount"
fun fun_c2ats_g_volume_can_mount: {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_volume_can_mount"
fun fun_c2ats_g_volume_can_eject: {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_volume_can_eject"
fun fun_c2ats_g_volume_should_automount: {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_volume_should_automount"
fun fun_c2ats_g_volume_mount: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GVolume, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountMountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_volume_mount"
fun fun_c2ats_g_volume_mount_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GVolume, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_volume_mount_finish"
fun fun_c2ats_g_volume_eject: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolume, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_volume_eject"
fun fun_c2ats_g_volume_eject_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GVolume, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_volume_eject_finish"
fun fun_c2ats_g_volume_get_identifier: {l1,l2:addr} (!ptr_v_1(type_c2ats_GVolume, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(char, l3) | ptr l3) = "mac#g_volume_get_identifier"
fun fun_c2ats_g_volume_enumerate_identifiers: {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(char, l2, l2_1) | ptr l2) = "mac#g_volume_enumerate_identifiers"
fun fun_c2ats_g_volume_get_activation_root: {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2) = "mac#g_volume_get_activation_root"
fun fun_c2ats_g_volume_eject_with_operation: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GVolume, l1), !ptr_v_1(type_c2ats_GMountOperation, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, type_c2ats_GMountUnmountFlags, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_volume_eject_with_operation"
fun fun_c2ats_g_volume_eject_with_operation_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GVolume, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_volume_eject_with_operation_finish"
fun fun_c2ats_g_volume_get_sort_key: {l1:addr} (!ptr_v_1(type_c2ats_GVolume, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_volume_get_sort_key"
// File: /usr/include/glib-2.0/gio/gzlibcompressor.h
abst@ype struct_c2ats__GZlibCompressorClass // FIXME! Forward declaration.
typedef type_c2ats_GZlibCompressorClass = struct_c2ats__GZlibCompressorClass
typedef struct_c2ats__GZlibCompressorClass = $extype_struct"struct _GZlibCompressorClass" of {
  parent_class = type_c2ats_GObjectClass
}
fun fun_c2ats_g_zlib_compressor_get_type: () -> type_c2ats_GType = "mac#g_zlib_compressor_get_type"
fun fun_c2ats_g_zlib_compressor_new: (type_c2ats_GZlibCompressorFormat, int) -> [l1:addr] (ptr_v_1(type_c2ats_GZlibCompressor, l1) | ptr l1) = "mac#g_zlib_compressor_new"
fun fun_c2ats_g_zlib_compressor_get_file_info: {l1:addr} (!ptr_v_1(type_c2ats_GZlibCompressor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFileInfo, l2) | ptr l2) = "mac#g_zlib_compressor_get_file_info"
fun fun_c2ats_g_zlib_compressor_set_file_info: {l1,l2:addr} (!ptr_v_1(type_c2ats_GZlibCompressor, l1), !ptr_v_1(type_c2ats_GFileInfo, l2) | ptr l1, ptr l2) -> void = "mac#g_zlib_compressor_set_file_info"
// File: /usr/include/glib-2.0/gio/gzlibdecompressor.h
abst@ype struct_c2ats__GZlibDecompressorClass // FIXME! Forward declaration.
typedef type_c2ats_GZlibDecompressorClass = struct_c2ats__GZlibDecompressorClass
typedef struct_c2ats__GZlibDecompressorClass = $extype_struct"struct _GZlibDecompressorClass" of {
  parent_class = type_c2ats_GObjectClass
}
fun fun_c2ats_g_zlib_decompressor_get_type: () -> type_c2ats_GType = "mac#g_zlib_decompressor_get_type"
fun fun_c2ats_g_zlib_decompressor_new: (type_c2ats_GZlibCompressorFormat) -> [l1:addr] (ptr_v_1(type_c2ats_GZlibDecompressor, l1) | ptr l1) = "mac#g_zlib_decompressor_new"
fun fun_c2ats_g_zlib_decompressor_get_file_info: {l1:addr} (!ptr_v_1(type_c2ats_GZlibDecompressor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFileInfo, l2) | ptr l2) = "mac#g_zlib_decompressor_get_file_info"
// File: /usr/include/glib-2.0/gio/gdbusinterface.h
abst@ype struct_c2ats__GDBusInterfaceIface // FIXME! Forward declaration.
typedef type_c2ats_GDBusInterfaceIface = struct_c2ats__GDBusInterfaceIface
typedef struct_c2ats__GDBusInterfaceIface = $extype_struct"struct _GDBusInterfaceIface" of {
  parent_iface = type_c2ats_GTypeInterface,
  get_info = {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterface, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusInterfaceInfo, l2) | ptr l2),
  get_object = {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterface, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusObject, l2) | ptr l2),
  set_object = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusInterface, l1), !ptr_v_1(type_c2ats_GDBusObject, l2) | ptr l1, ptr l2) -> void,
  dup_object = {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterface, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusObject, l2) | ptr l2)
}
fun fun_c2ats_g_dbus_interface_get_type: () -> type_c2ats_GType = "mac#g_dbus_interface_get_type"
fun fun_c2ats_g_dbus_interface_get_info: {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterface, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusInterfaceInfo, l2) | ptr l2) = "mac#g_dbus_interface_get_info"
fun fun_c2ats_g_dbus_interface_get_object: {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterface, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusObject, l2) | ptr l2) = "mac#g_dbus_interface_get_object"
fun fun_c2ats_g_dbus_interface_set_object: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusInterface, l1), !ptr_v_1(type_c2ats_GDBusObject, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_interface_set_object"
fun fun_c2ats_g_dbus_interface_dup_object: {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterface, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusObject, l2) | ptr l2) = "mac#g_dbus_interface_dup_object"
// File: /usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h
abst@ype struct_c2ats__GDBusInterfaceSkeletonClass // FIXME! Forward declaration.
typedef type_c2ats_GDBusInterfaceSkeletonClass = struct_c2ats__GDBusInterfaceSkeletonClass
abst@ype struct_c2ats__GDBusInterfaceSkeletonPrivate // FIXME! Forward declaration.
typedef type_c2ats_GDBusInterfaceSkeletonPrivate = struct_c2ats__GDBusInterfaceSkeletonPrivate
typedef struct_c2ats__GDBusInterfaceSkeleton = $extype_struct"struct _GDBusInterfaceSkeleton" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GDBusInterfaceSkeletonPrivate) *)
}
typedef struct_c2ats__GDBusInterfaceSkeletonClass = $extype_struct"struct _GDBusInterfaceSkeletonClass" of {
  parent_class = type_c2ats_GObjectClass,
  get_info = {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusInterfaceInfo, l2) | ptr l2),
  get_vtable = {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusInterfaceVTable, l2) | ptr l2),
  get_properties = {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2),
  flush = {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l1) | ptr l1) -> void,
  vfunc_padding = @[type_c2ats_gpointer][8],
  g_authorize_method = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l1), !ptr_v_1(type_c2ats_GDBusMethodInvocation, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  signal_padding = @[type_c2ats_gpointer][8]
}
fun fun_c2ats_g_dbus_interface_skeleton_get_type: () -> type_c2ats_GType = "mac#g_dbus_interface_skeleton_get_type"
fun fun_c2ats_g_dbus_interface_skeleton_get_flags: {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l1) | ptr l1) -> type_c2ats_GDBusInterfaceSkeletonFlags = "mac#g_dbus_interface_skeleton_get_flags"
fun fun_c2ats_g_dbus_interface_skeleton_set_flags: {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l1) | ptr l1, type_c2ats_GDBusInterfaceSkeletonFlags) -> void = "mac#g_dbus_interface_skeleton_set_flags"
fun fun_c2ats_g_dbus_interface_skeleton_get_info: {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusInterfaceInfo, l2) | ptr l2) = "mac#g_dbus_interface_skeleton_get_info"
fun fun_c2ats_g_dbus_interface_skeleton_get_vtable: {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusInterfaceVTable, l2) | ptr l2) = "mac#g_dbus_interface_skeleton_get_vtable"
fun fun_c2ats_g_dbus_interface_skeleton_get_properties: {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_dbus_interface_skeleton_get_properties"
fun fun_c2ats_g_dbus_interface_skeleton_flush: {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l1) | ptr l1) -> void = "mac#g_dbus_interface_skeleton_flush"
fun fun_c2ats_g_dbus_interface_skeleton_export: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l1), !ptr_v_1(type_c2ats_GDBusConnection, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#g_dbus_interface_skeleton_export"
fun fun_c2ats_g_dbus_interface_skeleton_unexport: {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l1) | ptr l1) -> void = "mac#g_dbus_interface_skeleton_unexport"
fun fun_c2ats_g_dbus_interface_skeleton_unexport_from_connection: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l1), !ptr_v_1(type_c2ats_GDBusConnection, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_interface_skeleton_unexport_from_connection"
fun fun_c2ats_g_dbus_interface_skeleton_get_connection: {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusConnection, l2) | ptr l2) = "mac#g_dbus_interface_skeleton_get_connection"
fun fun_c2ats_g_dbus_interface_skeleton_get_connections: {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_dbus_interface_skeleton_get_connections"
fun fun_c2ats_g_dbus_interface_skeleton_has_connection: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l1), !ptr_v_1(type_c2ats_GDBusConnection, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_dbus_interface_skeleton_has_connection"
fun fun_c2ats_g_dbus_interface_skeleton_get_object_path: {l1:addr} (!ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_interface_skeleton_get_object_path"
// File: /usr/include/glib-2.0/gio/gdbusobject.h
abst@ype struct_c2ats__GDBusObjectIface // FIXME! Forward declaration.
typedef type_c2ats_GDBusObjectIface = struct_c2ats__GDBusObjectIface
typedef struct_c2ats__GDBusObjectIface = $extype_struct"struct _GDBusObjectIface" of {
  parent_iface = type_c2ats_GTypeInterface,
  get_object_path = {l1:addr} (!ptr_v_1(type_c2ats_GDBusObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  get_interfaces = {l1:addr} (!ptr_v_1(type_c2ats_GDBusObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2),
  get_interface = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusObject, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusInterface, l3) | ptr l3),
  interface_added = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusObject, l1), !ptr_v_1(type_c2ats_GDBusInterface, l2) | ptr l1, ptr l2) -> void,
  interface_removed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusObject, l1), !ptr_v_1(type_c2ats_GDBusInterface, l2) | ptr l1, ptr l2) -> void
}
fun fun_c2ats_g_dbus_object_get_type: () -> type_c2ats_GType = "mac#g_dbus_object_get_type"
fun fun_c2ats_g_dbus_object_get_object_path: {l1:addr} (!ptr_v_1(type_c2ats_GDBusObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_object_get_object_path"
fun fun_c2ats_g_dbus_object_get_interfaces: {l1:addr} (!ptr_v_1(type_c2ats_GDBusObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_dbus_object_get_interfaces"
fun fun_c2ats_g_dbus_object_get_interface: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusObject, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusInterface, l3) | ptr l3) = "mac#g_dbus_object_get_interface"
// File: /usr/include/glib-2.0/gio/gdbusobjectskeleton.h
abst@ype struct_c2ats__GDBusObjectSkeletonClass // FIXME! Forward declaration.
typedef type_c2ats_GDBusObjectSkeletonClass = struct_c2ats__GDBusObjectSkeletonClass
abst@ype struct_c2ats__GDBusObjectSkeletonPrivate // FIXME! Forward declaration.
typedef type_c2ats_GDBusObjectSkeletonPrivate = struct_c2ats__GDBusObjectSkeletonPrivate
typedef struct_c2ats__GDBusObjectSkeleton = $extype_struct"struct _GDBusObjectSkeleton" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GDBusObjectSkeletonPrivate) *)
}
typedef struct_c2ats__GDBusObjectSkeletonClass = $extype_struct"struct _GDBusObjectSkeletonClass" of {
  parent_class = type_c2ats_GObjectClass,
  authorize_method = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDBusObjectSkeleton, l1), !ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l2), !ptr_v_1(type_c2ats_GDBusMethodInvocation, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  padding = @[type_c2ats_gpointer][8]
}
fun fun_c2ats_g_dbus_object_skeleton_get_type: () -> type_c2ats_GType = "mac#g_dbus_object_skeleton_get_type"
fun fun_c2ats_g_dbus_object_skeleton_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusObjectSkeleton, l2) | ptr l2) = "mac#g_dbus_object_skeleton_new"
fun fun_c2ats_g_dbus_object_skeleton_flush: {l1:addr} (!ptr_v_1(type_c2ats_GDBusObjectSkeleton, l1) | ptr l1) -> void = "mac#g_dbus_object_skeleton_flush"
fun fun_c2ats_g_dbus_object_skeleton_add_interface: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusObjectSkeleton, l1), !ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_object_skeleton_add_interface"
fun fun_c2ats_g_dbus_object_skeleton_remove_interface: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusObjectSkeleton, l1), !ptr_v_1(type_c2ats_GDBusInterfaceSkeleton, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_object_skeleton_remove_interface"
fun fun_c2ats_g_dbus_object_skeleton_remove_interface_by_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusObjectSkeleton, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_object_skeleton_remove_interface_by_name"
fun fun_c2ats_g_dbus_object_skeleton_set_object_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusObjectSkeleton, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_object_skeleton_set_object_path"
// File: /usr/include/glib-2.0/gio/gdbusobjectproxy.h
abst@ype struct_c2ats__GDBusObjectProxyClass // FIXME! Forward declaration.
typedef type_c2ats_GDBusObjectProxyClass = struct_c2ats__GDBusObjectProxyClass
abst@ype struct_c2ats__GDBusObjectProxyPrivate // FIXME! Forward declaration.
typedef type_c2ats_GDBusObjectProxyPrivate = struct_c2ats__GDBusObjectProxyPrivate
typedef struct_c2ats__GDBusObjectProxy = $extype_struct"struct _GDBusObjectProxy" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GDBusObjectProxyPrivate) *)
}
typedef struct_c2ats__GDBusObjectProxyClass = $extype_struct"struct _GDBusObjectProxyClass" of {
  parent_class = type_c2ats_GObjectClass,
  padding = @[type_c2ats_gpointer][8]
}
fun fun_c2ats_g_dbus_object_proxy_get_type: () -> type_c2ats_GType = "mac#g_dbus_object_proxy_get_type"
fun fun_c2ats_g_dbus_object_proxy_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusObjectProxy, l3) | ptr l3) = "mac#g_dbus_object_proxy_new"
fun fun_c2ats_g_dbus_object_proxy_get_connection: {l1:addr} (!ptr_v_1(type_c2ats_GDBusObjectProxy, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusConnection, l2) | ptr l2) = "mac#g_dbus_object_proxy_get_connection"
// File: /usr/include/glib-2.0/gio/gdbusobjectmanager.h
abst@ype struct_c2ats__GDBusObjectManagerIface // FIXME! Forward declaration.
typedef type_c2ats_GDBusObjectManagerIface = struct_c2ats__GDBusObjectManagerIface
typedef struct_c2ats__GDBusObjectManagerIface = $extype_struct"struct _GDBusObjectManagerIface" of {
  parent_iface = type_c2ats_GTypeInterface,
  get_object_path = {l1:addr} (!ptr_v_1(type_c2ats_GDBusObjectManager, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  get_objects = {l1:addr} (!ptr_v_1(type_c2ats_GDBusObjectManager, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2),
  get_object = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusObjectManager, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusObject, l3) | ptr l3),
  get_interface = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDBusObjectManager, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GDBusInterface, l4) | ptr l4),
  object_added = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusObjectManager, l1), !ptr_v_1(type_c2ats_GDBusObject, l2) | ptr l1, ptr l2) -> void,
  object_removed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusObjectManager, l1), !ptr_v_1(type_c2ats_GDBusObject, l2) | ptr l1, ptr l2) -> void,
  interface_added = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDBusObjectManager, l1), !ptr_v_1(type_c2ats_GDBusObject, l2), !ptr_v_1(type_c2ats_GDBusInterface, l3) | ptr l1, ptr l2, ptr l3) -> void,
  interface_removed = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDBusObjectManager, l1), !ptr_v_1(type_c2ats_GDBusObject, l2), !ptr_v_1(type_c2ats_GDBusInterface, l3) | ptr l1, ptr l2, ptr l3) -> void
}
fun fun_c2ats_g_dbus_object_manager_get_type: () -> type_c2ats_GType = "mac#g_dbus_object_manager_get_type"
fun fun_c2ats_g_dbus_object_manager_get_object_path: {l1:addr} (!ptr_v_1(type_c2ats_GDBusObjectManager, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_object_manager_get_object_path"
fun fun_c2ats_g_dbus_object_manager_get_objects: {l1:addr} (!ptr_v_1(type_c2ats_GDBusObjectManager, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#g_dbus_object_manager_get_objects"
fun fun_c2ats_g_dbus_object_manager_get_object: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusObjectManager, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusObject, l3) | ptr l3) = "mac#g_dbus_object_manager_get_object"
fun fun_c2ats_g_dbus_object_manager_get_interface: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDBusObjectManager, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GDBusInterface, l4) | ptr l4) = "mac#g_dbus_object_manager_get_interface"
// File: /usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h
abst@ype struct_c2ats__GDBusObjectManagerClientClass // FIXME! Forward declaration.
typedef type_c2ats_GDBusObjectManagerClientClass = struct_c2ats__GDBusObjectManagerClientClass
abst@ype struct_c2ats__GDBusObjectManagerClientPrivate // FIXME! Forward declaration.
typedef type_c2ats_GDBusObjectManagerClientPrivate = struct_c2ats__GDBusObjectManagerClientPrivate
typedef struct_c2ats__GDBusObjectManagerClient = $extype_struct"struct _GDBusObjectManagerClient" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GDBusObjectManagerClientPrivate) *)
}
typedef struct_c2ats__GDBusObjectManagerClientClass = $extype_struct"struct _GDBusObjectManagerClientClass" of {
  parent_class = type_c2ats_GObjectClass,
  interface_proxy_signal = {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GDBusObjectManagerClient, l1), !ptr_v_1(type_c2ats_GDBusObjectProxy, l2), !ptr_v_1(type_c2ats_GDBusProxy, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gchar, l5), !ptr_v_1(type_c2ats_GVariant, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> void,
  interface_proxy_properties_changed = {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GDBusObjectManagerClient, l1), !ptr_v_1(type_c2ats_GDBusObjectProxy, l2), !ptr_v_1(type_c2ats_GDBusProxy, l3), !ptr_v_1(type_c2ats_GVariant, l4), !ptr_v_2(type_c2ats_gchar, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void,
  padding = @[type_c2ats_gpointer][8]
}
fun fun_c2ats_g_dbus_object_manager_client_get_type: () -> type_c2ats_GType = "mac#g_dbus_object_manager_client_get_type"
fun fun_c2ats_g_dbus_object_manager_client_new: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GCancellable, l4) | ptr l1, type_c2ats_GDBusObjectManagerClientFlags, ptr l2, ptr l3, type_c2ats_GDBusProxyTypeFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify, ptr l4, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_dbus_object_manager_client_new"
fun fun_c2ats_g_dbus_object_manager_client_new_finish: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusObjectManager, l3) | ptr l3) = "mac#g_dbus_object_manager_client_new_finish"
fun fun_c2ats_g_dbus_object_manager_client_new_sync: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, type_c2ats_GDBusObjectManagerClientFlags, ptr l2, ptr l3, type_c2ats_GDBusProxyTypeFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GDBusObjectManager, l6) | ptr l6) = "mac#g_dbus_object_manager_client_new_sync"
fun fun_c2ats_g_dbus_object_manager_client_new_for_bus: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | type_c2ats_GBusType, type_c2ats_GDBusObjectManagerClientFlags, ptr l1, ptr l2, type_c2ats_GDBusProxyTypeFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#g_dbus_object_manager_client_new_for_bus"
fun fun_c2ats_g_dbus_object_manager_client_new_for_bus_finish: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GDBusObjectManager, l3) | ptr l3) = "mac#g_dbus_object_manager_client_new_for_bus_finish"
fun fun_c2ats_g_dbus_object_manager_client_new_for_bus_sync: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GCancellable, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | type_c2ats_GBusType, type_c2ats_GDBusObjectManagerClientFlags, ptr l1, ptr l2, type_c2ats_GDBusProxyTypeFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GDBusObjectManager, l5) | ptr l5) = "mac#g_dbus_object_manager_client_new_for_bus_sync"
fun fun_c2ats_g_dbus_object_manager_client_get_connection: {l1:addr} (!ptr_v_1(type_c2ats_GDBusObjectManagerClient, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusConnection, l2) | ptr l2) = "mac#g_dbus_object_manager_client_get_connection"
fun fun_c2ats_g_dbus_object_manager_client_get_flags: {l1:addr} (!ptr_v_1(type_c2ats_GDBusObjectManagerClient, l1) | ptr l1) -> type_c2ats_GDBusObjectManagerClientFlags = "mac#g_dbus_object_manager_client_get_flags"
fun fun_c2ats_g_dbus_object_manager_client_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GDBusObjectManagerClient, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_object_manager_client_get_name"
fun fun_c2ats_g_dbus_object_manager_client_get_name_owner: {l1:addr} (!ptr_v_1(type_c2ats_GDBusObjectManagerClient, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_dbus_object_manager_client_get_name_owner"
// File: /usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h
abst@ype struct_c2ats__GDBusObjectManagerServerClass // FIXME! Forward declaration.
typedef type_c2ats_GDBusObjectManagerServerClass = struct_c2ats__GDBusObjectManagerServerClass
abst@ype struct_c2ats__GDBusObjectManagerServerPrivate // FIXME! Forward declaration.
typedef type_c2ats_GDBusObjectManagerServerPrivate = struct_c2ats__GDBusObjectManagerServerPrivate
typedef struct_c2ats__GDBusObjectManagerServer = $extype_struct"struct _GDBusObjectManagerServer" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GDBusObjectManagerServerPrivate) *)
}
typedef struct_c2ats__GDBusObjectManagerServerClass = $extype_struct"struct _GDBusObjectManagerServerClass" of {
  parent_class = type_c2ats_GObjectClass,
  padding = @[type_c2ats_gpointer][8]
}
fun fun_c2ats_g_dbus_object_manager_server_get_type: () -> type_c2ats_GType = "mac#g_dbus_object_manager_server_get_type"
fun fun_c2ats_g_dbus_object_manager_server_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusObjectManagerServer, l2) | ptr l2) = "mac#g_dbus_object_manager_server_new"
fun fun_c2ats_g_dbus_object_manager_server_get_connection: {l1:addr} (!ptr_v_1(type_c2ats_GDBusObjectManagerServer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusConnection, l2) | ptr l2) = "mac#g_dbus_object_manager_server_get_connection"
fun fun_c2ats_g_dbus_object_manager_server_set_connection: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusObjectManagerServer, l1), !ptr_v_1(type_c2ats_GDBusConnection, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_object_manager_server_set_connection"
fun fun_c2ats_g_dbus_object_manager_server_export: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusObjectManagerServer, l1), !ptr_v_1(type_c2ats_GDBusObjectSkeleton, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_object_manager_server_export"
fun fun_c2ats_g_dbus_object_manager_server_export_uniquely: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusObjectManagerServer, l1), !ptr_v_1(type_c2ats_GDBusObjectSkeleton, l2) | ptr l1, ptr l2) -> void = "mac#g_dbus_object_manager_server_export_uniquely"
fun fun_c2ats_g_dbus_object_manager_server_is_exported: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusObjectManagerServer, l1), !ptr_v_1(type_c2ats_GDBusObjectSkeleton, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_dbus_object_manager_server_is_exported"
fun fun_c2ats_g_dbus_object_manager_server_unexport: {l1,l2:addr} (!ptr_v_1(type_c2ats_GDBusObjectManagerServer, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#g_dbus_object_manager_server_unexport"
// File: /usr/include/glib-2.0/gio/gdbusactiongroup.h
fun fun_c2ats_g_dbus_action_group_get_type: () -> type_c2ats_GType = "mac#g_dbus_action_group_get_type"
fun fun_c2ats_g_dbus_action_group_get: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GDBusActionGroup, l4) | ptr l4) = "mac#g_dbus_action_group_get"
// File: /usr/include/glib-2.0/gio/gremoteactiongroup.h
abst@ype struct_c2ats__GRemoteActionGroupInterface // FIXME! Forward declaration.
typedef type_c2ats_GRemoteActionGroupInterface = struct_c2ats__GRemoteActionGroupInterface
typedef struct_c2ats__GRemoteActionGroupInterface = $extype_struct"struct _GRemoteActionGroupInterface" of {
  g_iface = type_c2ats_GTypeInterface,
  activate_action_full = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GRemoteActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3), !ptr_v_1(type_c2ats_GVariant, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void,
  change_action_state_full = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GRemoteActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3), !ptr_v_1(type_c2ats_GVariant, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void
}
fun fun_c2ats_g_remote_action_group_get_type: () -> type_c2ats_GType = "mac#g_remote_action_group_get_type"
fun fun_c2ats_g_remote_action_group_activate_action_full: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GRemoteActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3), !ptr_v_1(type_c2ats_GVariant, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#g_remote_action_group_activate_action_full"
fun fun_c2ats_g_remote_action_group_change_action_state_full: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GRemoteActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3), !ptr_v_1(type_c2ats_GVariant, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#g_remote_action_group_change_action_state_full"
// File: /usr/include/glib-2.0/gio/gmenumodel.h
abst@ype struct_c2ats__GMenuModelPrivate // FIXME! Forward declaration.
typedef type_c2ats_GMenuModelPrivate = struct_c2ats__GMenuModelPrivate
abst@ype struct_c2ats__GMenuModelClass // FIXME! Forward declaration.
typedef type_c2ats_GMenuModelClass = struct_c2ats__GMenuModelClass
abst@ype struct_c2ats__GMenuAttributeIterPrivate // FIXME! Forward declaration.
typedef type_c2ats_GMenuAttributeIterPrivate = struct_c2ats__GMenuAttributeIterPrivate
abst@ype struct_c2ats__GMenuAttributeIterClass // FIXME! Forward declaration.
typedef type_c2ats_GMenuAttributeIterClass = struct_c2ats__GMenuAttributeIterClass
abst@ype struct_c2ats__GMenuAttributeIter // FIXME! Forward declaration.
typedef type_c2ats_GMenuAttributeIter = struct_c2ats__GMenuAttributeIter
abst@ype struct_c2ats__GMenuLinkIterPrivate // FIXME! Forward declaration.
typedef type_c2ats_GMenuLinkIterPrivate = struct_c2ats__GMenuLinkIterPrivate
abst@ype struct_c2ats__GMenuLinkIterClass // FIXME! Forward declaration.
typedef type_c2ats_GMenuLinkIterClass = struct_c2ats__GMenuLinkIterClass
abst@ype struct_c2ats__GMenuLinkIter // FIXME! Forward declaration.
typedef type_c2ats_GMenuLinkIter = struct_c2ats__GMenuLinkIter
typedef struct_c2ats__GMenuModel = $extype_struct"struct _GMenuModel" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GMenuModelPrivate) *)
}
typedef struct_c2ats__GMenuModelClass = $extype_struct"struct _GMenuModelClass" of {
  parent_class = type_c2ats_GObjectClass,
  is_mutable = {l1:addr} (!ptr_v_1(type_c2ats_GMenuModel, l1) | ptr l1) -> type_c2ats_gboolean,
  get_n_items = {l1:addr} (!ptr_v_1(type_c2ats_GMenuModel, l1) | ptr l1) -> type_c2ats_gint,
  get_item_attributes = {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GMenuModel, l1), !ptr_v_2(type_c2ats_GHashTable, l2, l2_1) | ptr l1, type_c2ats_gint, ptr l2) -> void,
  iterate_item_attributes = {l1:addr} (!ptr_v_1(type_c2ats_GMenuModel, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GMenuAttributeIter, l2) | ptr l2),
  get_item_attribute_value = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMenuModel, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariantType, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GVariant, l4) | ptr l4),
  get_item_links = {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GMenuModel, l1), !ptr_v_2(type_c2ats_GHashTable, l2, l2_1) | ptr l1, type_c2ats_gint, ptr l2) -> void,
  iterate_item_links = {l1:addr} (!ptr_v_1(type_c2ats_GMenuModel, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GMenuLinkIter, l2) | ptr l2),
  get_item_link = {l1,l2:addr} (!ptr_v_1(type_c2ats_GMenuModel, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gint, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GMenuModel, l3) | ptr l3)
}
fun fun_c2ats_g_menu_model_get_type: () -> type_c2ats_GType = "mac#g_menu_model_get_type"
fun fun_c2ats_g_menu_model_is_mutable: {l1:addr} (!ptr_v_1(type_c2ats_GMenuModel, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_menu_model_is_mutable"
fun fun_c2ats_g_menu_model_get_n_items: {l1:addr} (!ptr_v_1(type_c2ats_GMenuModel, l1) | ptr l1) -> type_c2ats_gint = "mac#g_menu_model_get_n_items"
fun fun_c2ats_g_menu_model_iterate_item_attributes: {l1:addr} (!ptr_v_1(type_c2ats_GMenuModel, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GMenuAttributeIter, l2) | ptr l2) = "mac#g_menu_model_iterate_item_attributes"
fun fun_c2ats_g_menu_model_get_item_attribute_value: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMenuModel, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariantType, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GVariant, l4) | ptr l4) = "mac#g_menu_model_get_item_attribute_value"
fun fun_c2ats_g_menu_model_get_item_attribute: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMenuModel, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_menu_model_get_item_attribute"
fun fun_c2ats_g_menu_model_iterate_item_links: {l1:addr} (!ptr_v_1(type_c2ats_GMenuModel, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GMenuLinkIter, l2) | ptr l2) = "mac#g_menu_model_iterate_item_links"
fun fun_c2ats_g_menu_model_get_item_link: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMenuModel, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gint, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GMenuModel, l3) | ptr l3) = "mac#g_menu_model_get_item_link"
fun fun_c2ats_g_menu_model_items_changed: {l1:addr} (!ptr_v_1(type_c2ats_GMenuModel, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void = "mac#g_menu_model_items_changed"
typedef struct_c2ats__GMenuAttributeIter = $extype_struct"struct _GMenuAttributeIter" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GMenuAttributeIterPrivate) *)
}
typedef struct_c2ats__GMenuAttributeIterClass = $extype_struct"struct _GMenuAttributeIterClass" of {
  parent_class = type_c2ats_GObjectClass,
  get_next = {l1,l2,l2_1,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMenuAttributeIter, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_2(type_c2ats_GVariant, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean
}
fun fun_c2ats_g_menu_attribute_iter_get_type: () -> type_c2ats_GType = "mac#g_menu_attribute_iter_get_type"
fun fun_c2ats_g_menu_attribute_iter_get_next: {l1,l2,l2_1,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMenuAttributeIter, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_2(type_c2ats_GVariant, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_menu_attribute_iter_get_next"
fun fun_c2ats_g_menu_attribute_iter_next: {l1:addr} (!ptr_v_1(type_c2ats_GMenuAttributeIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_menu_attribute_iter_next"
fun fun_c2ats_g_menu_attribute_iter_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GMenuAttributeIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_menu_attribute_iter_get_name"
fun fun_c2ats_g_menu_attribute_iter_get_value: {l1:addr} (!ptr_v_1(type_c2ats_GMenuAttributeIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#g_menu_attribute_iter_get_value"
typedef struct_c2ats__GMenuLinkIter = $extype_struct"struct _GMenuLinkIter" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GMenuLinkIterPrivate) *)
}
typedef struct_c2ats__GMenuLinkIterClass = $extype_struct"struct _GMenuLinkIterClass" of {
  parent_class = type_c2ats_GObjectClass,
  get_next = {l1,l2,l2_1,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMenuLinkIter, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_2(type_c2ats_GMenuModel, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean
}
fun fun_c2ats_g_menu_link_iter_get_type: () -> type_c2ats_GType = "mac#g_menu_link_iter_get_type"
fun fun_c2ats_g_menu_link_iter_get_next: {l1,l2,l2_1,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GMenuLinkIter, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_2(type_c2ats_GMenuModel, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_menu_link_iter_get_next"
fun fun_c2ats_g_menu_link_iter_next: {l1:addr} (!ptr_v_1(type_c2ats_GMenuLinkIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#g_menu_link_iter_next"
fun fun_c2ats_g_menu_link_iter_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GMenuLinkIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#g_menu_link_iter_get_name"
fun fun_c2ats_g_menu_link_iter_get_value: {l1:addr} (!ptr_v_1(type_c2ats_GMenuLinkIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMenuModel, l2) | ptr l2) = "mac#g_menu_link_iter_get_value"
// File: /usr/include/glib-2.0/gio/gmenu.h
abst@ype struct_c2ats__GMenuItem // FIXME! Forward declaration.
typedef type_c2ats_GMenuItem = struct_c2ats__GMenuItem
abst@ype struct_c2ats__GMenu // FIXME! Forward declaration.
typedef type_c2ats_GMenu = struct_c2ats__GMenu
fun fun_c2ats_g_menu_get_type: () -> type_c2ats_GType = "mac#g_menu_get_type"
fun fun_c2ats_g_menu_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GMenu, l1) | ptr l1) = "mac#g_menu_new"
fun fun_c2ats_g_menu_freeze: {l1:addr} (!ptr_v_1(type_c2ats_GMenu, l1) | ptr l1) -> void = "mac#g_menu_freeze"
fun fun_c2ats_g_menu_insert_item: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMenu, l1), !ptr_v_1(type_c2ats_GMenuItem, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#g_menu_insert_item"
fun fun_c2ats_g_menu_prepend_item: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMenu, l1), !ptr_v_1(type_c2ats_GMenuItem, l2) | ptr l1, ptr l2) -> void = "mac#g_menu_prepend_item"
fun fun_c2ats_g_menu_append_item: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMenu, l1), !ptr_v_1(type_c2ats_GMenuItem, l2) | ptr l1, ptr l2) -> void = "mac#g_menu_append_item"
fun fun_c2ats_g_menu_remove: {l1:addr} (!ptr_v_1(type_c2ats_GMenu, l1) | ptr l1, type_c2ats_gint) -> void = "mac#g_menu_remove"
fun fun_c2ats_g_menu_remove_all: {l1:addr} (!ptr_v_1(type_c2ats_GMenu, l1) | ptr l1) -> void = "mac#g_menu_remove_all"
fun fun_c2ats_g_menu_insert: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMenu, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#g_menu_insert"
fun fun_c2ats_g_menu_prepend: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMenu, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_menu_prepend"
fun fun_c2ats_g_menu_append: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMenu, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_menu_append"
fun fun_c2ats_g_menu_insert_section: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMenu, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GMenuModel, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#g_menu_insert_section"
fun fun_c2ats_g_menu_prepend_section: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMenu, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GMenuModel, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_menu_prepend_section"
fun fun_c2ats_g_menu_append_section: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMenu, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GMenuModel, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_menu_append_section"
fun fun_c2ats_g_menu_insert_submenu: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMenu, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GMenuModel, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#g_menu_insert_submenu"
fun fun_c2ats_g_menu_prepend_submenu: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMenu, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GMenuModel, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_menu_prepend_submenu"
fun fun_c2ats_g_menu_append_submenu: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMenu, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GMenuModel, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_menu_append_submenu"
fun fun_c2ats_g_menu_item_get_type: () -> type_c2ats_GType = "mac#g_menu_item_get_type"
fun fun_c2ats_g_menu_item_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GMenuItem, l3) | ptr l3) = "mac#g_menu_item_new"
fun fun_c2ats_g_menu_item_new_from_model: {l1:addr} (!ptr_v_1(type_c2ats_GMenuModel, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GMenuItem, l2) | ptr l2) = "mac#g_menu_item_new_from_model"
fun fun_c2ats_g_menu_item_new_submenu: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GMenuModel, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GMenuItem, l3) | ptr l3) = "mac#g_menu_item_new_submenu"
fun fun_c2ats_g_menu_item_new_section: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GMenuModel, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GMenuItem, l3) | ptr l3) = "mac#g_menu_item_new_section"
fun fun_c2ats_g_menu_item_get_attribute_value: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMenuItem, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariantType, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GVariant, l4) | ptr l4) = "mac#g_menu_item_get_attribute_value"
fun fun_c2ats_g_menu_item_get_attribute: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMenuItem, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#g_menu_item_get_attribute"
fun fun_c2ats_g_menu_item_get_link: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMenuItem, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GMenuModel, l3) | ptr l3) = "mac#g_menu_item_get_link"
fun fun_c2ats_g_menu_item_set_attribute_value: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMenuItem, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_menu_item_set_attribute_value"
fun fun_c2ats_g_menu_item_set_attribute: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMenuItem, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_menu_item_set_attribute"
fun fun_c2ats_g_menu_item_set_link: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMenuItem, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GMenuModel, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_menu_item_set_link"
fun fun_c2ats_g_menu_item_set_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMenuItem, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_menu_item_set_label"
fun fun_c2ats_g_menu_item_set_submenu: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMenuItem, l1), !ptr_v_1(type_c2ats_GMenuModel, l2) | ptr l1, ptr l2) -> void = "mac#g_menu_item_set_submenu"
fun fun_c2ats_g_menu_item_set_section: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMenuItem, l1), !ptr_v_1(type_c2ats_GMenuModel, l2) | ptr l1, ptr l2) -> void = "mac#g_menu_item_set_section"
fun fun_c2ats_g_menu_item_set_action_and_target_value: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMenuItem, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_menu_item_set_action_and_target_value"
fun fun_c2ats_g_menu_item_set_action_and_target: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GMenuItem, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_menu_item_set_action_and_target"
fun fun_c2ats_g_menu_item_set_detailed_action: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMenuItem, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_menu_item_set_detailed_action"
fun fun_c2ats_g_menu_item_set_icon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GMenuItem, l1), !ptr_v_1(type_c2ats_GIcon, l2) | ptr l1, ptr l2) -> void = "mac#g_menu_item_set_icon"
// File: /usr/include/glib-2.0/gio/gmenuexporter.h
fun fun_c2ats_g_dbus_connection_export_menu_model: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GMenuModel, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_guint = "mac#g_dbus_connection_export_menu_model"
fun fun_c2ats_g_dbus_connection_unexport_menu_model: {l1:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_dbus_connection_unexport_menu_model"
// File: /usr/include/glib-2.0/gio/gdbusmenumodel.h
abst@ype struct_c2ats__GDBusMenuModel // FIXME! Forward declaration.
typedef type_c2ats_GDBusMenuModel = struct_c2ats__GDBusMenuModel
fun fun_c2ats_g_dbus_menu_model_get_type: () -> type_c2ats_GType = "mac#g_dbus_menu_model_get_type"
fun fun_c2ats_g_dbus_menu_model_get: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GDBusConnection, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GDBusMenuModel, l4) | ptr l4) = "mac#g_dbus_menu_model_get"
// File: /usr/include/glib-2.0/gio/gnotification.h
fun fun_c2ats_g_notification_get_type: () -> type_c2ats_GType = "mac#g_notification_get_type"
fun fun_c2ats_g_notification_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GNotification, l2) | ptr l2) = "mac#g_notification_new"
fun fun_c2ats_g_notification_set_title: {l1,l2:addr} (!ptr_v_1(type_c2ats_GNotification, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_notification_set_title"
fun fun_c2ats_g_notification_set_body: {l1,l2:addr} (!ptr_v_1(type_c2ats_GNotification, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_notification_set_body"
fun fun_c2ats_g_notification_set_icon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GNotification, l1), !ptr_v_1(type_c2ats_GIcon, l2) | ptr l1, ptr l2) -> void = "mac#g_notification_set_icon"
fun fun_c2ats_g_notification_set_urgent: {l1:addr} (!ptr_v_1(type_c2ats_GNotification, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#g_notification_set_urgent"
fun fun_c2ats_g_notification_set_priority: {l1:addr} (!ptr_v_1(type_c2ats_GNotification, l1) | ptr l1, type_c2ats_GNotificationPriority) -> void = "mac#g_notification_set_priority"
fun fun_c2ats_g_notification_add_button: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GNotification, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_notification_add_button"
fun fun_c2ats_g_notification_add_button_with_target: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GNotification, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#g_notification_add_button_with_target"
fun fun_c2ats_g_notification_add_button_with_target_value: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GNotification, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GVariant, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#g_notification_add_button_with_target_value"
fun fun_c2ats_g_notification_set_default_action: {l1,l2:addr} (!ptr_v_1(type_c2ats_GNotification, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#g_notification_set_default_action"
fun fun_c2ats_g_notification_set_default_action_and_target: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GNotification, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_notification_set_default_action_and_target"
fun fun_c2ats_g_notification_set_default_action_and_target_value: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GNotification, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#g_notification_set_default_action_and_target_value"
// File: /usr/include/glib-2.0/gio/glistmodel.h
fun fun_c2ats_g_list_model_get_type: () -> type_c2ats_GType = "mac#g_list_model_get_type"
abst@ype struct_c2ats__GListModel // FIXME! Forward declaration.
typedef type_c2ats_GListModel = struct_c2ats__GListModel
abst@ype struct_c2ats__GListModelInterface // FIXME! Forward declaration.
typedef type_c2ats_GListModelInterface = struct_c2ats__GListModelInterface
typedef type_c2ats_GListModel_autoptr = cPtr0(type_c2ats_GListModel)
fun fun_c2ats_glib_autoptr_cleanup_GListModel: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GListModel, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GListModel"
fun fun_c2ats_G_LIST_MODEL: (type_c2ats_gpointer) -> [l1:addr] (ptr_v_1(type_c2ats_GListModel, l1) | ptr l1) = "mac#G_LIST_MODEL"
fun fun_c2ats_G_IS_LIST_MODEL: (type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#G_IS_LIST_MODEL"
fun fun_c2ats_G_LIST_MODEL_GET_IFACE: (type_c2ats_gpointer) -> [l1:addr] (ptr_v_1(type_c2ats_GListModelInterface, l1) | ptr l1) = "mac#G_LIST_MODEL_GET_IFACE"
typedef struct_c2ats__GListModelInterface = $extype_struct"struct _GListModelInterface" of {
  g_iface = type_c2ats_GTypeInterface,
  get_item_type = {l1:addr} (!ptr_v_1(type_c2ats_GListModel, l1) | ptr l1) -> type_c2ats_GType,
  get_n_items = {l1:addr} (!ptr_v_1(type_c2ats_GListModel, l1) | ptr l1) -> type_c2ats_guint,
  get_item = {l1:addr} (!ptr_v_1(type_c2ats_GListModel, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_gpointer
}
fun fun_c2ats_g_list_model_get_item_type: {l1:addr} (!ptr_v_1(type_c2ats_GListModel, l1) | ptr l1) -> type_c2ats_GType = "mac#g_list_model_get_item_type"
fun fun_c2ats_g_list_model_get_n_items: {l1:addr} (!ptr_v_1(type_c2ats_GListModel, l1) | ptr l1) -> type_c2ats_guint = "mac#g_list_model_get_n_items"
fun fun_c2ats_g_list_model_get_item: {l1:addr} (!ptr_v_1(type_c2ats_GListModel, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_gpointer = "mac#g_list_model_get_item"
fun fun_c2ats_g_list_model_get_object: {l1:addr} (!ptr_v_1(type_c2ats_GListModel, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GObject, l2) | ptr l2) = "mac#g_list_model_get_object"
fun fun_c2ats_g_list_model_items_changed: {l1:addr} (!ptr_v_1(type_c2ats_GListModel, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint, type_c2ats_guint) -> void = "mac#g_list_model_items_changed"
// File: /usr/include/glib-2.0/gio/gliststore.h
fun fun_c2ats_g_list_store_get_type: () -> type_c2ats_GType = "mac#g_list_store_get_type"
abst@ype struct_c2ats__GListStore // FIXME! Forward declaration.
typedef type_c2ats_GListStore = struct_c2ats__GListStore
typedef struct_c2ats_anon_116368 = $extype_struct"struct { GObjectClass parent_class; }" of {
  parent_class = type_c2ats_GObjectClass
}
typedef type_c2ats_GListStoreClass = struct_c2ats_anon_116368
typedef type_c2ats_GListStore_autoptr = cPtr0(type_c2ats_GListStore)
fun fun_c2ats_glib_autoptr_cleanup_GListStore: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GListStore, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GListStore"
fun fun_c2ats_G_LIST_STORE: (type_c2ats_gpointer) -> [l1:addr] (ptr_v_1(type_c2ats_GListStore, l1) | ptr l1) = "mac#G_LIST_STORE"
fun fun_c2ats_G_IS_LIST_STORE: (type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#G_IS_LIST_STORE"
fun fun_c2ats_g_list_store_new: (type_c2ats_GType) -> [l1:addr] (ptr_v_1(type_c2ats_GListStore, l1) | ptr l1) = "mac#g_list_store_new"
fun fun_c2ats_g_list_store_insert: {l1:addr} (!ptr_v_1(type_c2ats_GListStore, l1) | ptr l1, type_c2ats_guint, type_c2ats_gpointer) -> void = "mac#g_list_store_insert"
fun fun_c2ats_g_list_store_insert_sorted: {l1:addr} (!ptr_v_1(type_c2ats_GListStore, l1) | ptr l1, type_c2ats_gpointer, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> type_c2ats_guint = "mac#g_list_store_insert_sorted"
fun fun_c2ats_g_list_store_sort: {l1:addr} (!ptr_v_1(type_c2ats_GListStore, l1) | ptr l1, type_c2ats_GCompareDataFunc, type_c2ats_gpointer) -> void = "mac#g_list_store_sort"
fun fun_c2ats_g_list_store_append: {l1:addr} (!ptr_v_1(type_c2ats_GListStore, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#g_list_store_append"
fun fun_c2ats_g_list_store_remove: {l1:addr} (!ptr_v_1(type_c2ats_GListStore, l1) | ptr l1, type_c2ats_guint) -> void = "mac#g_list_store_remove"
fun fun_c2ats_g_list_store_remove_all: {l1:addr} (!ptr_v_1(type_c2ats_GListStore, l1) | ptr l1) -> void = "mac#g_list_store_remove_all"
fun fun_c2ats_g_list_store_splice: {l1,l2:addr} (!ptr_v_1(type_c2ats_GListStore, l1), !ptr_v_1(type_c2ats_gpointer, l2) | ptr l1, type_c2ats_guint, type_c2ats_guint, ptr l2, type_c2ats_guint) -> void = "mac#g_list_store_splice"
// File: /usr/include/glib-2.0/gio/gio-autocleanups.h
typedef type_c2ats_GAction_autoptr = cPtr0(type_c2ats_GAction)
fun fun_c2ats_glib_autoptr_cleanup_GAction: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GAction, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GAction"
typedef type_c2ats_GActionMap_autoptr = cPtr0(type_c2ats_GActionMap)
fun fun_c2ats_glib_autoptr_cleanup_GActionMap: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GActionMap, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GActionMap"
typedef type_c2ats_GAppInfo_autoptr = cPtr0(type_c2ats_GAppInfo)
fun fun_c2ats_glib_autoptr_cleanup_GAppInfo: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GAppInfo, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GAppInfo"
typedef type_c2ats_GAppLaunchContext_autoptr = cPtr0(type_c2ats_GAppLaunchContext)
fun fun_c2ats_glib_autoptr_cleanup_GAppLaunchContext: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GAppLaunchContext, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GAppLaunchContext"
typedef type_c2ats_GAppInfoMonitor_autoptr = cPtr0(type_c2ats_GAppInfoMonitor)
fun fun_c2ats_glib_autoptr_cleanup_GAppInfoMonitor: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GAppInfoMonitor, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GAppInfoMonitor"
typedef type_c2ats_GApplicationCommandLine_autoptr = cPtr0(type_c2ats_GApplicationCommandLine)
fun fun_c2ats_glib_autoptr_cleanup_GApplicationCommandLine: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GApplicationCommandLine, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GApplicationCommandLine"
typedef type_c2ats_GApplication_autoptr = cPtr0(type_c2ats_GApplication)
fun fun_c2ats_glib_autoptr_cleanup_GApplication: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GApplication, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GApplication"
typedef type_c2ats_GAsyncInitable_autoptr = cPtr0(type_c2ats_GAsyncInitable)
fun fun_c2ats_glib_autoptr_cleanup_GAsyncInitable: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GAsyncInitable, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GAsyncInitable"
typedef type_c2ats_GAsyncResult_autoptr = cPtr0(type_c2ats_GAsyncResult)
fun fun_c2ats_glib_autoptr_cleanup_GAsyncResult: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GAsyncResult, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GAsyncResult"
typedef type_c2ats_GBufferedInputStream_autoptr = cPtr0(type_c2ats_GBufferedInputStream)
fun fun_c2ats_glib_autoptr_cleanup_GBufferedInputStream: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GBufferedInputStream, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GBufferedInputStream"
typedef type_c2ats_GBufferedOutputStream_autoptr = cPtr0(type_c2ats_GBufferedOutputStream)
fun fun_c2ats_glib_autoptr_cleanup_GBufferedOutputStream: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GBufferedOutputStream, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GBufferedOutputStream"
typedef type_c2ats_GBytesIcon_autoptr = cPtr0(type_c2ats_GBytesIcon)
fun fun_c2ats_glib_autoptr_cleanup_GBytesIcon: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GBytesIcon, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GBytesIcon"
typedef type_c2ats_GCancellable_autoptr = cPtr0(type_c2ats_GCancellable)
fun fun_c2ats_glib_autoptr_cleanup_GCancellable: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GCancellable, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GCancellable"
typedef type_c2ats_GCharsetConverter_autoptr = cPtr0(type_c2ats_GCharsetConverter)
fun fun_c2ats_glib_autoptr_cleanup_GCharsetConverter: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GCharsetConverter, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GCharsetConverter"
typedef type_c2ats_GConverter_autoptr = cPtr0(type_c2ats_GConverter)
fun fun_c2ats_glib_autoptr_cleanup_GConverter: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GConverter, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GConverter"
typedef type_c2ats_GConverterInputStream_autoptr = cPtr0(type_c2ats_GConverterInputStream)
fun fun_c2ats_glib_autoptr_cleanup_GConverterInputStream: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GConverterInputStream, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GConverterInputStream"
typedef type_c2ats_GConverterOutputStream_autoptr = cPtr0(type_c2ats_GConverterOutputStream)
fun fun_c2ats_glib_autoptr_cleanup_GConverterOutputStream: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GConverterOutputStream, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GConverterOutputStream"
typedef type_c2ats_GCredentials_autoptr = cPtr0(type_c2ats_GCredentials)
fun fun_c2ats_glib_autoptr_cleanup_GCredentials: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GCredentials, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GCredentials"
typedef type_c2ats_GDatagramBased_autoptr = cPtr0(type_c2ats_GDatagramBased)
fun fun_c2ats_glib_autoptr_cleanup_GDatagramBased: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDatagramBased, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDatagramBased"
typedef type_c2ats_GDataInputStream_autoptr = cPtr0(type_c2ats_GDataInputStream)
fun fun_c2ats_glib_autoptr_cleanup_GDataInputStream: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDataInputStream, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDataInputStream"
typedef type_c2ats_GDataOutputStream_autoptr = cPtr0(type_c2ats_GDataOutputStream)
fun fun_c2ats_glib_autoptr_cleanup_GDataOutputStream: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDataOutputStream, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDataOutputStream"
typedef type_c2ats_GDBusActionGroup_autoptr = cPtr0(type_c2ats_GDBusActionGroup)
fun fun_c2ats_glib_autoptr_cleanup_GDBusActionGroup: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDBusActionGroup, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDBusActionGroup"
typedef type_c2ats_GDBusAuthObserver_autoptr = cPtr0(type_c2ats_GDBusAuthObserver)
fun fun_c2ats_glib_autoptr_cleanup_GDBusAuthObserver: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDBusAuthObserver, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDBusAuthObserver"
typedef type_c2ats_GDBusConnection_autoptr = cPtr0(type_c2ats_GDBusConnection)
fun fun_c2ats_glib_autoptr_cleanup_GDBusConnection: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDBusConnection, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDBusConnection"
typedef type_c2ats_GDBusInterface_autoptr = cPtr0(type_c2ats_GDBusInterface)
fun fun_c2ats_glib_autoptr_cleanup_GDBusInterface: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDBusInterface, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDBusInterface"
typedef type_c2ats_GDBusInterfaceSkeleton_autoptr = cPtr0(type_c2ats_GDBusInterfaceSkeleton)
fun fun_c2ats_glib_autoptr_cleanup_GDBusInterfaceSkeleton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDBusInterfaceSkeleton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDBusInterfaceSkeleton"
typedef type_c2ats_GDBusMenuModel_autoptr = cPtr0(type_c2ats_GDBusMenuModel)
fun fun_c2ats_glib_autoptr_cleanup_GDBusMenuModel: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDBusMenuModel, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDBusMenuModel"
typedef type_c2ats_GDBusMessage_autoptr = cPtr0(type_c2ats_GDBusMessage)
fun fun_c2ats_glib_autoptr_cleanup_GDBusMessage: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDBusMessage, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDBusMessage"
typedef type_c2ats_GDBusMethodInvocation_autoptr = cPtr0(type_c2ats_GDBusMethodInvocation)
fun fun_c2ats_glib_autoptr_cleanup_GDBusMethodInvocation: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDBusMethodInvocation, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDBusMethodInvocation"
typedef type_c2ats_GDBusNodeInfo_autoptr = cPtr0(type_c2ats_GDBusNodeInfo)
fun fun_c2ats_glib_autoptr_cleanup_GDBusNodeInfo: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDBusNodeInfo, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDBusNodeInfo"
typedef type_c2ats_GDBusObject_autoptr = cPtr0(type_c2ats_GDBusObject)
fun fun_c2ats_glib_autoptr_cleanup_GDBusObject: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDBusObject, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDBusObject"
typedef type_c2ats_GDBusObjectManagerClient_autoptr = cPtr0(type_c2ats_GDBusObjectManagerClient)
fun fun_c2ats_glib_autoptr_cleanup_GDBusObjectManagerClient: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDBusObjectManagerClient, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDBusObjectManagerClient"
typedef type_c2ats_GDBusObjectManager_autoptr = cPtr0(type_c2ats_GDBusObjectManager)
fun fun_c2ats_glib_autoptr_cleanup_GDBusObjectManager: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDBusObjectManager, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDBusObjectManager"
typedef type_c2ats_GDBusObjectManagerServer_autoptr = cPtr0(type_c2ats_GDBusObjectManagerServer)
fun fun_c2ats_glib_autoptr_cleanup_GDBusObjectManagerServer: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDBusObjectManagerServer, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDBusObjectManagerServer"
typedef type_c2ats_GDBusObjectProxy_autoptr = cPtr0(type_c2ats_GDBusObjectProxy)
fun fun_c2ats_glib_autoptr_cleanup_GDBusObjectProxy: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDBusObjectProxy, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDBusObjectProxy"
typedef type_c2ats_GDBusObjectSkeleton_autoptr = cPtr0(type_c2ats_GDBusObjectSkeleton)
fun fun_c2ats_glib_autoptr_cleanup_GDBusObjectSkeleton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDBusObjectSkeleton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDBusObjectSkeleton"
typedef type_c2ats_GDBusProxy_autoptr = cPtr0(type_c2ats_GDBusProxy)
fun fun_c2ats_glib_autoptr_cleanup_GDBusProxy: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDBusProxy, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDBusProxy"
typedef type_c2ats_GDBusServer_autoptr = cPtr0(type_c2ats_GDBusServer)
fun fun_c2ats_glib_autoptr_cleanup_GDBusServer: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDBusServer, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDBusServer"
typedef type_c2ats_GDrive_autoptr = cPtr0(type_c2ats_GDrive)
fun fun_c2ats_glib_autoptr_cleanup_GDrive: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GDrive, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GDrive"
typedef type_c2ats_GEmblemedIcon_autoptr = cPtr0(type_c2ats_GEmblemedIcon)
fun fun_c2ats_glib_autoptr_cleanup_GEmblemedIcon: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GEmblemedIcon, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GEmblemedIcon"
typedef type_c2ats_GEmblem_autoptr = cPtr0(type_c2ats_GEmblem)
fun fun_c2ats_glib_autoptr_cleanup_GEmblem: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GEmblem, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GEmblem"
typedef type_c2ats_GFileEnumerator_autoptr = cPtr0(type_c2ats_GFileEnumerator)
fun fun_c2ats_glib_autoptr_cleanup_GFileEnumerator: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GFileEnumerator, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GFileEnumerator"
typedef type_c2ats_GFile_autoptr = cPtr0(type_c2ats_GFile)
fun fun_c2ats_glib_autoptr_cleanup_GFile: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GFile, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GFile"
typedef type_c2ats_GFileAttributeInfoList_autoptr = cPtr0(type_c2ats_GFileAttributeInfoList)
fun fun_c2ats_glib_autoptr_cleanup_GFileAttributeInfoList: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GFileAttributeInfoList, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GFileAttributeInfoList"
typedef type_c2ats_GFileIcon_autoptr = cPtr0(type_c2ats_GFileIcon)
fun fun_c2ats_glib_autoptr_cleanup_GFileIcon: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GFileIcon, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GFileIcon"
typedef type_c2ats_GFileInfo_autoptr = cPtr0(type_c2ats_GFileInfo)
fun fun_c2ats_glib_autoptr_cleanup_GFileInfo: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GFileInfo, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GFileInfo"
typedef type_c2ats_GFileInputStream_autoptr = cPtr0(type_c2ats_GFileInputStream)
fun fun_c2ats_glib_autoptr_cleanup_GFileInputStream: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GFileInputStream, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GFileInputStream"
typedef type_c2ats_GFileIOStream_autoptr = cPtr0(type_c2ats_GFileIOStream)
fun fun_c2ats_glib_autoptr_cleanup_GFileIOStream: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GFileIOStream, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GFileIOStream"
typedef type_c2ats_GFileMonitor_autoptr = cPtr0(type_c2ats_GFileMonitor)
fun fun_c2ats_glib_autoptr_cleanup_GFileMonitor: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GFileMonitor, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GFileMonitor"
typedef type_c2ats_GFilenameCompleter_autoptr = cPtr0(type_c2ats_GFilenameCompleter)
fun fun_c2ats_glib_autoptr_cleanup_GFilenameCompleter: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GFilenameCompleter, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GFilenameCompleter"
typedef type_c2ats_GFileOutputStream_autoptr = cPtr0(type_c2ats_GFileOutputStream)
fun fun_c2ats_glib_autoptr_cleanup_GFileOutputStream: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GFileOutputStream, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GFileOutputStream"
typedef type_c2ats_GFilterInputStream_autoptr = cPtr0(type_c2ats_GFilterInputStream)
fun fun_c2ats_glib_autoptr_cleanup_GFilterInputStream: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GFilterInputStream, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GFilterInputStream"
typedef type_c2ats_GFilterOutputStream_autoptr = cPtr0(type_c2ats_GFilterOutputStream)
fun fun_c2ats_glib_autoptr_cleanup_GFilterOutputStream: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GFilterOutputStream, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GFilterOutputStream"
typedef type_c2ats_GIcon_autoptr = cPtr0(type_c2ats_GIcon)
fun fun_c2ats_glib_autoptr_cleanup_GIcon: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GIcon, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GIcon"
typedef type_c2ats_GInetAddress_autoptr = cPtr0(type_c2ats_GInetAddress)
fun fun_c2ats_glib_autoptr_cleanup_GInetAddress: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GInetAddress, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GInetAddress"
typedef type_c2ats_GInetAddressMask_autoptr = cPtr0(type_c2ats_GInetAddressMask)
fun fun_c2ats_glib_autoptr_cleanup_GInetAddressMask: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GInetAddressMask, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GInetAddressMask"
typedef type_c2ats_GInetSocketAddress_autoptr = cPtr0(type_c2ats_GInetSocketAddress)
fun fun_c2ats_glib_autoptr_cleanup_GInetSocketAddress: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GInetSocketAddress, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GInetSocketAddress"
typedef type_c2ats_GInitable_autoptr = cPtr0(type_c2ats_GInitable)
fun fun_c2ats_glib_autoptr_cleanup_GInitable: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GInitable, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GInitable"
typedef type_c2ats_GInputStream_autoptr = cPtr0(type_c2ats_GInputStream)
fun fun_c2ats_glib_autoptr_cleanup_GInputStream: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GInputStream, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GInputStream"
typedef type_c2ats_GIOModule_autoptr = cPtr0(type_c2ats_GIOModule)
fun fun_c2ats_glib_autoptr_cleanup_GIOModule: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GIOModule, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GIOModule"
typedef type_c2ats_GIOStream_autoptr = cPtr0(type_c2ats_GIOStream)
fun fun_c2ats_glib_autoptr_cleanup_GIOStream: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GIOStream, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GIOStream"
typedef type_c2ats_GLoadableIcon_autoptr = cPtr0(type_c2ats_GLoadableIcon)
fun fun_c2ats_glib_autoptr_cleanup_GLoadableIcon: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GLoadableIcon, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GLoadableIcon"
typedef type_c2ats_GMemoryInputStream_autoptr = cPtr0(type_c2ats_GMemoryInputStream)
fun fun_c2ats_glib_autoptr_cleanup_GMemoryInputStream: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GMemoryInputStream, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GMemoryInputStream"
typedef type_c2ats_GMemoryOutputStream_autoptr = cPtr0(type_c2ats_GMemoryOutputStream)
fun fun_c2ats_glib_autoptr_cleanup_GMemoryOutputStream: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GMemoryOutputStream, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GMemoryOutputStream"
typedef type_c2ats_GMenu_autoptr = cPtr0(type_c2ats_GMenu)
fun fun_c2ats_glib_autoptr_cleanup_GMenu: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GMenu, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GMenu"
typedef type_c2ats_GMenuItem_autoptr = cPtr0(type_c2ats_GMenuItem)
fun fun_c2ats_glib_autoptr_cleanup_GMenuItem: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GMenuItem, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GMenuItem"
typedef type_c2ats_GMenuModel_autoptr = cPtr0(type_c2ats_GMenuModel)
fun fun_c2ats_glib_autoptr_cleanup_GMenuModel: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GMenuModel, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GMenuModel"
typedef type_c2ats_GMenuAttributeIter_autoptr = cPtr0(type_c2ats_GMenuAttributeIter)
fun fun_c2ats_glib_autoptr_cleanup_GMenuAttributeIter: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GMenuAttributeIter, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GMenuAttributeIter"
typedef type_c2ats_GMenuLinkIter_autoptr = cPtr0(type_c2ats_GMenuLinkIter)
fun fun_c2ats_glib_autoptr_cleanup_GMenuLinkIter: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GMenuLinkIter, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GMenuLinkIter"
typedef type_c2ats_GMount_autoptr = cPtr0(type_c2ats_GMount)
fun fun_c2ats_glib_autoptr_cleanup_GMount: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GMount, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GMount"
typedef type_c2ats_GMountOperation_autoptr = cPtr0(type_c2ats_GMountOperation)
fun fun_c2ats_glib_autoptr_cleanup_GMountOperation: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GMountOperation, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GMountOperation"
typedef type_c2ats_GNativeVolumeMonitor_autoptr = cPtr0(type_c2ats_GNativeVolumeMonitor)
fun fun_c2ats_glib_autoptr_cleanup_GNativeVolumeMonitor: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GNativeVolumeMonitor, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GNativeVolumeMonitor"
typedef type_c2ats_GNetworkAddress_autoptr = cPtr0(type_c2ats_GNetworkAddress)
fun fun_c2ats_glib_autoptr_cleanup_GNetworkAddress: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GNetworkAddress, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GNetworkAddress"
typedef type_c2ats_GNetworkMonitor_autoptr = cPtr0(type_c2ats_GNetworkMonitor)
fun fun_c2ats_glib_autoptr_cleanup_GNetworkMonitor: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GNetworkMonitor, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GNetworkMonitor"
typedef type_c2ats_GNetworkService_autoptr = cPtr0(type_c2ats_GNetworkService)
fun fun_c2ats_glib_autoptr_cleanup_GNetworkService: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GNetworkService, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GNetworkService"
typedef type_c2ats_GNotification_autoptr = cPtr0(type_c2ats_GNotification)
fun fun_c2ats_glib_autoptr_cleanup_GNotification: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GNotification, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GNotification"
typedef type_c2ats_GOutputStream_autoptr = cPtr0(type_c2ats_GOutputStream)
fun fun_c2ats_glib_autoptr_cleanup_GOutputStream: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GOutputStream, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GOutputStream"
typedef type_c2ats_GPermission_autoptr = cPtr0(type_c2ats_GPermission)
fun fun_c2ats_glib_autoptr_cleanup_GPermission: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GPermission, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GPermission"
typedef type_c2ats_GPollableInputStream_autoptr = cPtr0(type_c2ats_GPollableInputStream)
fun fun_c2ats_glib_autoptr_cleanup_GPollableInputStream: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GPollableInputStream, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GPollableInputStream"
typedef type_c2ats_GPollableOutputStream_autoptr = cPtr0(type_c2ats_GPollableOutputStream)
fun fun_c2ats_glib_autoptr_cleanup_GPollableOutputStream: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GPollableOutputStream, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GPollableOutputStream"
typedef type_c2ats_GPropertyAction_autoptr = cPtr0(type_c2ats_GPropertyAction)
fun fun_c2ats_glib_autoptr_cleanup_GPropertyAction: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GPropertyAction, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GPropertyAction"
typedef type_c2ats_GProxyAddressEnumerator_autoptr = cPtr0(type_c2ats_GProxyAddressEnumerator)
fun fun_c2ats_glib_autoptr_cleanup_GProxyAddressEnumerator: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GProxyAddressEnumerator, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GProxyAddressEnumerator"
typedef type_c2ats_GProxyAddress_autoptr = cPtr0(type_c2ats_GProxyAddress)
fun fun_c2ats_glib_autoptr_cleanup_GProxyAddress: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GProxyAddress, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GProxyAddress"
typedef type_c2ats_GProxy_autoptr = cPtr0(type_c2ats_GProxy)
fun fun_c2ats_glib_autoptr_cleanup_GProxy: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GProxy, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GProxy"
typedef type_c2ats_GProxyResolver_autoptr = cPtr0(type_c2ats_GProxyResolver)
fun fun_c2ats_glib_autoptr_cleanup_GProxyResolver: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GProxyResolver, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GProxyResolver"
typedef type_c2ats_GRemoteActionGroup_autoptr = cPtr0(type_c2ats_GRemoteActionGroup)
fun fun_c2ats_glib_autoptr_cleanup_GRemoteActionGroup: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GRemoteActionGroup, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GRemoteActionGroup"
typedef type_c2ats_GResolver_autoptr = cPtr0(type_c2ats_GResolver)
fun fun_c2ats_glib_autoptr_cleanup_GResolver: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GResolver, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GResolver"
typedef type_c2ats_GSeekable_autoptr = cPtr0(type_c2ats_GSeekable)
fun fun_c2ats_glib_autoptr_cleanup_GSeekable: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSeekable, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSeekable"
typedef type_c2ats_GSettingsBackend_autoptr = cPtr0(type_c2ats_GSettingsBackend)
fun fun_c2ats_glib_autoptr_cleanup_GSettingsBackend: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSettingsBackend, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSettingsBackend"
typedef type_c2ats_GSettingsSchema_autoptr = cPtr0(type_c2ats_GSettingsSchema)
fun fun_c2ats_glib_autoptr_cleanup_GSettingsSchema: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSettingsSchema, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSettingsSchema"
typedef type_c2ats_GSettings_autoptr = cPtr0(type_c2ats_GSettings)
fun fun_c2ats_glib_autoptr_cleanup_GSettings: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSettings, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSettings"
typedef type_c2ats_GSimpleActionGroup_autoptr = cPtr0(type_c2ats_GSimpleActionGroup)
fun fun_c2ats_glib_autoptr_cleanup_GSimpleActionGroup: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSimpleActionGroup, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSimpleActionGroup"
typedef type_c2ats_GSimpleAction_autoptr = cPtr0(type_c2ats_GSimpleAction)
fun fun_c2ats_glib_autoptr_cleanup_GSimpleAction: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSimpleAction, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSimpleAction"
typedef type_c2ats_GSimpleAsyncResult_autoptr = cPtr0(type_c2ats_GSimpleAsyncResult)
fun fun_c2ats_glib_autoptr_cleanup_GSimpleAsyncResult: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSimpleAsyncResult, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSimpleAsyncResult"
typedef type_c2ats_GSimplePermission_autoptr = cPtr0(type_c2ats_GSimplePermission)
fun fun_c2ats_glib_autoptr_cleanup_GSimplePermission: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSimplePermission, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSimplePermission"
typedef type_c2ats_GSimpleProxyResolver_autoptr = cPtr0(type_c2ats_GSimpleProxyResolver)
fun fun_c2ats_glib_autoptr_cleanup_GSimpleProxyResolver: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSimpleProxyResolver, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSimpleProxyResolver"
typedef type_c2ats_GSocketAddressEnumerator_autoptr = cPtr0(type_c2ats_GSocketAddressEnumerator)
fun fun_c2ats_glib_autoptr_cleanup_GSocketAddressEnumerator: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSocketAddressEnumerator, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSocketAddressEnumerator"
typedef type_c2ats_GSocketAddress_autoptr = cPtr0(type_c2ats_GSocketAddress)
fun fun_c2ats_glib_autoptr_cleanup_GSocketAddress: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSocketAddress, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSocketAddress"
typedef type_c2ats_GSocketClient_autoptr = cPtr0(type_c2ats_GSocketClient)
fun fun_c2ats_glib_autoptr_cleanup_GSocketClient: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSocketClient, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSocketClient"
typedef type_c2ats_GSocketConnectable_autoptr = cPtr0(type_c2ats_GSocketConnectable)
fun fun_c2ats_glib_autoptr_cleanup_GSocketConnectable: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSocketConnectable, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSocketConnectable"
typedef type_c2ats_GSocketConnection_autoptr = cPtr0(type_c2ats_GSocketConnection)
fun fun_c2ats_glib_autoptr_cleanup_GSocketConnection: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSocketConnection, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSocketConnection"
typedef type_c2ats_GSocketControlMessage_autoptr = cPtr0(type_c2ats_GSocketControlMessage)
fun fun_c2ats_glib_autoptr_cleanup_GSocketControlMessage: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSocketControlMessage, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSocketControlMessage"
typedef type_c2ats_GSocket_autoptr = cPtr0(type_c2ats_GSocket)
fun fun_c2ats_glib_autoptr_cleanup_GSocket: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSocket, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSocket"
typedef type_c2ats_GSocketListener_autoptr = cPtr0(type_c2ats_GSocketListener)
fun fun_c2ats_glib_autoptr_cleanup_GSocketListener: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSocketListener, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSocketListener"
typedef type_c2ats_GSocketService_autoptr = cPtr0(type_c2ats_GSocketService)
fun fun_c2ats_glib_autoptr_cleanup_GSocketService: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSocketService, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSocketService"
typedef type_c2ats_GSubprocess_autoptr = cPtr0(type_c2ats_GSubprocess)
fun fun_c2ats_glib_autoptr_cleanup_GSubprocess: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSubprocess, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSubprocess"
typedef type_c2ats_GSubprocessLauncher_autoptr = cPtr0(type_c2ats_GSubprocessLauncher)
fun fun_c2ats_glib_autoptr_cleanup_GSubprocessLauncher: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GSubprocessLauncher, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GSubprocessLauncher"
typedef type_c2ats_GTask_autoptr = cPtr0(type_c2ats_GTask)
fun fun_c2ats_glib_autoptr_cleanup_GTask: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTask, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GTask"
typedef type_c2ats_GTcpConnection_autoptr = cPtr0(type_c2ats_GTcpConnection)
fun fun_c2ats_glib_autoptr_cleanup_GTcpConnection: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTcpConnection, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GTcpConnection"
typedef type_c2ats_GTcpWrapperConnection_autoptr = cPtr0(type_c2ats_GTcpWrapperConnection)
fun fun_c2ats_glib_autoptr_cleanup_GTcpWrapperConnection: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTcpWrapperConnection, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GTcpWrapperConnection"
typedef type_c2ats_GTestDBus_autoptr = cPtr0(type_c2ats_GTestDBus)
fun fun_c2ats_glib_autoptr_cleanup_GTestDBus: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTestDBus, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GTestDBus"
typedef type_c2ats_GThemedIcon_autoptr = cPtr0(type_c2ats_GThemedIcon)
fun fun_c2ats_glib_autoptr_cleanup_GThemedIcon: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GThemedIcon, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GThemedIcon"
typedef type_c2ats_GThreadedSocketService_autoptr = cPtr0(type_c2ats_GThreadedSocketService)
fun fun_c2ats_glib_autoptr_cleanup_GThreadedSocketService: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GThreadedSocketService, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GThreadedSocketService"
typedef type_c2ats_GTlsBackend_autoptr = cPtr0(type_c2ats_GTlsBackend)
fun fun_c2ats_glib_autoptr_cleanup_GTlsBackend: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTlsBackend, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GTlsBackend"
typedef type_c2ats_GTlsCertificate_autoptr = cPtr0(type_c2ats_GTlsCertificate)
fun fun_c2ats_glib_autoptr_cleanup_GTlsCertificate: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTlsCertificate, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GTlsCertificate"
typedef type_c2ats_GTlsClientConnection_autoptr = cPtr0(type_c2ats_GTlsClientConnection)
fun fun_c2ats_glib_autoptr_cleanup_GTlsClientConnection: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTlsClientConnection, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GTlsClientConnection"
typedef type_c2ats_GTlsConnection_autoptr = cPtr0(type_c2ats_GTlsConnection)
fun fun_c2ats_glib_autoptr_cleanup_GTlsConnection: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTlsConnection, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GTlsConnection"
typedef type_c2ats_GTlsDatabase_autoptr = cPtr0(type_c2ats_GTlsDatabase)
fun fun_c2ats_glib_autoptr_cleanup_GTlsDatabase: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTlsDatabase, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GTlsDatabase"
typedef type_c2ats_GTlsFileDatabase_autoptr = cPtr0(type_c2ats_GTlsFileDatabase)
fun fun_c2ats_glib_autoptr_cleanup_GTlsFileDatabase: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTlsFileDatabase, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GTlsFileDatabase"
typedef type_c2ats_GTlsInteraction_autoptr = cPtr0(type_c2ats_GTlsInteraction)
fun fun_c2ats_glib_autoptr_cleanup_GTlsInteraction: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTlsInteraction, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GTlsInteraction"
typedef type_c2ats_GTlsPassword_autoptr = cPtr0(type_c2ats_GTlsPassword)
fun fun_c2ats_glib_autoptr_cleanup_GTlsPassword: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTlsPassword, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GTlsPassword"
typedef type_c2ats_GTlsServerConnection_autoptr = cPtr0(type_c2ats_GTlsServerConnection)
fun fun_c2ats_glib_autoptr_cleanup_GTlsServerConnection: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GTlsServerConnection, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GTlsServerConnection"
typedef type_c2ats_GVfs_autoptr = cPtr0(type_c2ats_GVfs)
fun fun_c2ats_glib_autoptr_cleanup_GVfs: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GVfs, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GVfs"
typedef type_c2ats_GVolume_autoptr = cPtr0(type_c2ats_GVolume)
fun fun_c2ats_glib_autoptr_cleanup_GVolume: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GVolume, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GVolume"
typedef type_c2ats_GVolumeMonitor_autoptr = cPtr0(type_c2ats_GVolumeMonitor)
fun fun_c2ats_glib_autoptr_cleanup_GVolumeMonitor: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GVolumeMonitor, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GVolumeMonitor"
typedef type_c2ats_GZlibCompressor_autoptr = cPtr0(type_c2ats_GZlibCompressor)
fun fun_c2ats_glib_autoptr_cleanup_GZlibCompressor: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GZlibCompressor, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GZlibCompressor"
typedef type_c2ats_GZlibDecompressor_autoptr = cPtr0(type_c2ats_GZlibDecompressor)
fun fun_c2ats_glib_autoptr_cleanup_GZlibDecompressor: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GZlibDecompressor, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GZlibDecompressor"
// File: /usr/include/pango-1.0/pango/pango-coverage.h
abst@ype struct_c2ats__PangoCoverage // FIXME! Forward declaration.
typedef type_c2ats_PangoCoverage = struct_c2ats__PangoCoverage
typedef type_c2ats_PangoCoverageLevel = int
#define enum_c2ats_PANGO_COVERAGE_NONE 0
#define enum_c2ats_PANGO_COVERAGE_FALLBACK 1
#define enum_c2ats_PANGO_COVERAGE_APPROXIMATE 2
#define enum_c2ats_PANGO_COVERAGE_EXACT 3
fun fun_c2ats_pango_coverage_new: () -> [l1:addr] (ptr_v_1(type_c2ats_PangoCoverage, l1) | ptr l1) = "mac#pango_coverage_new"
fun fun_c2ats_pango_coverage_ref: {l1:addr} (!ptr_v_1(type_c2ats_PangoCoverage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoCoverage, l2) | ptr l2) = "mac#pango_coverage_ref"
fun fun_c2ats_pango_coverage_unref: {l1:addr} (!ptr_v_1(type_c2ats_PangoCoverage, l1) | ptr l1) -> void = "mac#pango_coverage_unref"
fun fun_c2ats_pango_coverage_copy: {l1:addr} (!ptr_v_1(type_c2ats_PangoCoverage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoCoverage, l2) | ptr l2) = "mac#pango_coverage_copy"
fun fun_c2ats_pango_coverage_get: {l1:addr} (!ptr_v_1(type_c2ats_PangoCoverage, l1) | ptr l1, int) -> type_c2ats_PangoCoverageLevel = "mac#pango_coverage_get"
fun fun_c2ats_pango_coverage_set: {l1:addr} (!ptr_v_1(type_c2ats_PangoCoverage, l1) | ptr l1, int, type_c2ats_PangoCoverageLevel) -> void = "mac#pango_coverage_set"
fun fun_c2ats_pango_coverage_max: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoCoverage, l1), !ptr_v_1(type_c2ats_PangoCoverage, l2) | ptr l1, ptr l2) -> void = "mac#pango_coverage_max"
fun fun_c2ats_pango_coverage_to_bytes: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_PangoCoverage, l1), !ptr_v_2(type_c2ats_guchar, l2, l2_1), !ptr_v_1(int, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_coverage_to_bytes"
fun fun_c2ats_pango_coverage_from_bytes: {l1:addr} (!ptr_v_1(type_c2ats_guchar, l1) | ptr l1, int) -> [l2:addr] (ptr_v_1(type_c2ats_PangoCoverage, l2) | ptr l2) = "mac#pango_coverage_from_bytes"
// File: /usr/include/pango-1.0/pango/pango-types.h
abst@ype struct_c2ats__PangoLogAttr // FIXME! Forward declaration.
typedef type_c2ats_PangoLogAttr = struct_c2ats__PangoLogAttr
abst@ype struct_c2ats__PangoEngineLang // FIXME! Forward declaration.
typedef type_c2ats_PangoEngineLang = struct_c2ats__PangoEngineLang
abst@ype struct_c2ats__PangoEngineShape // FIXME! Forward declaration.
typedef type_c2ats_PangoEngineShape = struct_c2ats__PangoEngineShape
abst@ype struct_c2ats__PangoFont // FIXME! Forward declaration.
typedef type_c2ats_PangoFont = struct_c2ats__PangoFont
abst@ype struct_c2ats__PangoFontMap // FIXME! Forward declaration.
typedef type_c2ats_PangoFontMap = struct_c2ats__PangoFontMap
abst@ype struct_c2ats__PangoRectangle // FIXME! Forward declaration.
typedef type_c2ats_PangoRectangle = struct_c2ats__PangoRectangle
typedef type_c2ats_PangoGlyph = type_c2ats_guint32
fun fun_c2ats_pango_units_from_double: (double) -> int = "mac#pango_units_from_double"
fun fun_c2ats_pango_units_to_double: (int) -> double = "mac#pango_units_to_double"
typedef struct_c2ats__PangoRectangle = $extype_struct"struct _PangoRectangle" of {
  x = int,
  y = int,
  width = int,
  height = int
}
fun fun_c2ats_pango_extents_to_pixels: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoRectangle, l1), !ptr_v_1(type_c2ats_PangoRectangle, l2) | ptr l1, ptr l2) -> void = "mac#pango_extents_to_pixels"
// File: /usr/include/pango-1.0/pango/pango-gravity.h
typedef type_c2ats_PangoGravity = int
#define enum_c2ats_PANGO_GRAVITY_SOUTH 0
#define enum_c2ats_PANGO_GRAVITY_EAST 1
#define enum_c2ats_PANGO_GRAVITY_NORTH 2
#define enum_c2ats_PANGO_GRAVITY_WEST 3
#define enum_c2ats_PANGO_GRAVITY_AUTO 4
typedef type_c2ats_PangoGravityHint = int
#define enum_c2ats_PANGO_GRAVITY_HINT_NATURAL 0
#define enum_c2ats_PANGO_GRAVITY_HINT_STRONG 1
#define enum_c2ats_PANGO_GRAVITY_HINT_LINE 2
fun fun_c2ats_pango_gravity_to_rotation: (type_c2ats_PangoGravity) -> double = "mac#pango_gravity_to_rotation"
abst@ype type_c2ats_PangoMatrix // FIXME! Forward declaration.
fun fun_c2ats_pango_gravity_get_for_matrix: {l1:addr} (!ptr_v_1(type_c2ats_PangoMatrix, l1) | ptr l1) -> type_c2ats_PangoGravity = "mac#pango_gravity_get_for_matrix"
abst@ype type_c2ats_PangoScript // FIXME! Forward declaration.
fun fun_c2ats_pango_gravity_get_for_script: (type_c2ats_PangoScript, type_c2ats_PangoGravity, type_c2ats_PangoGravityHint) -> type_c2ats_PangoGravity = "mac#pango_gravity_get_for_script"
fun fun_c2ats_pango_gravity_get_for_script_and_width: (type_c2ats_PangoScript, type_c2ats_gboolean, type_c2ats_PangoGravity, type_c2ats_PangoGravityHint) -> type_c2ats_PangoGravity = "mac#pango_gravity_get_for_script_and_width"
// File: /usr/include/pango-1.0/pango/pango-matrix.h
abst@ype struct_c2ats__PangoMatrix // FIXME! Forward declaration.
typedef type_c2ats_PangoMatrix = struct_c2ats__PangoMatrix
typedef struct_c2ats__PangoMatrix = $extype_struct"struct _PangoMatrix" of {
  xx = double,
  xy = double,
  yx = double,
  yy = double,
  x0 = double,
  y0 = double
}
fun fun_c2ats_pango_matrix_get_type: () -> type_c2ats_GType = "mac#pango_matrix_get_type"
fun fun_c2ats_pango_matrix_copy: {l1:addr} (!ptr_v_1(type_c2ats_PangoMatrix, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoMatrix, l2) | ptr l2) = "mac#pango_matrix_copy"
fun fun_c2ats_pango_matrix_free: {l1:addr} (!ptr_v_1(type_c2ats_PangoMatrix, l1) | ptr l1) -> void = "mac#pango_matrix_free"
fun fun_c2ats_pango_matrix_translate: {l1:addr} (!ptr_v_1(type_c2ats_PangoMatrix, l1) | ptr l1, double, double) -> void = "mac#pango_matrix_translate"
fun fun_c2ats_pango_matrix_scale: {l1:addr} (!ptr_v_1(type_c2ats_PangoMatrix, l1) | ptr l1, double, double) -> void = "mac#pango_matrix_scale"
fun fun_c2ats_pango_matrix_rotate: {l1:addr} (!ptr_v_1(type_c2ats_PangoMatrix, l1) | ptr l1, double) -> void = "mac#pango_matrix_rotate"
fun fun_c2ats_pango_matrix_concat: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoMatrix, l1), !ptr_v_1(type_c2ats_PangoMatrix, l2) | ptr l1, ptr l2) -> void = "mac#pango_matrix_concat"
fun fun_c2ats_pango_matrix_transform_point: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoMatrix, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_matrix_transform_point"
fun fun_c2ats_pango_matrix_transform_distance: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoMatrix, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_matrix_transform_distance"
fun fun_c2ats_pango_matrix_transform_rectangle: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoMatrix, l1), !ptr_v_1(type_c2ats_PangoRectangle, l2) | ptr l1, ptr l2) -> void = "mac#pango_matrix_transform_rectangle"
fun fun_c2ats_pango_matrix_transform_pixel_rectangle: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoMatrix, l1), !ptr_v_1(type_c2ats_PangoRectangle, l2) | ptr l1, ptr l2) -> void = "mac#pango_matrix_transform_pixel_rectangle"
fun fun_c2ats_pango_matrix_get_font_scale_factor: {l1:addr} (!ptr_v_1(type_c2ats_PangoMatrix, l1) | ptr l1) -> double = "mac#pango_matrix_get_font_scale_factor"
fun fun_c2ats_pango_matrix_get_font_scale_factors: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoMatrix, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_matrix_get_font_scale_factors"
// File: /usr/include/pango-1.0/pango/pango-script.h
abst@ype struct_c2ats__PangoScriptIter // FIXME! Forward declaration.
typedef type_c2ats_PangoScriptIter = struct_c2ats__PangoScriptIter
typedef type_c2ats_PangoScript = int
#define enum_c2ats_PANGO_SCRIPT_INVALID_CODE ~1
#define enum_c2ats_PANGO_SCRIPT_COMMON 0
#define enum_c2ats_PANGO_SCRIPT_INHERITED 0 + 1
#define enum_c2ats_PANGO_SCRIPT_ARABIC 0 + 2
#define enum_c2ats_PANGO_SCRIPT_ARMENIAN 0 + 3
#define enum_c2ats_PANGO_SCRIPT_BENGALI 0 + 4
#define enum_c2ats_PANGO_SCRIPT_BOPOMOFO 0 + 5
#define enum_c2ats_PANGO_SCRIPT_CHEROKEE 0 + 6
#define enum_c2ats_PANGO_SCRIPT_COPTIC 0 + 7
#define enum_c2ats_PANGO_SCRIPT_CYRILLIC 0 + 8
#define enum_c2ats_PANGO_SCRIPT_DESERET 0 + 9
#define enum_c2ats_PANGO_SCRIPT_DEVANAGARI 0 + 10
#define enum_c2ats_PANGO_SCRIPT_ETHIOPIC 0 + 11
#define enum_c2ats_PANGO_SCRIPT_GEORGIAN 0 + 12
#define enum_c2ats_PANGO_SCRIPT_GOTHIC 0 + 13
#define enum_c2ats_PANGO_SCRIPT_GREEK 0 + 14
#define enum_c2ats_PANGO_SCRIPT_GUJARATI 0 + 15
#define enum_c2ats_PANGO_SCRIPT_GURMUKHI 0 + 16
#define enum_c2ats_PANGO_SCRIPT_HAN 0 + 17
#define enum_c2ats_PANGO_SCRIPT_HANGUL 0 + 18
#define enum_c2ats_PANGO_SCRIPT_HEBREW 0 + 19
#define enum_c2ats_PANGO_SCRIPT_HIRAGANA 0 + 20
#define enum_c2ats_PANGO_SCRIPT_KANNADA 0 + 21
#define enum_c2ats_PANGO_SCRIPT_KATAKANA 0 + 22
#define enum_c2ats_PANGO_SCRIPT_KHMER 0 + 23
#define enum_c2ats_PANGO_SCRIPT_LAO 0 + 24
#define enum_c2ats_PANGO_SCRIPT_LATIN 0 + 25
#define enum_c2ats_PANGO_SCRIPT_MALAYALAM 0 + 26
#define enum_c2ats_PANGO_SCRIPT_MONGOLIAN 0 + 27
#define enum_c2ats_PANGO_SCRIPT_MYANMAR 0 + 28
#define enum_c2ats_PANGO_SCRIPT_OGHAM 0 + 29
#define enum_c2ats_PANGO_SCRIPT_OLD_ITALIC 0 + 30
#define enum_c2ats_PANGO_SCRIPT_ORIYA 0 + 31
#define enum_c2ats_PANGO_SCRIPT_RUNIC 0 + 32
#define enum_c2ats_PANGO_SCRIPT_SINHALA 0 + 33
#define enum_c2ats_PANGO_SCRIPT_SYRIAC 0 + 34
#define enum_c2ats_PANGO_SCRIPT_TAMIL 0 + 35
#define enum_c2ats_PANGO_SCRIPT_TELUGU 0 + 36
#define enum_c2ats_PANGO_SCRIPT_THAANA 0 + 37
#define enum_c2ats_PANGO_SCRIPT_THAI 0 + 38
#define enum_c2ats_PANGO_SCRIPT_TIBETAN 0 + 39
#define enum_c2ats_PANGO_SCRIPT_CANADIAN_ABORIGINAL 0 + 40
#define enum_c2ats_PANGO_SCRIPT_YI 0 + 41
#define enum_c2ats_PANGO_SCRIPT_TAGALOG 0 + 42
#define enum_c2ats_PANGO_SCRIPT_HANUNOO 0 + 43
#define enum_c2ats_PANGO_SCRIPT_BUHID 0 + 44
#define enum_c2ats_PANGO_SCRIPT_TAGBANWA 0 + 45
#define enum_c2ats_PANGO_SCRIPT_BRAILLE 0 + 46
#define enum_c2ats_PANGO_SCRIPT_CYPRIOT 0 + 47
#define enum_c2ats_PANGO_SCRIPT_LIMBU 0 + 48
#define enum_c2ats_PANGO_SCRIPT_OSMANYA 0 + 49
#define enum_c2ats_PANGO_SCRIPT_SHAVIAN 0 + 50
#define enum_c2ats_PANGO_SCRIPT_LINEAR_B 0 + 51
#define enum_c2ats_PANGO_SCRIPT_TAI_LE 0 + 52
#define enum_c2ats_PANGO_SCRIPT_UGARITIC 0 + 53
#define enum_c2ats_PANGO_SCRIPT_NEW_TAI_LUE 0 + 54
#define enum_c2ats_PANGO_SCRIPT_BUGINESE 0 + 55
#define enum_c2ats_PANGO_SCRIPT_GLAGOLITIC 0 + 56
#define enum_c2ats_PANGO_SCRIPT_TIFINAGH 0 + 57
#define enum_c2ats_PANGO_SCRIPT_SYLOTI_NAGRI 0 + 58
#define enum_c2ats_PANGO_SCRIPT_OLD_PERSIAN 0 + 59
#define enum_c2ats_PANGO_SCRIPT_KHAROSHTHI 0 + 60
#define enum_c2ats_PANGO_SCRIPT_UNKNOWN 0 + 61
#define enum_c2ats_PANGO_SCRIPT_BALINESE 0 + 62
#define enum_c2ats_PANGO_SCRIPT_CUNEIFORM 0 + 63
#define enum_c2ats_PANGO_SCRIPT_PHOENICIAN 0 + 64
#define enum_c2ats_PANGO_SCRIPT_PHAGS_PA 0 + 65
#define enum_c2ats_PANGO_SCRIPT_NKO 0 + 66
#define enum_c2ats_PANGO_SCRIPT_KAYAH_LI 0 + 67
#define enum_c2ats_PANGO_SCRIPT_LEPCHA 0 + 68
#define enum_c2ats_PANGO_SCRIPT_REJANG 0 + 69
#define enum_c2ats_PANGO_SCRIPT_SUNDANESE 0 + 70
#define enum_c2ats_PANGO_SCRIPT_SAURASHTRA 0 + 71
#define enum_c2ats_PANGO_SCRIPT_CHAM 0 + 72
#define enum_c2ats_PANGO_SCRIPT_OL_CHIKI 0 + 73
#define enum_c2ats_PANGO_SCRIPT_VAI 0 + 74
#define enum_c2ats_PANGO_SCRIPT_CARIAN 0 + 75
#define enum_c2ats_PANGO_SCRIPT_LYCIAN 0 + 76
#define enum_c2ats_PANGO_SCRIPT_LYDIAN 0 + 77
#define enum_c2ats_PANGO_SCRIPT_BATAK 0 + 78
#define enum_c2ats_PANGO_SCRIPT_BRAHMI 0 + 79
#define enum_c2ats_PANGO_SCRIPT_MANDAIC 0 + 80
#define enum_c2ats_PANGO_SCRIPT_CHAKMA 0 + 81
#define enum_c2ats_PANGO_SCRIPT_MEROITIC_CURSIVE 0 + 82
#define enum_c2ats_PANGO_SCRIPT_MEROITIC_HIEROGLYPHS 0 + 83
#define enum_c2ats_PANGO_SCRIPT_MIAO 0 + 84
#define enum_c2ats_PANGO_SCRIPT_SHARADA 0 + 85
#define enum_c2ats_PANGO_SCRIPT_SORA_SOMPENG 0 + 86
#define enum_c2ats_PANGO_SCRIPT_TAKRI 0 + 87
#define enum_c2ats_PANGO_SCRIPT_BASSA_VAH 0 + 88
#define enum_c2ats_PANGO_SCRIPT_CAUCASIAN_ALBANIAN 0 + 89
#define enum_c2ats_PANGO_SCRIPT_DUPLOYAN 0 + 90
#define enum_c2ats_PANGO_SCRIPT_ELBASAN 0 + 91
#define enum_c2ats_PANGO_SCRIPT_GRANTHA 0 + 92
#define enum_c2ats_PANGO_SCRIPT_KHOJKI 0 + 93
#define enum_c2ats_PANGO_SCRIPT_KHUDAWADI 0 + 94
#define enum_c2ats_PANGO_SCRIPT_LINEAR_A 0 + 95
#define enum_c2ats_PANGO_SCRIPT_MAHAJANI 0 + 96
#define enum_c2ats_PANGO_SCRIPT_MANICHAEAN 0 + 97
#define enum_c2ats_PANGO_SCRIPT_MENDE_KIKAKUI 0 + 98
#define enum_c2ats_PANGO_SCRIPT_MODI 0 + 99
#define enum_c2ats_PANGO_SCRIPT_MRO 0 + 100
#define enum_c2ats_PANGO_SCRIPT_NABATAEAN 0 + 101
#define enum_c2ats_PANGO_SCRIPT_OLD_NORTH_ARABIAN 0 + 102
#define enum_c2ats_PANGO_SCRIPT_OLD_PERMIC 0 + 103
#define enum_c2ats_PANGO_SCRIPT_PAHAWH_HMONG 0 + 104
#define enum_c2ats_PANGO_SCRIPT_PALMYRENE 0 + 105
#define enum_c2ats_PANGO_SCRIPT_PAU_CIN_HAU 0 + 106
#define enum_c2ats_PANGO_SCRIPT_PSALTER_PAHLAVI 0 + 107
#define enum_c2ats_PANGO_SCRIPT_SIDDHAM 0 + 108
#define enum_c2ats_PANGO_SCRIPT_TIRHUTA 0 + 109
#define enum_c2ats_PANGO_SCRIPT_WARANG_CITI 0 + 110
#define enum_c2ats_PANGO_SCRIPT_AHOM 0 + 111
#define enum_c2ats_PANGO_SCRIPT_ANATOLIAN_HIEROGLYPHS 0 + 112
#define enum_c2ats_PANGO_SCRIPT_HATRAN 0 + 113
#define enum_c2ats_PANGO_SCRIPT_MULTANI 0 + 114
#define enum_c2ats_PANGO_SCRIPT_OLD_HUNGARIAN 0 + 115
#define enum_c2ats_PANGO_SCRIPT_SIGNWRITING 0 + 116
fun fun_c2ats_pango_script_for_unichar: (type_c2ats_gunichar) -> type_c2ats_PangoScript = "mac#pango_script_for_unichar"
fun fun_c2ats_pango_script_iter_new: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, int) -> [l2:addr] (ptr_v_1(type_c2ats_PangoScriptIter, l2) | ptr l2) = "mac#pango_script_iter_new"
fun fun_c2ats_pango_script_iter_get_range: {l1,l2,l2_1,l3,l3_1,l4:addr} (!ptr_v_1(type_c2ats_PangoScriptIter, l1), !ptr_v_2(char, l2, l2_1), !ptr_v_2(char, l3, l3_1), !ptr_v_1(type_c2ats_PangoScript, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#pango_script_iter_get_range"
fun fun_c2ats_pango_script_iter_next: {l1:addr} (!ptr_v_1(type_c2ats_PangoScriptIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#pango_script_iter_next"
fun fun_c2ats_pango_script_iter_free: {l1:addr} (!ptr_v_1(type_c2ats_PangoScriptIter, l1) | ptr l1) -> void = "mac#pango_script_iter_free"
abst@ype type_c2ats_PangoLanguage // FIXME! Forward declaration.
fun fun_c2ats_pango_script_get_sample_language: (type_c2ats_PangoScript) -> [l1:addr] (ptr_v_1(type_c2ats_PangoLanguage, l1) | ptr l1) = "mac#pango_script_get_sample_language"
// File: /usr/include/pango-1.0/pango/pango-language.h
abst@ype struct_c2ats__PangoLanguage // FIXME! Forward declaration.
typedef type_c2ats_PangoLanguage = struct_c2ats__PangoLanguage
fun fun_c2ats_pango_language_get_type: () -> type_c2ats_GType = "mac#pango_language_get_type"
fun fun_c2ats_pango_language_from_string: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLanguage, l2) | ptr l2) = "mac#pango_language_from_string"
fun fun_c2ats_pango_language_to_string: {l1:addr} (!ptr_v_1(type_c2ats_PangoLanguage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#pango_language_to_string"
fun fun_c2ats_pango_language_get_sample_string: {l1:addr} (!ptr_v_1(type_c2ats_PangoLanguage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#pango_language_get_sample_string"
fun fun_c2ats_pango_language_get_default: () -> [l1:addr] (ptr_v_1(type_c2ats_PangoLanguage, l1) | ptr l1) = "mac#pango_language_get_default"
fun fun_c2ats_pango_language_matches: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoLanguage, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#pango_language_matches"
fun fun_c2ats_pango_language_includes_script: {l1:addr} (!ptr_v_1(type_c2ats_PangoLanguage, l1) | ptr l1, type_c2ats_PangoScript) -> type_c2ats_gboolean = "mac#pango_language_includes_script"
fun fun_c2ats_pango_language_get_scripts: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoLanguage, l1), !ptr_v_1(int, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_PangoScript, l3) | ptr l3) = "mac#pango_language_get_scripts"
// File: /usr/include/pango-1.0/pango/pango-bidi-type.h
typedef type_c2ats_PangoBidiType = int
#define enum_c2ats_PANGO_BIDI_TYPE_L 0
#define enum_c2ats_PANGO_BIDI_TYPE_LRE 1
#define enum_c2ats_PANGO_BIDI_TYPE_LRO 2
#define enum_c2ats_PANGO_BIDI_TYPE_R 3
#define enum_c2ats_PANGO_BIDI_TYPE_AL 4
#define enum_c2ats_PANGO_BIDI_TYPE_RLE 5
#define enum_c2ats_PANGO_BIDI_TYPE_RLO 6
#define enum_c2ats_PANGO_BIDI_TYPE_PDF 7
#define enum_c2ats_PANGO_BIDI_TYPE_EN 8
#define enum_c2ats_PANGO_BIDI_TYPE_ES 9
#define enum_c2ats_PANGO_BIDI_TYPE_ET 10
#define enum_c2ats_PANGO_BIDI_TYPE_AN 11
#define enum_c2ats_PANGO_BIDI_TYPE_CS 12
#define enum_c2ats_PANGO_BIDI_TYPE_NSM 13
#define enum_c2ats_PANGO_BIDI_TYPE_BN 14
#define enum_c2ats_PANGO_BIDI_TYPE_B 15
#define enum_c2ats_PANGO_BIDI_TYPE_S 16
#define enum_c2ats_PANGO_BIDI_TYPE_WS 17
#define enum_c2ats_PANGO_BIDI_TYPE_ON 18
fun fun_c2ats_pango_bidi_type_for_unichar: (type_c2ats_gunichar) -> type_c2ats_PangoBidiType = "mac#pango_bidi_type_for_unichar"
typedef type_c2ats_PangoDirection = int
#define enum_c2ats_PANGO_DIRECTION_LTR 0
#define enum_c2ats_PANGO_DIRECTION_RTL 1
#define enum_c2ats_PANGO_DIRECTION_TTB_LTR 2
#define enum_c2ats_PANGO_DIRECTION_TTB_RTL 3
#define enum_c2ats_PANGO_DIRECTION_WEAK_LTR 4
#define enum_c2ats_PANGO_DIRECTION_WEAK_RTL 5
#define enum_c2ats_PANGO_DIRECTION_NEUTRAL 6
fun fun_c2ats_pango_unichar_direction: (type_c2ats_gunichar) -> type_c2ats_PangoDirection = "mac#pango_unichar_direction"
fun fun_c2ats_pango_find_base_dir: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_PangoDirection = "mac#pango_find_base_dir"
fun fun_c2ats_pango_get_mirror_char: {l1:addr} (!ptr_v_1(type_c2ats_gunichar, l1) | type_c2ats_gunichar, ptr l1) -> type_c2ats_gboolean = "mac#pango_get_mirror_char"
// File: /usr/include/pango-1.0/pango/pango-font.h
abst@ype struct_c2ats__PangoFontDescription // FIXME! Forward declaration.
typedef type_c2ats_PangoFontDescription = struct_c2ats__PangoFontDescription
abst@ype struct_c2ats__PangoFontMetrics // FIXME! Forward declaration.
typedef type_c2ats_PangoFontMetrics = struct_c2ats__PangoFontMetrics
typedef type_c2ats_PangoStyle = int
#define enum_c2ats_PANGO_STYLE_NORMAL 0
#define enum_c2ats_PANGO_STYLE_OBLIQUE 1
#define enum_c2ats_PANGO_STYLE_ITALIC 2
typedef type_c2ats_PangoVariant = int
#define enum_c2ats_PANGO_VARIANT_NORMAL 0
#define enum_c2ats_PANGO_VARIANT_SMALL_CAPS 1
typedef type_c2ats_PangoWeight = int
#define enum_c2ats_PANGO_WEIGHT_THIN 100
#define enum_c2ats_PANGO_WEIGHT_ULTRALIGHT 200
#define enum_c2ats_PANGO_WEIGHT_LIGHT 300
#define enum_c2ats_PANGO_WEIGHT_SEMILIGHT 350
#define enum_c2ats_PANGO_WEIGHT_BOOK 380
#define enum_c2ats_PANGO_WEIGHT_NORMAL 400
#define enum_c2ats_PANGO_WEIGHT_MEDIUM 500
#define enum_c2ats_PANGO_WEIGHT_SEMIBOLD 600
#define enum_c2ats_PANGO_WEIGHT_BOLD 700
#define enum_c2ats_PANGO_WEIGHT_ULTRABOLD 800
#define enum_c2ats_PANGO_WEIGHT_HEAVY 900
#define enum_c2ats_PANGO_WEIGHT_ULTRAHEAVY 1000
typedef type_c2ats_PangoStretch = int
#define enum_c2ats_PANGO_STRETCH_ULTRA_CONDENSED 0
#define enum_c2ats_PANGO_STRETCH_EXTRA_CONDENSED 1
#define enum_c2ats_PANGO_STRETCH_CONDENSED 2
#define enum_c2ats_PANGO_STRETCH_SEMI_CONDENSED 3
#define enum_c2ats_PANGO_STRETCH_NORMAL 4
#define enum_c2ats_PANGO_STRETCH_SEMI_EXPANDED 5
#define enum_c2ats_PANGO_STRETCH_EXPANDED 6
#define enum_c2ats_PANGO_STRETCH_EXTRA_EXPANDED 7
#define enum_c2ats_PANGO_STRETCH_ULTRA_EXPANDED 8
typedef type_c2ats_PangoFontMask = int
#define enum_c2ats_PANGO_FONT_MASK_FAMILY 1 << 0
#define enum_c2ats_PANGO_FONT_MASK_STYLE 1 << 1
#define enum_c2ats_PANGO_FONT_MASK_VARIANT 1 << 2
#define enum_c2ats_PANGO_FONT_MASK_WEIGHT 1 << 3
#define enum_c2ats_PANGO_FONT_MASK_STRETCH 1 << 4
#define enum_c2ats_PANGO_FONT_MASK_SIZE 1 << 5
#define enum_c2ats_PANGO_FONT_MASK_GRAVITY 1 << 6
fun fun_c2ats_pango_font_description_get_type: () -> type_c2ats_GType = "mac#pango_font_description_get_type"
fun fun_c2ats_pango_font_description_new: () -> [l1:addr] (ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1) = "mac#pango_font_description_new"
fun fun_c2ats_pango_font_description_copy: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l2) = "mac#pango_font_description_copy"
fun fun_c2ats_pango_font_description_copy_static: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l2) = "mac#pango_font_description_copy_static"
fun fun_c2ats_pango_font_description_hash: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1) -> type_c2ats_guint = "mac#pango_font_description_hash"
fun fun_c2ats_pango_font_description_equal: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1), !ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#pango_font_description_equal"
fun fun_c2ats_pango_font_description_free: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1) -> void = "mac#pango_font_description_free"
fun fun_c2ats_pango_font_descriptions_free: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_PangoFontDescription, l1, l1_1) | ptr l1, int) -> void = "mac#pango_font_descriptions_free"
fun fun_c2ats_pango_font_description_set_family: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#pango_font_description_set_family"
fun fun_c2ats_pango_font_description_set_family_static: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#pango_font_description_set_family_static"
fun fun_c2ats_pango_font_description_get_family: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#pango_font_description_get_family"
fun fun_c2ats_pango_font_description_set_style: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1, type_c2ats_PangoStyle) -> void = "mac#pango_font_description_set_style"
fun fun_c2ats_pango_font_description_get_style: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1) -> type_c2ats_PangoStyle = "mac#pango_font_description_get_style"
fun fun_c2ats_pango_font_description_set_variant: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1, type_c2ats_PangoVariant) -> void = "mac#pango_font_description_set_variant"
fun fun_c2ats_pango_font_description_get_variant: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1) -> type_c2ats_PangoVariant = "mac#pango_font_description_get_variant"
fun fun_c2ats_pango_font_description_set_weight: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1, type_c2ats_PangoWeight) -> void = "mac#pango_font_description_set_weight"
fun fun_c2ats_pango_font_description_get_weight: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1) -> type_c2ats_PangoWeight = "mac#pango_font_description_get_weight"
fun fun_c2ats_pango_font_description_set_stretch: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1, type_c2ats_PangoStretch) -> void = "mac#pango_font_description_set_stretch"
fun fun_c2ats_pango_font_description_get_stretch: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1) -> type_c2ats_PangoStretch = "mac#pango_font_description_get_stretch"
fun fun_c2ats_pango_font_description_set_size: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1, type_c2ats_gint) -> void = "mac#pango_font_description_set_size"
fun fun_c2ats_pango_font_description_get_size: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1) -> type_c2ats_gint = "mac#pango_font_description_get_size"
fun fun_c2ats_pango_font_description_set_absolute_size: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1, double) -> void = "mac#pango_font_description_set_absolute_size"
fun fun_c2ats_pango_font_description_get_size_is_absolute: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1) -> type_c2ats_gboolean = "mac#pango_font_description_get_size_is_absolute"
fun fun_c2ats_pango_font_description_set_gravity: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1, type_c2ats_PangoGravity) -> void = "mac#pango_font_description_set_gravity"
fun fun_c2ats_pango_font_description_get_gravity: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1) -> type_c2ats_PangoGravity = "mac#pango_font_description_get_gravity"
fun fun_c2ats_pango_font_description_get_set_fields: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1) -> type_c2ats_PangoFontMask = "mac#pango_font_description_get_set_fields"
fun fun_c2ats_pango_font_description_unset_fields: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1, type_c2ats_PangoFontMask) -> void = "mac#pango_font_description_unset_fields"
fun fun_c2ats_pango_font_description_merge: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1), !ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#pango_font_description_merge"
fun fun_c2ats_pango_font_description_merge_static: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1), !ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#pango_font_description_merge_static"
fun fun_c2ats_pango_font_description_better_match: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1), !ptr_v_1(type_c2ats_PangoFontDescription, l2), !ptr_v_1(type_c2ats_PangoFontDescription, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#pango_font_description_better_match"
fun fun_c2ats_pango_font_description_from_string: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l2) = "mac#pango_font_description_from_string"
fun fun_c2ats_pango_font_description_to_string: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#pango_font_description_to_string"
fun fun_c2ats_pango_font_description_to_filename: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#pango_font_description_to_filename"
fun fun_c2ats_pango_font_metrics_get_type: () -> type_c2ats_GType = "mac#pango_font_metrics_get_type"
fun fun_c2ats_pango_font_metrics_ref: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontMetrics, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontMetrics, l2) | ptr l2) = "mac#pango_font_metrics_ref"
fun fun_c2ats_pango_font_metrics_unref: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontMetrics, l1) | ptr l1) -> void = "mac#pango_font_metrics_unref"
fun fun_c2ats_pango_font_metrics_get_ascent: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontMetrics, l1) | ptr l1) -> int = "mac#pango_font_metrics_get_ascent"
fun fun_c2ats_pango_font_metrics_get_descent: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontMetrics, l1) | ptr l1) -> int = "mac#pango_font_metrics_get_descent"
fun fun_c2ats_pango_font_metrics_get_approximate_char_width: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontMetrics, l1) | ptr l1) -> int = "mac#pango_font_metrics_get_approximate_char_width"
fun fun_c2ats_pango_font_metrics_get_approximate_digit_width: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontMetrics, l1) | ptr l1) -> int = "mac#pango_font_metrics_get_approximate_digit_width"
fun fun_c2ats_pango_font_metrics_get_underline_position: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontMetrics, l1) | ptr l1) -> int = "mac#pango_font_metrics_get_underline_position"
fun fun_c2ats_pango_font_metrics_get_underline_thickness: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontMetrics, l1) | ptr l1) -> int = "mac#pango_font_metrics_get_underline_thickness"
fun fun_c2ats_pango_font_metrics_get_strikethrough_position: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontMetrics, l1) | ptr l1) -> int = "mac#pango_font_metrics_get_strikethrough_position"
fun fun_c2ats_pango_font_metrics_get_strikethrough_thickness: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontMetrics, l1) | ptr l1) -> int = "mac#pango_font_metrics_get_strikethrough_thickness"
abst@ype struct_c2ats__PangoFontFamily // FIXME! Forward declaration.
typedef type_c2ats_PangoFontFamily = struct_c2ats__PangoFontFamily
abst@ype struct_c2ats__PangoFontFace // FIXME! Forward declaration.
typedef type_c2ats_PangoFontFace = struct_c2ats__PangoFontFace
fun fun_c2ats_pango_font_family_get_type: () -> type_c2ats_GType = "mac#pango_font_family_get_type"
fun fun_c2ats_pango_font_family_list_faces: {l1,l2,l2_1,l2_2,l3:addr} (!ptr_v_1(type_c2ats_PangoFontFamily, l1), !ptr_v_3(type_c2ats_PangoFontFace, l2, l2_1, l2_2), !ptr_v_1(int, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_font_family_list_faces"
fun fun_c2ats_pango_font_family_get_name: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontFamily, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#pango_font_family_get_name"
fun fun_c2ats_pango_font_family_is_monospace: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontFamily, l1) | ptr l1) -> type_c2ats_gboolean = "mac#pango_font_family_is_monospace"
fun fun_c2ats_pango_font_face_get_type: () -> type_c2ats_GType = "mac#pango_font_face_get_type"
fun fun_c2ats_pango_font_face_describe: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontFace, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l2) = "mac#pango_font_face_describe"
fun fun_c2ats_pango_font_face_get_face_name: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontFace, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#pango_font_face_get_face_name"
fun fun_c2ats_pango_font_face_list_sizes: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_PangoFontFace, l1), !ptr_v_2(int, l2, l2_1), !ptr_v_1(int, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_font_face_list_sizes"
fun fun_c2ats_pango_font_face_is_synthesized: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontFace, l1) | ptr l1) -> type_c2ats_gboolean = "mac#pango_font_face_is_synthesized"
fun fun_c2ats_pango_font_get_type: () -> type_c2ats_GType = "mac#pango_font_get_type"
fun fun_c2ats_pango_font_describe: {l1:addr} (!ptr_v_1(type_c2ats_PangoFont, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l2) = "mac#pango_font_describe"
fun fun_c2ats_pango_font_describe_with_absolute_size: {l1:addr} (!ptr_v_1(type_c2ats_PangoFont, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l2) = "mac#pango_font_describe_with_absolute_size"
fun fun_c2ats_pango_font_get_coverage: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoFont, l1), !ptr_v_1(type_c2ats_PangoLanguage, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_PangoCoverage, l3) | ptr l3) = "mac#pango_font_get_coverage"
fun fun_c2ats_pango_font_find_shaper: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoFont, l1), !ptr_v_1(type_c2ats_PangoLanguage, l2) | ptr l1, ptr l2, type_c2ats_guint32) -> [l3:addr] (ptr_v_1(type_c2ats_PangoEngineShape, l3) | ptr l3) = "mac#pango_font_find_shaper"
fun fun_c2ats_pango_font_get_metrics: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoFont, l1), !ptr_v_1(type_c2ats_PangoLanguage, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_PangoFontMetrics, l3) | ptr l3) = "mac#pango_font_get_metrics"
fun fun_c2ats_pango_font_get_glyph_extents: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoFont, l1), !ptr_v_1(type_c2ats_PangoRectangle, l2), !ptr_v_1(type_c2ats_PangoRectangle, l3) | ptr l1, type_c2ats_PangoGlyph, ptr l2, ptr l3) -> void = "mac#pango_font_get_glyph_extents"
fun fun_c2ats_pango_font_get_font_map: {l1:addr} (!ptr_v_1(type_c2ats_PangoFont, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontMap, l2) | ptr l2) = "mac#pango_font_get_font_map"
// File: /usr/include/pango-1.0/pango/pango-attributes.h
abst@ype struct_c2ats__PangoColor // FIXME! Forward declaration.
typedef type_c2ats_PangoColor = struct_c2ats__PangoColor
typedef struct_c2ats__PangoColor = $extype_struct"struct _PangoColor" of {
  red = type_c2ats_guint16,
  green = type_c2ats_guint16,
  blue = type_c2ats_guint16
}
fun fun_c2ats_pango_color_get_type: () -> type_c2ats_GType = "mac#pango_color_get_type"
fun fun_c2ats_pango_color_copy: {l1:addr} (!ptr_v_1(type_c2ats_PangoColor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoColor, l2) | ptr l2) = "mac#pango_color_copy"
fun fun_c2ats_pango_color_free: {l1:addr} (!ptr_v_1(type_c2ats_PangoColor, l1) | ptr l1) -> void = "mac#pango_color_free"
fun fun_c2ats_pango_color_parse: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoColor, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#pango_color_parse"
fun fun_c2ats_pango_color_to_string: {l1:addr} (!ptr_v_1(type_c2ats_PangoColor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#pango_color_to_string"
abst@ype struct_c2ats__PangoAttribute // FIXME! Forward declaration.
typedef type_c2ats_PangoAttribute = struct_c2ats__PangoAttribute
abst@ype struct_c2ats__PangoAttrClass // FIXME! Forward declaration.
typedef type_c2ats_PangoAttrClass = struct_c2ats__PangoAttrClass
abst@ype struct_c2ats__PangoAttrString // FIXME! Forward declaration.
typedef type_c2ats_PangoAttrString = struct_c2ats__PangoAttrString
abst@ype struct_c2ats__PangoAttrLanguage // FIXME! Forward declaration.
typedef type_c2ats_PangoAttrLanguage = struct_c2ats__PangoAttrLanguage
abst@ype struct_c2ats__PangoAttrInt // FIXME! Forward declaration.
typedef type_c2ats_PangoAttrInt = struct_c2ats__PangoAttrInt
abst@ype struct_c2ats__PangoAttrSize // FIXME! Forward declaration.
typedef type_c2ats_PangoAttrSize = struct_c2ats__PangoAttrSize
abst@ype struct_c2ats__PangoAttrFloat // FIXME! Forward declaration.
typedef type_c2ats_PangoAttrFloat = struct_c2ats__PangoAttrFloat
abst@ype struct_c2ats__PangoAttrColor // FIXME! Forward declaration.
typedef type_c2ats_PangoAttrColor = struct_c2ats__PangoAttrColor
abst@ype struct_c2ats__PangoAttrFontDesc // FIXME! Forward declaration.
typedef type_c2ats_PangoAttrFontDesc = struct_c2ats__PangoAttrFontDesc
abst@ype struct_c2ats__PangoAttrShape // FIXME! Forward declaration.
typedef type_c2ats_PangoAttrShape = struct_c2ats__PangoAttrShape
abst@ype struct_c2ats__PangoAttrFontFeatures // FIXME! Forward declaration.
typedef type_c2ats_PangoAttrFontFeatures = struct_c2ats__PangoAttrFontFeatures
abst@ype struct_c2ats__PangoAttrList // FIXME! Forward declaration.
typedef type_c2ats_PangoAttrList = struct_c2ats__PangoAttrList
abst@ype struct_c2ats__PangoAttrIterator // FIXME! Forward declaration.
typedef type_c2ats_PangoAttrIterator = struct_c2ats__PangoAttrIterator
typedef type_c2ats_PangoAttrType = int
#define enum_c2ats_PANGO_ATTR_INVALID 0
#define enum_c2ats_PANGO_ATTR_LANGUAGE 1
#define enum_c2ats_PANGO_ATTR_FAMILY 2
#define enum_c2ats_PANGO_ATTR_STYLE 3
#define enum_c2ats_PANGO_ATTR_WEIGHT 4
#define enum_c2ats_PANGO_ATTR_VARIANT 5
#define enum_c2ats_PANGO_ATTR_STRETCH 6
#define enum_c2ats_PANGO_ATTR_SIZE 7
#define enum_c2ats_PANGO_ATTR_FONT_DESC 8
#define enum_c2ats_PANGO_ATTR_FOREGROUND 9
#define enum_c2ats_PANGO_ATTR_BACKGROUND 10
#define enum_c2ats_PANGO_ATTR_UNDERLINE 11
#define enum_c2ats_PANGO_ATTR_STRIKETHROUGH 12
#define enum_c2ats_PANGO_ATTR_RISE 13
#define enum_c2ats_PANGO_ATTR_SHAPE 14
#define enum_c2ats_PANGO_ATTR_SCALE 15
#define enum_c2ats_PANGO_ATTR_FALLBACK 16
#define enum_c2ats_PANGO_ATTR_LETTER_SPACING 17
#define enum_c2ats_PANGO_ATTR_UNDERLINE_COLOR 18
#define enum_c2ats_PANGO_ATTR_STRIKETHROUGH_COLOR 19
#define enum_c2ats_PANGO_ATTR_ABSOLUTE_SIZE 20
#define enum_c2ats_PANGO_ATTR_GRAVITY 21
#define enum_c2ats_PANGO_ATTR_GRAVITY_HINT 22
#define enum_c2ats_PANGO_ATTR_FONT_FEATURES 23
#define enum_c2ats_PANGO_ATTR_FOREGROUND_ALPHA 24
#define enum_c2ats_PANGO_ATTR_BACKGROUND_ALPHA 25
typedef type_c2ats_PangoUnderline = int
#define enum_c2ats_PANGO_UNDERLINE_NONE 0
#define enum_c2ats_PANGO_UNDERLINE_SINGLE 1
#define enum_c2ats_PANGO_UNDERLINE_DOUBLE 2
#define enum_c2ats_PANGO_UNDERLINE_LOW 3
#define enum_c2ats_PANGO_UNDERLINE_ERROR 4
typedef struct_c2ats__PangoAttribute = $extype_struct"struct _PangoAttribute" of {
  klass = ptr (* cPtr0(type_c2ats_PangoAttrClass) *),
  start_index = type_c2ats_guint,
  end_index = type_c2ats_guint
}
typedef type_c2ats_PangoAttrFilterFunc = {l1:addr} (!ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_PangoAttrDataCopyFunc = (type_c2ats_gconstpointer) -> type_c2ats_gpointer
typedef struct_c2ats__PangoAttrClass = $extype_struct"struct _PangoAttrClass" of {
  type = type_c2ats_PangoAttrType,
  copy = {l1:addr} (!ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoAttribute, l2) | ptr l2),
  destroy = {l1:addr} (!ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) -> void,
  equal = {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoAttribute, l1), !ptr_v_1(type_c2ats_PangoAttribute, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean
}
typedef struct_c2ats__PangoAttrString = $extype_struct"struct _PangoAttrString" of {
  attr = type_c2ats_PangoAttribute,
  value = ptr (* cPtr0(char) *)
}
typedef struct_c2ats__PangoAttrLanguage = $extype_struct"struct _PangoAttrLanguage" of {
  attr = type_c2ats_PangoAttribute,
  value = ptr (* cPtr0(type_c2ats_PangoLanguage) *)
}
typedef struct_c2ats__PangoAttrInt = $extype_struct"struct _PangoAttrInt" of {
  attr = type_c2ats_PangoAttribute,
  value = int
}
typedef struct_c2ats__PangoAttrFloat = $extype_struct"struct _PangoAttrFloat" of {
  attr = type_c2ats_PangoAttribute,
  value = double
}
typedef struct_c2ats__PangoAttrColor = $extype_struct"struct _PangoAttrColor" of {
  attr = type_c2ats_PangoAttribute,
  color = type_c2ats_PangoColor
}
typedef struct_c2ats__PangoAttrSize = $extype_struct"struct _PangoAttrSize" of {
  attr = type_c2ats_PangoAttribute,
  size = int,
  absolute = type_c2ats_guint
}
typedef struct_c2ats__PangoAttrShape = $extype_struct"struct _PangoAttrShape" of {
  attr = type_c2ats_PangoAttribute,
  ink_rect = type_c2ats_PangoRectangle,
  logical_rect = type_c2ats_PangoRectangle,
  data = type_c2ats_gpointer,
  copy_func = type_c2ats_PangoAttrDataCopyFunc,
  destroy_func = type_c2ats_GDestroyNotify
}
typedef struct_c2ats__PangoAttrFontDesc = $extype_struct"struct _PangoAttrFontDesc" of {
  attr = type_c2ats_PangoAttribute,
  desc = ptr (* cPtr0(type_c2ats_PangoFontDescription) *)
}
typedef struct_c2ats__PangoAttrFontFeatures = $extype_struct"struct _PangoAttrFontFeatures" of {
  attr = type_c2ats_PangoAttribute,
  features = ptr (* cPtr0(type_c2ats_gchar) *)
}
fun fun_c2ats_pango_attr_type_register: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_PangoAttrType = "mac#pango_attr_type_register"
fun fun_c2ats_pango_attr_type_get_name: (type_c2ats_PangoAttrType) -> [l1:addr] (ptr_v_1(char, l1) | ptr l1) = "mac#pango_attr_type_get_name"
fun fun_c2ats_pango_attribute_init: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoAttribute, l1), !ptr_v_1(type_c2ats_PangoAttrClass, l2) | ptr l1, ptr l2) -> void = "mac#pango_attribute_init"
fun fun_c2ats_pango_attribute_copy: {l1:addr} (!ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoAttribute, l2) | ptr l2) = "mac#pango_attribute_copy"
fun fun_c2ats_pango_attribute_destroy: {l1:addr} (!ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) -> void = "mac#pango_attribute_destroy"
fun fun_c2ats_pango_attribute_equal: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoAttribute, l1), !ptr_v_1(type_c2ats_PangoAttribute, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#pango_attribute_equal"
fun fun_c2ats_pango_attr_language_new: {l1:addr} (!ptr_v_1(type_c2ats_PangoLanguage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoAttribute, l2) | ptr l2) = "mac#pango_attr_language_new"
fun fun_c2ats_pango_attr_family_new: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoAttribute, l2) | ptr l2) = "mac#pango_attr_family_new"
fun fun_c2ats_pango_attr_foreground_new: (type_c2ats_guint16, type_c2ats_guint16, type_c2ats_guint16) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_foreground_new"
fun fun_c2ats_pango_attr_background_new: (type_c2ats_guint16, type_c2ats_guint16, type_c2ats_guint16) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_background_new"
fun fun_c2ats_pango_attr_size_new: (int) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_size_new"
fun fun_c2ats_pango_attr_size_new_absolute: (int) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_size_new_absolute"
fun fun_c2ats_pango_attr_style_new: (type_c2ats_PangoStyle) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_style_new"
fun fun_c2ats_pango_attr_weight_new: (type_c2ats_PangoWeight) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_weight_new"
fun fun_c2ats_pango_attr_variant_new: (type_c2ats_PangoVariant) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_variant_new"
fun fun_c2ats_pango_attr_stretch_new: (type_c2ats_PangoStretch) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_stretch_new"
fun fun_c2ats_pango_attr_font_desc_new: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontDescription, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoAttribute, l2) | ptr l2) = "mac#pango_attr_font_desc_new"
fun fun_c2ats_pango_attr_underline_new: (type_c2ats_PangoUnderline) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_underline_new"
fun fun_c2ats_pango_attr_underline_color_new: (type_c2ats_guint16, type_c2ats_guint16, type_c2ats_guint16) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_underline_color_new"
fun fun_c2ats_pango_attr_strikethrough_new: (type_c2ats_gboolean) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_strikethrough_new"
fun fun_c2ats_pango_attr_strikethrough_color_new: (type_c2ats_guint16, type_c2ats_guint16, type_c2ats_guint16) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_strikethrough_color_new"
fun fun_c2ats_pango_attr_rise_new: (int) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_rise_new"
fun fun_c2ats_pango_attr_scale_new: (double) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_scale_new"
fun fun_c2ats_pango_attr_fallback_new: (type_c2ats_gboolean) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_fallback_new"
fun fun_c2ats_pango_attr_letter_spacing_new: (int) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_letter_spacing_new"
fun fun_c2ats_pango_attr_shape_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoRectangle, l1), !ptr_v_1(type_c2ats_PangoRectangle, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_PangoAttribute, l3) | ptr l3) = "mac#pango_attr_shape_new"
fun fun_c2ats_pango_attr_shape_new_with_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoRectangle, l1), !ptr_v_1(type_c2ats_PangoRectangle, l2) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_PangoAttrDataCopyFunc, type_c2ats_GDestroyNotify) -> [l3:addr] (ptr_v_1(type_c2ats_PangoAttribute, l3) | ptr l3) = "mac#pango_attr_shape_new_with_data"
fun fun_c2ats_pango_attr_gravity_new: (type_c2ats_PangoGravity) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_gravity_new"
fun fun_c2ats_pango_attr_gravity_hint_new: (type_c2ats_PangoGravityHint) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_gravity_hint_new"
fun fun_c2ats_pango_attr_font_features_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoAttribute, l2) | ptr l2) = "mac#pango_attr_font_features_new"
fun fun_c2ats_pango_attr_foreground_alpha_new: (type_c2ats_guint16) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_foreground_alpha_new"
fun fun_c2ats_pango_attr_background_alpha_new: (type_c2ats_guint16) -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttribute, l1) | ptr l1) = "mac#pango_attr_background_alpha_new"
fun fun_c2ats_pango_attr_list_get_type: () -> type_c2ats_GType = "mac#pango_attr_list_get_type"
fun fun_c2ats_pango_attr_list_new: () -> [l1:addr] (ptr_v_1(type_c2ats_PangoAttrList, l1) | ptr l1) = "mac#pango_attr_list_new"
fun fun_c2ats_pango_attr_list_ref: {l1:addr} (!ptr_v_1(type_c2ats_PangoAttrList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoAttrList, l2) | ptr l2) = "mac#pango_attr_list_ref"
fun fun_c2ats_pango_attr_list_unref: {l1:addr} (!ptr_v_1(type_c2ats_PangoAttrList, l1) | ptr l1) -> void = "mac#pango_attr_list_unref"
fun fun_c2ats_pango_attr_list_copy: {l1:addr} (!ptr_v_1(type_c2ats_PangoAttrList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoAttrList, l2) | ptr l2) = "mac#pango_attr_list_copy"
fun fun_c2ats_pango_attr_list_insert: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoAttrList, l1), !ptr_v_1(type_c2ats_PangoAttribute, l2) | ptr l1, ptr l2) -> void = "mac#pango_attr_list_insert"
fun fun_c2ats_pango_attr_list_insert_before: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoAttrList, l1), !ptr_v_1(type_c2ats_PangoAttribute, l2) | ptr l1, ptr l2) -> void = "mac#pango_attr_list_insert_before"
fun fun_c2ats_pango_attr_list_change: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoAttrList, l1), !ptr_v_1(type_c2ats_PangoAttribute, l2) | ptr l1, ptr l2) -> void = "mac#pango_attr_list_change"
fun fun_c2ats_pango_attr_list_splice: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoAttrList, l1), !ptr_v_1(type_c2ats_PangoAttrList, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#pango_attr_list_splice"
fun fun_c2ats_pango_attr_list_filter: {l1:addr} (!ptr_v_1(type_c2ats_PangoAttrList, l1) | ptr l1, type_c2ats_PangoAttrFilterFunc, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_PangoAttrList, l2) | ptr l2) = "mac#pango_attr_list_filter"
fun fun_c2ats_pango_attr_list_get_iterator: {l1:addr} (!ptr_v_1(type_c2ats_PangoAttrList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoAttrIterator, l2) | ptr l2) = "mac#pango_attr_list_get_iterator"
fun fun_c2ats_pango_attr_iterator_range: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoAttrIterator, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_attr_iterator_range"
fun fun_c2ats_pango_attr_iterator_next: {l1:addr} (!ptr_v_1(type_c2ats_PangoAttrIterator, l1) | ptr l1) -> type_c2ats_gboolean = "mac#pango_attr_iterator_next"
fun fun_c2ats_pango_attr_iterator_copy: {l1:addr} (!ptr_v_1(type_c2ats_PangoAttrIterator, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoAttrIterator, l2) | ptr l2) = "mac#pango_attr_iterator_copy"
fun fun_c2ats_pango_attr_iterator_destroy: {l1:addr} (!ptr_v_1(type_c2ats_PangoAttrIterator, l1) | ptr l1) -> void = "mac#pango_attr_iterator_destroy"
fun fun_c2ats_pango_attr_iterator_get: {l1:addr} (!ptr_v_1(type_c2ats_PangoAttrIterator, l1) | ptr l1, type_c2ats_PangoAttrType) -> [l2:addr] (ptr_v_1(type_c2ats_PangoAttribute, l2) | ptr l2) = "mac#pango_attr_iterator_get"
fun fun_c2ats_pango_attr_iterator_get_font: {l1,l2,l3,l3_1,l4,l4_1:addr} (!ptr_v_1(type_c2ats_PangoAttrIterator, l1), !ptr_v_1(type_c2ats_PangoFontDescription, l2), !ptr_v_2(type_c2ats_PangoLanguage, l3, l3_1), !ptr_v_2(type_c2ats_GSList, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#pango_attr_iterator_get_font"
fun fun_c2ats_pango_attr_iterator_get_attrs: {l1:addr} (!ptr_v_1(type_c2ats_PangoAttrIterator, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#pango_attr_iterator_get_attrs"
fun fun_c2ats_pango_parse_markup: {l1,l2,l2_1,l3,l3_1,l4,l5,l5_1:addr} (!ptr_v_1(char, l1), !ptr_v_2(type_c2ats_PangoAttrList, l2, l2_1), !ptr_v_2(char, l3, l3_1), !ptr_v_1(type_c2ats_gunichar, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, int, type_c2ats_gunichar, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#pango_parse_markup"
fun fun_c2ats_pango_markup_parser_new: (type_c2ats_gunichar) -> [l1:addr] (ptr_v_1(type_c2ats_GMarkupParseContext, l1) | ptr l1) = "mac#pango_markup_parser_new"
fun fun_c2ats_pango_markup_parser_finish: {l1,l2,l2_1,l3,l3_1,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GMarkupParseContext, l1), !ptr_v_2(type_c2ats_PangoAttrList, l2, l2_1), !ptr_v_2(char, l3, l3_1), !ptr_v_1(type_c2ats_gunichar, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#pango_markup_parser_finish"
// File: /usr/include/pango-1.0/pango/pango-item.h
abst@ype struct_c2ats__PangoAnalysis // FIXME! Forward declaration.
typedef type_c2ats_PangoAnalysis = struct_c2ats__PangoAnalysis
abst@ype struct_c2ats__PangoItem // FIXME! Forward declaration.
typedef type_c2ats_PangoItem = struct_c2ats__PangoItem
typedef struct_c2ats__PangoAnalysis = $extype_struct"struct _PangoAnalysis" of {
  shape_engine = ptr (* cPtr0(type_c2ats_PangoEngineShape) *),
  lang_engine = ptr (* cPtr0(type_c2ats_PangoEngineLang) *),
  font = ptr (* cPtr0(type_c2ats_PangoFont) *),
  level = type_c2ats_guint8,
  gravity = type_c2ats_guint8,
  flags = type_c2ats_guint8,
  script = type_c2ats_guint8,
  language = ptr (* cPtr0(type_c2ats_PangoLanguage) *),
  extra_attrs = ptr (* cPtr0(type_c2ats_GSList) *)
}
typedef struct_c2ats__PangoItem = $extype_struct"struct _PangoItem" of {
  offset = type_c2ats_gint,
  length = type_c2ats_gint,
  num_chars = type_c2ats_gint,
  analysis = type_c2ats_PangoAnalysis
}
fun fun_c2ats_pango_item_get_type: () -> type_c2ats_GType = "mac#pango_item_get_type"
fun fun_c2ats_pango_item_new: () -> [l1:addr] (ptr_v_1(type_c2ats_PangoItem, l1) | ptr l1) = "mac#pango_item_new"
fun fun_c2ats_pango_item_copy: {l1:addr} (!ptr_v_1(type_c2ats_PangoItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoItem, l2) | ptr l2) = "mac#pango_item_copy"
fun fun_c2ats_pango_item_free: {l1:addr} (!ptr_v_1(type_c2ats_PangoItem, l1) | ptr l1) -> void = "mac#pango_item_free"
fun fun_c2ats_pango_item_split: {l1:addr} (!ptr_v_1(type_c2ats_PangoItem, l1) | ptr l1, int, int) -> [l2:addr] (ptr_v_1(type_c2ats_PangoItem, l2) | ptr l2) = "mac#pango_item_split"
// File: /usr/include/pango-1.0/pango/pango-break.h
typedef struct_c2ats__PangoLogAttr = $extype_struct"struct _PangoLogAttr" of {
  is_line_break = type_c2ats_guint,
  is_mandatory_break = type_c2ats_guint,
  is_char_break = type_c2ats_guint,
  is_white = type_c2ats_guint,
  is_cursor_position = type_c2ats_guint,
  is_word_start = type_c2ats_guint,
  is_word_end = type_c2ats_guint,
  is_sentence_boundary = type_c2ats_guint,
  is_sentence_start = type_c2ats_guint,
  is_sentence_end = type_c2ats_guint,
  backspace_deletes_character = type_c2ats_guint,
  is_expandable_space = type_c2ats_guint,
  is_word_boundary = type_c2ats_guint
}
fun fun_c2ats_pango_break: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_PangoAnalysis, l2), !ptr_v_1(type_c2ats_PangoLogAttr, l3) | ptr l1, int, ptr l2, ptr l3, int) -> void = "mac#pango_break"
fun fun_c2ats_pango_find_paragraph_boundary: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#pango_find_paragraph_boundary"
fun fun_c2ats_pango_get_log_attrs: {l1,l2,l3:addr} (!ptr_v_1(char, l1), !ptr_v_1(type_c2ats_PangoLanguage, l2), !ptr_v_1(type_c2ats_PangoLogAttr, l3) | ptr l1, int, int, ptr l2, ptr l3, int) -> void = "mac#pango_get_log_attrs"
// File: /usr/include/pango-1.0/pango/pango-fontset.h
fun fun_c2ats_pango_fontset_get_type: () -> type_c2ats_GType = "mac#pango_fontset_get_type"
abst@ype struct_c2ats__PangoFontset // FIXME! Forward declaration.
typedef type_c2ats_PangoFontset = struct_c2ats__PangoFontset
typedef type_c2ats_PangoFontsetForeachFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoFontset, l1), !ptr_v_1(type_c2ats_PangoFont, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> type_c2ats_gboolean
fun fun_c2ats_pango_fontset_get_font: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontset, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFont, l2) | ptr l2) = "mac#pango_fontset_get_font"
fun fun_c2ats_pango_fontset_get_metrics: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontset, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontMetrics, l2) | ptr l2) = "mac#pango_fontset_get_metrics"
fun fun_c2ats_pango_fontset_foreach: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontset, l1) | ptr l1, type_c2ats_PangoFontsetForeachFunc, type_c2ats_gpointer) -> void = "mac#pango_fontset_foreach"
// File: /usr/include/pango-1.0/pango/pango-fontmap.h
abst@ype struct_c2ats__PangoContext // FIXME! Forward declaration.
typedef type_c2ats_PangoContext = struct_c2ats__PangoContext
fun fun_c2ats_pango_font_map_get_type: () -> type_c2ats_GType = "mac#pango_font_map_get_type"
fun fun_c2ats_pango_font_map_create_context: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontMap, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoContext, l2) | ptr l2) = "mac#pango_font_map_create_context"
fun fun_c2ats_pango_font_map_load_font: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoFontMap, l1), !ptr_v_1(type_c2ats_PangoContext, l2), !ptr_v_1(type_c2ats_PangoFontDescription, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_PangoFont, l4) | ptr l4) = "mac#pango_font_map_load_font"
fun fun_c2ats_pango_font_map_load_fontset: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_PangoFontMap, l1), !ptr_v_1(type_c2ats_PangoContext, l2), !ptr_v_1(type_c2ats_PangoFontDescription, l3), !ptr_v_1(type_c2ats_PangoLanguage, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_PangoFontset, l5) | ptr l5) = "mac#pango_font_map_load_fontset"
fun fun_c2ats_pango_font_map_list_families: {l1,l2,l2_1,l2_2,l3:addr} (!ptr_v_1(type_c2ats_PangoFontMap, l1), !ptr_v_3(type_c2ats_PangoFontFamily, l2, l2_1, l2_2), !ptr_v_1(int, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_font_map_list_families"
fun fun_c2ats_pango_font_map_get_serial: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontMap, l1) | ptr l1) -> type_c2ats_guint = "mac#pango_font_map_get_serial"
fun fun_c2ats_pango_font_map_changed: {l1:addr} (!ptr_v_1(type_c2ats_PangoFontMap, l1) | ptr l1) -> void = "mac#pango_font_map_changed"
// File: /usr/include/pango-1.0/pango/pango-context.h
abst@ype struct_c2ats__PangoContextClass // FIXME! Forward declaration.
typedef type_c2ats_PangoContextClass = struct_c2ats__PangoContextClass
fun fun_c2ats_pango_context_get_type: () -> type_c2ats_GType = "mac#pango_context_get_type"
fun fun_c2ats_pango_context_new: () -> [l1:addr] (ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1) = "mac#pango_context_new"
fun fun_c2ats_pango_context_changed: {l1:addr} (!ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1) -> void = "mac#pango_context_changed"
fun fun_c2ats_pango_context_set_font_map: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoContext, l1), !ptr_v_1(type_c2ats_PangoFontMap, l2) | ptr l1, ptr l2) -> void = "mac#pango_context_set_font_map"
fun fun_c2ats_pango_context_get_font_map: {l1:addr} (!ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontMap, l2) | ptr l2) = "mac#pango_context_get_font_map"
fun fun_c2ats_pango_context_get_serial: {l1:addr} (!ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1) -> type_c2ats_guint = "mac#pango_context_get_serial"
fun fun_c2ats_pango_context_list_families: {l1,l2,l2_1,l2_2,l3:addr} (!ptr_v_1(type_c2ats_PangoContext, l1), !ptr_v_3(type_c2ats_PangoFontFamily, l2, l2_1, l2_2), !ptr_v_1(int, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_context_list_families"
fun fun_c2ats_pango_context_load_font: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoContext, l1), !ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_PangoFont, l3) | ptr l3) = "mac#pango_context_load_font"
fun fun_c2ats_pango_context_load_fontset: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoContext, l1), !ptr_v_1(type_c2ats_PangoFontDescription, l2), !ptr_v_1(type_c2ats_PangoLanguage, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_PangoFontset, l4) | ptr l4) = "mac#pango_context_load_fontset"
fun fun_c2ats_pango_context_get_metrics: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoContext, l1), !ptr_v_1(type_c2ats_PangoFontDescription, l2), !ptr_v_1(type_c2ats_PangoLanguage, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_PangoFontMetrics, l4) | ptr l4) = "mac#pango_context_get_metrics"
fun fun_c2ats_pango_context_set_font_description: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoContext, l1), !ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l1, ptr l2) -> void = "mac#pango_context_set_font_description"
fun fun_c2ats_pango_context_get_font_description: {l1:addr} (!ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l2) = "mac#pango_context_get_font_description"
fun fun_c2ats_pango_context_get_language: {l1:addr} (!ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLanguage, l2) | ptr l2) = "mac#pango_context_get_language"
fun fun_c2ats_pango_context_set_language: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoContext, l1), !ptr_v_1(type_c2ats_PangoLanguage, l2) | ptr l1, ptr l2) -> void = "mac#pango_context_set_language"
fun fun_c2ats_pango_context_set_base_dir: {l1:addr} (!ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1, type_c2ats_PangoDirection) -> void = "mac#pango_context_set_base_dir"
fun fun_c2ats_pango_context_get_base_dir: {l1:addr} (!ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1) -> type_c2ats_PangoDirection = "mac#pango_context_get_base_dir"
fun fun_c2ats_pango_context_set_base_gravity: {l1:addr} (!ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1, type_c2ats_PangoGravity) -> void = "mac#pango_context_set_base_gravity"
fun fun_c2ats_pango_context_get_base_gravity: {l1:addr} (!ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1) -> type_c2ats_PangoGravity = "mac#pango_context_get_base_gravity"
fun fun_c2ats_pango_context_get_gravity: {l1:addr} (!ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1) -> type_c2ats_PangoGravity = "mac#pango_context_get_gravity"
fun fun_c2ats_pango_context_set_gravity_hint: {l1:addr} (!ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1, type_c2ats_PangoGravityHint) -> void = "mac#pango_context_set_gravity_hint"
fun fun_c2ats_pango_context_get_gravity_hint: {l1:addr} (!ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1) -> type_c2ats_PangoGravityHint = "mac#pango_context_get_gravity_hint"
fun fun_c2ats_pango_context_set_matrix: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoContext, l1), !ptr_v_1(type_c2ats_PangoMatrix, l2) | ptr l1, ptr l2) -> void = "mac#pango_context_set_matrix"
fun fun_c2ats_pango_context_get_matrix: {l1:addr} (!ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoMatrix, l2) | ptr l2) = "mac#pango_context_get_matrix"
fun fun_c2ats_pango_itemize: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_PangoContext, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_PangoAttrList, l3), !ptr_v_1(type_c2ats_PangoAttrIterator, l4) | ptr l1, ptr l2, int, int, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GList, l5) | ptr l5) = "mac#pango_itemize"
fun fun_c2ats_pango_itemize_with_base_dir: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_PangoContext, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_PangoAttrList, l3), !ptr_v_1(type_c2ats_PangoAttrIterator, l4) | ptr l1, type_c2ats_PangoDirection, ptr l2, int, int, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GList, l5) | ptr l5) = "mac#pango_itemize_with_base_dir"
// File: /usr/include/pango-1.0/pango/pango-glyph.h
abst@ype struct_c2ats__PangoGlyphGeometry // FIXME! Forward declaration.
typedef type_c2ats_PangoGlyphGeometry = struct_c2ats__PangoGlyphGeometry
abst@ype struct_c2ats__PangoGlyphVisAttr // FIXME! Forward declaration.
typedef type_c2ats_PangoGlyphVisAttr = struct_c2ats__PangoGlyphVisAttr
abst@ype struct_c2ats__PangoGlyphInfo // FIXME! Forward declaration.
typedef type_c2ats_PangoGlyphInfo = struct_c2ats__PangoGlyphInfo
abst@ype struct_c2ats__PangoGlyphString // FIXME! Forward declaration.
typedef type_c2ats_PangoGlyphString = struct_c2ats__PangoGlyphString
typedef type_c2ats_PangoGlyphUnit = type_c2ats_gint32
typedef struct_c2ats__PangoGlyphGeometry = $extype_struct"struct _PangoGlyphGeometry" of {
  width = type_c2ats_PangoGlyphUnit,
  x_offset = type_c2ats_PangoGlyphUnit,
  y_offset = type_c2ats_PangoGlyphUnit
}
typedef struct_c2ats__PangoGlyphVisAttr = $extype_struct"struct _PangoGlyphVisAttr" of {
  is_cluster_start = type_c2ats_guint
}
typedef struct_c2ats__PangoGlyphInfo = $extype_struct"struct _PangoGlyphInfo" of {
  glyph = type_c2ats_PangoGlyph,
  geometry = type_c2ats_PangoGlyphGeometry,
  attr = type_c2ats_PangoGlyphVisAttr
}
typedef struct_c2ats__PangoGlyphString = $extype_struct"struct _PangoGlyphString" of {
  num_glyphs = type_c2ats_gint,
  glyphs = ptr (* cPtr0(type_c2ats_PangoGlyphInfo) *),
  log_clusters = ptr (* cPtr0(type_c2ats_gint) *),
  space = type_c2ats_gint
}
fun fun_c2ats_pango_glyph_string_new: () -> [l1:addr] (ptr_v_1(type_c2ats_PangoGlyphString, l1) | ptr l1) = "mac#pango_glyph_string_new"
fun fun_c2ats_pango_glyph_string_set_size: {l1:addr} (!ptr_v_1(type_c2ats_PangoGlyphString, l1) | ptr l1, type_c2ats_gint) -> void = "mac#pango_glyph_string_set_size"
fun fun_c2ats_pango_glyph_string_get_type: () -> type_c2ats_GType = "mac#pango_glyph_string_get_type"
fun fun_c2ats_pango_glyph_string_copy: {l1:addr} (!ptr_v_1(type_c2ats_PangoGlyphString, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoGlyphString, l2) | ptr l2) = "mac#pango_glyph_string_copy"
fun fun_c2ats_pango_glyph_string_free: {l1:addr} (!ptr_v_1(type_c2ats_PangoGlyphString, l1) | ptr l1) -> void = "mac#pango_glyph_string_free"
fun fun_c2ats_pango_glyph_string_extents: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_PangoGlyphString, l1), !ptr_v_1(type_c2ats_PangoFont, l2), !ptr_v_1(type_c2ats_PangoRectangle, l3), !ptr_v_1(type_c2ats_PangoRectangle, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#pango_glyph_string_extents"
fun fun_c2ats_pango_glyph_string_get_width: {l1:addr} (!ptr_v_1(type_c2ats_PangoGlyphString, l1) | ptr l1) -> int = "mac#pango_glyph_string_get_width"
fun fun_c2ats_pango_glyph_string_extents_range: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_PangoGlyphString, l1), !ptr_v_1(type_c2ats_PangoFont, l2), !ptr_v_1(type_c2ats_PangoRectangle, l3), !ptr_v_1(type_c2ats_PangoRectangle, l4) | ptr l1, int, int, ptr l2, ptr l3, ptr l4) -> void = "mac#pango_glyph_string_extents_range"
fun fun_c2ats_pango_glyph_string_get_logical_widths: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoGlyphString, l1), !ptr_v_1(char, l2), !ptr_v_1(int, l3) | ptr l1, ptr l2, int, int, ptr l3) -> void = "mac#pango_glyph_string_get_logical_widths"
fun fun_c2ats_pango_glyph_string_index_to_x: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_PangoGlyphString, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_PangoAnalysis, l3), !ptr_v_1(int, l4) | ptr l1, ptr l2, int, ptr l3, int, type_c2ats_gboolean, ptr l4) -> void = "mac#pango_glyph_string_index_to_x"
fun fun_c2ats_pango_glyph_string_x_to_index: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_PangoGlyphString, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_PangoAnalysis, l3), !ptr_v_1(int, l4), !ptr_v_1(int, l5) | ptr l1, ptr l2, int, ptr l3, int, ptr l4, ptr l5) -> void = "mac#pango_glyph_string_x_to_index"
fun fun_c2ats_pango_shape: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_PangoAnalysis, l2), !ptr_v_1(type_c2ats_PangoGlyphString, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#pango_shape"
fun fun_c2ats_pango_shape_full: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_PangoAnalysis, l3), !ptr_v_1(type_c2ats_PangoGlyphString, l4) | ptr l1, type_c2ats_gint, ptr l2, type_c2ats_gint, ptr l3, ptr l4) -> void = "mac#pango_shape_full"
fun fun_c2ats_pango_reorder_items: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#pango_reorder_items"
// File: /usr/include/pango-1.0/pango/pango-enum-types.h
fun fun_c2ats_pango_attr_type_get_type: () -> type_c2ats_GType = "mac#pango_attr_type_get_type"
fun fun_c2ats_pango_underline_get_type: () -> type_c2ats_GType = "mac#pango_underline_get_type"
fun fun_c2ats_pango_bidi_type_get_type: () -> type_c2ats_GType = "mac#pango_bidi_type_get_type"
fun fun_c2ats_pango_direction_get_type: () -> type_c2ats_GType = "mac#pango_direction_get_type"
fun fun_c2ats_pango_coverage_level_get_type: () -> type_c2ats_GType = "mac#pango_coverage_level_get_type"
fun fun_c2ats_pango_style_get_type: () -> type_c2ats_GType = "mac#pango_style_get_type"
fun fun_c2ats_pango_variant_get_type: () -> type_c2ats_GType = "mac#pango_variant_get_type"
fun fun_c2ats_pango_weight_get_type: () -> type_c2ats_GType = "mac#pango_weight_get_type"
fun fun_c2ats_pango_stretch_get_type: () -> type_c2ats_GType = "mac#pango_stretch_get_type"
fun fun_c2ats_pango_font_mask_get_type: () -> type_c2ats_GType = "mac#pango_font_mask_get_type"
fun fun_c2ats_pango_gravity_get_type: () -> type_c2ats_GType = "mac#pango_gravity_get_type"
fun fun_c2ats_pango_gravity_hint_get_type: () -> type_c2ats_GType = "mac#pango_gravity_hint_get_type"
fun fun_c2ats_pango_alignment_get_type: () -> type_c2ats_GType = "mac#pango_alignment_get_type"
fun fun_c2ats_pango_wrap_mode_get_type: () -> type_c2ats_GType = "mac#pango_wrap_mode_get_type"
fun fun_c2ats_pango_ellipsize_mode_get_type: () -> type_c2ats_GType = "mac#pango_ellipsize_mode_get_type"
fun fun_c2ats_pango_render_part_get_type: () -> type_c2ats_GType = "mac#pango_render_part_get_type"
fun fun_c2ats_pango_script_get_type: () -> type_c2ats_GType = "mac#pango_script_get_type"
fun fun_c2ats_pango_tab_align_get_type: () -> type_c2ats_GType = "mac#pango_tab_align_get_type"
// File: /usr/include/pango-1.0/pango/pango-glyph-item.h
abst@ype struct_c2ats__PangoGlyphItem // FIXME! Forward declaration.
typedef type_c2ats_PangoGlyphItem = struct_c2ats__PangoGlyphItem
typedef struct_c2ats__PangoGlyphItem = $extype_struct"struct _PangoGlyphItem" of {
  item = ptr (* cPtr0(type_c2ats_PangoItem) *),
  glyphs = ptr (* cPtr0(type_c2ats_PangoGlyphString) *)
}
fun fun_c2ats_pango_glyph_item_get_type: () -> type_c2ats_GType = "mac#pango_glyph_item_get_type"
fun fun_c2ats_pango_glyph_item_split: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoGlyphItem, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, int) -> [l3:addr] (ptr_v_1(type_c2ats_PangoGlyphItem, l3) | ptr l3) = "mac#pango_glyph_item_split"
fun fun_c2ats_pango_glyph_item_copy: {l1:addr} (!ptr_v_1(type_c2ats_PangoGlyphItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoGlyphItem, l2) | ptr l2) = "mac#pango_glyph_item_copy"
fun fun_c2ats_pango_glyph_item_free: {l1:addr} (!ptr_v_1(type_c2ats_PangoGlyphItem, l1) | ptr l1) -> void = "mac#pango_glyph_item_free"
fun fun_c2ats_pango_glyph_item_apply_attrs: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoGlyphItem, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_PangoAttrList, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GSList, l4) | ptr l4) = "mac#pango_glyph_item_apply_attrs"
fun fun_c2ats_pango_glyph_item_letter_space: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoGlyphItem, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_PangoLogAttr, l3) | ptr l1, ptr l2, ptr l3, int) -> void = "mac#pango_glyph_item_letter_space"
fun fun_c2ats_pango_glyph_item_get_logical_widths: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoGlyphItem, l1), !ptr_v_1(char, l2), !ptr_v_1(int, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_glyph_item_get_logical_widths"
abst@ype struct_c2ats__PangoGlyphItemIter // FIXME! Forward declaration.
typedef type_c2ats_PangoGlyphItemIter = struct_c2ats__PangoGlyphItemIter
typedef struct_c2ats__PangoGlyphItemIter = $extype_struct"struct _PangoGlyphItemIter" of {
  glyph_item = ptr (* cPtr0(type_c2ats_PangoGlyphItem) *),
  text = ptr (* cPtr0(type_c2ats_gchar) *),
  start_glyph = int,
  start_index = int,
  start_char = int,
  end_glyph = int,
  end_index = int,
  end_char = int
}
fun fun_c2ats_pango_glyph_item_iter_get_type: () -> type_c2ats_GType = "mac#pango_glyph_item_iter_get_type"
fun fun_c2ats_pango_glyph_item_iter_copy: {l1:addr} (!ptr_v_1(type_c2ats_PangoGlyphItemIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoGlyphItemIter, l2) | ptr l2) = "mac#pango_glyph_item_iter_copy"
fun fun_c2ats_pango_glyph_item_iter_free: {l1:addr} (!ptr_v_1(type_c2ats_PangoGlyphItemIter, l1) | ptr l1) -> void = "mac#pango_glyph_item_iter_free"
fun fun_c2ats_pango_glyph_item_iter_init_start: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoGlyphItemIter, l1), !ptr_v_1(type_c2ats_PangoGlyphItem, l2), !ptr_v_1(char, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#pango_glyph_item_iter_init_start"
fun fun_c2ats_pango_glyph_item_iter_init_end: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoGlyphItemIter, l1), !ptr_v_1(type_c2ats_PangoGlyphItem, l2), !ptr_v_1(char, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#pango_glyph_item_iter_init_end"
fun fun_c2ats_pango_glyph_item_iter_next_cluster: {l1:addr} (!ptr_v_1(type_c2ats_PangoGlyphItemIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#pango_glyph_item_iter_next_cluster"
fun fun_c2ats_pango_glyph_item_iter_prev_cluster: {l1:addr} (!ptr_v_1(type_c2ats_PangoGlyphItemIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#pango_glyph_item_iter_prev_cluster"
// File: /usr/include/pango-1.0/pango/pango-tabs.h
abst@ype struct_c2ats__PangoTabArray // FIXME! Forward declaration.
typedef type_c2ats_PangoTabArray = struct_c2ats__PangoTabArray
typedef type_c2ats_PangoTabAlign = int
#define enum_c2ats_PANGO_TAB_LEFT 0
fun fun_c2ats_pango_tab_array_new: (type_c2ats_gint, type_c2ats_gboolean) -> [l1:addr] (ptr_v_1(type_c2ats_PangoTabArray, l1) | ptr l1) = "mac#pango_tab_array_new"
fun fun_c2ats_pango_tab_array_new_with_positions: (type_c2ats_gint, type_c2ats_gboolean, type_c2ats_PangoTabAlign, type_c2ats_gint) -> [l1:addr] (ptr_v_1(type_c2ats_PangoTabArray, l1) | ptr l1) = "mac#pango_tab_array_new_with_positions"
fun fun_c2ats_pango_tab_array_get_type: () -> type_c2ats_GType = "mac#pango_tab_array_get_type"
fun fun_c2ats_pango_tab_array_copy: {l1:addr} (!ptr_v_1(type_c2ats_PangoTabArray, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoTabArray, l2) | ptr l2) = "mac#pango_tab_array_copy"
fun fun_c2ats_pango_tab_array_free: {l1:addr} (!ptr_v_1(type_c2ats_PangoTabArray, l1) | ptr l1) -> void = "mac#pango_tab_array_free"
fun fun_c2ats_pango_tab_array_get_size: {l1:addr} (!ptr_v_1(type_c2ats_PangoTabArray, l1) | ptr l1) -> type_c2ats_gint = "mac#pango_tab_array_get_size"
fun fun_c2ats_pango_tab_array_resize: {l1:addr} (!ptr_v_1(type_c2ats_PangoTabArray, l1) | ptr l1, type_c2ats_gint) -> void = "mac#pango_tab_array_resize"
fun fun_c2ats_pango_tab_array_set_tab: {l1:addr} (!ptr_v_1(type_c2ats_PangoTabArray, l1) | ptr l1, type_c2ats_gint, type_c2ats_PangoTabAlign, type_c2ats_gint) -> void = "mac#pango_tab_array_set_tab"
fun fun_c2ats_pango_tab_array_get_tab: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoTabArray, l1), !ptr_v_1(type_c2ats_PangoTabAlign, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#pango_tab_array_get_tab"
fun fun_c2ats_pango_tab_array_get_tabs: {l1,l2,l2_1,l3,l3_1:addr} (!ptr_v_1(type_c2ats_PangoTabArray, l1), !ptr_v_2(type_c2ats_PangoTabAlign, l2, l2_1), !ptr_v_2(type_c2ats_gint, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_tab_array_get_tabs"
fun fun_c2ats_pango_tab_array_get_positions_in_pixels: {l1:addr} (!ptr_v_1(type_c2ats_PangoTabArray, l1) | ptr l1) -> type_c2ats_gboolean = "mac#pango_tab_array_get_positions_in_pixels"
// File: /usr/include/pango-1.0/pango/pango-layout.h
abst@ype struct_c2ats__PangoLayout // FIXME! Forward declaration.
typedef type_c2ats_PangoLayout = struct_c2ats__PangoLayout
abst@ype struct_c2ats__PangoLayoutClass // FIXME! Forward declaration.
typedef type_c2ats_PangoLayoutClass = struct_c2ats__PangoLayoutClass
abst@ype struct_c2ats__PangoLayoutLine // FIXME! Forward declaration.
typedef type_c2ats_PangoLayoutLine = struct_c2ats__PangoLayoutLine
typedef type_c2ats_PangoLayoutRun = type_c2ats_PangoGlyphItem
typedef type_c2ats_PangoAlignment = int
#define enum_c2ats_PANGO_ALIGN_LEFT 0
#define enum_c2ats_PANGO_ALIGN_CENTER 1
#define enum_c2ats_PANGO_ALIGN_RIGHT 2
typedef type_c2ats_PangoWrapMode = int
#define enum_c2ats_PANGO_WRAP_WORD 0
#define enum_c2ats_PANGO_WRAP_CHAR 1
#define enum_c2ats_PANGO_WRAP_WORD_CHAR 2
typedef type_c2ats_PangoEllipsizeMode = int
#define enum_c2ats_PANGO_ELLIPSIZE_NONE 0
#define enum_c2ats_PANGO_ELLIPSIZE_START 1
#define enum_c2ats_PANGO_ELLIPSIZE_MIDDLE 2
#define enum_c2ats_PANGO_ELLIPSIZE_END 3
typedef struct_c2ats__PangoLayoutLine = $extype_struct"struct _PangoLayoutLine" of {
  layout = ptr (* cPtr0(type_c2ats_PangoLayout) *),
  start_index = type_c2ats_gint,
  length = type_c2ats_gint,
  runs = ptr (* cPtr0(type_c2ats_GSList) *),
  is_paragraph_start = type_c2ats_guint,
  resolved_dir = type_c2ats_guint
}
fun fun_c2ats_pango_layout_get_type: () -> type_c2ats_GType = "mac#pango_layout_get_type"
fun fun_c2ats_pango_layout_new: {l1:addr} (!ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayout, l2) | ptr l2) = "mac#pango_layout_new"
fun fun_c2ats_pango_layout_copy: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayout, l2) | ptr l2) = "mac#pango_layout_copy"
fun fun_c2ats_pango_layout_get_context: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoContext, l2) | ptr l2) = "mac#pango_layout_get_context"
fun fun_c2ats_pango_layout_set_attributes: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1), !ptr_v_1(type_c2ats_PangoAttrList, l2) | ptr l1, ptr l2) -> void = "mac#pango_layout_set_attributes"
fun fun_c2ats_pango_layout_get_attributes: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoAttrList, l2) | ptr l2) = "mac#pango_layout_get_attributes"
fun fun_c2ats_pango_layout_set_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, int) -> void = "mac#pango_layout_set_text"
fun fun_c2ats_pango_layout_get_text: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#pango_layout_get_text"
fun fun_c2ats_pango_layout_get_character_count: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> type_c2ats_gint = "mac#pango_layout_get_character_count"
fun fun_c2ats_pango_layout_set_markup: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, int) -> void = "mac#pango_layout_set_markup"
fun fun_c2ats_pango_layout_set_markup_with_accel: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_gunichar, l3) | ptr l1, ptr l2, int, type_c2ats_gunichar, ptr l3) -> void = "mac#pango_layout_set_markup_with_accel"
fun fun_c2ats_pango_layout_set_font_description: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1), !ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l1, ptr l2) -> void = "mac#pango_layout_set_font_description"
fun fun_c2ats_pango_layout_get_font_description: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l2) = "mac#pango_layout_get_font_description"
fun fun_c2ats_pango_layout_set_width: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1, int) -> void = "mac#pango_layout_set_width"
fun fun_c2ats_pango_layout_get_width: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> int = "mac#pango_layout_get_width"
fun fun_c2ats_pango_layout_set_height: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1, int) -> void = "mac#pango_layout_set_height"
fun fun_c2ats_pango_layout_get_height: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> int = "mac#pango_layout_get_height"
fun fun_c2ats_pango_layout_set_wrap: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1, type_c2ats_PangoWrapMode) -> void = "mac#pango_layout_set_wrap"
fun fun_c2ats_pango_layout_get_wrap: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> type_c2ats_PangoWrapMode = "mac#pango_layout_get_wrap"
fun fun_c2ats_pango_layout_is_wrapped: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> type_c2ats_gboolean = "mac#pango_layout_is_wrapped"
fun fun_c2ats_pango_layout_set_indent: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1, int) -> void = "mac#pango_layout_set_indent"
fun fun_c2ats_pango_layout_get_indent: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> int = "mac#pango_layout_get_indent"
fun fun_c2ats_pango_layout_set_spacing: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1, int) -> void = "mac#pango_layout_set_spacing"
fun fun_c2ats_pango_layout_get_spacing: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> int = "mac#pango_layout_get_spacing"
fun fun_c2ats_pango_layout_set_justify: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#pango_layout_set_justify"
fun fun_c2ats_pango_layout_get_justify: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> type_c2ats_gboolean = "mac#pango_layout_get_justify"
fun fun_c2ats_pango_layout_set_auto_dir: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#pango_layout_set_auto_dir"
fun fun_c2ats_pango_layout_get_auto_dir: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> type_c2ats_gboolean = "mac#pango_layout_get_auto_dir"
fun fun_c2ats_pango_layout_set_alignment: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1, type_c2ats_PangoAlignment) -> void = "mac#pango_layout_set_alignment"
fun fun_c2ats_pango_layout_get_alignment: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> type_c2ats_PangoAlignment = "mac#pango_layout_get_alignment"
fun fun_c2ats_pango_layout_set_tabs: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1), !ptr_v_1(type_c2ats_PangoTabArray, l2) | ptr l1, ptr l2) -> void = "mac#pango_layout_set_tabs"
fun fun_c2ats_pango_layout_get_tabs: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoTabArray, l2) | ptr l2) = "mac#pango_layout_get_tabs"
fun fun_c2ats_pango_layout_set_single_paragraph_mode: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#pango_layout_set_single_paragraph_mode"
fun fun_c2ats_pango_layout_get_single_paragraph_mode: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> type_c2ats_gboolean = "mac#pango_layout_get_single_paragraph_mode"
fun fun_c2ats_pango_layout_set_ellipsize: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1, type_c2ats_PangoEllipsizeMode) -> void = "mac#pango_layout_set_ellipsize"
fun fun_c2ats_pango_layout_get_ellipsize: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> type_c2ats_PangoEllipsizeMode = "mac#pango_layout_get_ellipsize"
fun fun_c2ats_pango_layout_is_ellipsized: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> type_c2ats_gboolean = "mac#pango_layout_is_ellipsized"
fun fun_c2ats_pango_layout_get_unknown_glyphs_count: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> int = "mac#pango_layout_get_unknown_glyphs_count"
fun fun_c2ats_pango_layout_context_changed: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> void = "mac#pango_layout_context_changed"
fun fun_c2ats_pango_layout_get_serial: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> type_c2ats_guint = "mac#pango_layout_get_serial"
fun fun_c2ats_pango_layout_get_log_attrs: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1), !ptr_v_2(type_c2ats_PangoLogAttr, l2, l2_1), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_layout_get_log_attrs"
fun fun_c2ats_pango_layout_get_log_attrs_readonly: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_PangoLogAttr, l3) | ptr l3) = "mac#pango_layout_get_log_attrs_readonly"
fun fun_c2ats_pango_layout_index_to_pos: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1), !ptr_v_1(type_c2ats_PangoRectangle, l2) | ptr l1, int, ptr l2) -> void = "mac#pango_layout_index_to_pos"
fun fun_c2ats_pango_layout_index_to_line_x: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1), !ptr_v_1(int, l2), !ptr_v_1(int, l3) | ptr l1, int, type_c2ats_gboolean, ptr l2, ptr l3) -> void = "mac#pango_layout_index_to_line_x"
fun fun_c2ats_pango_layout_get_cursor_pos: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1), !ptr_v_1(type_c2ats_PangoRectangle, l2), !ptr_v_1(type_c2ats_PangoRectangle, l3) | ptr l1, int, ptr l2, ptr l3) -> void = "mac#pango_layout_get_cursor_pos"
fun fun_c2ats_pango_layout_move_cursor_visually: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1), !ptr_v_1(int, l2), !ptr_v_1(int, l3) | ptr l1, type_c2ats_gboolean, int, int, int, ptr l2, ptr l3) -> void = "mac#pango_layout_move_cursor_visually"
fun fun_c2ats_pango_layout_xy_to_index: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1), !ptr_v_1(int, l2), !ptr_v_1(int, l3) | ptr l1, int, int, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#pango_layout_xy_to_index"
fun fun_c2ats_pango_layout_get_extents: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1), !ptr_v_1(type_c2ats_PangoRectangle, l2), !ptr_v_1(type_c2ats_PangoRectangle, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_layout_get_extents"
fun fun_c2ats_pango_layout_get_pixel_extents: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1), !ptr_v_1(type_c2ats_PangoRectangle, l2), !ptr_v_1(type_c2ats_PangoRectangle, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_layout_get_pixel_extents"
fun fun_c2ats_pango_layout_get_size: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1), !ptr_v_1(int, l2), !ptr_v_1(int, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_layout_get_size"
fun fun_c2ats_pango_layout_get_pixel_size: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1), !ptr_v_1(int, l2), !ptr_v_1(int, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_layout_get_pixel_size"
fun fun_c2ats_pango_layout_get_baseline: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> int = "mac#pango_layout_get_baseline"
fun fun_c2ats_pango_layout_get_line_count: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> int = "mac#pango_layout_get_line_count"
fun fun_c2ats_pango_layout_get_line: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1, int) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayoutLine, l2) | ptr l2) = "mac#pango_layout_get_line"
fun fun_c2ats_pango_layout_get_line_readonly: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1, int) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayoutLine, l2) | ptr l2) = "mac#pango_layout_get_line_readonly"
fun fun_c2ats_pango_layout_get_lines: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#pango_layout_get_lines"
fun fun_c2ats_pango_layout_get_lines_readonly: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#pango_layout_get_lines_readonly"
fun fun_c2ats_pango_layout_line_get_type: () -> type_c2ats_GType = "mac#pango_layout_line_get_type"
fun fun_c2ats_pango_layout_line_ref: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayoutLine, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayoutLine, l2) | ptr l2) = "mac#pango_layout_line_ref"
fun fun_c2ats_pango_layout_line_unref: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayoutLine, l1) | ptr l1) -> void = "mac#pango_layout_line_unref"
fun fun_c2ats_pango_layout_line_x_to_index: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoLayoutLine, l1), !ptr_v_1(int, l2), !ptr_v_1(int, l3) | ptr l1, int, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#pango_layout_line_x_to_index"
fun fun_c2ats_pango_layout_line_index_to_x: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoLayoutLine, l1), !ptr_v_1(int, l2) | ptr l1, int, type_c2ats_gboolean, ptr l2) -> void = "mac#pango_layout_line_index_to_x"
fun fun_c2ats_pango_layout_line_get_x_ranges: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_PangoLayoutLine, l1), !ptr_v_2(int, l2, l2_1), !ptr_v_1(int, l3) | ptr l1, int, int, ptr l2, ptr l3) -> void = "mac#pango_layout_line_get_x_ranges"
fun fun_c2ats_pango_layout_line_get_extents: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoLayoutLine, l1), !ptr_v_1(type_c2ats_PangoRectangle, l2), !ptr_v_1(type_c2ats_PangoRectangle, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_layout_line_get_extents"
fun fun_c2ats_pango_layout_line_get_pixel_extents: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoLayoutLine, l1), !ptr_v_1(type_c2ats_PangoRectangle, l2), !ptr_v_1(type_c2ats_PangoRectangle, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_layout_line_get_pixel_extents"
abst@ype struct_c2ats__PangoLayoutIter // FIXME! Forward declaration.
typedef type_c2ats_PangoLayoutIter = struct_c2ats__PangoLayoutIter
fun fun_c2ats_pango_layout_iter_get_type: () -> type_c2ats_GType = "mac#pango_layout_iter_get_type"
fun fun_c2ats_pango_layout_get_iter: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayoutIter, l2) | ptr l2) = "mac#pango_layout_get_iter"
fun fun_c2ats_pango_layout_iter_copy: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayoutIter, l2) | ptr l2) = "mac#pango_layout_iter_copy"
fun fun_c2ats_pango_layout_iter_free: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1) | ptr l1) -> void = "mac#pango_layout_iter_free"
fun fun_c2ats_pango_layout_iter_get_index: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1) | ptr l1) -> int = "mac#pango_layout_iter_get_index"
fun fun_c2ats_pango_layout_iter_get_run: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayoutRun, l2) | ptr l2) = "mac#pango_layout_iter_get_run"
fun fun_c2ats_pango_layout_iter_get_run_readonly: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayoutRun, l2) | ptr l2) = "mac#pango_layout_iter_get_run_readonly"
fun fun_c2ats_pango_layout_iter_get_line: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayoutLine, l2) | ptr l2) = "mac#pango_layout_iter_get_line"
fun fun_c2ats_pango_layout_iter_get_line_readonly: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayoutLine, l2) | ptr l2) = "mac#pango_layout_iter_get_line_readonly"
fun fun_c2ats_pango_layout_iter_at_last_line: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#pango_layout_iter_at_last_line"
fun fun_c2ats_pango_layout_iter_get_layout: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayout, l2) | ptr l2) = "mac#pango_layout_iter_get_layout"
fun fun_c2ats_pango_layout_iter_next_char: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#pango_layout_iter_next_char"
fun fun_c2ats_pango_layout_iter_next_cluster: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#pango_layout_iter_next_cluster"
fun fun_c2ats_pango_layout_iter_next_run: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#pango_layout_iter_next_run"
fun fun_c2ats_pango_layout_iter_next_line: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#pango_layout_iter_next_line"
fun fun_c2ats_pango_layout_iter_get_char_extents: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1), !ptr_v_1(type_c2ats_PangoRectangle, l2) | ptr l1, ptr l2) -> void = "mac#pango_layout_iter_get_char_extents"
fun fun_c2ats_pango_layout_iter_get_cluster_extents: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1), !ptr_v_1(type_c2ats_PangoRectangle, l2), !ptr_v_1(type_c2ats_PangoRectangle, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_layout_iter_get_cluster_extents"
fun fun_c2ats_pango_layout_iter_get_run_extents: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1), !ptr_v_1(type_c2ats_PangoRectangle, l2), !ptr_v_1(type_c2ats_PangoRectangle, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_layout_iter_get_run_extents"
fun fun_c2ats_pango_layout_iter_get_line_extents: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1), !ptr_v_1(type_c2ats_PangoRectangle, l2), !ptr_v_1(type_c2ats_PangoRectangle, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_layout_iter_get_line_extents"
fun fun_c2ats_pango_layout_iter_get_line_yrange: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1), !ptr_v_1(int, l2), !ptr_v_1(int, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_layout_iter_get_line_yrange"
fun fun_c2ats_pango_layout_iter_get_layout_extents: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1), !ptr_v_1(type_c2ats_PangoRectangle, l2), !ptr_v_1(type_c2ats_PangoRectangle, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_layout_iter_get_layout_extents"
fun fun_c2ats_pango_layout_iter_get_baseline: {l1:addr} (!ptr_v_1(type_c2ats_PangoLayoutIter, l1) | ptr l1) -> int = "mac#pango_layout_iter_get_baseline"
// File: /usr/include/pango-1.0/pango/pango-renderer.h
abst@ype struct_c2ats__PangoRenderer // FIXME! Forward declaration.
typedef type_c2ats_PangoRenderer = struct_c2ats__PangoRenderer
abst@ype struct_c2ats__PangoRendererClass // FIXME! Forward declaration.
typedef type_c2ats_PangoRendererClass = struct_c2ats__PangoRendererClass
abst@ype struct_c2ats__PangoRendererPrivate // FIXME! Forward declaration.
typedef type_c2ats_PangoRendererPrivate = struct_c2ats__PangoRendererPrivate
typedef type_c2ats_PangoRenderPart = int
#define enum_c2ats_PANGO_RENDER_PART_FOREGROUND 0
#define enum_c2ats_PANGO_RENDER_PART_BACKGROUND 1
#define enum_c2ats_PANGO_RENDER_PART_UNDERLINE 2
#define enum_c2ats_PANGO_RENDER_PART_STRIKETHROUGH 3
typedef struct_c2ats__PangoRenderer = $extype_struct"struct _PangoRenderer" of {
  parent_instance = type_c2ats_GObject,
  underline = type_c2ats_PangoUnderline,
  strikethrough = type_c2ats_gboolean,
  active_count = int,
  matrix = ptr (* cPtr0(type_c2ats_PangoMatrix) *),
  priv = ptr (* cPtr0(type_c2ats_PangoRendererPrivate) *)
}
typedef struct_c2ats__PangoRendererClass = $extype_struct"struct _PangoRendererClass" of {
  parent_class = type_c2ats_GObjectClass,
  draw_glyphs = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1), !ptr_v_1(type_c2ats_PangoFont, l2), !ptr_v_1(type_c2ats_PangoGlyphString, l3) | ptr l1, ptr l2, ptr l3, int, int) -> void,
  draw_rectangle = {l1:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1) | ptr l1, type_c2ats_PangoRenderPart, int, int, int, int) -> void,
  draw_error_underline = {l1:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1) | ptr l1, int, int, int, int) -> void,
  draw_shape = {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1), !ptr_v_1(type_c2ats_PangoAttrShape, l2) | ptr l1, ptr l2, int, int) -> void,
  draw_trapezoid = {l1:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1) | ptr l1, type_c2ats_PangoRenderPart, double, double, double, double, double, double) -> void,
  draw_glyph = {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1), !ptr_v_1(type_c2ats_PangoFont, l2) | ptr l1, ptr l2, type_c2ats_PangoGlyph, double, double) -> void,
  part_changed = {l1:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1) | ptr l1, type_c2ats_PangoRenderPart) -> void,
  prepare_run = {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1), !ptr_v_1(type_c2ats_PangoLayoutRun, l2) | ptr l1, ptr l2) -> void,
  draw_glyph_item = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_PangoGlyphItem, l3) | ptr l1, ptr l2, ptr l3, int, int) -> void,
  _pango_reserved2 = () -> void,
  _pango_reserved3 = () -> void,
  _pango_reserved4 = () -> void
}
fun fun_c2ats_pango_renderer_get_type: () -> type_c2ats_GType = "mac#pango_renderer_get_type"
fun fun_c2ats_pango_renderer_draw_layout: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1), !ptr_v_1(type_c2ats_PangoLayout, l2) | ptr l1, ptr l2, int, int) -> void = "mac#pango_renderer_draw_layout"
fun fun_c2ats_pango_renderer_draw_layout_line: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1), !ptr_v_1(type_c2ats_PangoLayoutLine, l2) | ptr l1, ptr l2, int, int) -> void = "mac#pango_renderer_draw_layout_line"
fun fun_c2ats_pango_renderer_draw_glyphs: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1), !ptr_v_1(type_c2ats_PangoFont, l2), !ptr_v_1(type_c2ats_PangoGlyphString, l3) | ptr l1, ptr l2, ptr l3, int, int) -> void = "mac#pango_renderer_draw_glyphs"
fun fun_c2ats_pango_renderer_draw_glyph_item: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_PangoGlyphItem, l3) | ptr l1, ptr l2, ptr l3, int, int) -> void = "mac#pango_renderer_draw_glyph_item"
fun fun_c2ats_pango_renderer_draw_rectangle: {l1:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1) | ptr l1, type_c2ats_PangoRenderPart, int, int, int, int) -> void = "mac#pango_renderer_draw_rectangle"
fun fun_c2ats_pango_renderer_draw_error_underline: {l1:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1) | ptr l1, int, int, int, int) -> void = "mac#pango_renderer_draw_error_underline"
fun fun_c2ats_pango_renderer_draw_trapezoid: {l1:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1) | ptr l1, type_c2ats_PangoRenderPart, double, double, double, double, double, double) -> void = "mac#pango_renderer_draw_trapezoid"
fun fun_c2ats_pango_renderer_draw_glyph: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1), !ptr_v_1(type_c2ats_PangoFont, l2) | ptr l1, ptr l2, type_c2ats_PangoGlyph, double, double) -> void = "mac#pango_renderer_draw_glyph"
fun fun_c2ats_pango_renderer_activate: {l1:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1) | ptr l1) -> void = "mac#pango_renderer_activate"
fun fun_c2ats_pango_renderer_deactivate: {l1:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1) | ptr l1) -> void = "mac#pango_renderer_deactivate"
fun fun_c2ats_pango_renderer_part_changed: {l1:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1) | ptr l1, type_c2ats_PangoRenderPart) -> void = "mac#pango_renderer_part_changed"
fun fun_c2ats_pango_renderer_set_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1), !ptr_v_1(type_c2ats_PangoColor, l2) | ptr l1, type_c2ats_PangoRenderPart, ptr l2) -> void = "mac#pango_renderer_set_color"
fun fun_c2ats_pango_renderer_get_color: {l1:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1) | ptr l1, type_c2ats_PangoRenderPart) -> [l2:addr] (ptr_v_1(type_c2ats_PangoColor, l2) | ptr l2) = "mac#pango_renderer_get_color"
fun fun_c2ats_pango_renderer_set_alpha: {l1:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1) | ptr l1, type_c2ats_PangoRenderPart, type_c2ats_guint16) -> void = "mac#pango_renderer_set_alpha"
fun fun_c2ats_pango_renderer_get_alpha: {l1:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1) | ptr l1, type_c2ats_PangoRenderPart) -> type_c2ats_guint16 = "mac#pango_renderer_get_alpha"
fun fun_c2ats_pango_renderer_set_matrix: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1), !ptr_v_1(type_c2ats_PangoMatrix, l2) | ptr l1, ptr l2) -> void = "mac#pango_renderer_set_matrix"
fun fun_c2ats_pango_renderer_get_matrix: {l1:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoMatrix, l2) | ptr l2) = "mac#pango_renderer_get_matrix"
fun fun_c2ats_pango_renderer_get_layout: {l1:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayout, l2) | ptr l2) = "mac#pango_renderer_get_layout"
fun fun_c2ats_pango_renderer_get_layout_line: {l1:addr} (!ptr_v_1(type_c2ats_PangoRenderer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayoutLine, l2) | ptr l2) = "mac#pango_renderer_get_layout_line"
// File: /usr/include/stdio.h
abst@ype struct_c2ats__IO_FILE // FIXME! Forward declaration.
typedef type_c2ats_FILE = struct_c2ats__IO_FILE
typedef type_c2ats___FILE = struct_c2ats__IO_FILE
abst@ype type_c2ats__G_fpos_t // FIXME! Forward declaration.
typedef type_c2ats_fpos_t = type_c2ats__G_fpos_t
macdef takeout_c2ats_stdin = $extval([l1,l1_1:addr] (ptr_v_2(struct_c2ats__IO_FILE, l1, l1_1) | ptr l1), "&stdin")
praxi addback_c2ats_stdin {l1,l1_1:addr} (ptr_v_2(struct_c2ats__IO_FILE, l1, l1_1) | ptr l1): void
macdef takeout_c2ats_stdout = $extval([l1,l1_1:addr] (ptr_v_2(struct_c2ats__IO_FILE, l1, l1_1) | ptr l1), "&stdout")
praxi addback_c2ats_stdout {l1,l1_1:addr} (ptr_v_2(struct_c2ats__IO_FILE, l1, l1_1) | ptr l1): void
macdef takeout_c2ats_stderr = $extval([l1,l1_1:addr] (ptr_v_2(struct_c2ats__IO_FILE, l1, l1_1) | ptr l1), "&stderr")
praxi addback_c2ats_stderr {l1,l1_1:addr} (ptr_v_2(struct_c2ats__IO_FILE, l1, l1_1) | ptr l1): void
fun fun_c2ats_remove: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> int = "mac#remove"
fun fun_c2ats_rename: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> int = "mac#rename"
fun fun_c2ats_tmpfile: () -> [l1:addr] (ptr_v_1(type_c2ats_FILE, l1) | ptr l1) = "mac#tmpfile"
fun fun_c2ats_tmpnam: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#tmpnam"
fun fun_c2ats_tempnam: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(char, l3) | ptr l3) = "mac#tempnam"
fun fun_c2ats_fclose: {l1:addr} (!ptr_v_1(type_c2ats_FILE, l1) | ptr l1) -> int = "mac#fclose"
fun fun_c2ats_fflush: {l1:addr} (!ptr_v_1(type_c2ats_FILE, l1) | ptr l1) -> int = "mac#fflush"
fun fun_c2ats_fopen: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_FILE, l3) | ptr l3) = "mac#fopen"
fun fun_c2ats_freopen: {l1,l2,l3:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_FILE, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_FILE, l4) | ptr l4) = "mac#freopen"
fun fun_c2ats_fdopen: {l1:addr} (!ptr_v_1(char, l1) | int, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_FILE, l2) | ptr l2) = "mac#fdopen"
fun fun_c2ats_setbuf: {l1,l2:addr} (!ptr_v_1(type_c2ats_FILE, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#setbuf"
fun fun_c2ats_setvbuf: {l1,l2:addr} (!ptr_v_1(type_c2ats_FILE, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, int, type_c2ats_size_t) -> int = "mac#setvbuf"
fun fun_c2ats_fprintf: {l1,l2:addr} (!ptr_v_1(type_c2ats_FILE, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> int = "mac#fprintf"
fun fun_c2ats_printf: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> int = "mac#printf"
fun fun_c2ats_sprintf: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> int = "mac#sprintf"
fun fun_c2ats_vfprintf: {l1,l2:addr} (!ptr_v_1(type_c2ats_FILE, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, type_c2ats___gnuc_va_list) -> int = "mac#vfprintf"
fun fun_c2ats_vprintf: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, type_c2ats___gnuc_va_list) -> int = "mac#vprintf"
fun fun_c2ats_vsprintf: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, type_c2ats___gnuc_va_list) -> int = "mac#vsprintf"
fun fun_c2ats_snprintf: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2) | ptr l1, type_c2ats_size_t, ptr l2) -> int = "mac#snprintf"
fun fun_c2ats_vsnprintf: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2) | ptr l1, type_c2ats_size_t, ptr l2, type_c2ats___gnuc_va_list) -> int = "mac#vsnprintf"
fun fun_c2ats_fscanf: {l1,l2:addr} (!ptr_v_1(type_c2ats_FILE, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> int = "mac#fscanf"
fun fun_c2ats_scanf: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> int = "mac#scanf"
fun fun_c2ats_sscanf: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> int = "mac#sscanf"
fun fun_c2ats_vfscanf: {l1,l2:addr} (!ptr_v_1(type_c2ats_FILE, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, type_c2ats___gnuc_va_list) -> int = "mac#vfscanf"
fun fun_c2ats_vscanf: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, type_c2ats___gnuc_va_list) -> int = "mac#vscanf"
fun fun_c2ats_vsscanf: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, type_c2ats___gnuc_va_list) -> int = "mac#vsscanf"
fun fun_c2ats_fgetc: {l1:addr} (!ptr_v_1(type_c2ats_FILE, l1) | ptr l1) -> int = "mac#fgetc"
fun fun_c2ats_getc: {l1:addr} (!ptr_v_1(type_c2ats_FILE, l1) | ptr l1) -> int = "mac#getc"
fun fun_c2ats_getchar: () -> int = "mac#getchar"
fun fun_c2ats_fputc: {l1:addr} (!ptr_v_1(type_c2ats_FILE, l1) | int, ptr l1) -> int = "mac#fputc"
fun fun_c2ats_putc: {l1:addr} (!ptr_v_1(type_c2ats_FILE, l1) | int, ptr l1) -> int = "mac#putc"
fun fun_c2ats_putchar: (int) -> int = "mac#putchar"
fun fun_c2ats_getw: {l1:addr} (!ptr_v_1(type_c2ats_FILE, l1) | ptr l1) -> int = "mac#getw"
fun fun_c2ats_putw: {l1:addr} (!ptr_v_1(type_c2ats_FILE, l1) | int, ptr l1) -> int = "mac#putw"
fun fun_c2ats_fgets: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(type_c2ats_FILE, l2) | ptr l1, int, ptr l2) -> [l3:addr] (ptr_v_1(char, l3) | ptr l3) = "mac#fgets"
fun fun_c2ats_fputs: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(type_c2ats_FILE, l2) | ptr l1, ptr l2) -> int = "mac#fputs"
fun fun_c2ats_puts: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> int = "mac#puts"
fun fun_c2ats_ungetc: {l1:addr} (!ptr_v_1(type_c2ats_FILE, l1) | int, ptr l1) -> int = "mac#ungetc"
fun fun_c2ats_fread: {l1:addr} (!ptr_v_1(type_c2ats_FILE, l1) | ptr, type_c2ats_size_t, type_c2ats_size_t, ptr l1) -> type_c2ats_size_t = "mac#fread"
fun fun_c2ats_fwrite: {l1:addr} (!ptr_v_1(type_c2ats_FILE, l1) | ptr, type_c2ats_size_t, type_c2ats_size_t, ptr l1) -> type_c2ats_size_t = "mac#fwrite"
fun fun_c2ats_fseek: {l1:addr} (!ptr_v_1(type_c2ats_FILE, l1) | ptr l1, lint, int) -> int = "mac#fseek"
fun fun_c2ats_ftell: {l1:addr} (!ptr_v_1(type_c2ats_FILE, l1) | ptr l1) -> lint = "mac#ftell"
fun fun_c2ats_rewind: {l1:addr} (!ptr_v_1(type_c2ats_FILE, l1) | ptr l1) -> void = "mac#rewind"
fun fun_c2ats_fgetpos: {l1,l2:addr} (!ptr_v_1(type_c2ats_FILE, l1), !ptr_v_1(type_c2ats_fpos_t, l2) | ptr l1, ptr l2) -> int = "mac#fgetpos"
fun fun_c2ats_fsetpos: {l1,l2:addr} (!ptr_v_1(type_c2ats_FILE, l1), !ptr_v_1(type_c2ats_fpos_t, l2) | ptr l1, ptr l2) -> int = "mac#fsetpos"
fun fun_c2ats_clearerr: {l1:addr} (!ptr_v_1(type_c2ats_FILE, l1) | ptr l1) -> void = "mac#clearerr"
fun fun_c2ats_feof: {l1:addr} (!ptr_v_1(type_c2ats_FILE, l1) | ptr l1) -> int = "mac#feof"
fun fun_c2ats_ferror: {l1:addr} (!ptr_v_1(type_c2ats_FILE, l1) | ptr l1) -> int = "mac#ferror"
fun fun_c2ats_perror: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> void = "mac#perror"
fun fun_c2ats_fileno: {l1:addr} (!ptr_v_1(type_c2ats_FILE, l1) | ptr l1) -> int = "mac#fileno"
fun fun_c2ats_popen: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_FILE, l3) | ptr l3) = "mac#popen"
fun fun_c2ats_pclose: {l1:addr} (!ptr_v_1(type_c2ats_FILE, l1) | ptr l1) -> int = "mac#pclose"
// File: /usr/include/wchar.h
typedef union_c2ats_anon_129208 = $extype_struct"union { unsigned int __wch; char __wchb[4]; }" of {
  __wch = uint,
  __wchb = @[char][4]
}
typedef struct_c2ats_anon_129213 = $extype_struct"struct { int __count; union { unsigned int __wch; char __wchb[4]; } __value; }" of {
  __count = int,
  __value = union_c2ats_anon_129208
}
typedef type_c2ats___mbstate_t = struct_c2ats_anon_129213
// File: /usr/include/_G_config.h
typedef struct_c2ats_anon_129229 = $extype_struct"struct { __off_t __pos; __mbstate_t __state; }" of {
  __pos = type_c2ats___off_t,
  __state = type_c2ats___mbstate_t
}
typedef type_c2ats__G_fpos_t = struct_c2ats_anon_129229
typedef struct_c2ats_anon_129245 = $extype_struct"struct { __off64_t __pos; __mbstate_t __state; }" of {
  __pos = type_c2ats___off64_t,
  __state = type_c2ats___mbstate_t
}
typedef type_c2ats__G_fpos64_t = struct_c2ats_anon_129245
// File: /usr/include/libio.h
typedef type_c2ats__IO_lock_t = void
typedef struct_c2ats__IO_marker = $extype_struct"struct _IO_marker" of {
  _next = ptr (* cPtr0(struct_c2ats__IO_marker) *),
  _sbuf = ptr (* cPtr0(struct_c2ats__IO_FILE) *),
  _pos = int
}
#define enum_c2ats___codecvt_ok 0
#define enum_c2ats___codecvt_partial 1
#define enum_c2ats___codecvt_error 2
#define enum_c2ats___codecvt_noconv 3
typedef struct_c2ats__IO_FILE = $extype_struct"struct _IO_FILE" of {
  _flags = int,
  _IO_read_ptr = ptr (* cPtr0(char) *),
  _IO_read_end = ptr (* cPtr0(char) *),
  _IO_read_base = ptr (* cPtr0(char) *),
  _IO_write_base = ptr (* cPtr0(char) *),
  _IO_write_ptr = ptr (* cPtr0(char) *),
  _IO_write_end = ptr (* cPtr0(char) *),
  _IO_buf_base = ptr (* cPtr0(char) *),
  _IO_buf_end = ptr (* cPtr0(char) *),
  _IO_save_base = ptr (* cPtr0(char) *),
  _IO_backup_base = ptr (* cPtr0(char) *),
  _IO_save_end = ptr (* cPtr0(char) *),
  _markers = ptr (* cPtr0(struct_c2ats__IO_marker) *),
  _chain = ptr (* cPtr0(struct_c2ats__IO_FILE) *),
  _fileno = int,
  _flags2 = int,
  _old_offset = type_c2ats___off_t,
  _cur_column = usint,
  _vtable_offset = schar,
  _shortbuf = @[char][1],
  _lock = ptr (* cPtr0(type_c2ats__IO_lock_t) *),
  _offset = type_c2ats___off64_t,
  __pad1 = ptr (* cPtr0(void) *),
  __pad2 = ptr (* cPtr0(void) *),
  __pad3 = ptr (* cPtr0(void) *),
  __pad4 = ptr (* cPtr0(void) *),
  __pad5 = type_c2ats_size_t,
  _mode = int,
  _unused2 = @[char][15 * sizeof(int) - 4 * sizeof(ptr) - sizeof(type_c2ats_size_t)]
}
typedef type_c2ats__IO_FILE = struct_c2ats__IO_FILE
abst@ype struct_c2ats__IO_FILE_plus // FIXME! Forward declaration.
macdef takeout_c2ats__IO_2_1_stdin_ = $extval([l1:addr] (ptr_v_1(struct_c2ats__IO_FILE_plus, l1) | ptr l1), "&_IO_2_1_stdin_")
praxi addback_c2ats__IO_2_1_stdin_ {l1:addr} (ptr_v_1(struct_c2ats__IO_FILE_plus, l1) | ptr l1): void
macdef takeout_c2ats__IO_2_1_stdout_ = $extval([l1:addr] (ptr_v_1(struct_c2ats__IO_FILE_plus, l1) | ptr l1), "&_IO_2_1_stdout_")
praxi addback_c2ats__IO_2_1_stdout_ {l1:addr} (ptr_v_1(struct_c2ats__IO_FILE_plus, l1) | ptr l1): void
macdef takeout_c2ats__IO_2_1_stderr_ = $extval([l1:addr] (ptr_v_1(struct_c2ats__IO_FILE_plus, l1) | ptr l1), "&_IO_2_1_stderr_")
praxi addback_c2ats__IO_2_1_stderr_ {l1:addr} (ptr_v_1(struct_c2ats__IO_FILE_plus, l1) | ptr l1): void
typedef type_c2ats___io_read_fn = {l1:addr} (!ptr_v_1(char, l1) | ptr, ptr l1, type_c2ats_size_t) -> type_c2ats___ssize_t
typedef type_c2ats___io_write_fn = {l1:addr} (!ptr_v_1(char, l1) | ptr, ptr l1, type_c2ats_size_t) -> type_c2ats___ssize_t
typedef type_c2ats___io_seek_fn = {l1:addr} (!ptr_v_1(type_c2ats___off64_t, l1) | ptr, ptr l1, int) -> int
typedef type_c2ats___io_close_fn = (ptr) -> int
fun fun_c2ats___underflow: {l1:addr} (!ptr_v_1(type_c2ats__IO_FILE, l1) | ptr l1) -> int = "mac#__underflow"
fun fun_c2ats___uflow: {l1:addr} (!ptr_v_1(type_c2ats__IO_FILE, l1) | ptr l1) -> int = "mac#__uflow"
fun fun_c2ats___overflow: {l1:addr} (!ptr_v_1(type_c2ats__IO_FILE, l1) | ptr l1, int) -> int = "mac#__overflow"
fun fun_c2ats__IO_getc: {l1:addr} (!ptr_v_1(type_c2ats__IO_FILE, l1) | ptr l1) -> int = "mac#_IO_getc"
fun fun_c2ats__IO_putc: {l1:addr} (!ptr_v_1(type_c2ats__IO_FILE, l1) | int, ptr l1) -> int = "mac#_IO_putc"
fun fun_c2ats__IO_feof: {l1:addr} (!ptr_v_1(type_c2ats__IO_FILE, l1) | ptr l1) -> int = "mac#_IO_feof"
fun fun_c2ats__IO_ferror: {l1:addr} (!ptr_v_1(type_c2ats__IO_FILE, l1) | ptr l1) -> int = "mac#_IO_ferror"
fun fun_c2ats__IO_peekc_locked: {l1:addr} (!ptr_v_1(type_c2ats__IO_FILE, l1) | ptr l1) -> int = "mac#_IO_peekc_locked"
fun fun_c2ats__IO_flockfile: {l1:addr} (!ptr_v_1(type_c2ats__IO_FILE, l1) | ptr l1) -> void = "mac#_IO_flockfile"
fun fun_c2ats__IO_funlockfile: {l1:addr} (!ptr_v_1(type_c2ats__IO_FILE, l1) | ptr l1) -> void = "mac#_IO_funlockfile"
fun fun_c2ats__IO_ftrylockfile: {l1:addr} (!ptr_v_1(type_c2ats__IO_FILE, l1) | ptr l1) -> int = "mac#_IO_ftrylockfile"
fun fun_c2ats__IO_vfscanf: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats__IO_FILE, l1), !ptr_v_1(char, l2), !ptr_v_1(int, l3) | ptr l1, ptr l2, type_c2ats___gnuc_va_list, ptr l3) -> int = "mac#_IO_vfscanf"
fun fun_c2ats__IO_vfprintf: {l1,l2:addr} (!ptr_v_1(type_c2ats__IO_FILE, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, type_c2ats___gnuc_va_list) -> int = "mac#_IO_vfprintf"
fun fun_c2ats__IO_padn: {l1:addr} (!ptr_v_1(type_c2ats__IO_FILE, l1) | ptr l1, int, type_c2ats___ssize_t) -> type_c2ats___ssize_t = "mac#_IO_padn"
fun fun_c2ats__IO_sgetn: {l1:addr} (!ptr_v_1(type_c2ats__IO_FILE, l1) | ptr l1, ptr, type_c2ats_size_t) -> type_c2ats_size_t = "mac#_IO_sgetn"
fun fun_c2ats__IO_seekoff: {l1:addr} (!ptr_v_1(type_c2ats__IO_FILE, l1) | ptr l1, type_c2ats___off64_t, int, int) -> type_c2ats___off64_t = "mac#_IO_seekoff"
fun fun_c2ats__IO_seekpos: {l1:addr} (!ptr_v_1(type_c2ats__IO_FILE, l1) | ptr l1, type_c2ats___off64_t, int) -> type_c2ats___off64_t = "mac#_IO_seekpos"
fun fun_c2ats__IO_free_backup_area: {l1:addr} (!ptr_v_1(type_c2ats__IO_FILE, l1) | ptr l1) -> void = "mac#_IO_free_backup_area"
// File: /usr/include/pango-1.0/pango/pango-utils.h
fun fun_c2ats_pango_split_file_list: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(char, l2, l2_1) | ptr l2) = "mac#pango_split_file_list"
fun fun_c2ats_pango_trim_string: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#pango_trim_string"
fun fun_c2ats_pango_read_line: {l1,l2:addr} (!ptr_v_1(type_c2ats_FILE, l1), !ptr_v_1(type_c2ats_GString, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#pango_read_line"
fun fun_c2ats_pango_skip_space: {l1,l1_1:addr} (!ptr_v_2(char, l1, l1_1) | ptr l1) -> type_c2ats_gboolean = "mac#pango_skip_space"
fun fun_c2ats_pango_scan_word: {l1,l1_1,l2:addr} (!ptr_v_2(char, l1, l1_1), !ptr_v_1(type_c2ats_GString, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#pango_scan_word"
fun fun_c2ats_pango_scan_string: {l1,l1_1,l2:addr} (!ptr_v_2(char, l1, l1_1), !ptr_v_1(type_c2ats_GString, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#pango_scan_string"
fun fun_c2ats_pango_scan_int: {l1,l1_1,l2:addr} (!ptr_v_2(char, l1, l1_1), !ptr_v_1(int, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#pango_scan_int"
fun fun_c2ats_pango_parse_enum: {l1,l2,l3,l3_1:addr} (!ptr_v_1(char, l1), !ptr_v_1(int, l2), !ptr_v_2(char, l3, l3_1) | type_c2ats_GType, ptr l1, ptr l2, type_c2ats_gboolean, ptr l3) -> type_c2ats_gboolean = "mac#pango_parse_enum"
fun fun_c2ats_pango_parse_style: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(type_c2ats_PangoStyle, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#pango_parse_style"
fun fun_c2ats_pango_parse_variant: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(type_c2ats_PangoVariant, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#pango_parse_variant"
fun fun_c2ats_pango_parse_weight: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(type_c2ats_PangoWeight, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#pango_parse_weight"
fun fun_c2ats_pango_parse_stretch: {l1,l2:addr} (!ptr_v_1(char, l1), !ptr_v_1(type_c2ats_PangoStretch, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#pango_parse_stretch"
fun fun_c2ats_pango_quantize_line_geometry: {l1,l2:addr} (!ptr_v_1(int, l1), !ptr_v_1(int, l2) | ptr l1, ptr l2) -> void = "mac#pango_quantize_line_geometry"
fun fun_c2ats_pango_log2vis_get_embedding_levels: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_PangoDirection, l2) | ptr l1, int, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_guint8, l3) | ptr l3) = "mac#pango_log2vis_get_embedding_levels"
fun fun_c2ats_pango_is_zero_width: (type_c2ats_gunichar) -> type_c2ats_gboolean = "mac#pango_is_zero_width"
fun fun_c2ats_pango_version: () -> int = "mac#pango_version"
fun fun_c2ats_pango_version_string: () -> [l1:addr] (ptr_v_1(char, l1) | ptr l1) = "mac#pango_version_string"
fun fun_c2ats_pango_version_check: (int, int, int) -> [l1:addr] (ptr_v_1(char, l1) | ptr l1) = "mac#pango_version_check"
// File: /usr/include/cairo/cairo.h
fun fun_c2ats_cairo_version: () -> int = "mac#cairo_version"
fun fun_c2ats_cairo_version_string: () -> [l1:addr] (ptr_v_1(char, l1) | ptr l1) = "mac#cairo_version_string"
typedef type_c2ats_cairo_bool_t = int
abst@ype struct_c2ats__cairo // FIXME! Forward declaration.
typedef type_c2ats_cairo_t = struct_c2ats__cairo
abst@ype struct_c2ats__cairo_surface // FIXME! Forward declaration.
typedef type_c2ats_cairo_surface_t = struct_c2ats__cairo_surface
abst@ype struct_c2ats__cairo_device // FIXME! Forward declaration.
typedef type_c2ats_cairo_device_t = struct_c2ats__cairo_device
abst@ype struct_c2ats__cairo_matrix // FIXME! Forward declaration.
typedef type_c2ats_cairo_matrix_t = struct_c2ats__cairo_matrix
typedef struct_c2ats__cairo_matrix = $extype_struct"struct _cairo_matrix" of {
  xx = double,
  yx = double,
  xy = double,
  yy = double,
  x0 = double,
  y0 = double
}
abst@ype struct_c2ats__cairo_pattern // FIXME! Forward declaration.
typedef type_c2ats_cairo_pattern_t = struct_c2ats__cairo_pattern
typedef type_c2ats_cairo_destroy_func_t = (ptr) -> void
abst@ype struct_c2ats__cairo_user_data_key // FIXME! Forward declaration.
typedef type_c2ats_cairo_user_data_key_t = struct_c2ats__cairo_user_data_key
typedef struct_c2ats__cairo_user_data_key = $extype_struct"struct _cairo_user_data_key" of {
  unused = int
}
typedef type_c2ats_cairo_status_t = int
#define enum_c2ats_CAIRO_STATUS_SUCCESS 0
#define enum_c2ats_CAIRO_STATUS_NO_MEMORY 0 + 1
#define enum_c2ats_CAIRO_STATUS_INVALID_RESTORE 0 + 2
#define enum_c2ats_CAIRO_STATUS_INVALID_POP_GROUP 0 + 3
#define enum_c2ats_CAIRO_STATUS_NO_CURRENT_POINT 0 + 4
#define enum_c2ats_CAIRO_STATUS_INVALID_MATRIX 0 + 5
#define enum_c2ats_CAIRO_STATUS_INVALID_STATUS 0 + 6
#define enum_c2ats_CAIRO_STATUS_NULL_POINTER 0 + 7
#define enum_c2ats_CAIRO_STATUS_INVALID_STRING 0 + 8
#define enum_c2ats_CAIRO_STATUS_INVALID_PATH_DATA 0 + 9
#define enum_c2ats_CAIRO_STATUS_READ_ERROR 0 + 10
#define enum_c2ats_CAIRO_STATUS_WRITE_ERROR 0 + 11
#define enum_c2ats_CAIRO_STATUS_SURFACE_FINISHED 0 + 12
#define enum_c2ats_CAIRO_STATUS_SURFACE_TYPE_MISMATCH 0 + 13
#define enum_c2ats_CAIRO_STATUS_PATTERN_TYPE_MISMATCH 0 + 14
#define enum_c2ats_CAIRO_STATUS_INVALID_CONTENT 0 + 15
#define enum_c2ats_CAIRO_STATUS_INVALID_FORMAT 0 + 16
#define enum_c2ats_CAIRO_STATUS_INVALID_VISUAL 0 + 17
#define enum_c2ats_CAIRO_STATUS_FILE_NOT_FOUND 0 + 18
#define enum_c2ats_CAIRO_STATUS_INVALID_DASH 0 + 19
#define enum_c2ats_CAIRO_STATUS_INVALID_DSC_COMMENT 0 + 20
#define enum_c2ats_CAIRO_STATUS_INVALID_INDEX 0 + 21
#define enum_c2ats_CAIRO_STATUS_CLIP_NOT_REPRESENTABLE 0 + 22
#define enum_c2ats_CAIRO_STATUS_TEMP_FILE_ERROR 0 + 23
#define enum_c2ats_CAIRO_STATUS_INVALID_STRIDE 0 + 24
#define enum_c2ats_CAIRO_STATUS_FONT_TYPE_MISMATCH 0 + 25
#define enum_c2ats_CAIRO_STATUS_USER_FONT_IMMUTABLE 0 + 26
#define enum_c2ats_CAIRO_STATUS_USER_FONT_ERROR 0 + 27
#define enum_c2ats_CAIRO_STATUS_NEGATIVE_COUNT 0 + 28
#define enum_c2ats_CAIRO_STATUS_INVALID_CLUSTERS 0 + 29
#define enum_c2ats_CAIRO_STATUS_INVALID_SLANT 0 + 30
#define enum_c2ats_CAIRO_STATUS_INVALID_WEIGHT 0 + 31
#define enum_c2ats_CAIRO_STATUS_INVALID_SIZE 0 + 32
#define enum_c2ats_CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED 0 + 33
#define enum_c2ats_CAIRO_STATUS_DEVICE_TYPE_MISMATCH 0 + 34
#define enum_c2ats_CAIRO_STATUS_DEVICE_ERROR 0 + 35
#define enum_c2ats_CAIRO_STATUS_INVALID_MESH_CONSTRUCTION 0 + 36
#define enum_c2ats_CAIRO_STATUS_DEVICE_FINISHED 0 + 37
#define enum_c2ats_CAIRO_STATUS_JBIG2_GLOBAL_MISSING 0 + 38
#define enum_c2ats_CAIRO_STATUS_LAST_STATUS 0 + 39
typedef type_c2ats_cairo_content_t = int
#define enum_c2ats_CAIRO_CONTENT_COLOR 0x1000
#define enum_c2ats_CAIRO_CONTENT_ALPHA 0x2000
#define enum_c2ats_CAIRO_CONTENT_COLOR_ALPHA 0x3000
typedef type_c2ats_cairo_format_t = int
#define enum_c2ats_CAIRO_FORMAT_INVALID ~1
#define enum_c2ats_CAIRO_FORMAT_ARGB32 0
#define enum_c2ats_CAIRO_FORMAT_RGB24 1
#define enum_c2ats_CAIRO_FORMAT_A8 2
#define enum_c2ats_CAIRO_FORMAT_A1 3
#define enum_c2ats_CAIRO_FORMAT_RGB16_565 4
#define enum_c2ats_CAIRO_FORMAT_RGB30 5
typedef type_c2ats_cairo_write_func_t = {l1:addr} (!ptr_v_1(uchar, l1) | ptr, ptr l1, uint) -> type_c2ats_cairo_status_t
typedef type_c2ats_cairo_read_func_t = {l1:addr} (!ptr_v_1(uchar, l1) | ptr, ptr l1, uint) -> type_c2ats_cairo_status_t
abst@ype struct_c2ats__cairo_rectangle_int // FIXME! Forward declaration.
typedef type_c2ats_cairo_rectangle_int_t = struct_c2ats__cairo_rectangle_int
typedef struct_c2ats__cairo_rectangle_int = $extype_struct"struct _cairo_rectangle_int" of {
  x = int,
  y = int,
  width = int,
  height = int
}
fun fun_c2ats_cairo_create: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_t, l2) | ptr l2) = "mac#cairo_create"
fun fun_c2ats_cairo_reference: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_t, l2) | ptr l2) = "mac#cairo_reference"
fun fun_c2ats_cairo_destroy: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> void = "mac#cairo_destroy"
fun fun_c2ats_cairo_get_reference_count: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> uint = "mac#cairo_get_reference_count"
fun fun_c2ats_cairo_get_user_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_user_data_key_t, l2) | ptr l1, ptr l2) -> ptr = "mac#cairo_get_user_data"
fun fun_c2ats_cairo_set_user_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_user_data_key_t, l2) | ptr l1, ptr l2, ptr, type_c2ats_cairo_destroy_func_t) -> type_c2ats_cairo_status_t = "mac#cairo_set_user_data"
fun fun_c2ats_cairo_save: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> void = "mac#cairo_save"
fun fun_c2ats_cairo_restore: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> void = "mac#cairo_restore"
fun fun_c2ats_cairo_push_group: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> void = "mac#cairo_push_group"
fun fun_c2ats_cairo_push_group_with_content: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, type_c2ats_cairo_content_t) -> void = "mac#cairo_push_group_with_content"
fun fun_c2ats_cairo_pop_group: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_pattern_t, l2) | ptr l2) = "mac#cairo_pop_group"
fun fun_c2ats_cairo_pop_group_to_source: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> void = "mac#cairo_pop_group_to_source"
typedef type_c2ats_cairo_operator_t = int
#define enum_c2ats_CAIRO_OPERATOR_CLEAR 0
#define enum_c2ats_CAIRO_OPERATOR_SOURCE 1
#define enum_c2ats_CAIRO_OPERATOR_OVER 2
#define enum_c2ats_CAIRO_OPERATOR_IN 3
#define enum_c2ats_CAIRO_OPERATOR_OUT 4
#define enum_c2ats_CAIRO_OPERATOR_ATOP 5
#define enum_c2ats_CAIRO_OPERATOR_DEST 6
#define enum_c2ats_CAIRO_OPERATOR_DEST_OVER 7
#define enum_c2ats_CAIRO_OPERATOR_DEST_IN 8
#define enum_c2ats_CAIRO_OPERATOR_DEST_OUT 9
#define enum_c2ats_CAIRO_OPERATOR_DEST_ATOP 10
#define enum_c2ats_CAIRO_OPERATOR_XOR 11
#define enum_c2ats_CAIRO_OPERATOR_ADD 12
#define enum_c2ats_CAIRO_OPERATOR_SATURATE 13
#define enum_c2ats_CAIRO_OPERATOR_MULTIPLY 14
#define enum_c2ats_CAIRO_OPERATOR_SCREEN 15
#define enum_c2ats_CAIRO_OPERATOR_OVERLAY 16
#define enum_c2ats_CAIRO_OPERATOR_DARKEN 17
#define enum_c2ats_CAIRO_OPERATOR_LIGHTEN 18
#define enum_c2ats_CAIRO_OPERATOR_COLOR_DODGE 19
#define enum_c2ats_CAIRO_OPERATOR_COLOR_BURN 20
#define enum_c2ats_CAIRO_OPERATOR_HARD_LIGHT 21
#define enum_c2ats_CAIRO_OPERATOR_SOFT_LIGHT 22
#define enum_c2ats_CAIRO_OPERATOR_DIFFERENCE 23
#define enum_c2ats_CAIRO_OPERATOR_EXCLUSION 24
#define enum_c2ats_CAIRO_OPERATOR_HSL_HUE 25
#define enum_c2ats_CAIRO_OPERATOR_HSL_SATURATION 26
#define enum_c2ats_CAIRO_OPERATOR_HSL_COLOR 27
#define enum_c2ats_CAIRO_OPERATOR_HSL_LUMINOSITY 28
fun fun_c2ats_cairo_set_operator: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, type_c2ats_cairo_operator_t) -> void = "mac#cairo_set_operator"
fun fun_c2ats_cairo_set_source: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_pattern_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_set_source"
fun fun_c2ats_cairo_set_source_rgb: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double, double, double) -> void = "mac#cairo_set_source_rgb"
fun fun_c2ats_cairo_set_source_rgba: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double, double, double, double) -> void = "mac#cairo_set_source_rgba"
fun fun_c2ats_cairo_set_source_surface: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l1, ptr l2, double, double) -> void = "mac#cairo_set_source_surface"
fun fun_c2ats_cairo_set_tolerance: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double) -> void = "mac#cairo_set_tolerance"
typedef type_c2ats_cairo_antialias_t = int
#define enum_c2ats_CAIRO_ANTIALIAS_DEFAULT 0
#define enum_c2ats_CAIRO_ANTIALIAS_NONE 1
#define enum_c2ats_CAIRO_ANTIALIAS_GRAY 2
#define enum_c2ats_CAIRO_ANTIALIAS_SUBPIXEL 3
#define enum_c2ats_CAIRO_ANTIALIAS_FAST 4
#define enum_c2ats_CAIRO_ANTIALIAS_GOOD 5
#define enum_c2ats_CAIRO_ANTIALIAS_BEST 6
fun fun_c2ats_cairo_set_antialias: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, type_c2ats_cairo_antialias_t) -> void = "mac#cairo_set_antialias"
typedef type_c2ats_cairo_fill_rule_t = int
#define enum_c2ats_CAIRO_FILL_RULE_WINDING 0
#define enum_c2ats_CAIRO_FILL_RULE_EVEN_ODD 1
fun fun_c2ats_cairo_set_fill_rule: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, type_c2ats_cairo_fill_rule_t) -> void = "mac#cairo_set_fill_rule"
fun fun_c2ats_cairo_set_line_width: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double) -> void = "mac#cairo_set_line_width"
typedef type_c2ats_cairo_line_cap_t = int
#define enum_c2ats_CAIRO_LINE_CAP_BUTT 0
#define enum_c2ats_CAIRO_LINE_CAP_ROUND 1
#define enum_c2ats_CAIRO_LINE_CAP_SQUARE 2
fun fun_c2ats_cairo_set_line_cap: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, type_c2ats_cairo_line_cap_t) -> void = "mac#cairo_set_line_cap"
typedef type_c2ats_cairo_line_join_t = int
#define enum_c2ats_CAIRO_LINE_JOIN_MITER 0
#define enum_c2ats_CAIRO_LINE_JOIN_ROUND 1
#define enum_c2ats_CAIRO_LINE_JOIN_BEVEL 2
fun fun_c2ats_cairo_set_line_join: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, type_c2ats_cairo_line_join_t) -> void = "mac#cairo_set_line_join"
fun fun_c2ats_cairo_set_dash: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(double, l2) | ptr l1, ptr l2, int, double) -> void = "mac#cairo_set_dash"
fun fun_c2ats_cairo_set_miter_limit: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double) -> void = "mac#cairo_set_miter_limit"
fun fun_c2ats_cairo_translate: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double, double) -> void = "mac#cairo_translate"
fun fun_c2ats_cairo_scale: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double, double) -> void = "mac#cairo_scale"
fun fun_c2ats_cairo_rotate: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double) -> void = "mac#cairo_rotate"
fun fun_c2ats_cairo_transform: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_matrix_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_transform"
fun fun_c2ats_cairo_set_matrix: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_matrix_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_set_matrix"
fun fun_c2ats_cairo_identity_matrix: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> void = "mac#cairo_identity_matrix"
fun fun_c2ats_cairo_user_to_device: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#cairo_user_to_device"
fun fun_c2ats_cairo_user_to_device_distance: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#cairo_user_to_device_distance"
fun fun_c2ats_cairo_device_to_user: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#cairo_device_to_user"
fun fun_c2ats_cairo_device_to_user_distance: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#cairo_device_to_user_distance"
fun fun_c2ats_cairo_new_path: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> void = "mac#cairo_new_path"
fun fun_c2ats_cairo_move_to: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double, double) -> void = "mac#cairo_move_to"
fun fun_c2ats_cairo_new_sub_path: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> void = "mac#cairo_new_sub_path"
fun fun_c2ats_cairo_line_to: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double, double) -> void = "mac#cairo_line_to"
fun fun_c2ats_cairo_curve_to: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double, double, double, double, double, double) -> void = "mac#cairo_curve_to"
fun fun_c2ats_cairo_arc: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double, double, double, double, double) -> void = "mac#cairo_arc"
fun fun_c2ats_cairo_arc_negative: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double, double, double, double, double) -> void = "mac#cairo_arc_negative"
fun fun_c2ats_cairo_rel_move_to: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double, double) -> void = "mac#cairo_rel_move_to"
fun fun_c2ats_cairo_rel_line_to: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double, double) -> void = "mac#cairo_rel_line_to"
fun fun_c2ats_cairo_rel_curve_to: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double, double, double, double, double, double) -> void = "mac#cairo_rel_curve_to"
fun fun_c2ats_cairo_rectangle: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double, double, double, double) -> void = "mac#cairo_rectangle"
fun fun_c2ats_cairo_close_path: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> void = "mac#cairo_close_path"
fun fun_c2ats_cairo_path_extents: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3), !ptr_v_1(double, l4), !ptr_v_1(double, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void = "mac#cairo_path_extents"
fun fun_c2ats_cairo_paint: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> void = "mac#cairo_paint"
fun fun_c2ats_cairo_paint_with_alpha: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double) -> void = "mac#cairo_paint_with_alpha"
fun fun_c2ats_cairo_mask: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_pattern_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_mask"
fun fun_c2ats_cairo_mask_surface: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l1, ptr l2, double, double) -> void = "mac#cairo_mask_surface"
fun fun_c2ats_cairo_stroke: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> void = "mac#cairo_stroke"
fun fun_c2ats_cairo_stroke_preserve: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> void = "mac#cairo_stroke_preserve"
fun fun_c2ats_cairo_fill: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> void = "mac#cairo_fill"
fun fun_c2ats_cairo_fill_preserve: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> void = "mac#cairo_fill_preserve"
fun fun_c2ats_cairo_copy_page: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> void = "mac#cairo_copy_page"
fun fun_c2ats_cairo_show_page: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> void = "mac#cairo_show_page"
fun fun_c2ats_cairo_in_stroke: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double, double) -> type_c2ats_cairo_bool_t = "mac#cairo_in_stroke"
fun fun_c2ats_cairo_in_fill: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double, double) -> type_c2ats_cairo_bool_t = "mac#cairo_in_fill"
fun fun_c2ats_cairo_in_clip: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double, double) -> type_c2ats_cairo_bool_t = "mac#cairo_in_clip"
fun fun_c2ats_cairo_stroke_extents: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3), !ptr_v_1(double, l4), !ptr_v_1(double, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void = "mac#cairo_stroke_extents"
fun fun_c2ats_cairo_fill_extents: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3), !ptr_v_1(double, l4), !ptr_v_1(double, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void = "mac#cairo_fill_extents"
fun fun_c2ats_cairo_reset_clip: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> void = "mac#cairo_reset_clip"
fun fun_c2ats_cairo_clip: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> void = "mac#cairo_clip"
fun fun_c2ats_cairo_clip_preserve: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> void = "mac#cairo_clip_preserve"
fun fun_c2ats_cairo_clip_extents: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3), !ptr_v_1(double, l4), !ptr_v_1(double, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void = "mac#cairo_clip_extents"
abst@ype struct_c2ats__cairo_rectangle // FIXME! Forward declaration.
typedef type_c2ats_cairo_rectangle_t = struct_c2ats__cairo_rectangle
typedef struct_c2ats__cairo_rectangle = $extype_struct"struct _cairo_rectangle" of {
  x = double,
  y = double,
  width = double,
  height = double
}
abst@ype struct_c2ats__cairo_rectangle_list // FIXME! Forward declaration.
typedef type_c2ats_cairo_rectangle_list_t = struct_c2ats__cairo_rectangle_list
typedef struct_c2ats__cairo_rectangle_list = $extype_struct"struct _cairo_rectangle_list" of {
  status = type_c2ats_cairo_status_t,
  rectangles = ptr (* cPtr0(type_c2ats_cairo_rectangle_t) *),
  num_rectangles = int
}
fun fun_c2ats_cairo_copy_clip_rectangle_list: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_rectangle_list_t, l2) | ptr l2) = "mac#cairo_copy_clip_rectangle_list"
fun fun_c2ats_cairo_rectangle_list_destroy: {l1:addr} (!ptr_v_1(type_c2ats_cairo_rectangle_list_t, l1) | ptr l1) -> void = "mac#cairo_rectangle_list_destroy"
abst@ype struct_c2ats__cairo_scaled_font // FIXME! Forward declaration.
typedef type_c2ats_cairo_scaled_font_t = struct_c2ats__cairo_scaled_font
abst@ype struct_c2ats__cairo_font_face // FIXME! Forward declaration.
typedef type_c2ats_cairo_font_face_t = struct_c2ats__cairo_font_face
typedef struct_c2ats_anon_132952 = $extype_struct"struct { unsigned long int index; double x; double y; }" of {
  index = ulint,
  x = double,
  y = double
}
typedef type_c2ats_cairo_glyph_t = struct_c2ats_anon_132952
fun fun_c2ats_cairo_glyph_allocate: (int) -> [l1:addr] (ptr_v_1(type_c2ats_cairo_glyph_t, l1) | ptr l1) = "mac#cairo_glyph_allocate"
fun fun_c2ats_cairo_glyph_free: {l1:addr} (!ptr_v_1(type_c2ats_cairo_glyph_t, l1) | ptr l1) -> void = "mac#cairo_glyph_free"
typedef struct_c2ats_anon_132988 = $extype_struct"struct { int num_bytes; int num_glyphs; }" of {
  num_bytes = int,
  num_glyphs = int
}
typedef type_c2ats_cairo_text_cluster_t = struct_c2ats_anon_132988
fun fun_c2ats_cairo_text_cluster_allocate: (int) -> [l1:addr] (ptr_v_1(type_c2ats_cairo_text_cluster_t, l1) | ptr l1) = "mac#cairo_text_cluster_allocate"
fun fun_c2ats_cairo_text_cluster_free: {l1:addr} (!ptr_v_1(type_c2ats_cairo_text_cluster_t, l1) | ptr l1) -> void = "mac#cairo_text_cluster_free"
typedef type_c2ats_cairo_text_cluster_flags_t = int
#define enum_c2ats_CAIRO_TEXT_CLUSTER_FLAG_BACKWARD 0x1
typedef struct_c2ats_anon_133049 = $extype_struct"struct { double x_bearing; double y_bearing; double width; double height; double x_advance; double y_advance; }" of {
  x_bearing = double,
  y_bearing = double,
  width = double,
  height = double,
  x_advance = double,
  y_advance = double
}
typedef type_c2ats_cairo_text_extents_t = struct_c2ats_anon_133049
typedef struct_c2ats_anon_133075 = $extype_struct"struct { double ascent; double descent; double height; double max_x_advance; double max_y_advance; }" of {
  ascent = double,
  descent = double,
  height = double,
  max_x_advance = double,
  max_y_advance = double
}
typedef type_c2ats_cairo_font_extents_t = struct_c2ats_anon_133075
typedef type_c2ats_cairo_font_slant_t = int
#define enum_c2ats_CAIRO_FONT_SLANT_NORMAL 0
#define enum_c2ats_CAIRO_FONT_SLANT_ITALIC 1
#define enum_c2ats_CAIRO_FONT_SLANT_OBLIQUE 2
typedef type_c2ats_cairo_font_weight_t = int
#define enum_c2ats_CAIRO_FONT_WEIGHT_NORMAL 0
#define enum_c2ats_CAIRO_FONT_WEIGHT_BOLD 1
typedef type_c2ats_cairo_subpixel_order_t = int
#define enum_c2ats_CAIRO_SUBPIXEL_ORDER_DEFAULT 0
#define enum_c2ats_CAIRO_SUBPIXEL_ORDER_RGB 1
#define enum_c2ats_CAIRO_SUBPIXEL_ORDER_BGR 2
#define enum_c2ats_CAIRO_SUBPIXEL_ORDER_VRGB 3
#define enum_c2ats_CAIRO_SUBPIXEL_ORDER_VBGR 4
typedef type_c2ats_cairo_hint_style_t = int
#define enum_c2ats_CAIRO_HINT_STYLE_DEFAULT 0
#define enum_c2ats_CAIRO_HINT_STYLE_NONE 1
#define enum_c2ats_CAIRO_HINT_STYLE_SLIGHT 2
#define enum_c2ats_CAIRO_HINT_STYLE_MEDIUM 3
#define enum_c2ats_CAIRO_HINT_STYLE_FULL 4
typedef type_c2ats_cairo_hint_metrics_t = int
#define enum_c2ats_CAIRO_HINT_METRICS_DEFAULT 0
#define enum_c2ats_CAIRO_HINT_METRICS_OFF 1
#define enum_c2ats_CAIRO_HINT_METRICS_ON 2
abst@ype struct_c2ats__cairo_font_options // FIXME! Forward declaration.
typedef type_c2ats_cairo_font_options_t = struct_c2ats__cairo_font_options
fun fun_c2ats_cairo_font_options_create: () -> [l1:addr] (ptr_v_1(type_c2ats_cairo_font_options_t, l1) | ptr l1) = "mac#cairo_font_options_create"
fun fun_c2ats_cairo_font_options_copy: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_options_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_font_options_t, l2) | ptr l2) = "mac#cairo_font_options_copy"
fun fun_c2ats_cairo_font_options_destroy: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_options_t, l1) | ptr l1) -> void = "mac#cairo_font_options_destroy"
fun fun_c2ats_cairo_font_options_status: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_options_t, l1) | ptr l1) -> type_c2ats_cairo_status_t = "mac#cairo_font_options_status"
fun fun_c2ats_cairo_font_options_merge: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_font_options_t, l1), !ptr_v_1(type_c2ats_cairo_font_options_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_font_options_merge"
fun fun_c2ats_cairo_font_options_equal: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_font_options_t, l1), !ptr_v_1(type_c2ats_cairo_font_options_t, l2) | ptr l1, ptr l2) -> type_c2ats_cairo_bool_t = "mac#cairo_font_options_equal"
fun fun_c2ats_cairo_font_options_hash: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_options_t, l1) | ptr l1) -> ulint = "mac#cairo_font_options_hash"
fun fun_c2ats_cairo_font_options_set_antialias: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_options_t, l1) | ptr l1, type_c2ats_cairo_antialias_t) -> void = "mac#cairo_font_options_set_antialias"
fun fun_c2ats_cairo_font_options_get_antialias: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_options_t, l1) | ptr l1) -> type_c2ats_cairo_antialias_t = "mac#cairo_font_options_get_antialias"
fun fun_c2ats_cairo_font_options_set_subpixel_order: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_options_t, l1) | ptr l1, type_c2ats_cairo_subpixel_order_t) -> void = "mac#cairo_font_options_set_subpixel_order"
fun fun_c2ats_cairo_font_options_get_subpixel_order: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_options_t, l1) | ptr l1) -> type_c2ats_cairo_subpixel_order_t = "mac#cairo_font_options_get_subpixel_order"
fun fun_c2ats_cairo_font_options_set_hint_style: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_options_t, l1) | ptr l1, type_c2ats_cairo_hint_style_t) -> void = "mac#cairo_font_options_set_hint_style"
fun fun_c2ats_cairo_font_options_get_hint_style: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_options_t, l1) | ptr l1) -> type_c2ats_cairo_hint_style_t = "mac#cairo_font_options_get_hint_style"
fun fun_c2ats_cairo_font_options_set_hint_metrics: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_options_t, l1) | ptr l1, type_c2ats_cairo_hint_metrics_t) -> void = "mac#cairo_font_options_set_hint_metrics"
fun fun_c2ats_cairo_font_options_get_hint_metrics: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_options_t, l1) | ptr l1) -> type_c2ats_cairo_hint_metrics_t = "mac#cairo_font_options_get_hint_metrics"
fun fun_c2ats_cairo_select_font_face: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2, type_c2ats_cairo_font_slant_t, type_c2ats_cairo_font_weight_t) -> void = "mac#cairo_select_font_face"
fun fun_c2ats_cairo_set_font_size: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double) -> void = "mac#cairo_set_font_size"
fun fun_c2ats_cairo_set_font_matrix: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_matrix_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_set_font_matrix"
fun fun_c2ats_cairo_get_font_matrix: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_matrix_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_get_font_matrix"
fun fun_c2ats_cairo_set_font_options: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_font_options_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_set_font_options"
fun fun_c2ats_cairo_get_font_options: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_font_options_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_get_font_options"
fun fun_c2ats_cairo_set_font_face: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_font_face_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_set_font_face"
fun fun_c2ats_cairo_get_font_face: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_font_face_t, l2) | ptr l2) = "mac#cairo_get_font_face"
fun fun_c2ats_cairo_set_scaled_font: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_scaled_font_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_set_scaled_font"
fun fun_c2ats_cairo_get_scaled_font: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_scaled_font_t, l2) | ptr l2) = "mac#cairo_get_scaled_font"
fun fun_c2ats_cairo_show_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#cairo_show_text"
fun fun_c2ats_cairo_show_glyphs: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_glyph_t, l2) | ptr l1, ptr l2, int) -> void = "mac#cairo_show_glyphs"
fun fun_c2ats_cairo_show_text_glyphs: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_cairo_glyph_t, l3), !ptr_v_1(type_c2ats_cairo_text_cluster_t, l4) | ptr l1, ptr l2, int, ptr l3, int, ptr l4, int, type_c2ats_cairo_text_cluster_flags_t) -> void = "mac#cairo_show_text_glyphs"
fun fun_c2ats_cairo_text_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#cairo_text_path"
fun fun_c2ats_cairo_glyph_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_glyph_t, l2) | ptr l1, ptr l2, int) -> void = "mac#cairo_glyph_path"
fun fun_c2ats_cairo_text_extents: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_cairo_text_extents_t, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#cairo_text_extents"
fun fun_c2ats_cairo_glyph_extents: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_glyph_t, l2), !ptr_v_1(type_c2ats_cairo_text_extents_t, l3) | ptr l1, ptr l2, int, ptr l3) -> void = "mac#cairo_glyph_extents"
fun fun_c2ats_cairo_font_extents: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_font_extents_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_font_extents"
fun fun_c2ats_cairo_font_face_reference: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_face_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_font_face_t, l2) | ptr l2) = "mac#cairo_font_face_reference"
fun fun_c2ats_cairo_font_face_destroy: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_face_t, l1) | ptr l1) -> void = "mac#cairo_font_face_destroy"
fun fun_c2ats_cairo_font_face_get_reference_count: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_face_t, l1) | ptr l1) -> uint = "mac#cairo_font_face_get_reference_count"
fun fun_c2ats_cairo_font_face_status: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_face_t, l1) | ptr l1) -> type_c2ats_cairo_status_t = "mac#cairo_font_face_status"
typedef type_c2ats_cairo_font_type_t = int
#define enum_c2ats_CAIRO_FONT_TYPE_TOY 0
#define enum_c2ats_CAIRO_FONT_TYPE_FT 1
#define enum_c2ats_CAIRO_FONT_TYPE_WIN32 2
#define enum_c2ats_CAIRO_FONT_TYPE_QUARTZ 3
#define enum_c2ats_CAIRO_FONT_TYPE_USER 4
fun fun_c2ats_cairo_font_face_get_type: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_face_t, l1) | ptr l1) -> type_c2ats_cairo_font_type_t = "mac#cairo_font_face_get_type"
fun fun_c2ats_cairo_font_face_get_user_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_font_face_t, l1), !ptr_v_1(type_c2ats_cairo_user_data_key_t, l2) | ptr l1, ptr l2) -> ptr = "mac#cairo_font_face_get_user_data"
fun fun_c2ats_cairo_font_face_set_user_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_font_face_t, l1), !ptr_v_1(type_c2ats_cairo_user_data_key_t, l2) | ptr l1, ptr l2, ptr, type_c2ats_cairo_destroy_func_t) -> type_c2ats_cairo_status_t = "mac#cairo_font_face_set_user_data"
fun fun_c2ats_cairo_scaled_font_create: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_cairo_font_face_t, l1), !ptr_v_1(type_c2ats_cairo_matrix_t, l2), !ptr_v_1(type_c2ats_cairo_matrix_t, l3), !ptr_v_1(type_c2ats_cairo_font_options_t, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_cairo_scaled_font_t, l5) | ptr l5) = "mac#cairo_scaled_font_create"
fun fun_c2ats_cairo_scaled_font_reference: {l1:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_scaled_font_t, l2) | ptr l2) = "mac#cairo_scaled_font_reference"
fun fun_c2ats_cairo_scaled_font_destroy: {l1:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1) | ptr l1) -> void = "mac#cairo_scaled_font_destroy"
fun fun_c2ats_cairo_scaled_font_get_reference_count: {l1:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1) | ptr l1) -> uint = "mac#cairo_scaled_font_get_reference_count"
fun fun_c2ats_cairo_scaled_font_status: {l1:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1) | ptr l1) -> type_c2ats_cairo_status_t = "mac#cairo_scaled_font_status"
fun fun_c2ats_cairo_scaled_font_get_type: {l1:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1) | ptr l1) -> type_c2ats_cairo_font_type_t = "mac#cairo_scaled_font_get_type"
fun fun_c2ats_cairo_scaled_font_get_user_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1), !ptr_v_1(type_c2ats_cairo_user_data_key_t, l2) | ptr l1, ptr l2) -> ptr = "mac#cairo_scaled_font_get_user_data"
fun fun_c2ats_cairo_scaled_font_set_user_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1), !ptr_v_1(type_c2ats_cairo_user_data_key_t, l2) | ptr l1, ptr l2, ptr, type_c2ats_cairo_destroy_func_t) -> type_c2ats_cairo_status_t = "mac#cairo_scaled_font_set_user_data"
fun fun_c2ats_cairo_scaled_font_extents: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1), !ptr_v_1(type_c2ats_cairo_font_extents_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_scaled_font_extents"
fun fun_c2ats_cairo_scaled_font_text_extents: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_cairo_text_extents_t, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#cairo_scaled_font_text_extents"
fun fun_c2ats_cairo_scaled_font_glyph_extents: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1), !ptr_v_1(type_c2ats_cairo_glyph_t, l2), !ptr_v_1(type_c2ats_cairo_text_extents_t, l3) | ptr l1, ptr l2, int, ptr l3) -> void = "mac#cairo_scaled_font_glyph_extents"
fun fun_c2ats_cairo_scaled_font_text_to_glyphs: {l1,l2,l3,l3_1,l4,l5,l5_1,l6,l7:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_cairo_glyph_t, l3, l3_1), !ptr_v_1(int, l4), !ptr_v_2(type_c2ats_cairo_text_cluster_t, l5, l5_1), !ptr_v_1(int, l6), !ptr_v_1(type_c2ats_cairo_text_cluster_flags_t, l7) | ptr l1, double, double, ptr l2, int, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7) -> type_c2ats_cairo_status_t = "mac#cairo_scaled_font_text_to_glyphs"
fun fun_c2ats_cairo_scaled_font_get_font_face: {l1:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_font_face_t, l2) | ptr l2) = "mac#cairo_scaled_font_get_font_face"
fun fun_c2ats_cairo_scaled_font_get_font_matrix: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1), !ptr_v_1(type_c2ats_cairo_matrix_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_scaled_font_get_font_matrix"
fun fun_c2ats_cairo_scaled_font_get_ctm: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1), !ptr_v_1(type_c2ats_cairo_matrix_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_scaled_font_get_ctm"
fun fun_c2ats_cairo_scaled_font_get_scale_matrix: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1), !ptr_v_1(type_c2ats_cairo_matrix_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_scaled_font_get_scale_matrix"
fun fun_c2ats_cairo_scaled_font_get_font_options: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1), !ptr_v_1(type_c2ats_cairo_font_options_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_scaled_font_get_font_options"
fun fun_c2ats_cairo_toy_font_face_create: {l1:addr} (!ptr_v_1(char, l1) | ptr l1, type_c2ats_cairo_font_slant_t, type_c2ats_cairo_font_weight_t) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_font_face_t, l2) | ptr l2) = "mac#cairo_toy_font_face_create"
fun fun_c2ats_cairo_toy_font_face_get_family: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_face_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#cairo_toy_font_face_get_family"
fun fun_c2ats_cairo_toy_font_face_get_slant: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_face_t, l1) | ptr l1) -> type_c2ats_cairo_font_slant_t = "mac#cairo_toy_font_face_get_slant"
fun fun_c2ats_cairo_toy_font_face_get_weight: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_face_t, l1) | ptr l1) -> type_c2ats_cairo_font_weight_t = "mac#cairo_toy_font_face_get_weight"
fun fun_c2ats_cairo_user_font_face_create: () -> [l1:addr] (ptr_v_1(type_c2ats_cairo_font_face_t, l1) | ptr l1) = "mac#cairo_user_font_face_create"
typedef type_c2ats_cairo_user_scaled_font_init_func_t = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_cairo_font_extents_t, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_cairo_status_t
typedef type_c2ats_cairo_user_scaled_font_render_glyph_func_t = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_cairo_text_extents_t, l3) | ptr l1, ulint, ptr l2, ptr l3) -> type_c2ats_cairo_status_t
typedef type_c2ats_cairo_user_scaled_font_text_to_glyphs_func_t = {l1,l2,l3,l3_1,l4,l5,l5_1,l6,l7:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_cairo_glyph_t, l3, l3_1), !ptr_v_1(int, l4), !ptr_v_2(type_c2ats_cairo_text_cluster_t, l5, l5_1), !ptr_v_1(int, l6), !ptr_v_1(type_c2ats_cairo_text_cluster_flags_t, l7) | ptr l1, ptr l2, int, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7) -> type_c2ats_cairo_status_t
typedef type_c2ats_cairo_user_scaled_font_unicode_to_glyph_func_t = {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_scaled_font_t, l1), !ptr_v_1(ulint, l2) | ptr l1, ulint, ptr l2) -> type_c2ats_cairo_status_t
fun fun_c2ats_cairo_user_font_face_set_init_func: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_face_t, l1) | ptr l1, type_c2ats_cairo_user_scaled_font_init_func_t) -> void = "mac#cairo_user_font_face_set_init_func"
fun fun_c2ats_cairo_user_font_face_set_render_glyph_func: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_face_t, l1) | ptr l1, type_c2ats_cairo_user_scaled_font_render_glyph_func_t) -> void = "mac#cairo_user_font_face_set_render_glyph_func"
fun fun_c2ats_cairo_user_font_face_set_text_to_glyphs_func: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_face_t, l1) | ptr l1, type_c2ats_cairo_user_scaled_font_text_to_glyphs_func_t) -> void = "mac#cairo_user_font_face_set_text_to_glyphs_func"
fun fun_c2ats_cairo_user_font_face_set_unicode_to_glyph_func: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_face_t, l1) | ptr l1, type_c2ats_cairo_user_scaled_font_unicode_to_glyph_func_t) -> void = "mac#cairo_user_font_face_set_unicode_to_glyph_func"
fun fun_c2ats_cairo_user_font_face_get_init_func: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_face_t, l1) | ptr l1) -> type_c2ats_cairo_user_scaled_font_init_func_t = "mac#cairo_user_font_face_get_init_func"
fun fun_c2ats_cairo_user_font_face_get_render_glyph_func: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_face_t, l1) | ptr l1) -> type_c2ats_cairo_user_scaled_font_render_glyph_func_t = "mac#cairo_user_font_face_get_render_glyph_func"
fun fun_c2ats_cairo_user_font_face_get_text_to_glyphs_func: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_face_t, l1) | ptr l1) -> type_c2ats_cairo_user_scaled_font_text_to_glyphs_func_t = "mac#cairo_user_font_face_get_text_to_glyphs_func"
fun fun_c2ats_cairo_user_font_face_get_unicode_to_glyph_func: {l1:addr} (!ptr_v_1(type_c2ats_cairo_font_face_t, l1) | ptr l1) -> type_c2ats_cairo_user_scaled_font_unicode_to_glyph_func_t = "mac#cairo_user_font_face_get_unicode_to_glyph_func"
fun fun_c2ats_cairo_get_operator: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> type_c2ats_cairo_operator_t = "mac#cairo_get_operator"
fun fun_c2ats_cairo_get_source: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_pattern_t, l2) | ptr l2) = "mac#cairo_get_source"
fun fun_c2ats_cairo_get_tolerance: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> double = "mac#cairo_get_tolerance"
fun fun_c2ats_cairo_get_antialias: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> type_c2ats_cairo_antialias_t = "mac#cairo_get_antialias"
fun fun_c2ats_cairo_has_current_point: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> type_c2ats_cairo_bool_t = "mac#cairo_has_current_point"
fun fun_c2ats_cairo_get_current_point: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#cairo_get_current_point"
fun fun_c2ats_cairo_get_fill_rule: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> type_c2ats_cairo_fill_rule_t = "mac#cairo_get_fill_rule"
fun fun_c2ats_cairo_get_line_width: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> double = "mac#cairo_get_line_width"
fun fun_c2ats_cairo_get_line_cap: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> type_c2ats_cairo_line_cap_t = "mac#cairo_get_line_cap"
fun fun_c2ats_cairo_get_line_join: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> type_c2ats_cairo_line_join_t = "mac#cairo_get_line_join"
fun fun_c2ats_cairo_get_miter_limit: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> double = "mac#cairo_get_miter_limit"
fun fun_c2ats_cairo_get_dash_count: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> int = "mac#cairo_get_dash_count"
fun fun_c2ats_cairo_get_dash: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#cairo_get_dash"
fun fun_c2ats_cairo_get_matrix: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_matrix_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_get_matrix"
fun fun_c2ats_cairo_get_target: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l2) = "mac#cairo_get_target"
fun fun_c2ats_cairo_get_group_target: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l2) = "mac#cairo_get_group_target"
typedef type_c2ats_cairo_path_data_type_t = int
#define enum_c2ats_CAIRO_PATH_MOVE_TO 0
#define enum_c2ats_CAIRO_PATH_LINE_TO 1
#define enum_c2ats_CAIRO_PATH_CURVE_TO 2
#define enum_c2ats_CAIRO_PATH_CLOSE_PATH 3
abst@ype union_c2ats__cairo_path_data_t // FIXME! Forward declaration.
typedef type_c2ats_cairo_path_data_t = union_c2ats__cairo_path_data_t
typedef struct_c2ats_anon_134761 = $extype_struct"struct { double x; double y; }" of {
  x = double,
  y = double
}
typedef struct_c2ats_anon_134750 = $extype_struct"struct { cairo_path_data_type_t type; int length; }" of {
  type = type_c2ats_cairo_path_data_type_t,
  length = int
}
typedef union_c2ats__cairo_path_data_t = $extype_struct"union _cairo_path_data_t" of {
  header = struct_c2ats_anon_134750,
  point = struct_c2ats_anon_134761
}
abst@ype struct_c2ats_cairo_path // FIXME! Forward declaration.
typedef type_c2ats_cairo_path_t = struct_c2ats_cairo_path
typedef struct_c2ats_cairo_path = $extype_struct"struct cairo_path" of {
  status = type_c2ats_cairo_status_t,
  data = ptr (* cPtr0(type_c2ats_cairo_path_data_t) *),
  num_data = int
}
fun fun_c2ats_cairo_copy_path: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_path_t, l2) | ptr l2) = "mac#cairo_copy_path"
fun fun_c2ats_cairo_copy_path_flat: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_path_t, l2) | ptr l2) = "mac#cairo_copy_path_flat"
fun fun_c2ats_cairo_append_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_path_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_append_path"
fun fun_c2ats_cairo_path_destroy: {l1:addr} (!ptr_v_1(type_c2ats_cairo_path_t, l1) | ptr l1) -> void = "mac#cairo_path_destroy"
fun fun_c2ats_cairo_status: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> type_c2ats_cairo_status_t = "mac#cairo_status"
fun fun_c2ats_cairo_status_to_string: (type_c2ats_cairo_status_t) -> [l1:addr] (ptr_v_1(char, l1) | ptr l1) = "mac#cairo_status_to_string"
fun fun_c2ats_cairo_device_reference: {l1:addr} (!ptr_v_1(type_c2ats_cairo_device_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_device_t, l2) | ptr l2) = "mac#cairo_device_reference"
typedef type_c2ats_cairo_device_type_t = int
#define enum_c2ats_CAIRO_DEVICE_TYPE_DRM 0
#define enum_c2ats_CAIRO_DEVICE_TYPE_GL 1
#define enum_c2ats_CAIRO_DEVICE_TYPE_SCRIPT 2
#define enum_c2ats_CAIRO_DEVICE_TYPE_XCB 3
#define enum_c2ats_CAIRO_DEVICE_TYPE_XLIB 4
#define enum_c2ats_CAIRO_DEVICE_TYPE_XML 5
#define enum_c2ats_CAIRO_DEVICE_TYPE_COGL 6
#define enum_c2ats_CAIRO_DEVICE_TYPE_WIN32 7
#define enum_c2ats_CAIRO_DEVICE_TYPE_INVALID ~1
fun fun_c2ats_cairo_device_get_type: {l1:addr} (!ptr_v_1(type_c2ats_cairo_device_t, l1) | ptr l1) -> type_c2ats_cairo_device_type_t = "mac#cairo_device_get_type"
fun fun_c2ats_cairo_device_status: {l1:addr} (!ptr_v_1(type_c2ats_cairo_device_t, l1) | ptr l1) -> type_c2ats_cairo_status_t = "mac#cairo_device_status"
fun fun_c2ats_cairo_device_acquire: {l1:addr} (!ptr_v_1(type_c2ats_cairo_device_t, l1) | ptr l1) -> type_c2ats_cairo_status_t = "mac#cairo_device_acquire"
fun fun_c2ats_cairo_device_release: {l1:addr} (!ptr_v_1(type_c2ats_cairo_device_t, l1) | ptr l1) -> void = "mac#cairo_device_release"
fun fun_c2ats_cairo_device_flush: {l1:addr} (!ptr_v_1(type_c2ats_cairo_device_t, l1) | ptr l1) -> void = "mac#cairo_device_flush"
fun fun_c2ats_cairo_device_finish: {l1:addr} (!ptr_v_1(type_c2ats_cairo_device_t, l1) | ptr l1) -> void = "mac#cairo_device_finish"
fun fun_c2ats_cairo_device_destroy: {l1:addr} (!ptr_v_1(type_c2ats_cairo_device_t, l1) | ptr l1) -> void = "mac#cairo_device_destroy"
fun fun_c2ats_cairo_device_get_reference_count: {l1:addr} (!ptr_v_1(type_c2ats_cairo_device_t, l1) | ptr l1) -> uint = "mac#cairo_device_get_reference_count"
fun fun_c2ats_cairo_device_get_user_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_device_t, l1), !ptr_v_1(type_c2ats_cairo_user_data_key_t, l2) | ptr l1, ptr l2) -> ptr = "mac#cairo_device_get_user_data"
fun fun_c2ats_cairo_device_set_user_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_device_t, l1), !ptr_v_1(type_c2ats_cairo_user_data_key_t, l2) | ptr l1, ptr l2, ptr, type_c2ats_cairo_destroy_func_t) -> type_c2ats_cairo_status_t = "mac#cairo_device_set_user_data"
fun fun_c2ats_cairo_surface_create_similar: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1, type_c2ats_cairo_content_t, int, int) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l2) = "mac#cairo_surface_create_similar"
fun fun_c2ats_cairo_surface_create_similar_image: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1, type_c2ats_cairo_format_t, int, int) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l2) = "mac#cairo_surface_create_similar_image"
fun fun_c2ats_cairo_surface_map_to_image: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1), !ptr_v_1(type_c2ats_cairo_rectangle_int_t, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l3) | ptr l3) = "mac#cairo_surface_map_to_image"
fun fun_c2ats_cairo_surface_unmap_image: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1), !ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_surface_unmap_image"
fun fun_c2ats_cairo_surface_create_for_rectangle: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1, double, double, double, double) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l2) = "mac#cairo_surface_create_for_rectangle"
typedef type_c2ats_cairo_surface_observer_mode_t = int
#define enum_c2ats_CAIRO_SURFACE_OBSERVER_NORMAL 0
#define enum_c2ats_CAIRO_SURFACE_OBSERVER_RECORD_OPERATIONS 0x1
fun fun_c2ats_cairo_surface_create_observer: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1, type_c2ats_cairo_surface_observer_mode_t) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l2) = "mac#cairo_surface_create_observer"
typedef type_c2ats_cairo_surface_observer_callback_t = {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1), !ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l1, ptr l2, ptr) -> void
fun fun_c2ats_cairo_surface_observer_add_paint_callback: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1, type_c2ats_cairo_surface_observer_callback_t, ptr) -> type_c2ats_cairo_status_t = "mac#cairo_surface_observer_add_paint_callback"
fun fun_c2ats_cairo_surface_observer_add_mask_callback: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1, type_c2ats_cairo_surface_observer_callback_t, ptr) -> type_c2ats_cairo_status_t = "mac#cairo_surface_observer_add_mask_callback"
fun fun_c2ats_cairo_surface_observer_add_fill_callback: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1, type_c2ats_cairo_surface_observer_callback_t, ptr) -> type_c2ats_cairo_status_t = "mac#cairo_surface_observer_add_fill_callback"
fun fun_c2ats_cairo_surface_observer_add_stroke_callback: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1, type_c2ats_cairo_surface_observer_callback_t, ptr) -> type_c2ats_cairo_status_t = "mac#cairo_surface_observer_add_stroke_callback"
fun fun_c2ats_cairo_surface_observer_add_glyphs_callback: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1, type_c2ats_cairo_surface_observer_callback_t, ptr) -> type_c2ats_cairo_status_t = "mac#cairo_surface_observer_add_glyphs_callback"
fun fun_c2ats_cairo_surface_observer_add_flush_callback: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1, type_c2ats_cairo_surface_observer_callback_t, ptr) -> type_c2ats_cairo_status_t = "mac#cairo_surface_observer_add_flush_callback"
fun fun_c2ats_cairo_surface_observer_add_finish_callback: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1, type_c2ats_cairo_surface_observer_callback_t, ptr) -> type_c2ats_cairo_status_t = "mac#cairo_surface_observer_add_finish_callback"
fun fun_c2ats_cairo_surface_observer_print: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1, type_c2ats_cairo_write_func_t, ptr) -> type_c2ats_cairo_status_t = "mac#cairo_surface_observer_print"
fun fun_c2ats_cairo_surface_observer_elapsed: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> double = "mac#cairo_surface_observer_elapsed"
fun fun_c2ats_cairo_device_observer_print: {l1:addr} (!ptr_v_1(type_c2ats_cairo_device_t, l1) | ptr l1, type_c2ats_cairo_write_func_t, ptr) -> type_c2ats_cairo_status_t = "mac#cairo_device_observer_print"
fun fun_c2ats_cairo_device_observer_elapsed: {l1:addr} (!ptr_v_1(type_c2ats_cairo_device_t, l1) | ptr l1) -> double = "mac#cairo_device_observer_elapsed"
fun fun_c2ats_cairo_device_observer_paint_elapsed: {l1:addr} (!ptr_v_1(type_c2ats_cairo_device_t, l1) | ptr l1) -> double = "mac#cairo_device_observer_paint_elapsed"
fun fun_c2ats_cairo_device_observer_mask_elapsed: {l1:addr} (!ptr_v_1(type_c2ats_cairo_device_t, l1) | ptr l1) -> double = "mac#cairo_device_observer_mask_elapsed"
fun fun_c2ats_cairo_device_observer_fill_elapsed: {l1:addr} (!ptr_v_1(type_c2ats_cairo_device_t, l1) | ptr l1) -> double = "mac#cairo_device_observer_fill_elapsed"
fun fun_c2ats_cairo_device_observer_stroke_elapsed: {l1:addr} (!ptr_v_1(type_c2ats_cairo_device_t, l1) | ptr l1) -> double = "mac#cairo_device_observer_stroke_elapsed"
fun fun_c2ats_cairo_device_observer_glyphs_elapsed: {l1:addr} (!ptr_v_1(type_c2ats_cairo_device_t, l1) | ptr l1) -> double = "mac#cairo_device_observer_glyphs_elapsed"
fun fun_c2ats_cairo_surface_reference: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l2) = "mac#cairo_surface_reference"
fun fun_c2ats_cairo_surface_finish: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> void = "mac#cairo_surface_finish"
fun fun_c2ats_cairo_surface_destroy: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> void = "mac#cairo_surface_destroy"
fun fun_c2ats_cairo_surface_get_device: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_device_t, l2) | ptr l2) = "mac#cairo_surface_get_device"
fun fun_c2ats_cairo_surface_get_reference_count: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> uint = "mac#cairo_surface_get_reference_count"
fun fun_c2ats_cairo_surface_status: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> type_c2ats_cairo_status_t = "mac#cairo_surface_status"
typedef type_c2ats_cairo_surface_type_t = int
#define enum_c2ats_CAIRO_SURFACE_TYPE_IMAGE 0
#define enum_c2ats_CAIRO_SURFACE_TYPE_PDF 1
#define enum_c2ats_CAIRO_SURFACE_TYPE_PS 2
#define enum_c2ats_CAIRO_SURFACE_TYPE_XLIB 3
#define enum_c2ats_CAIRO_SURFACE_TYPE_XCB 4
#define enum_c2ats_CAIRO_SURFACE_TYPE_GLITZ 5
#define enum_c2ats_CAIRO_SURFACE_TYPE_QUARTZ 6
#define enum_c2ats_CAIRO_SURFACE_TYPE_WIN32 7
#define enum_c2ats_CAIRO_SURFACE_TYPE_BEOS 8
#define enum_c2ats_CAIRO_SURFACE_TYPE_DIRECTFB 9
#define enum_c2ats_CAIRO_SURFACE_TYPE_SVG 10
#define enum_c2ats_CAIRO_SURFACE_TYPE_OS2 11
#define enum_c2ats_CAIRO_SURFACE_TYPE_WIN32_PRINTING 12
#define enum_c2ats_CAIRO_SURFACE_TYPE_QUARTZ_IMAGE 13
#define enum_c2ats_CAIRO_SURFACE_TYPE_SCRIPT 14
#define enum_c2ats_CAIRO_SURFACE_TYPE_QT 15
#define enum_c2ats_CAIRO_SURFACE_TYPE_RECORDING 16
#define enum_c2ats_CAIRO_SURFACE_TYPE_VG 17
#define enum_c2ats_CAIRO_SURFACE_TYPE_GL 18
#define enum_c2ats_CAIRO_SURFACE_TYPE_DRM 19
#define enum_c2ats_CAIRO_SURFACE_TYPE_TEE 20
#define enum_c2ats_CAIRO_SURFACE_TYPE_XML 21
#define enum_c2ats_CAIRO_SURFACE_TYPE_SKIA 22
#define enum_c2ats_CAIRO_SURFACE_TYPE_SUBSURFACE 23
#define enum_c2ats_CAIRO_SURFACE_TYPE_COGL 24
fun fun_c2ats_cairo_surface_get_type: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> type_c2ats_cairo_surface_type_t = "mac#cairo_surface_get_type"
fun fun_c2ats_cairo_surface_get_content: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> type_c2ats_cairo_content_t = "mac#cairo_surface_get_content"
fun fun_c2ats_cairo_surface_write_to_png: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_cairo_status_t = "mac#cairo_surface_write_to_png"
fun fun_c2ats_cairo_surface_write_to_png_stream: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1, type_c2ats_cairo_write_func_t, ptr) -> type_c2ats_cairo_status_t = "mac#cairo_surface_write_to_png_stream"
fun fun_c2ats_cairo_surface_get_user_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1), !ptr_v_1(type_c2ats_cairo_user_data_key_t, l2) | ptr l1, ptr l2) -> ptr = "mac#cairo_surface_get_user_data"
fun fun_c2ats_cairo_surface_set_user_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1), !ptr_v_1(type_c2ats_cairo_user_data_key_t, l2) | ptr l1, ptr l2, ptr, type_c2ats_cairo_destroy_func_t) -> type_c2ats_cairo_status_t = "mac#cairo_surface_set_user_data"
fun fun_c2ats_cairo_surface_get_mime_data: {l1,l2,l3,l3_1,l4:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1), !ptr_v_1(char, l2), !ptr_v_2(uchar, l3, l3_1), !ptr_v_1(ulint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#cairo_surface_get_mime_data"
fun fun_c2ats_cairo_surface_set_mime_data: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1), !ptr_v_1(char, l2), !ptr_v_1(uchar, l3) | ptr l1, ptr l2, ptr l3, ulint, type_c2ats_cairo_destroy_func_t, ptr) -> type_c2ats_cairo_status_t = "mac#cairo_surface_set_mime_data"
fun fun_c2ats_cairo_surface_supports_mime_type: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_cairo_bool_t = "mac#cairo_surface_supports_mime_type"
fun fun_c2ats_cairo_surface_get_font_options: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1), !ptr_v_1(type_c2ats_cairo_font_options_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_surface_get_font_options"
fun fun_c2ats_cairo_surface_flush: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> void = "mac#cairo_surface_flush"
fun fun_c2ats_cairo_surface_mark_dirty: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> void = "mac#cairo_surface_mark_dirty"
fun fun_c2ats_cairo_surface_mark_dirty_rectangle: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1, int, int, int, int) -> void = "mac#cairo_surface_mark_dirty_rectangle"
fun fun_c2ats_cairo_surface_set_device_scale: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1, double, double) -> void = "mac#cairo_surface_set_device_scale"
fun fun_c2ats_cairo_surface_get_device_scale: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#cairo_surface_get_device_scale"
fun fun_c2ats_cairo_surface_set_device_offset: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1, double, double) -> void = "mac#cairo_surface_set_device_offset"
fun fun_c2ats_cairo_surface_get_device_offset: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#cairo_surface_get_device_offset"
fun fun_c2ats_cairo_surface_set_fallback_resolution: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1, double, double) -> void = "mac#cairo_surface_set_fallback_resolution"
fun fun_c2ats_cairo_surface_get_fallback_resolution: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#cairo_surface_get_fallback_resolution"
fun fun_c2ats_cairo_surface_copy_page: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> void = "mac#cairo_surface_copy_page"
fun fun_c2ats_cairo_surface_show_page: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> void = "mac#cairo_surface_show_page"
fun fun_c2ats_cairo_surface_has_show_text_glyphs: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> type_c2ats_cairo_bool_t = "mac#cairo_surface_has_show_text_glyphs"
fun fun_c2ats_cairo_image_surface_create: (type_c2ats_cairo_format_t, int, int) -> [l1:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) = "mac#cairo_image_surface_create"
fun fun_c2ats_cairo_format_stride_for_width: (type_c2ats_cairo_format_t, int) -> int = "mac#cairo_format_stride_for_width"
fun fun_c2ats_cairo_image_surface_create_for_data: {l1:addr} (!ptr_v_1(uchar, l1) | ptr l1, type_c2ats_cairo_format_t, int, int, int) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l2) = "mac#cairo_image_surface_create_for_data"
fun fun_c2ats_cairo_image_surface_get_data: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(uchar, l2) | ptr l2) = "mac#cairo_image_surface_get_data"
fun fun_c2ats_cairo_image_surface_get_format: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> type_c2ats_cairo_format_t = "mac#cairo_image_surface_get_format"
fun fun_c2ats_cairo_image_surface_get_width: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> int = "mac#cairo_image_surface_get_width"
fun fun_c2ats_cairo_image_surface_get_height: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> int = "mac#cairo_image_surface_get_height"
fun fun_c2ats_cairo_image_surface_get_stride: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> int = "mac#cairo_image_surface_get_stride"
fun fun_c2ats_cairo_image_surface_create_from_png: {l1:addr} (!ptr_v_1(char, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l2) = "mac#cairo_image_surface_create_from_png"
fun fun_c2ats_cairo_image_surface_create_from_png_stream: (type_c2ats_cairo_read_func_t, ptr) -> [l1:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) = "mac#cairo_image_surface_create_from_png_stream"
fun fun_c2ats_cairo_recording_surface_create: {l1:addr} (!ptr_v_1(type_c2ats_cairo_rectangle_t, l1) | type_c2ats_cairo_content_t, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l2) = "mac#cairo_recording_surface_create"
fun fun_c2ats_cairo_recording_surface_ink_extents: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3), !ptr_v_1(double, l4), !ptr_v_1(double, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void = "mac#cairo_recording_surface_ink_extents"
fun fun_c2ats_cairo_recording_surface_get_extents: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1), !ptr_v_1(type_c2ats_cairo_rectangle_t, l2) | ptr l1, ptr l2) -> type_c2ats_cairo_bool_t = "mac#cairo_recording_surface_get_extents"
typedef type_c2ats_cairo_raster_source_acquire_func_t = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1), !ptr_v_1(type_c2ats_cairo_surface_t, l2), !ptr_v_1(type_c2ats_cairo_rectangle_int_t, l3) | ptr l1, ptr, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l4) | ptr l4)
typedef type_c2ats_cairo_raster_source_release_func_t = {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1), !ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l1, ptr, ptr l2) -> void
typedef type_c2ats_cairo_raster_source_snapshot_func_t = {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1, ptr) -> type_c2ats_cairo_status_t
typedef type_c2ats_cairo_raster_source_copy_func_t = {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1), !ptr_v_1(type_c2ats_cairo_pattern_t, l2) | ptr l1, ptr, ptr l2) -> type_c2ats_cairo_status_t
typedef type_c2ats_cairo_raster_source_finish_func_t = {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1, ptr) -> void
fun fun_c2ats_cairo_pattern_create_raster_source: (ptr, type_c2ats_cairo_content_t, int, int) -> [l1:addr] (ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1) = "mac#cairo_pattern_create_raster_source"
fun fun_c2ats_cairo_raster_source_pattern_set_callback_data: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1, ptr) -> void = "mac#cairo_raster_source_pattern_set_callback_data"
fun fun_c2ats_cairo_raster_source_pattern_get_callback_data: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1) -> ptr = "mac#cairo_raster_source_pattern_get_callback_data"
fun fun_c2ats_cairo_raster_source_pattern_set_acquire: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1, type_c2ats_cairo_raster_source_acquire_func_t, type_c2ats_cairo_raster_source_release_func_t) -> void = "mac#cairo_raster_source_pattern_set_acquire"
fun fun_c2ats_cairo_raster_source_pattern_get_acquire: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1), !ptr_v_1(type_c2ats_cairo_raster_source_acquire_func_t, l2), !ptr_v_1(type_c2ats_cairo_raster_source_release_func_t, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#cairo_raster_source_pattern_get_acquire"
fun fun_c2ats_cairo_raster_source_pattern_set_snapshot: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1, type_c2ats_cairo_raster_source_snapshot_func_t) -> void = "mac#cairo_raster_source_pattern_set_snapshot"
fun fun_c2ats_cairo_raster_source_pattern_get_snapshot: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1) -> type_c2ats_cairo_raster_source_snapshot_func_t = "mac#cairo_raster_source_pattern_get_snapshot"
fun fun_c2ats_cairo_raster_source_pattern_set_copy: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1, type_c2ats_cairo_raster_source_copy_func_t) -> void = "mac#cairo_raster_source_pattern_set_copy"
fun fun_c2ats_cairo_raster_source_pattern_get_copy: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1) -> type_c2ats_cairo_raster_source_copy_func_t = "mac#cairo_raster_source_pattern_get_copy"
fun fun_c2ats_cairo_raster_source_pattern_set_finish: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1, type_c2ats_cairo_raster_source_finish_func_t) -> void = "mac#cairo_raster_source_pattern_set_finish"
fun fun_c2ats_cairo_raster_source_pattern_get_finish: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1) -> type_c2ats_cairo_raster_source_finish_func_t = "mac#cairo_raster_source_pattern_get_finish"
fun fun_c2ats_cairo_pattern_create_rgb: (double, double, double) -> [l1:addr] (ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1) = "mac#cairo_pattern_create_rgb"
fun fun_c2ats_cairo_pattern_create_rgba: (double, double, double, double) -> [l1:addr] (ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1) = "mac#cairo_pattern_create_rgba"
fun fun_c2ats_cairo_pattern_create_for_surface: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_pattern_t, l2) | ptr l2) = "mac#cairo_pattern_create_for_surface"
fun fun_c2ats_cairo_pattern_create_linear: (double, double, double, double) -> [l1:addr] (ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1) = "mac#cairo_pattern_create_linear"
fun fun_c2ats_cairo_pattern_create_radial: (double, double, double, double, double, double) -> [l1:addr] (ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1) = "mac#cairo_pattern_create_radial"
fun fun_c2ats_cairo_pattern_create_mesh: () -> [l1:addr] (ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1) = "mac#cairo_pattern_create_mesh"
fun fun_c2ats_cairo_pattern_reference: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_pattern_t, l2) | ptr l2) = "mac#cairo_pattern_reference"
fun fun_c2ats_cairo_pattern_destroy: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1) -> void = "mac#cairo_pattern_destroy"
fun fun_c2ats_cairo_pattern_get_reference_count: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1) -> uint = "mac#cairo_pattern_get_reference_count"
fun fun_c2ats_cairo_pattern_status: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1) -> type_c2ats_cairo_status_t = "mac#cairo_pattern_status"
fun fun_c2ats_cairo_pattern_get_user_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1), !ptr_v_1(type_c2ats_cairo_user_data_key_t, l2) | ptr l1, ptr l2) -> ptr = "mac#cairo_pattern_get_user_data"
fun fun_c2ats_cairo_pattern_set_user_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1), !ptr_v_1(type_c2ats_cairo_user_data_key_t, l2) | ptr l1, ptr l2, ptr, type_c2ats_cairo_destroy_func_t) -> type_c2ats_cairo_status_t = "mac#cairo_pattern_set_user_data"
typedef type_c2ats_cairo_pattern_type_t = int
#define enum_c2ats_CAIRO_PATTERN_TYPE_SOLID 0
#define enum_c2ats_CAIRO_PATTERN_TYPE_SURFACE 1
#define enum_c2ats_CAIRO_PATTERN_TYPE_LINEAR 2
#define enum_c2ats_CAIRO_PATTERN_TYPE_RADIAL 3
#define enum_c2ats_CAIRO_PATTERN_TYPE_MESH 4
#define enum_c2ats_CAIRO_PATTERN_TYPE_RASTER_SOURCE 5
fun fun_c2ats_cairo_pattern_get_type: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1) -> type_c2ats_cairo_pattern_type_t = "mac#cairo_pattern_get_type"
fun fun_c2ats_cairo_pattern_add_color_stop_rgb: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1, double, double, double, double) -> void = "mac#cairo_pattern_add_color_stop_rgb"
fun fun_c2ats_cairo_pattern_add_color_stop_rgba: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1, double, double, double, double, double) -> void = "mac#cairo_pattern_add_color_stop_rgba"
fun fun_c2ats_cairo_mesh_pattern_begin_patch: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1) -> void = "mac#cairo_mesh_pattern_begin_patch"
fun fun_c2ats_cairo_mesh_pattern_end_patch: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1) -> void = "mac#cairo_mesh_pattern_end_patch"
fun fun_c2ats_cairo_mesh_pattern_curve_to: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1, double, double, double, double, double, double) -> void = "mac#cairo_mesh_pattern_curve_to"
fun fun_c2ats_cairo_mesh_pattern_line_to: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1, double, double) -> void = "mac#cairo_mesh_pattern_line_to"
fun fun_c2ats_cairo_mesh_pattern_move_to: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1, double, double) -> void = "mac#cairo_mesh_pattern_move_to"
fun fun_c2ats_cairo_mesh_pattern_set_control_point: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1, uint, double, double) -> void = "mac#cairo_mesh_pattern_set_control_point"
fun fun_c2ats_cairo_mesh_pattern_set_corner_color_rgb: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1, uint, double, double, double) -> void = "mac#cairo_mesh_pattern_set_corner_color_rgb"
fun fun_c2ats_cairo_mesh_pattern_set_corner_color_rgba: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1, uint, double, double, double, double) -> void = "mac#cairo_mesh_pattern_set_corner_color_rgba"
fun fun_c2ats_cairo_pattern_set_matrix: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1), !ptr_v_1(type_c2ats_cairo_matrix_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_pattern_set_matrix"
fun fun_c2ats_cairo_pattern_get_matrix: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1), !ptr_v_1(type_c2ats_cairo_matrix_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_pattern_get_matrix"
typedef type_c2ats_cairo_extend_t = int
#define enum_c2ats_CAIRO_EXTEND_NONE 0
#define enum_c2ats_CAIRO_EXTEND_REPEAT 1
#define enum_c2ats_CAIRO_EXTEND_REFLECT 2
#define enum_c2ats_CAIRO_EXTEND_PAD 3
fun fun_c2ats_cairo_pattern_set_extend: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1, type_c2ats_cairo_extend_t) -> void = "mac#cairo_pattern_set_extend"
fun fun_c2ats_cairo_pattern_get_extend: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1) -> type_c2ats_cairo_extend_t = "mac#cairo_pattern_get_extend"
typedef type_c2ats_cairo_filter_t = int
#define enum_c2ats_CAIRO_FILTER_FAST 0
#define enum_c2ats_CAIRO_FILTER_GOOD 1
#define enum_c2ats_CAIRO_FILTER_BEST 2
#define enum_c2ats_CAIRO_FILTER_NEAREST 3
#define enum_c2ats_CAIRO_FILTER_BILINEAR 4
#define enum_c2ats_CAIRO_FILTER_GAUSSIAN 5
fun fun_c2ats_cairo_pattern_set_filter: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1, type_c2ats_cairo_filter_t) -> void = "mac#cairo_pattern_set_filter"
fun fun_c2ats_cairo_pattern_get_filter: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1) -> type_c2ats_cairo_filter_t = "mac#cairo_pattern_get_filter"
fun fun_c2ats_cairo_pattern_get_rgba: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3), !ptr_v_1(double, l4), !ptr_v_1(double, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_cairo_status_t = "mac#cairo_pattern_get_rgba"
fun fun_c2ats_cairo_pattern_get_surface: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1), !ptr_v_2(type_c2ats_cairo_surface_t, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_cairo_status_t = "mac#cairo_pattern_get_surface"
fun fun_c2ats_cairo_pattern_get_color_stop_rgba: {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3), !ptr_v_1(double, l4), !ptr_v_1(double, l5), !ptr_v_1(double, l6) | ptr l1, int, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> type_c2ats_cairo_status_t = "mac#cairo_pattern_get_color_stop_rgba"
fun fun_c2ats_cairo_pattern_get_color_stop_count: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1), !ptr_v_1(int, l2) | ptr l1, ptr l2) -> type_c2ats_cairo_status_t = "mac#cairo_pattern_get_color_stop_count"
fun fun_c2ats_cairo_pattern_get_linear_points: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3), !ptr_v_1(double, l4), !ptr_v_1(double, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_cairo_status_t = "mac#cairo_pattern_get_linear_points"
fun fun_c2ats_cairo_pattern_get_radial_circles: {l1,l2,l3,l4,l5,l6,l7:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3), !ptr_v_1(double, l4), !ptr_v_1(double, l5), !ptr_v_1(double, l6), !ptr_v_1(double, l7) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7) -> type_c2ats_cairo_status_t = "mac#cairo_pattern_get_radial_circles"
fun fun_c2ats_cairo_mesh_pattern_get_patch_count: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1), !ptr_v_1(uint, l2) | ptr l1, ptr l2) -> type_c2ats_cairo_status_t = "mac#cairo_mesh_pattern_get_patch_count"
fun fun_c2ats_cairo_mesh_pattern_get_path: {l1:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1) | ptr l1, uint) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_path_t, l2) | ptr l2) = "mac#cairo_mesh_pattern_get_path"
fun fun_c2ats_cairo_mesh_pattern_get_corner_color_rgba: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3), !ptr_v_1(double, l4), !ptr_v_1(double, l5) | ptr l1, uint, uint, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_cairo_status_t = "mac#cairo_mesh_pattern_get_corner_color_rgba"
fun fun_c2ats_cairo_mesh_pattern_get_control_point: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_pattern_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3) | ptr l1, uint, uint, ptr l2, ptr l3) -> type_c2ats_cairo_status_t = "mac#cairo_mesh_pattern_get_control_point"
fun fun_c2ats_cairo_matrix_init: {l1:addr} (!ptr_v_1(type_c2ats_cairo_matrix_t, l1) | ptr l1, double, double, double, double, double, double) -> void = "mac#cairo_matrix_init"
fun fun_c2ats_cairo_matrix_init_identity: {l1:addr} (!ptr_v_1(type_c2ats_cairo_matrix_t, l1) | ptr l1) -> void = "mac#cairo_matrix_init_identity"
fun fun_c2ats_cairo_matrix_init_translate: {l1:addr} (!ptr_v_1(type_c2ats_cairo_matrix_t, l1) | ptr l1, double, double) -> void = "mac#cairo_matrix_init_translate"
fun fun_c2ats_cairo_matrix_init_scale: {l1:addr} (!ptr_v_1(type_c2ats_cairo_matrix_t, l1) | ptr l1, double, double) -> void = "mac#cairo_matrix_init_scale"
fun fun_c2ats_cairo_matrix_init_rotate: {l1:addr} (!ptr_v_1(type_c2ats_cairo_matrix_t, l1) | ptr l1, double) -> void = "mac#cairo_matrix_init_rotate"
fun fun_c2ats_cairo_matrix_translate: {l1:addr} (!ptr_v_1(type_c2ats_cairo_matrix_t, l1) | ptr l1, double, double) -> void = "mac#cairo_matrix_translate"
fun fun_c2ats_cairo_matrix_scale: {l1:addr} (!ptr_v_1(type_c2ats_cairo_matrix_t, l1) | ptr l1, double, double) -> void = "mac#cairo_matrix_scale"
fun fun_c2ats_cairo_matrix_rotate: {l1:addr} (!ptr_v_1(type_c2ats_cairo_matrix_t, l1) | ptr l1, double) -> void = "mac#cairo_matrix_rotate"
fun fun_c2ats_cairo_matrix_invert: {l1:addr} (!ptr_v_1(type_c2ats_cairo_matrix_t, l1) | ptr l1) -> type_c2ats_cairo_status_t = "mac#cairo_matrix_invert"
fun fun_c2ats_cairo_matrix_multiply: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_matrix_t, l1), !ptr_v_1(type_c2ats_cairo_matrix_t, l2), !ptr_v_1(type_c2ats_cairo_matrix_t, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#cairo_matrix_multiply"
fun fun_c2ats_cairo_matrix_transform_distance: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_matrix_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#cairo_matrix_transform_distance"
fun fun_c2ats_cairo_matrix_transform_point: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_matrix_t, l1), !ptr_v_1(double, l2), !ptr_v_1(double, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#cairo_matrix_transform_point"
abst@ype struct_c2ats__cairo_region // FIXME! Forward declaration.
typedef type_c2ats_cairo_region_t = struct_c2ats__cairo_region
typedef type_c2ats_cairo_region_overlap_t = int
#define enum_c2ats_CAIRO_REGION_OVERLAP_IN 0
#define enum_c2ats_CAIRO_REGION_OVERLAP_OUT 1
#define enum_c2ats_CAIRO_REGION_OVERLAP_PART 2
fun fun_c2ats_cairo_region_create: () -> [l1:addr] (ptr_v_1(type_c2ats_cairo_region_t, l1) | ptr l1) = "mac#cairo_region_create"
fun fun_c2ats_cairo_region_create_rectangle: {l1:addr} (!ptr_v_1(type_c2ats_cairo_rectangle_int_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l2) = "mac#cairo_region_create_rectangle"
fun fun_c2ats_cairo_region_create_rectangles: {l1:addr} (!ptr_v_1(type_c2ats_cairo_rectangle_int_t, l1) | ptr l1, int) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l2) = "mac#cairo_region_create_rectangles"
fun fun_c2ats_cairo_region_copy: {l1:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l2) = "mac#cairo_region_copy"
fun fun_c2ats_cairo_region_reference: {l1:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l2) = "mac#cairo_region_reference"
fun fun_c2ats_cairo_region_destroy: {l1:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1) | ptr l1) -> void = "mac#cairo_region_destroy"
fun fun_c2ats_cairo_region_equal: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2) -> type_c2ats_cairo_bool_t = "mac#cairo_region_equal"
fun fun_c2ats_cairo_region_status: {l1:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1) | ptr l1) -> type_c2ats_cairo_status_t = "mac#cairo_region_status"
fun fun_c2ats_cairo_region_get_extents: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1), !ptr_v_1(type_c2ats_cairo_rectangle_int_t, l2) | ptr l1, ptr l2) -> void = "mac#cairo_region_get_extents"
fun fun_c2ats_cairo_region_num_rectangles: {l1:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1) | ptr l1) -> int = "mac#cairo_region_num_rectangles"
fun fun_c2ats_cairo_region_get_rectangle: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1), !ptr_v_1(type_c2ats_cairo_rectangle_int_t, l2) | ptr l1, int, ptr l2) -> void = "mac#cairo_region_get_rectangle"
fun fun_c2ats_cairo_region_is_empty: {l1:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1) | ptr l1) -> type_c2ats_cairo_bool_t = "mac#cairo_region_is_empty"
fun fun_c2ats_cairo_region_contains_rectangle: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1), !ptr_v_1(type_c2ats_cairo_rectangle_int_t, l2) | ptr l1, ptr l2) -> type_c2ats_cairo_region_overlap_t = "mac#cairo_region_contains_rectangle"
fun fun_c2ats_cairo_region_contains_point: {l1:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1) | ptr l1, int, int) -> type_c2ats_cairo_bool_t = "mac#cairo_region_contains_point"
fun fun_c2ats_cairo_region_translate: {l1:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1) | ptr l1, int, int) -> void = "mac#cairo_region_translate"
fun fun_c2ats_cairo_region_subtract: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2) -> type_c2ats_cairo_status_t = "mac#cairo_region_subtract"
fun fun_c2ats_cairo_region_subtract_rectangle: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1), !ptr_v_1(type_c2ats_cairo_rectangle_int_t, l2) | ptr l1, ptr l2) -> type_c2ats_cairo_status_t = "mac#cairo_region_subtract_rectangle"
fun fun_c2ats_cairo_region_intersect: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2) -> type_c2ats_cairo_status_t = "mac#cairo_region_intersect"
fun fun_c2ats_cairo_region_intersect_rectangle: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1), !ptr_v_1(type_c2ats_cairo_rectangle_int_t, l2) | ptr l1, ptr l2) -> type_c2ats_cairo_status_t = "mac#cairo_region_intersect_rectangle"
fun fun_c2ats_cairo_region_union: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2) -> type_c2ats_cairo_status_t = "mac#cairo_region_union"
fun fun_c2ats_cairo_region_union_rectangle: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1), !ptr_v_1(type_c2ats_cairo_rectangle_int_t, l2) | ptr l1, ptr l2) -> type_c2ats_cairo_status_t = "mac#cairo_region_union_rectangle"
fun fun_c2ats_cairo_region_xor: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2) -> type_c2ats_cairo_status_t = "mac#cairo_region_xor"
fun fun_c2ats_cairo_region_xor_rectangle: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_region_t, l1), !ptr_v_1(type_c2ats_cairo_rectangle_int_t, l2) | ptr l1, ptr l2) -> type_c2ats_cairo_status_t = "mac#cairo_region_xor_rectangle"
fun fun_c2ats_cairo_debug_reset_static_data: () -> void = "mac#cairo_debug_reset_static_data"
// File: /usr/include/gtk-3.0/gdk/gdktypes.h
abst@ype struct_c2ats__GdkPoint // FIXME! Forward declaration.
typedef type_c2ats_GdkPoint = struct_c2ats__GdkPoint
typedef type_c2ats_GdkRectangle = type_c2ats_cairo_rectangle_int_t
abst@ype struct_c2ats__GdkAtom // FIXME! Forward declaration.
typedef type_c2ats_GdkAtom = cPtr0(struct_c2ats__GdkAtom)
abst@ype struct_c2ats__GdkColor // FIXME! Forward declaration.
typedef type_c2ats_GdkColor = struct_c2ats__GdkColor
abst@ype struct_c2ats__GdkRGBA // FIXME! Forward declaration.
typedef type_c2ats_GdkRGBA = struct_c2ats__GdkRGBA
abst@ype struct_c2ats__GdkCursor // FIXME! Forward declaration.
typedef type_c2ats_GdkCursor = struct_c2ats__GdkCursor
abst@ype struct_c2ats__GdkVisual // FIXME! Forward declaration.
typedef type_c2ats_GdkVisual = struct_c2ats__GdkVisual
abst@ype struct_c2ats__GdkDevice // FIXME! Forward declaration.
typedef type_c2ats_GdkDevice = struct_c2ats__GdkDevice
abst@ype struct_c2ats__GdkDragContext // FIXME! Forward declaration.
typedef type_c2ats_GdkDragContext = struct_c2ats__GdkDragContext
abst@ype struct_c2ats__GdkDisplayManager // FIXME! Forward declaration.
typedef type_c2ats_GdkDisplayManager = struct_c2ats__GdkDisplayManager
abst@ype struct_c2ats__GdkDeviceManager // FIXME! Forward declaration.
typedef type_c2ats_GdkDeviceManager = struct_c2ats__GdkDeviceManager
abst@ype struct_c2ats__GdkDisplay // FIXME! Forward declaration.
typedef type_c2ats_GdkDisplay = struct_c2ats__GdkDisplay
abst@ype struct_c2ats__GdkScreen // FIXME! Forward declaration.
typedef type_c2ats_GdkScreen = struct_c2ats__GdkScreen
abst@ype struct_c2ats__GdkWindow // FIXME! Forward declaration.
typedef type_c2ats_GdkWindow = struct_c2ats__GdkWindow
abst@ype struct_c2ats__GdkKeymap // FIXME! Forward declaration.
typedef type_c2ats_GdkKeymap = struct_c2ats__GdkKeymap
abst@ype struct_c2ats__GdkAppLaunchContext // FIXME! Forward declaration.
typedef type_c2ats_GdkAppLaunchContext = struct_c2ats__GdkAppLaunchContext
abst@ype struct_c2ats__GdkSeat // FIXME! Forward declaration.
typedef type_c2ats_GdkSeat = struct_c2ats__GdkSeat
abst@ype struct_c2ats__GdkGLContext // FIXME! Forward declaration.
typedef type_c2ats_GdkGLContext = struct_c2ats__GdkGLContext
typedef type_c2ats_GdkByteOrder = int
#define enum_c2ats_GDK_LSB_FIRST 0
#define enum_c2ats_GDK_MSB_FIRST 1
typedef type_c2ats_GdkModifierType = int
#define enum_c2ats_GDK_SHIFT_MASK 1 << 0
#define enum_c2ats_GDK_LOCK_MASK 1 << 1
#define enum_c2ats_GDK_CONTROL_MASK 1 << 2
#define enum_c2ats_GDK_MOD1_MASK 1 << 3
#define enum_c2ats_GDK_MOD2_MASK 1 << 4
#define enum_c2ats_GDK_MOD3_MASK 1 << 5
#define enum_c2ats_GDK_MOD4_MASK 1 << 6
#define enum_c2ats_GDK_MOD5_MASK 1 << 7
#define enum_c2ats_GDK_BUTTON1_MASK 1 << 8
#define enum_c2ats_GDK_BUTTON2_MASK 1 << 9
#define enum_c2ats_GDK_BUTTON3_MASK 1 << 10
#define enum_c2ats_GDK_BUTTON4_MASK 1 << 11
#define enum_c2ats_GDK_BUTTON5_MASK 1 << 12
#define enum_c2ats_GDK_MODIFIER_RESERVED_13_MASK 1 << 13
#define enum_c2ats_GDK_MODIFIER_RESERVED_14_MASK 1 << 14
#define enum_c2ats_GDK_MODIFIER_RESERVED_15_MASK 1 << 15
#define enum_c2ats_GDK_MODIFIER_RESERVED_16_MASK 1 << 16
#define enum_c2ats_GDK_MODIFIER_RESERVED_17_MASK 1 << 17
#define enum_c2ats_GDK_MODIFIER_RESERVED_18_MASK 1 << 18
#define enum_c2ats_GDK_MODIFIER_RESERVED_19_MASK 1 << 19
#define enum_c2ats_GDK_MODIFIER_RESERVED_20_MASK 1 << 20
#define enum_c2ats_GDK_MODIFIER_RESERVED_21_MASK 1 << 21
#define enum_c2ats_GDK_MODIFIER_RESERVED_22_MASK 1 << 22
#define enum_c2ats_GDK_MODIFIER_RESERVED_23_MASK 1 << 23
#define enum_c2ats_GDK_MODIFIER_RESERVED_24_MASK 1 << 24
#define enum_c2ats_GDK_MODIFIER_RESERVED_25_MASK 1 << 25
#define enum_c2ats_GDK_SUPER_MASK 1 << 26
#define enum_c2ats_GDK_HYPER_MASK 1 << 27
#define enum_c2ats_GDK_META_MASK 1 << 28
#define enum_c2ats_GDK_MODIFIER_RESERVED_29_MASK 1 << 29
#define enum_c2ats_GDK_RELEASE_MASK 1 << 30
#define enum_c2ats_GDK_MODIFIER_MASK 0x5c001fff
typedef type_c2ats_GdkModifierIntent = int
#define enum_c2ats_GDK_MODIFIER_INTENT_PRIMARY_ACCELERATOR 0
#define enum_c2ats_GDK_MODIFIER_INTENT_CONTEXT_MENU 1
#define enum_c2ats_GDK_MODIFIER_INTENT_EXTEND_SELECTION 2
#define enum_c2ats_GDK_MODIFIER_INTENT_MODIFY_SELECTION 3
#define enum_c2ats_GDK_MODIFIER_INTENT_NO_TEXT_INPUT 4
#define enum_c2ats_GDK_MODIFIER_INTENT_SHIFT_GROUP 5
#define enum_c2ats_GDK_MODIFIER_INTENT_DEFAULT_MOD_MASK 6
typedef type_c2ats_GdkStatus = int
#define enum_c2ats_GDK_OK 0
#define enum_c2ats_GDK_ERROR ~1
#define enum_c2ats_GDK_ERROR_PARAM ~2
#define enum_c2ats_GDK_ERROR_FILE ~3
#define enum_c2ats_GDK_ERROR_MEM ~4
typedef type_c2ats_GdkGrabStatus = int
#define enum_c2ats_GDK_GRAB_SUCCESS 0
#define enum_c2ats_GDK_GRAB_ALREADY_GRABBED 1
#define enum_c2ats_GDK_GRAB_INVALID_TIME 2
#define enum_c2ats_GDK_GRAB_NOT_VIEWABLE 3
#define enum_c2ats_GDK_GRAB_FROZEN 4
#define enum_c2ats_GDK_GRAB_FAILED 5
typedef type_c2ats_GdkGrabOwnership = int
#define enum_c2ats_GDK_OWNERSHIP_NONE 0
#define enum_c2ats_GDK_OWNERSHIP_WINDOW 1
#define enum_c2ats_GDK_OWNERSHIP_APPLICATION 2
typedef type_c2ats_GdkEventMask = int
#define enum_c2ats_GDK_EXPOSURE_MASK 1 << 1
#define enum_c2ats_GDK_POINTER_MOTION_MASK 1 << 2
#define enum_c2ats_GDK_POINTER_MOTION_HINT_MASK 1 << 3
#define enum_c2ats_GDK_BUTTON_MOTION_MASK 1 << 4
#define enum_c2ats_GDK_BUTTON1_MOTION_MASK 1 << 5
#define enum_c2ats_GDK_BUTTON2_MOTION_MASK 1 << 6
#define enum_c2ats_GDK_BUTTON3_MOTION_MASK 1 << 7
#define enum_c2ats_GDK_BUTTON_PRESS_MASK 1 << 8
#define enum_c2ats_GDK_BUTTON_RELEASE_MASK 1 << 9
#define enum_c2ats_GDK_KEY_PRESS_MASK 1 << 10
#define enum_c2ats_GDK_KEY_RELEASE_MASK 1 << 11
#define enum_c2ats_GDK_ENTER_NOTIFY_MASK 1 << 12
#define enum_c2ats_GDK_LEAVE_NOTIFY_MASK 1 << 13
#define enum_c2ats_GDK_FOCUS_CHANGE_MASK 1 << 14
#define enum_c2ats_GDK_STRUCTURE_MASK 1 << 15
#define enum_c2ats_GDK_PROPERTY_CHANGE_MASK 1 << 16
#define enum_c2ats_GDK_VISIBILITY_NOTIFY_MASK 1 << 17
#define enum_c2ats_GDK_PROXIMITY_IN_MASK 1 << 18
#define enum_c2ats_GDK_PROXIMITY_OUT_MASK 1 << 19
#define enum_c2ats_GDK_SUBSTRUCTURE_MASK 1 << 20
#define enum_c2ats_GDK_SCROLL_MASK 1 << 21
#define enum_c2ats_GDK_TOUCH_MASK 1 << 22
#define enum_c2ats_GDK_SMOOTH_SCROLL_MASK 1 << 23
#define enum_c2ats_GDK_TOUCHPAD_GESTURE_MASK 1 << 24
#define enum_c2ats_GDK_TABLET_PAD_MASK 1 << 25
#define enum_c2ats_GDK_ALL_EVENTS_MASK 0xfffffe
typedef struct_c2ats__GdkPoint = $extype_struct"struct _GdkPoint" of {
  x = type_c2ats_gint,
  y = type_c2ats_gint
}
typedef type_c2ats_GdkGLError = int
#define enum_c2ats_GDK_GL_ERROR_NOT_AVAILABLE 0
#define enum_c2ats_GDK_GL_ERROR_UNSUPPORTED_FORMAT 1
#define enum_c2ats_GDK_GL_ERROR_UNSUPPORTED_PROFILE 2
typedef type_c2ats_GdkWindowTypeHint = int
#define enum_c2ats_GDK_WINDOW_TYPE_HINT_NORMAL 0
#define enum_c2ats_GDK_WINDOW_TYPE_HINT_DIALOG 1
#define enum_c2ats_GDK_WINDOW_TYPE_HINT_MENU 2
#define enum_c2ats_GDK_WINDOW_TYPE_HINT_TOOLBAR 3
#define enum_c2ats_GDK_WINDOW_TYPE_HINT_SPLASHSCREEN 4
#define enum_c2ats_GDK_WINDOW_TYPE_HINT_UTILITY 5
#define enum_c2ats_GDK_WINDOW_TYPE_HINT_DOCK 6
#define enum_c2ats_GDK_WINDOW_TYPE_HINT_DESKTOP 7
#define enum_c2ats_GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU 8
#define enum_c2ats_GDK_WINDOW_TYPE_HINT_POPUP_MENU 9
#define enum_c2ats_GDK_WINDOW_TYPE_HINT_TOOLTIP 10
#define enum_c2ats_GDK_WINDOW_TYPE_HINT_NOTIFICATION 11
#define enum_c2ats_GDK_WINDOW_TYPE_HINT_COMBO 12
#define enum_c2ats_GDK_WINDOW_TYPE_HINT_DND 13
typedef type_c2ats_GdkAxisUse = int
#define enum_c2ats_GDK_AXIS_IGNORE 0
#define enum_c2ats_GDK_AXIS_X 1
#define enum_c2ats_GDK_AXIS_Y 2
#define enum_c2ats_GDK_AXIS_PRESSURE 3
#define enum_c2ats_GDK_AXIS_XTILT 4
#define enum_c2ats_GDK_AXIS_YTILT 5
#define enum_c2ats_GDK_AXIS_WHEEL 6
#define enum_c2ats_GDK_AXIS_DISTANCE 7
#define enum_c2ats_GDK_AXIS_ROTATION 8
#define enum_c2ats_GDK_AXIS_SLIDER 9
#define enum_c2ats_GDK_AXIS_LAST 10
typedef type_c2ats_GdkAxisFlags = int
#define enum_c2ats_GDK_AXIS_FLAG_X 1 << GDK_AXIS_X
#define enum_c2ats_GDK_AXIS_FLAG_Y 1 << GDK_AXIS_Y
#define enum_c2ats_GDK_AXIS_FLAG_PRESSURE 1 << GDK_AXIS_PRESSURE
#define enum_c2ats_GDK_AXIS_FLAG_XTILT 1 << GDK_AXIS_XTILT
#define enum_c2ats_GDK_AXIS_FLAG_YTILT 1 << GDK_AXIS_YTILT
#define enum_c2ats_GDK_AXIS_FLAG_WHEEL 1 << GDK_AXIS_WHEEL
#define enum_c2ats_GDK_AXIS_FLAG_DISTANCE 1 << GDK_AXIS_DISTANCE
#define enum_c2ats_GDK_AXIS_FLAG_ROTATION 1 << GDK_AXIS_ROTATION
#define enum_c2ats_GDK_AXIS_FLAG_SLIDER 1 << GDK_AXIS_SLIDER
// File: /usr/include/gtk-3.0/gdk/gdkdevice.h
abst@ype struct_c2ats__GdkTimeCoord // FIXME! Forward declaration.
typedef type_c2ats_GdkTimeCoord = struct_c2ats__GdkTimeCoord
typedef type_c2ats_GdkInputSource = int
#define enum_c2ats_GDK_SOURCE_MOUSE 0
#define enum_c2ats_GDK_SOURCE_PEN 1
#define enum_c2ats_GDK_SOURCE_ERASER 2
#define enum_c2ats_GDK_SOURCE_CURSOR 3
#define enum_c2ats_GDK_SOURCE_KEYBOARD 4
#define enum_c2ats_GDK_SOURCE_TOUCHSCREEN 5
#define enum_c2ats_GDK_SOURCE_TOUCHPAD 6
#define enum_c2ats_GDK_SOURCE_TRACKPOINT 7
#define enum_c2ats_GDK_SOURCE_TABLET_PAD 8
typedef type_c2ats_GdkInputMode = int
#define enum_c2ats_GDK_MODE_DISABLED 0
#define enum_c2ats_GDK_MODE_SCREEN 1
#define enum_c2ats_GDK_MODE_WINDOW 2
typedef type_c2ats_GdkDeviceType = int
#define enum_c2ats_GDK_DEVICE_TYPE_MASTER 0
#define enum_c2ats_GDK_DEVICE_TYPE_SLAVE 1
#define enum_c2ats_GDK_DEVICE_TYPE_FLOATING 2
typedef struct_c2ats__GdkTimeCoord = $extype_struct"struct _GdkTimeCoord" of {
  time = type_c2ats_guint32,
  axes = @[type_c2ats_gdouble][128]
}
fun fun_c2ats_gdk_device_get_type: () -> type_c2ats_GType = "mac#gdk_device_get_type"
fun fun_c2ats_gdk_device_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gdk_device_get_name"
fun fun_c2ats_gdk_device_get_has_cursor: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_device_get_has_cursor"
fun fun_c2ats_gdk_device_get_source: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1) -> type_c2ats_GdkInputSource = "mac#gdk_device_get_source"
fun fun_c2ats_gdk_device_get_mode: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1) -> type_c2ats_GdkInputMode = "mac#gdk_device_get_mode"
fun fun_c2ats_gdk_device_set_mode: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1, type_c2ats_GdkInputMode) -> type_c2ats_gboolean = "mac#gdk_device_set_mode"
fun fun_c2ats_gdk_device_get_n_keys: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1) -> type_c2ats_gint = "mac#gdk_device_get_n_keys"
fun fun_c2ats_gdk_device_get_key: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1), !ptr_v_1(type_c2ats_guint, l2), !ptr_v_1(type_c2ats_GdkModifierType, l3) | ptr l1, type_c2ats_guint, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gdk_device_get_key"
fun fun_c2ats_gdk_device_set_key: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint, type_c2ats_GdkModifierType) -> void = "mac#gdk_device_set_key"
fun fun_c2ats_gdk_device_get_axis_use: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_GdkAxisUse = "mac#gdk_device_get_axis_use"
fun fun_c2ats_gdk_device_set_axis_use: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1, type_c2ats_guint, type_c2ats_GdkAxisUse) -> void = "mac#gdk_device_set_axis_use"
fun fun_c2ats_gdk_device_get_state: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1), !ptr_v_1(type_c2ats_GdkWindow, l2), !ptr_v_1(type_c2ats_gdouble, l3), !ptr_v_1(type_c2ats_GdkModifierType, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gdk_device_get_state"
fun fun_c2ats_gdk_device_get_position: {l1,l2,l2_1,l3,l4:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1), !ptr_v_2(type_c2ats_GdkScreen, l2, l2_1), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gdk_device_get_position"
fun fun_c2ats_gdk_device_get_window_at_position: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GdkWindow, l4) | ptr l4) = "mac#gdk_device_get_window_at_position"
fun fun_c2ats_gdk_device_get_position_double: {l1,l2,l2_1,l3,l4:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1), !ptr_v_2(type_c2ats_GdkScreen, l2, l2_1), !ptr_v_1(type_c2ats_gdouble, l3), !ptr_v_1(type_c2ats_gdouble, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gdk_device_get_position_double"
fun fun_c2ats_gdk_device_get_window_at_position_double: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GdkWindow, l4) | ptr l4) = "mac#gdk_device_get_window_at_position_double"
fun fun_c2ats_gdk_device_get_history: {l1,l2,l3,l3_1,l3_2,l4:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1), !ptr_v_1(type_c2ats_GdkWindow, l2), !ptr_v_3(type_c2ats_GdkTimeCoord, l3, l3_1, l3_2), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, type_c2ats_guint32, type_c2ats_guint32, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#gdk_device_get_history"
fun fun_c2ats_gdk_device_free_history: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkTimeCoord, l1, l1_1) | ptr l1, type_c2ats_gint) -> void = "mac#gdk_device_free_history"
fun fun_c2ats_gdk_device_get_n_axes: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1) -> type_c2ats_gint = "mac#gdk_device_get_n_axes"
fun fun_c2ats_gdk_device_list_axes: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gdk_device_list_axes"
fun fun_c2ats_gdk_device_get_axis_value: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, ptr l2, type_c2ats_GdkAtom, ptr l3) -> type_c2ats_gboolean = "mac#gdk_device_get_axis_value"
fun fun_c2ats_gdk_device_get_axis: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, ptr l2, type_c2ats_GdkAxisUse, ptr l3) -> type_c2ats_gboolean = "mac#gdk_device_get_axis"
fun fun_c2ats_gdk_device_get_display: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDisplay, l2) | ptr l2) = "mac#gdk_device_get_display"
fun fun_c2ats_gdk_device_get_associated_device: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l2) = "mac#gdk_device_get_associated_device"
fun fun_c2ats_gdk_device_list_slave_devices: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gdk_device_list_slave_devices"
fun fun_c2ats_gdk_device_get_device_type: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1) -> type_c2ats_GdkDeviceType = "mac#gdk_device_get_device_type"
fun fun_c2ats_gdk_device_grab: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1), !ptr_v_1(type_c2ats_GdkWindow, l2), !ptr_v_1(type_c2ats_GdkCursor, l3) | ptr l1, ptr l2, type_c2ats_GdkGrabOwnership, type_c2ats_gboolean, type_c2ats_GdkEventMask, ptr l3, type_c2ats_guint32) -> type_c2ats_GdkGrabStatus = "mac#gdk_device_grab"
fun fun_c2ats_gdk_device_ungrab: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1, type_c2ats_guint32) -> void = "mac#gdk_device_ungrab"
fun fun_c2ats_gdk_device_warp: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1), !ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gdk_device_warp"
fun fun_c2ats_gdk_device_grab_info_libgtk_only: {l1,l2,l3,l3_1,l4:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1), !ptr_v_1(type_c2ats_GdkDevice, l2), !ptr_v_2(type_c2ats_GdkWindow, l3, l3_1), !ptr_v_1(type_c2ats_gboolean, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#gdk_device_grab_info_libgtk_only"
fun fun_c2ats_gdk_device_get_last_event_window: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gdk_device_get_last_event_window"
fun fun_c2ats_gdk_device_get_vendor_id: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gdk_device_get_vendor_id"
fun fun_c2ats_gdk_device_get_product_id: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gdk_device_get_product_id"
fun fun_c2ats_gdk_device_get_seat: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkSeat, l2) | ptr l2) = "mac#gdk_device_get_seat"
fun fun_c2ats_gdk_device_get_axes: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1) -> type_c2ats_GdkAxisFlags = "mac#gdk_device_get_axes"
// File: /usr/include/gtk-3.0/gdk/gdkdnd.h
typedef type_c2ats_GdkDragAction = int
#define enum_c2ats_GDK_ACTION_DEFAULT 1 << 0
#define enum_c2ats_GDK_ACTION_COPY 1 << 1
#define enum_c2ats_GDK_ACTION_MOVE 1 << 2
#define enum_c2ats_GDK_ACTION_LINK 1 << 3
#define enum_c2ats_GDK_ACTION_PRIVATE 1 << 4
#define enum_c2ats_GDK_ACTION_ASK 1 << 5
typedef type_c2ats_GdkDragCancelReason = int
#define enum_c2ats_GDK_DRAG_CANCEL_NO_TARGET 0
#define enum_c2ats_GDK_DRAG_CANCEL_USER_CANCELLED 1
#define enum_c2ats_GDK_DRAG_CANCEL_ERROR 2
typedef type_c2ats_GdkDragProtocol = int
#define enum_c2ats_GDK_DRAG_PROTO_NONE 0
#define enum_c2ats_GDK_DRAG_PROTO_MOTIF 0 + 1
#define enum_c2ats_GDK_DRAG_PROTO_XDND 0 + 2
#define enum_c2ats_GDK_DRAG_PROTO_ROOTWIN 0 + 3
#define enum_c2ats_GDK_DRAG_PROTO_WIN32_DROPFILES 0 + 4
#define enum_c2ats_GDK_DRAG_PROTO_OLE2 0 + 5
#define enum_c2ats_GDK_DRAG_PROTO_LOCAL 0 + 6
#define enum_c2ats_GDK_DRAG_PROTO_WAYLAND 0 + 7
fun fun_c2ats_gdk_drag_context_get_type: () -> type_c2ats_GType = "mac#gdk_drag_context_get_type"
fun fun_c2ats_gdk_drag_context_set_device: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1), !ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l1, ptr l2) -> void = "mac#gdk_drag_context_set_device"
fun fun_c2ats_gdk_drag_context_get_device: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l2) = "mac#gdk_drag_context_get_device"
fun fun_c2ats_gdk_drag_context_list_targets: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gdk_drag_context_list_targets"
fun fun_c2ats_gdk_drag_context_get_actions: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1) -> type_c2ats_GdkDragAction = "mac#gdk_drag_context_get_actions"
fun fun_c2ats_gdk_drag_context_get_suggested_action: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1) -> type_c2ats_GdkDragAction = "mac#gdk_drag_context_get_suggested_action"
fun fun_c2ats_gdk_drag_context_get_selected_action: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1) -> type_c2ats_GdkDragAction = "mac#gdk_drag_context_get_selected_action"
fun fun_c2ats_gdk_drag_context_get_source_window: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gdk_drag_context_get_source_window"
fun fun_c2ats_gdk_drag_context_get_dest_window: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gdk_drag_context_get_dest_window"
fun fun_c2ats_gdk_drag_context_get_protocol: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1) -> type_c2ats_GdkDragProtocol = "mac#gdk_drag_context_get_protocol"
fun fun_c2ats_gdk_drag_status: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1, type_c2ats_GdkDragAction, type_c2ats_guint32) -> void = "mac#gdk_drag_status"
fun fun_c2ats_gdk_drop_reply: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1, type_c2ats_gboolean, type_c2ats_guint32) -> void = "mac#gdk_drop_reply"
fun fun_c2ats_gdk_drop_finish: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1, type_c2ats_gboolean, type_c2ats_guint32) -> void = "mac#gdk_drop_finish"
fun fun_c2ats_gdk_drag_get_selection: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1) -> type_c2ats_GdkAtom = "mac#gdk_drag_get_selection"
fun fun_c2ats_gdk_drag_begin: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GList, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkDragContext, l3) | ptr l3) = "mac#gdk_drag_begin"
fun fun_c2ats_gdk_drag_begin_for_device: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkDevice, l2), !ptr_v_1(type_c2ats_GList, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GdkDragContext, l4) | ptr l4) = "mac#gdk_drag_begin_for_device"
fun fun_c2ats_gdk_drag_begin_from_point: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkDevice, l2), !ptr_v_1(type_c2ats_GList, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint, type_c2ats_gint) -> [l4:addr] (ptr_v_1(type_c2ats_GdkDragContext, l4) | ptr l4) = "mac#gdk_drag_begin_from_point"
fun fun_c2ats_gdk_drag_find_window_for_screen: {l1,l2,l3,l4,l4_1,l5:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1), !ptr_v_1(type_c2ats_GdkWindow, l2), !ptr_v_1(type_c2ats_GdkScreen, l3), !ptr_v_2(type_c2ats_GdkWindow, l4, l4_1), !ptr_v_1(type_c2ats_GdkDragProtocol, l5) | ptr l1, ptr l2, ptr l3, type_c2ats_gint, type_c2ats_gint, ptr l4, ptr l5) -> void = "mac#gdk_drag_find_window_for_screen"
fun fun_c2ats_gdk_drag_motion: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2, type_c2ats_GdkDragProtocol, type_c2ats_gint, type_c2ats_gint, type_c2ats_GdkDragAction, type_c2ats_GdkDragAction, type_c2ats_guint32) -> type_c2ats_gboolean = "mac#gdk_drag_motion"
fun fun_c2ats_gdk_drag_drop: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1, type_c2ats_guint32) -> void = "mac#gdk_drag_drop"
fun fun_c2ats_gdk_drag_abort: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1, type_c2ats_guint32) -> void = "mac#gdk_drag_abort"
fun fun_c2ats_gdk_drag_drop_succeeded: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_drag_drop_succeeded"
fun fun_c2ats_gdk_drag_drop_done: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gdk_drag_drop_done"
fun fun_c2ats_gdk_drag_context_get_drag_window: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gdk_drag_context_get_drag_window"
fun fun_c2ats_gdk_drag_context_set_hotspot: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gdk_drag_context_set_hotspot"
fun fun_c2ats_gdk_drag_context_manage_dnd: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2, type_c2ats_GdkDragAction) -> type_c2ats_gboolean = "mac#gdk_drag_context_manage_dnd"
// File: /usr/include/gtk-3.0/gdk/gdkdevicetool.h
abst@ype struct_c2ats__GdkDeviceTool // FIXME! Forward declaration.
typedef type_c2ats_GdkDeviceTool = struct_c2ats__GdkDeviceTool
typedef type_c2ats_GdkDeviceToolType = int
#define enum_c2ats_GDK_DEVICE_TOOL_TYPE_UNKNOWN 0
#define enum_c2ats_GDK_DEVICE_TOOL_TYPE_PEN 1
#define enum_c2ats_GDK_DEVICE_TOOL_TYPE_ERASER 2
#define enum_c2ats_GDK_DEVICE_TOOL_TYPE_BRUSH 3
#define enum_c2ats_GDK_DEVICE_TOOL_TYPE_PENCIL 4
#define enum_c2ats_GDK_DEVICE_TOOL_TYPE_AIRBRUSH 5
#define enum_c2ats_GDK_DEVICE_TOOL_TYPE_MOUSE 6
#define enum_c2ats_GDK_DEVICE_TOOL_TYPE_LENS 7
fun fun_c2ats_gdk_device_tool_get_type: () -> type_c2ats_GType = "mac#gdk_device_tool_get_type"
fun fun_c2ats_gdk_device_tool_get_serial: {l1:addr} (!ptr_v_1(type_c2ats_GdkDeviceTool, l1) | ptr l1) -> type_c2ats_guint64 = "mac#gdk_device_tool_get_serial"
fun fun_c2ats_gdk_device_tool_get_hardware_id: {l1:addr} (!ptr_v_1(type_c2ats_GdkDeviceTool, l1) | ptr l1) -> type_c2ats_guint64 = "mac#gdk_device_tool_get_hardware_id"
fun fun_c2ats_gdk_device_tool_get_tool_type: {l1:addr} (!ptr_v_1(type_c2ats_GdkDeviceTool, l1) | ptr l1) -> type_c2ats_GdkDeviceToolType = "mac#gdk_device_tool_get_tool_type"
// File: /usr/include/gtk-3.0/gdk/gdkevents.h
abst@ype struct_c2ats__GdkEventAny // FIXME! Forward declaration.
typedef type_c2ats_GdkEventAny = struct_c2ats__GdkEventAny
abst@ype struct_c2ats__GdkEventExpose // FIXME! Forward declaration.
typedef type_c2ats_GdkEventExpose = struct_c2ats__GdkEventExpose
abst@ype struct_c2ats__GdkEventVisibility // FIXME! Forward declaration.
typedef type_c2ats_GdkEventVisibility = struct_c2ats__GdkEventVisibility
abst@ype struct_c2ats__GdkEventMotion // FIXME! Forward declaration.
typedef type_c2ats_GdkEventMotion = struct_c2ats__GdkEventMotion
abst@ype struct_c2ats__GdkEventButton // FIXME! Forward declaration.
typedef type_c2ats_GdkEventButton = struct_c2ats__GdkEventButton
abst@ype struct_c2ats__GdkEventTouch // FIXME! Forward declaration.
typedef type_c2ats_GdkEventTouch = struct_c2ats__GdkEventTouch
abst@ype struct_c2ats__GdkEventScroll // FIXME! Forward declaration.
typedef type_c2ats_GdkEventScroll = struct_c2ats__GdkEventScroll
abst@ype struct_c2ats__GdkEventKey // FIXME! Forward declaration.
typedef type_c2ats_GdkEventKey = struct_c2ats__GdkEventKey
abst@ype struct_c2ats__GdkEventFocus // FIXME! Forward declaration.
typedef type_c2ats_GdkEventFocus = struct_c2ats__GdkEventFocus
abst@ype struct_c2ats__GdkEventCrossing // FIXME! Forward declaration.
typedef type_c2ats_GdkEventCrossing = struct_c2ats__GdkEventCrossing
abst@ype struct_c2ats__GdkEventConfigure // FIXME! Forward declaration.
typedef type_c2ats_GdkEventConfigure = struct_c2ats__GdkEventConfigure
abst@ype struct_c2ats__GdkEventProperty // FIXME! Forward declaration.
typedef type_c2ats_GdkEventProperty = struct_c2ats__GdkEventProperty
abst@ype struct_c2ats__GdkEventSelection // FIXME! Forward declaration.
typedef type_c2ats_GdkEventSelection = struct_c2ats__GdkEventSelection
abst@ype struct_c2ats__GdkEventOwnerChange // FIXME! Forward declaration.
typedef type_c2ats_GdkEventOwnerChange = struct_c2ats__GdkEventOwnerChange
abst@ype struct_c2ats__GdkEventProximity // FIXME! Forward declaration.
typedef type_c2ats_GdkEventProximity = struct_c2ats__GdkEventProximity
abst@ype struct_c2ats__GdkEventDND // FIXME! Forward declaration.
typedef type_c2ats_GdkEventDND = struct_c2ats__GdkEventDND
abst@ype struct_c2ats__GdkEventWindowState // FIXME! Forward declaration.
typedef type_c2ats_GdkEventWindowState = struct_c2ats__GdkEventWindowState
abst@ype struct_c2ats__GdkEventSetting // FIXME! Forward declaration.
typedef type_c2ats_GdkEventSetting = struct_c2ats__GdkEventSetting
abst@ype struct_c2ats__GdkEventGrabBroken // FIXME! Forward declaration.
typedef type_c2ats_GdkEventGrabBroken = struct_c2ats__GdkEventGrabBroken
abst@ype struct_c2ats__GdkEventTouchpadSwipe // FIXME! Forward declaration.
typedef type_c2ats_GdkEventTouchpadSwipe = struct_c2ats__GdkEventTouchpadSwipe
abst@ype struct_c2ats__GdkEventTouchpadPinch // FIXME! Forward declaration.
typedef type_c2ats_GdkEventTouchpadPinch = struct_c2ats__GdkEventTouchpadPinch
abst@ype struct_c2ats__GdkEventPadButton // FIXME! Forward declaration.
typedef type_c2ats_GdkEventPadButton = struct_c2ats__GdkEventPadButton
abst@ype struct_c2ats__GdkEventPadAxis // FIXME! Forward declaration.
typedef type_c2ats_GdkEventPadAxis = struct_c2ats__GdkEventPadAxis
abst@ype struct_c2ats__GdkEventPadGroupMode // FIXME! Forward declaration.
typedef type_c2ats_GdkEventPadGroupMode = struct_c2ats__GdkEventPadGroupMode
abst@ype struct_c2ats__GdkEventSequence // FIXME! Forward declaration.
typedef type_c2ats_GdkEventSequence = struct_c2ats__GdkEventSequence
abst@ype union_c2ats__GdkEvent // FIXME! Forward declaration.
typedef type_c2ats_GdkEvent = union_c2ats__GdkEvent
typedef type_c2ats_GdkEventFunc = {l1:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1, type_c2ats_gpointer) -> void
typedef type_c2ats_GdkXEvent = void
typedef type_c2ats_GdkFilterReturn = int
#define enum_c2ats_GDK_FILTER_CONTINUE 0
#define enum_c2ats_GDK_FILTER_TRANSLATE 1
#define enum_c2ats_GDK_FILTER_REMOVE 2
typedef type_c2ats_GdkFilterFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkXEvent, l1), !ptr_v_1(type_c2ats_GdkEvent, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> type_c2ats_GdkFilterReturn
typedef type_c2ats_GdkEventType = int
#define enum_c2ats_GDK_NOTHING ~1
#define enum_c2ats_GDK_DELETE 0
#define enum_c2ats_GDK_DESTROY 1
#define enum_c2ats_GDK_EXPOSE 2
#define enum_c2ats_GDK_MOTION_NOTIFY 3
#define enum_c2ats_GDK_BUTTON_PRESS 4
#define enum_c2ats_GDK_2BUTTON_PRESS 5
#define enum_c2ats_GDK_DOUBLE_BUTTON_PRESS GDK_2BUTTON_PRESS
#define enum_c2ats_GDK_3BUTTON_PRESS 6
#define enum_c2ats_GDK_TRIPLE_BUTTON_PRESS GDK_3BUTTON_PRESS
#define enum_c2ats_GDK_BUTTON_RELEASE 7
#define enum_c2ats_GDK_KEY_PRESS 8
#define enum_c2ats_GDK_KEY_RELEASE 9
#define enum_c2ats_GDK_ENTER_NOTIFY 10
#define enum_c2ats_GDK_LEAVE_NOTIFY 11
#define enum_c2ats_GDK_FOCUS_CHANGE 12
#define enum_c2ats_GDK_CONFIGURE 13
#define enum_c2ats_GDK_MAP 14
#define enum_c2ats_GDK_UNMAP 15
#define enum_c2ats_GDK_PROPERTY_NOTIFY 16
#define enum_c2ats_GDK_SELECTION_CLEAR 17
#define enum_c2ats_GDK_SELECTION_REQUEST 18
#define enum_c2ats_GDK_SELECTION_NOTIFY 19
#define enum_c2ats_GDK_PROXIMITY_IN 20
#define enum_c2ats_GDK_PROXIMITY_OUT 21
#define enum_c2ats_GDK_DRAG_ENTER 22
#define enum_c2ats_GDK_DRAG_LEAVE 23
#define enum_c2ats_GDK_DRAG_MOTION 24
#define enum_c2ats_GDK_DRAG_STATUS 25
#define enum_c2ats_GDK_DROP_START 26
#define enum_c2ats_GDK_DROP_FINISHED 27
#define enum_c2ats_GDK_CLIENT_EVENT 28
#define enum_c2ats_GDK_VISIBILITY_NOTIFY 29
#define enum_c2ats_GDK_SCROLL 31
#define enum_c2ats_GDK_WINDOW_STATE 32
#define enum_c2ats_GDK_SETTING 33
#define enum_c2ats_GDK_OWNER_CHANGE 34
#define enum_c2ats_GDK_GRAB_BROKEN 35
#define enum_c2ats_GDK_DAMAGE 36
#define enum_c2ats_GDK_TOUCH_BEGIN 37
#define enum_c2ats_GDK_TOUCH_UPDATE 38
#define enum_c2ats_GDK_TOUCH_END 39
#define enum_c2ats_GDK_TOUCH_CANCEL 40
#define enum_c2ats_GDK_TOUCHPAD_SWIPE 41
#define enum_c2ats_GDK_TOUCHPAD_PINCH 42
#define enum_c2ats_GDK_PAD_BUTTON_PRESS 43
#define enum_c2ats_GDK_PAD_BUTTON_RELEASE 44
#define enum_c2ats_GDK_PAD_RING 45
#define enum_c2ats_GDK_PAD_STRIP 46
#define enum_c2ats_GDK_PAD_GROUP_MODE 47
#define enum_c2ats_GDK_EVENT_LAST 47 + 1
typedef type_c2ats_GdkVisibilityState = int
#define enum_c2ats_GDK_VISIBILITY_UNOBSCURED 0
#define enum_c2ats_GDK_VISIBILITY_PARTIAL 1
#define enum_c2ats_GDK_VISIBILITY_FULLY_OBSCURED 2
typedef type_c2ats_GdkTouchpadGesturePhase = int
#define enum_c2ats_GDK_TOUCHPAD_GESTURE_PHASE_BEGIN 0
#define enum_c2ats_GDK_TOUCHPAD_GESTURE_PHASE_UPDATE 1
#define enum_c2ats_GDK_TOUCHPAD_GESTURE_PHASE_END 2
#define enum_c2ats_GDK_TOUCHPAD_GESTURE_PHASE_CANCEL 3
typedef type_c2ats_GdkScrollDirection = int
#define enum_c2ats_GDK_SCROLL_UP 0
#define enum_c2ats_GDK_SCROLL_DOWN 1
#define enum_c2ats_GDK_SCROLL_LEFT 2
#define enum_c2ats_GDK_SCROLL_RIGHT 3
#define enum_c2ats_GDK_SCROLL_SMOOTH 4
typedef type_c2ats_GdkNotifyType = int
#define enum_c2ats_GDK_NOTIFY_ANCESTOR 0
#define enum_c2ats_GDK_NOTIFY_VIRTUAL 1
#define enum_c2ats_GDK_NOTIFY_INFERIOR 2
#define enum_c2ats_GDK_NOTIFY_NONLINEAR 3
#define enum_c2ats_GDK_NOTIFY_NONLINEAR_VIRTUAL 4
#define enum_c2ats_GDK_NOTIFY_UNKNOWN 5
typedef type_c2ats_GdkCrossingMode = int
#define enum_c2ats_GDK_CROSSING_NORMAL 0
#define enum_c2ats_GDK_CROSSING_GRAB 1
#define enum_c2ats_GDK_CROSSING_UNGRAB 2
#define enum_c2ats_GDK_CROSSING_GTK_GRAB 3
#define enum_c2ats_GDK_CROSSING_GTK_UNGRAB 4
#define enum_c2ats_GDK_CROSSING_STATE_CHANGED 5
#define enum_c2ats_GDK_CROSSING_TOUCH_BEGIN 6
#define enum_c2ats_GDK_CROSSING_TOUCH_END 7
#define enum_c2ats_GDK_CROSSING_DEVICE_SWITCH 8
typedef type_c2ats_GdkPropertyState = int
#define enum_c2ats_GDK_PROPERTY_NEW_VALUE 0
#define enum_c2ats_GDK_PROPERTY_DELETE 1
typedef type_c2ats_GdkWindowState = int
#define enum_c2ats_GDK_WINDOW_STATE_WITHDRAWN 1 << 0
#define enum_c2ats_GDK_WINDOW_STATE_ICONIFIED 1 << 1
#define enum_c2ats_GDK_WINDOW_STATE_MAXIMIZED 1 << 2
#define enum_c2ats_GDK_WINDOW_STATE_STICKY 1 << 3
#define enum_c2ats_GDK_WINDOW_STATE_FULLSCREEN 1 << 4
#define enum_c2ats_GDK_WINDOW_STATE_ABOVE 1 << 5
#define enum_c2ats_GDK_WINDOW_STATE_BELOW 1 << 6
#define enum_c2ats_GDK_WINDOW_STATE_FOCUSED 1 << 7
#define enum_c2ats_GDK_WINDOW_STATE_TILED 1 << 8
typedef type_c2ats_GdkSettingAction = int
#define enum_c2ats_GDK_SETTING_ACTION_NEW 0
#define enum_c2ats_GDK_SETTING_ACTION_CHANGED 1
#define enum_c2ats_GDK_SETTING_ACTION_DELETED 2
typedef type_c2ats_GdkOwnerChange = int
#define enum_c2ats_GDK_OWNER_CHANGE_NEW_OWNER 0
#define enum_c2ats_GDK_OWNER_CHANGE_DESTROY 1
#define enum_c2ats_GDK_OWNER_CHANGE_CLOSE 2
typedef struct_c2ats__GdkEventAny = $extype_struct"struct _GdkEventAny" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8
}
typedef struct_c2ats__GdkEventExpose = $extype_struct"struct _GdkEventExpose" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  area = type_c2ats_GdkRectangle,
  region = ptr (* cPtr0(type_c2ats_cairo_region_t) *),
  count = type_c2ats_gint
}
typedef struct_c2ats__GdkEventVisibility = $extype_struct"struct _GdkEventVisibility" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  state = type_c2ats_GdkVisibilityState
}
typedef struct_c2ats__GdkEventMotion = $extype_struct"struct _GdkEventMotion" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  time = type_c2ats_guint32,
  x = type_c2ats_gdouble,
  y = type_c2ats_gdouble,
  axes = ptr (* cPtr0(type_c2ats_gdouble) *),
  state = type_c2ats_guint,
  is_hint = type_c2ats_gint16,
  device = ptr (* cPtr0(type_c2ats_GdkDevice) *),
  x_root = type_c2ats_gdouble,
  y_root = type_c2ats_gdouble
}
typedef struct_c2ats__GdkEventButton = $extype_struct"struct _GdkEventButton" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  time = type_c2ats_guint32,
  x = type_c2ats_gdouble,
  y = type_c2ats_gdouble,
  axes = ptr (* cPtr0(type_c2ats_gdouble) *),
  state = type_c2ats_guint,
  button = type_c2ats_guint,
  device = ptr (* cPtr0(type_c2ats_GdkDevice) *),
  x_root = type_c2ats_gdouble,
  y_root = type_c2ats_gdouble
}
typedef struct_c2ats__GdkEventTouch = $extype_struct"struct _GdkEventTouch" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  time = type_c2ats_guint32,
  x = type_c2ats_gdouble,
  y = type_c2ats_gdouble,
  axes = ptr (* cPtr0(type_c2ats_gdouble) *),
  state = type_c2ats_guint,
  sequence = ptr (* cPtr0(type_c2ats_GdkEventSequence) *),
  emulating_pointer = type_c2ats_gboolean,
  device = ptr (* cPtr0(type_c2ats_GdkDevice) *),
  x_root = type_c2ats_gdouble,
  y_root = type_c2ats_gdouble
}
typedef struct_c2ats__GdkEventScroll = $extype_struct"struct _GdkEventScroll" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  time = type_c2ats_guint32,
  x = type_c2ats_gdouble,
  y = type_c2ats_gdouble,
  state = type_c2ats_guint,
  direction = type_c2ats_GdkScrollDirection,
  device = ptr (* cPtr0(type_c2ats_GdkDevice) *),
  x_root = type_c2ats_gdouble,
  y_root = type_c2ats_gdouble,
  delta_x = type_c2ats_gdouble,
  delta_y = type_c2ats_gdouble,
  is_stop = type_c2ats_guint
}
typedef struct_c2ats__GdkEventKey = $extype_struct"struct _GdkEventKey" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  time = type_c2ats_guint32,
  state = type_c2ats_guint,
  keyval = type_c2ats_guint,
  length = type_c2ats_gint,
  string = ptr (* cPtr0(type_c2ats_gchar) *),
  hardware_keycode = type_c2ats_guint16,
  group = type_c2ats_guint8,
  is_modifier = type_c2ats_guint
}
typedef struct_c2ats__GdkEventCrossing = $extype_struct"struct _GdkEventCrossing" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  subwindow = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  time = type_c2ats_guint32,
  x = type_c2ats_gdouble,
  y = type_c2ats_gdouble,
  x_root = type_c2ats_gdouble,
  y_root = type_c2ats_gdouble,
  mode = type_c2ats_GdkCrossingMode,
  detail = type_c2ats_GdkNotifyType,
  focus = type_c2ats_gboolean,
  state = type_c2ats_guint
}
typedef struct_c2ats__GdkEventFocus = $extype_struct"struct _GdkEventFocus" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8
}
typedef struct_c2ats__GdkEventConfigure = $extype_struct"struct _GdkEventConfigure" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  x = type_c2ats_gint,
  y = type_c2ats_gint,
  width = type_c2ats_gint,
  height = type_c2ats_gint
}
typedef struct_c2ats__GdkEventProperty = $extype_struct"struct _GdkEventProperty" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  atom = type_c2ats_GdkAtom,
  time = type_c2ats_guint32,
  state = type_c2ats_guint
}
typedef struct_c2ats__GdkEventSelection = $extype_struct"struct _GdkEventSelection" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  selection = type_c2ats_GdkAtom,
  target = type_c2ats_GdkAtom,
  property = type_c2ats_GdkAtom,
  time = type_c2ats_guint32,
  requestor = ptr (* cPtr0(type_c2ats_GdkWindow) *)
}
typedef struct_c2ats__GdkEventOwnerChange = $extype_struct"struct _GdkEventOwnerChange" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  owner = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  reason = type_c2ats_GdkOwnerChange,
  selection = type_c2ats_GdkAtom,
  time = type_c2ats_guint32,
  selection_time = type_c2ats_guint32
}
typedef struct_c2ats__GdkEventProximity = $extype_struct"struct _GdkEventProximity" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  time = type_c2ats_guint32,
  device = ptr (* cPtr0(type_c2ats_GdkDevice) *)
}
typedef struct_c2ats__GdkEventSetting = $extype_struct"struct _GdkEventSetting" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  action = type_c2ats_GdkSettingAction,
  name = ptr (* cPtr0(char) *)
}
typedef struct_c2ats__GdkEventWindowState = $extype_struct"struct _GdkEventWindowState" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  changed_mask = type_c2ats_GdkWindowState,
  new_window_state = type_c2ats_GdkWindowState
}
typedef struct_c2ats__GdkEventGrabBroken = $extype_struct"struct _GdkEventGrabBroken" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  keyboard = type_c2ats_gboolean,
  implicit = type_c2ats_gboolean,
  grab_window = ptr (* cPtr0(type_c2ats_GdkWindow) *)
}
typedef struct_c2ats__GdkEventDND = $extype_struct"struct _GdkEventDND" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  context = ptr (* cPtr0(type_c2ats_GdkDragContext) *),
  time = type_c2ats_guint32,
  x_root = type_c2ats_gshort,
  y_root = type_c2ats_gshort
}
typedef struct_c2ats__GdkEventTouchpadSwipe = $extype_struct"struct _GdkEventTouchpadSwipe" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  phase = type_c2ats_gint8,
  n_fingers = type_c2ats_gint8,
  time = type_c2ats_guint32,
  x = type_c2ats_gdouble,
  y = type_c2ats_gdouble,
  dx = type_c2ats_gdouble,
  dy = type_c2ats_gdouble,
  x_root = type_c2ats_gdouble,
  y_root = type_c2ats_gdouble,
  state = type_c2ats_guint
}
typedef struct_c2ats__GdkEventTouchpadPinch = $extype_struct"struct _GdkEventTouchpadPinch" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  phase = type_c2ats_gint8,
  n_fingers = type_c2ats_gint8,
  time = type_c2ats_guint32,
  x = type_c2ats_gdouble,
  y = type_c2ats_gdouble,
  dx = type_c2ats_gdouble,
  dy = type_c2ats_gdouble,
  angle_delta = type_c2ats_gdouble,
  scale = type_c2ats_gdouble,
  x_root = type_c2ats_gdouble,
  y_root = type_c2ats_gdouble,
  state = type_c2ats_guint
}
typedef struct_c2ats__GdkEventPadButton = $extype_struct"struct _GdkEventPadButton" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  time = type_c2ats_guint32,
  group = type_c2ats_guint,
  button = type_c2ats_guint,
  mode = type_c2ats_guint
}
typedef struct_c2ats__GdkEventPadAxis = $extype_struct"struct _GdkEventPadAxis" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  time = type_c2ats_guint32,
  group = type_c2ats_guint,
  index = type_c2ats_guint,
  mode = type_c2ats_guint,
  value = type_c2ats_gdouble
}
typedef struct_c2ats__GdkEventPadGroupMode = $extype_struct"struct _GdkEventPadGroupMode" of {
  type = type_c2ats_GdkEventType,
  window = ptr (* cPtr0(type_c2ats_GdkWindow) *),
  send_event = type_c2ats_gint8,
  time = type_c2ats_guint32,
  group = type_c2ats_guint,
  mode = type_c2ats_guint
}
typedef union_c2ats__GdkEvent = $extype_struct"union _GdkEvent" of {
  type = type_c2ats_GdkEventType,
  any = type_c2ats_GdkEventAny,
  expose = type_c2ats_GdkEventExpose,
  visibility = type_c2ats_GdkEventVisibility,
  motion = type_c2ats_GdkEventMotion,
  button = type_c2ats_GdkEventButton,
  touch = type_c2ats_GdkEventTouch,
  scroll = type_c2ats_GdkEventScroll,
  key = type_c2ats_GdkEventKey,
  crossing = type_c2ats_GdkEventCrossing,
  focus_change = type_c2ats_GdkEventFocus,
  configure = type_c2ats_GdkEventConfigure,
  property = type_c2ats_GdkEventProperty,
  selection = type_c2ats_GdkEventSelection,
  owner_change = type_c2ats_GdkEventOwnerChange,
  proximity = type_c2ats_GdkEventProximity,
  dnd = type_c2ats_GdkEventDND,
  window_state = type_c2ats_GdkEventWindowState,
  setting = type_c2ats_GdkEventSetting,
  grab_broken = type_c2ats_GdkEventGrabBroken,
  touchpad_swipe = type_c2ats_GdkEventTouchpadSwipe,
  touchpad_pinch = type_c2ats_GdkEventTouchpadPinch,
  pad_button = type_c2ats_GdkEventPadButton,
  pad_axis = type_c2ats_GdkEventPadAxis,
  pad_group_mode = type_c2ats_GdkEventPadGroupMode
}
fun fun_c2ats_gdk_event_get_type: () -> type_c2ats_GType = "mac#gdk_event_get_type"
fun fun_c2ats_gdk_event_sequence_get_type: () -> type_c2ats_GType = "mac#gdk_event_sequence_get_type"
fun fun_c2ats_gdk_events_pending: () -> type_c2ats_gboolean = "mac#gdk_events_pending"
fun fun_c2ats_gdk_event_get: () -> [l1:addr] (ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) = "mac#gdk_event_get"
fun fun_c2ats_gdk_event_peek: () -> [l1:addr] (ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) = "mac#gdk_event_peek"
fun fun_c2ats_gdk_event_put: {l1:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) -> void = "mac#gdk_event_put"
fun fun_c2ats_gdk_event_new: (type_c2ats_GdkEventType) -> [l1:addr] (ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) = "mac#gdk_event_new"
fun fun_c2ats_gdk_event_copy: {l1:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkEvent, l2) | ptr l2) = "mac#gdk_event_copy"
fun fun_c2ats_gdk_event_free: {l1:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) -> void = "mac#gdk_event_free"
fun fun_c2ats_gdk_event_get_window: {l1:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gdk_event_get_window"
fun fun_c2ats_gdk_event_get_time: {l1:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) -> type_c2ats_guint32 = "mac#gdk_event_get_time"
fun fun_c2ats_gdk_event_get_state: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1), !ptr_v_1(type_c2ats_GdkModifierType, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_event_get_state"
fun fun_c2ats_gdk_event_get_coords: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gdk_event_get_coords"
fun fun_c2ats_gdk_event_get_root_coords: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gdk_event_get_root_coords"
fun fun_c2ats_gdk_event_get_button: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1), !ptr_v_1(type_c2ats_guint, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_event_get_button"
fun fun_c2ats_gdk_event_get_click_count: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1), !ptr_v_1(type_c2ats_guint, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_event_get_click_count"
fun fun_c2ats_gdk_event_get_keyval: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1), !ptr_v_1(type_c2ats_guint, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_event_get_keyval"
fun fun_c2ats_gdk_event_get_keycode: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1), !ptr_v_1(type_c2ats_guint16, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_event_get_keycode"
fun fun_c2ats_gdk_event_get_scroll_direction: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1), !ptr_v_1(type_c2ats_GdkScrollDirection, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_event_get_scroll_direction"
fun fun_c2ats_gdk_event_get_scroll_deltas: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gdk_event_get_scroll_deltas"
fun fun_c2ats_gdk_event_is_scroll_stop_event: {l1:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_event_is_scroll_stop_event"
fun fun_c2ats_gdk_event_get_axis: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1), !ptr_v_1(type_c2ats_gdouble, l2) | ptr l1, type_c2ats_GdkAxisUse, ptr l2) -> type_c2ats_gboolean = "mac#gdk_event_get_axis"
fun fun_c2ats_gdk_event_set_device: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1), !ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l1, ptr l2) -> void = "mac#gdk_event_set_device"
fun fun_c2ats_gdk_event_get_device: {l1:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l2) = "mac#gdk_event_get_device"
fun fun_c2ats_gdk_event_set_source_device: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1), !ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l1, ptr l2) -> void = "mac#gdk_event_set_source_device"
fun fun_c2ats_gdk_event_get_source_device: {l1:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l2) = "mac#gdk_event_get_source_device"
fun fun_c2ats_gdk_event_request_motions: {l1:addr} (!ptr_v_1(type_c2ats_GdkEventMotion, l1) | ptr l1) -> void = "mac#gdk_event_request_motions"
fun fun_c2ats_gdk_event_triggers_context_menu: {l1:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_event_triggers_context_menu"
fun fun_c2ats_gdk_events_get_distance: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1), !ptr_v_1(type_c2ats_GdkEvent, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gdk_events_get_distance"
fun fun_c2ats_gdk_events_get_angle: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1), !ptr_v_1(type_c2ats_GdkEvent, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gdk_events_get_angle"
fun fun_c2ats_gdk_events_get_center: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1), !ptr_v_1(type_c2ats_GdkEvent, l2), !ptr_v_1(type_c2ats_gdouble, l3), !ptr_v_1(type_c2ats_gdouble, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#gdk_events_get_center"
fun fun_c2ats_gdk_event_handler_set: (type_c2ats_GdkEventFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gdk_event_handler_set"
fun fun_c2ats_gdk_event_set_screen: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1), !ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l1, ptr l2) -> void = "mac#gdk_event_set_screen"
fun fun_c2ats_gdk_event_get_screen: {l1:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l2) = "mac#gdk_event_get_screen"
fun fun_c2ats_gdk_event_get_event_sequence: {l1:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkEventSequence, l2) | ptr l2) = "mac#gdk_event_get_event_sequence"
fun fun_c2ats_gdk_event_get_event_type: {l1:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) -> type_c2ats_GdkEventType = "mac#gdk_event_get_event_type"
fun fun_c2ats_gdk_event_get_seat: {l1:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkSeat, l2) | ptr l2) = "mac#gdk_event_get_seat"
fun fun_c2ats_gdk_set_show_events: (type_c2ats_gboolean) -> void = "mac#gdk_set_show_events"
fun fun_c2ats_gdk_get_show_events: () -> type_c2ats_gboolean = "mac#gdk_get_show_events"
fun fun_c2ats_gdk_setting_get: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_setting_get"
fun fun_c2ats_gdk_event_get_device_tool: {l1:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDeviceTool, l2) | ptr l2) = "mac#gdk_event_get_device_tool"
fun fun_c2ats_gdk_event_set_device_tool: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1), !ptr_v_1(type_c2ats_GdkDeviceTool, l2) | ptr l1, ptr l2) -> void = "mac#gdk_event_set_device_tool"
fun fun_c2ats_gdk_event_get_scancode: {l1:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) -> int = "mac#gdk_event_get_scancode"
fun fun_c2ats_gdk_event_get_pointer_emulated: {l1:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_event_get_pointer_emulated"
// File: /usr/include/gtk-3.0/gdk/gdkdevicemanager.h
fun fun_c2ats_gdk_device_manager_get_type: () -> type_c2ats_GType = "mac#gdk_device_manager_get_type"
fun fun_c2ats_gdk_device_manager_get_display: {l1:addr} (!ptr_v_1(type_c2ats_GdkDeviceManager, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDisplay, l2) | ptr l2) = "mac#gdk_device_manager_get_display"
fun fun_c2ats_gdk_device_manager_list_devices: {l1:addr} (!ptr_v_1(type_c2ats_GdkDeviceManager, l1) | ptr l1, type_c2ats_GdkDeviceType) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gdk_device_manager_list_devices"
fun fun_c2ats_gdk_device_manager_get_client_pointer: {l1:addr} (!ptr_v_1(type_c2ats_GdkDeviceManager, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l2) = "mac#gdk_device_manager_get_client_pointer"
// File: /usr/include/gtk-3.0/gdk/gdkdrawingcontext.h
abst@ype struct_c2ats__GdkDrawingContext // FIXME! Forward declaration.
typedef type_c2ats_GdkDrawingContext = struct_c2ats__GdkDrawingContext
abst@ype struct_c2ats__GdkDrawingContextClass // FIXME! Forward declaration.
typedef type_c2ats_GdkDrawingContextClass = struct_c2ats__GdkDrawingContextClass
fun fun_c2ats_gdk_drawing_context_get_type: () -> type_c2ats_GType = "mac#gdk_drawing_context_get_type"
fun fun_c2ats_gdk_drawing_context_get_window: {l1:addr} (!ptr_v_1(type_c2ats_GdkDrawingContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gdk_drawing_context_get_window"
fun fun_c2ats_gdk_drawing_context_get_clip: {l1:addr} (!ptr_v_1(type_c2ats_GdkDrawingContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l2) = "mac#gdk_drawing_context_get_clip"
fun fun_c2ats_gdk_drawing_context_is_valid: {l1:addr} (!ptr_v_1(type_c2ats_GdkDrawingContext, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_drawing_context_is_valid"
fun fun_c2ats_gdk_drawing_context_get_cairo_context: {l1:addr} (!ptr_v_1(type_c2ats_GdkDrawingContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_t, l2) | ptr l2) = "mac#gdk_drawing_context_get_cairo_context"
// File: /usr/include/gtk-3.0/gdk/gdkframetimings.h
abst@ype struct_c2ats__GdkFrameTimings // FIXME! Forward declaration.
typedef type_c2ats_GdkFrameTimings = struct_c2ats__GdkFrameTimings
fun fun_c2ats_gdk_frame_timings_get_type: () -> type_c2ats_GType = "mac#gdk_frame_timings_get_type"
fun fun_c2ats_gdk_frame_timings_ref: {l1:addr} (!ptr_v_1(type_c2ats_GdkFrameTimings, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkFrameTimings, l2) | ptr l2) = "mac#gdk_frame_timings_ref"
fun fun_c2ats_gdk_frame_timings_unref: {l1:addr} (!ptr_v_1(type_c2ats_GdkFrameTimings, l1) | ptr l1) -> void = "mac#gdk_frame_timings_unref"
fun fun_c2ats_gdk_frame_timings_get_frame_counter: {l1:addr} (!ptr_v_1(type_c2ats_GdkFrameTimings, l1) | ptr l1) -> type_c2ats_gint64 = "mac#gdk_frame_timings_get_frame_counter"
fun fun_c2ats_gdk_frame_timings_get_complete: {l1:addr} (!ptr_v_1(type_c2ats_GdkFrameTimings, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_frame_timings_get_complete"
fun fun_c2ats_gdk_frame_timings_get_frame_time: {l1:addr} (!ptr_v_1(type_c2ats_GdkFrameTimings, l1) | ptr l1) -> type_c2ats_gint64 = "mac#gdk_frame_timings_get_frame_time"
fun fun_c2ats_gdk_frame_timings_get_presentation_time: {l1:addr} (!ptr_v_1(type_c2ats_GdkFrameTimings, l1) | ptr l1) -> type_c2ats_gint64 = "mac#gdk_frame_timings_get_presentation_time"
fun fun_c2ats_gdk_frame_timings_get_refresh_interval: {l1:addr} (!ptr_v_1(type_c2ats_GdkFrameTimings, l1) | ptr l1) -> type_c2ats_gint64 = "mac#gdk_frame_timings_get_refresh_interval"
fun fun_c2ats_gdk_frame_timings_get_predicted_presentation_time: {l1:addr} (!ptr_v_1(type_c2ats_GdkFrameTimings, l1) | ptr l1) -> type_c2ats_gint64 = "mac#gdk_frame_timings_get_predicted_presentation_time"
// File: /usr/include/gtk-3.0/gdk/gdkframeclock.h
abst@ype struct_c2ats__GdkFrameClock // FIXME! Forward declaration.
typedef type_c2ats_GdkFrameClock = struct_c2ats__GdkFrameClock
abst@ype struct_c2ats__GdkFrameClockPrivate // FIXME! Forward declaration.
typedef type_c2ats_GdkFrameClockPrivate = struct_c2ats__GdkFrameClockPrivate
abst@ype struct_c2ats__GdkFrameClockClass // FIXME! Forward declaration.
typedef type_c2ats_GdkFrameClockClass = struct_c2ats__GdkFrameClockClass
typedef type_c2ats_GdkFrameClockPhase = int
#define enum_c2ats_GDK_FRAME_CLOCK_PHASE_NONE 0
#define enum_c2ats_GDK_FRAME_CLOCK_PHASE_FLUSH_EVENTS 1 << 0
#define enum_c2ats_GDK_FRAME_CLOCK_PHASE_BEFORE_PAINT 1 << 1
#define enum_c2ats_GDK_FRAME_CLOCK_PHASE_UPDATE 1 << 2
#define enum_c2ats_GDK_FRAME_CLOCK_PHASE_LAYOUT 1 << 3
#define enum_c2ats_GDK_FRAME_CLOCK_PHASE_PAINT 1 << 4
#define enum_c2ats_GDK_FRAME_CLOCK_PHASE_RESUME_EVENTS 1 << 5
#define enum_c2ats_GDK_FRAME_CLOCK_PHASE_AFTER_PAINT 1 << 6
fun fun_c2ats_gdk_frame_clock_get_type: () -> type_c2ats_GType = "mac#gdk_frame_clock_get_type"
fun fun_c2ats_gdk_frame_clock_get_frame_time: {l1:addr} (!ptr_v_1(type_c2ats_GdkFrameClock, l1) | ptr l1) -> type_c2ats_gint64 = "mac#gdk_frame_clock_get_frame_time"
fun fun_c2ats_gdk_frame_clock_request_phase: {l1:addr} (!ptr_v_1(type_c2ats_GdkFrameClock, l1) | ptr l1, type_c2ats_GdkFrameClockPhase) -> void = "mac#gdk_frame_clock_request_phase"
fun fun_c2ats_gdk_frame_clock_begin_updating: {l1:addr} (!ptr_v_1(type_c2ats_GdkFrameClock, l1) | ptr l1) -> void = "mac#gdk_frame_clock_begin_updating"
fun fun_c2ats_gdk_frame_clock_end_updating: {l1:addr} (!ptr_v_1(type_c2ats_GdkFrameClock, l1) | ptr l1) -> void = "mac#gdk_frame_clock_end_updating"
fun fun_c2ats_gdk_frame_clock_get_frame_counter: {l1:addr} (!ptr_v_1(type_c2ats_GdkFrameClock, l1) | ptr l1) -> type_c2ats_gint64 = "mac#gdk_frame_clock_get_frame_counter"
fun fun_c2ats_gdk_frame_clock_get_history_start: {l1:addr} (!ptr_v_1(type_c2ats_GdkFrameClock, l1) | ptr l1) -> type_c2ats_gint64 = "mac#gdk_frame_clock_get_history_start"
fun fun_c2ats_gdk_frame_clock_get_timings: {l1:addr} (!ptr_v_1(type_c2ats_GdkFrameClock, l1) | ptr l1, type_c2ats_gint64) -> [l2:addr] (ptr_v_1(type_c2ats_GdkFrameTimings, l2) | ptr l2) = "mac#gdk_frame_clock_get_timings"
fun fun_c2ats_gdk_frame_clock_get_current_timings: {l1:addr} (!ptr_v_1(type_c2ats_GdkFrameClock, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkFrameTimings, l2) | ptr l2) = "mac#gdk_frame_clock_get_current_timings"
fun fun_c2ats_gdk_frame_clock_get_refresh_info: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkFrameClock, l1), !ptr_v_1(type_c2ats_gint64, l2), !ptr_v_1(type_c2ats_gint64, l3) | ptr l1, type_c2ats_gint64, ptr l2, ptr l3) -> void = "mac#gdk_frame_clock_get_refresh_info"
// File: /usr/include/gtk-3.0/gdk/gdkwindow.h
abst@ype struct_c2ats__GdkGeometry // FIXME! Forward declaration.
typedef type_c2ats_GdkGeometry = struct_c2ats__GdkGeometry
abst@ype struct_c2ats__GdkWindowAttr // FIXME! Forward declaration.
typedef type_c2ats_GdkWindowAttr = struct_c2ats__GdkWindowAttr
abst@ype struct_c2ats__GdkWindowRedirect // FIXME! Forward declaration.
typedef type_c2ats_GdkWindowRedirect = struct_c2ats__GdkWindowRedirect
typedef type_c2ats_GdkWindowWindowClass = int
#define enum_c2ats_GDK_INPUT_OUTPUT 0
#define enum_c2ats_GDK_INPUT_ONLY 1
typedef type_c2ats_GdkWindowType = int
#define enum_c2ats_GDK_WINDOW_ROOT 0
#define enum_c2ats_GDK_WINDOW_TOPLEVEL 1
#define enum_c2ats_GDK_WINDOW_CHILD 2
#define enum_c2ats_GDK_WINDOW_TEMP 3
#define enum_c2ats_GDK_WINDOW_FOREIGN 4
#define enum_c2ats_GDK_WINDOW_OFFSCREEN 5
#define enum_c2ats_GDK_WINDOW_SUBSURFACE 6
typedef type_c2ats_GdkWindowAttributesType = int
#define enum_c2ats_GDK_WA_TITLE 1 << 1
#define enum_c2ats_GDK_WA_X 1 << 2
#define enum_c2ats_GDK_WA_Y 1 << 3
#define enum_c2ats_GDK_WA_CURSOR 1 << 4
#define enum_c2ats_GDK_WA_VISUAL 1 << 5
#define enum_c2ats_GDK_WA_WMCLASS 1 << 6
#define enum_c2ats_GDK_WA_NOREDIR 1 << 7
#define enum_c2ats_GDK_WA_TYPE_HINT 1 << 8
typedef type_c2ats_GdkWindowHints = int
#define enum_c2ats_GDK_HINT_POS 1 << 0
#define enum_c2ats_GDK_HINT_MIN_SIZE 1 << 1
#define enum_c2ats_GDK_HINT_MAX_SIZE 1 << 2
#define enum_c2ats_GDK_HINT_BASE_SIZE 1 << 3
#define enum_c2ats_GDK_HINT_ASPECT 1 << 4
#define enum_c2ats_GDK_HINT_RESIZE_INC 1 << 5
#define enum_c2ats_GDK_HINT_WIN_GRAVITY 1 << 6
#define enum_c2ats_GDK_HINT_USER_POS 1 << 7
#define enum_c2ats_GDK_HINT_USER_SIZE 1 << 8
typedef type_c2ats_GdkWMDecoration = int
#define enum_c2ats_GDK_DECOR_ALL 1 << 0
#define enum_c2ats_GDK_DECOR_BORDER 1 << 1
#define enum_c2ats_GDK_DECOR_RESIZEH 1 << 2
#define enum_c2ats_GDK_DECOR_TITLE 1 << 3
#define enum_c2ats_GDK_DECOR_MENU 1 << 4
#define enum_c2ats_GDK_DECOR_MINIMIZE 1 << 5
#define enum_c2ats_GDK_DECOR_MAXIMIZE 1 << 6
typedef type_c2ats_GdkWMFunction = int
#define enum_c2ats_GDK_FUNC_ALL 1 << 0
#define enum_c2ats_GDK_FUNC_RESIZE 1 << 1
#define enum_c2ats_GDK_FUNC_MOVE 1 << 2
#define enum_c2ats_GDK_FUNC_MINIMIZE 1 << 3
#define enum_c2ats_GDK_FUNC_MAXIMIZE 1 << 4
#define enum_c2ats_GDK_FUNC_CLOSE 1 << 5
typedef type_c2ats_GdkGravity = int
#define enum_c2ats_GDK_GRAVITY_NORTH_WEST 1
#define enum_c2ats_GDK_GRAVITY_NORTH 1 + 1
#define enum_c2ats_GDK_GRAVITY_NORTH_EAST 1 + 2
#define enum_c2ats_GDK_GRAVITY_WEST 1 + 3
#define enum_c2ats_GDK_GRAVITY_CENTER 1 + 4
#define enum_c2ats_GDK_GRAVITY_EAST 1 + 5
#define enum_c2ats_GDK_GRAVITY_SOUTH_WEST 1 + 6
#define enum_c2ats_GDK_GRAVITY_SOUTH 1 + 7
#define enum_c2ats_GDK_GRAVITY_SOUTH_EAST 1 + 8
#define enum_c2ats_GDK_GRAVITY_STATIC 1 + 9
typedef type_c2ats_GdkAnchorHints = int
#define enum_c2ats_GDK_ANCHOR_FLIP_X 1 << 0
#define enum_c2ats_GDK_ANCHOR_FLIP_Y 1 << 1
#define enum_c2ats_GDK_ANCHOR_SLIDE_X 1 << 2
#define enum_c2ats_GDK_ANCHOR_SLIDE_Y 1 << 3
#define enum_c2ats_GDK_ANCHOR_RESIZE_X 1 << 4
#define enum_c2ats_GDK_ANCHOR_RESIZE_Y 1 << 5
#define enum_c2ats_GDK_ANCHOR_FLIP GDK_ANCHOR_FLIP_X lor GDK_ANCHOR_FLIP_Y
#define enum_c2ats_GDK_ANCHOR_SLIDE GDK_ANCHOR_SLIDE_X lor GDK_ANCHOR_SLIDE_Y
#define enum_c2ats_GDK_ANCHOR_RESIZE GDK_ANCHOR_RESIZE_X lor GDK_ANCHOR_RESIZE_Y
typedef type_c2ats_GdkWindowEdge = int
#define enum_c2ats_GDK_WINDOW_EDGE_NORTH_WEST 0
#define enum_c2ats_GDK_WINDOW_EDGE_NORTH 1
#define enum_c2ats_GDK_WINDOW_EDGE_NORTH_EAST 2
#define enum_c2ats_GDK_WINDOW_EDGE_WEST 3
#define enum_c2ats_GDK_WINDOW_EDGE_EAST 4
#define enum_c2ats_GDK_WINDOW_EDGE_SOUTH_WEST 5
#define enum_c2ats_GDK_WINDOW_EDGE_SOUTH 6
#define enum_c2ats_GDK_WINDOW_EDGE_SOUTH_EAST 7
typedef type_c2ats_GdkFullscreenMode = int
#define enum_c2ats_GDK_FULLSCREEN_ON_CURRENT_MONITOR 0
#define enum_c2ats_GDK_FULLSCREEN_ON_ALL_MONITORS 1
typedef struct_c2ats__GdkWindowAttr = $extype_struct"struct _GdkWindowAttr" of {
  title = ptr (* cPtr0(type_c2ats_gchar) *),
  event_mask = type_c2ats_gint,
  x = type_c2ats_gint,
  y = type_c2ats_gint,
  width = type_c2ats_gint,
  height = type_c2ats_gint,
  wclass = type_c2ats_GdkWindowWindowClass,
  visual = ptr (* cPtr0(type_c2ats_GdkVisual) *),
  window_type = type_c2ats_GdkWindowType,
  cursor = ptr (* cPtr0(type_c2ats_GdkCursor) *),
  wmclass_name = ptr (* cPtr0(type_c2ats_gchar) *),
  wmclass_class = ptr (* cPtr0(type_c2ats_gchar) *),
  override_redirect = type_c2ats_gboolean,
  type_hint = type_c2ats_GdkWindowTypeHint
}
typedef struct_c2ats__GdkGeometry = $extype_struct"struct _GdkGeometry" of {
  min_width = type_c2ats_gint,
  min_height = type_c2ats_gint,
  max_width = type_c2ats_gint,
  max_height = type_c2ats_gint,
  base_width = type_c2ats_gint,
  base_height = type_c2ats_gint,
  width_inc = type_c2ats_gint,
  height_inc = type_c2ats_gint,
  min_aspect = type_c2ats_gdouble,
  max_aspect = type_c2ats_gdouble,
  win_gravity = type_c2ats_GdkGravity
}
abst@ype struct_c2ats__GdkWindowClass // FIXME! Forward declaration.
typedef type_c2ats_GdkWindowClass = struct_c2ats__GdkWindowClass
typedef struct_c2ats__GdkWindowClass = $extype_struct"struct _GdkWindowClass" of {
  parent_class = type_c2ats_GObjectClass,
  pick_embedded_child = {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gdouble, type_c2ats_gdouble) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2),
  to_embedder = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, type_c2ats_gdouble, type_c2ats_gdouble, ptr l2, ptr l3) -> void,
  from_embedder = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, type_c2ats_gdouble, type_c2ats_gdouble, ptr l2, ptr l3) -> void,
  create_surface = {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l2),
  _gdk_reserved1 = () -> void,
  _gdk_reserved2 = () -> void,
  _gdk_reserved3 = () -> void,
  _gdk_reserved4 = () -> void,
  _gdk_reserved5 = () -> void,
  _gdk_reserved6 = () -> void,
  _gdk_reserved7 = () -> void,
  _gdk_reserved8 = () -> void
}
fun fun_c2ats_gdk_window_get_type: () -> type_c2ats_GType = "mac#gdk_window_get_type"
fun fun_c2ats_gdk_window_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkWindowAttr, l2) | ptr l1, ptr l2, type_c2ats_gint) -> [l3:addr] (ptr_v_1(type_c2ats_GdkWindow, l3) | ptr l3) = "mac#gdk_window_new"
fun fun_c2ats_gdk_window_destroy: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_destroy"
fun fun_c2ats_gdk_window_get_window_type: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_GdkWindowType = "mac#gdk_window_get_window_type"
fun fun_c2ats_gdk_window_is_destroyed: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_window_is_destroyed"
fun fun_c2ats_gdk_window_get_visual: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkVisual, l2) | ptr l2) = "mac#gdk_window_get_visual"
fun fun_c2ats_gdk_window_get_screen: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l2) = "mac#gdk_window_get_screen"
fun fun_c2ats_gdk_window_get_display: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDisplay, l2) | ptr l2) = "mac#gdk_window_get_display"
fun fun_c2ats_gdk_window_at_pointer: {l1,l2:addr} (!ptr_v_1(type_c2ats_gint, l1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkWindow, l3) | ptr l3) = "mac#gdk_window_at_pointer"
fun fun_c2ats_gdk_window_show: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_show"
fun fun_c2ats_gdk_window_hide: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_hide"
fun fun_c2ats_gdk_window_withdraw: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_withdraw"
fun fun_c2ats_gdk_window_show_unraised: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_show_unraised"
fun fun_c2ats_gdk_window_move: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gdk_window_move"
fun fun_c2ats_gdk_window_resize: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gdk_window_resize"
fun fun_c2ats_gdk_window_move_resize: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gdk_window_move_resize"
fun fun_c2ats_gdk_window_reparent: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gdk_window_reparent"
fun fun_c2ats_gdk_window_raise: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_raise"
fun fun_c2ats_gdk_window_lower: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_lower"
fun fun_c2ats_gdk_window_restack: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gdk_window_restack"
fun fun_c2ats_gdk_window_focus: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_guint32) -> void = "mac#gdk_window_focus"
fun fun_c2ats_gdk_window_set_user_data: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#gdk_window_set_user_data"
fun fun_c2ats_gdk_window_set_override_redirect: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gdk_window_set_override_redirect"
fun fun_c2ats_gdk_window_get_accept_focus: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_window_get_accept_focus"
fun fun_c2ats_gdk_window_set_accept_focus: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gdk_window_set_accept_focus"
fun fun_c2ats_gdk_window_get_focus_on_map: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_window_get_focus_on_map"
fun fun_c2ats_gdk_window_set_focus_on_map: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gdk_window_set_focus_on_map"
fun fun_c2ats_gdk_window_add_filter: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_GdkFilterFunc, type_c2ats_gpointer) -> void = "mac#gdk_window_add_filter"
fun fun_c2ats_gdk_window_remove_filter: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_GdkFilterFunc, type_c2ats_gpointer) -> void = "mac#gdk_window_remove_filter"
fun fun_c2ats_gdk_window_scroll: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gdk_window_scroll"
fun fun_c2ats_gdk_window_move_region: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gdk_window_move_region"
fun fun_c2ats_gdk_window_ensure_native: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_window_ensure_native"
fun fun_c2ats_gdk_window_shape_combine_region: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gdk_window_shape_combine_region"
fun fun_c2ats_gdk_window_set_child_shapes: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_set_child_shapes"
fun fun_c2ats_gdk_window_get_composited: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_window_get_composited"
fun fun_c2ats_gdk_window_set_composited: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gdk_window_set_composited"
fun fun_c2ats_gdk_window_merge_child_shapes: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_merge_child_shapes"
fun fun_c2ats_gdk_window_input_shape_combine_region: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gdk_window_input_shape_combine_region"
fun fun_c2ats_gdk_window_set_child_input_shapes: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_set_child_input_shapes"
fun fun_c2ats_gdk_window_merge_child_input_shapes: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_merge_child_input_shapes"
fun fun_c2ats_gdk_window_set_pass_through: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gdk_window_set_pass_through"
fun fun_c2ats_gdk_window_get_pass_through: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_window_get_pass_through"
fun fun_c2ats_gdk_window_is_visible: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_window_is_visible"
fun fun_c2ats_gdk_window_is_viewable: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_window_is_viewable"
fun fun_c2ats_gdk_window_is_input_only: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_window_is_input_only"
fun fun_c2ats_gdk_window_is_shaped: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_window_is_shaped"
fun fun_c2ats_gdk_window_get_state: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_GdkWindowState = "mac#gdk_window_get_state"
fun fun_c2ats_gdk_window_set_static_gravities: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gdk_window_set_static_gravities"
typedef type_c2ats_GdkWindowInvalidateHandlerFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2) -> void
fun fun_c2ats_gdk_window_set_invalidate_handler: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_GdkWindowInvalidateHandlerFunc) -> void = "mac#gdk_window_set_invalidate_handler"
fun fun_c2ats_gdk_window_has_native: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_window_has_native"
fun fun_c2ats_gdk_window_set_type_hint: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_GdkWindowTypeHint) -> void = "mac#gdk_window_set_type_hint"
fun fun_c2ats_gdk_window_get_type_hint: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_GdkWindowTypeHint = "mac#gdk_window_get_type_hint"
fun fun_c2ats_gdk_window_get_modal_hint: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_window_get_modal_hint"
fun fun_c2ats_gdk_window_set_modal_hint: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gdk_window_set_modal_hint"
fun fun_c2ats_gdk_window_set_skip_taskbar_hint: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gdk_window_set_skip_taskbar_hint"
fun fun_c2ats_gdk_window_set_skip_pager_hint: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gdk_window_set_skip_pager_hint"
fun fun_c2ats_gdk_window_set_urgency_hint: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gdk_window_set_urgency_hint"
fun fun_c2ats_gdk_window_set_geometry_hints: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkGeometry, l2) | ptr l1, ptr l2, type_c2ats_GdkWindowHints) -> void = "mac#gdk_window_set_geometry_hints"
fun fun_c2ats_gdk_window_get_clip_region: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l2) = "mac#gdk_window_get_clip_region"
fun fun_c2ats_gdk_window_get_visible_region: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l2) = "mac#gdk_window_get_visible_region"
fun fun_c2ats_gdk_window_begin_paint_rect: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> void = "mac#gdk_window_begin_paint_rect"
fun fun_c2ats_gdk_window_mark_paint_from_clip: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2) -> void = "mac#gdk_window_mark_paint_from_clip"
fun fun_c2ats_gdk_window_begin_paint_region: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2) -> void = "mac#gdk_window_begin_paint_region"
fun fun_c2ats_gdk_window_end_paint: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_end_paint"
fun fun_c2ats_gdk_window_begin_draw_frame: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkDrawingContext, l3) | ptr l3) = "mac#gdk_window_begin_draw_frame"
fun fun_c2ats_gdk_window_end_draw_frame: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkDrawingContext, l2) | ptr l1, ptr l2) -> void = "mac#gdk_window_end_draw_frame"
fun fun_c2ats_gdk_window_flush: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_flush"
fun fun_c2ats_gdk_window_set_title: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gdk_window_set_title"
fun fun_c2ats_gdk_window_set_role: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gdk_window_set_role"
fun fun_c2ats_gdk_window_set_startup_id: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gdk_window_set_startup_id"
fun fun_c2ats_gdk_window_set_transient_for: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2) -> void = "mac#gdk_window_set_transient_for"
fun fun_c2ats_gdk_window_set_background: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkColor, l2) | ptr l1, ptr l2) -> void = "mac#gdk_window_set_background"
fun fun_c2ats_gdk_window_set_background_rgba: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, ptr l2) -> void = "mac#gdk_window_set_background_rgba"
fun fun_c2ats_gdk_window_set_background_pattern: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_cairo_pattern_t, l2) | ptr l1, ptr l2) -> void = "mac#gdk_window_set_background_pattern"
fun fun_c2ats_gdk_window_get_background_pattern: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_pattern_t, l2) | ptr l2) = "mac#gdk_window_get_background_pattern"
fun fun_c2ats_gdk_window_set_cursor: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkCursor, l2) | ptr l1, ptr l2) -> void = "mac#gdk_window_set_cursor"
fun fun_c2ats_gdk_window_get_cursor: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkCursor, l2) | ptr l2) = "mac#gdk_window_get_cursor"
fun fun_c2ats_gdk_window_set_device_cursor: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkDevice, l2), !ptr_v_1(type_c2ats_GdkCursor, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gdk_window_set_device_cursor"
fun fun_c2ats_gdk_window_get_device_cursor: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkCursor, l3) | ptr l3) = "mac#gdk_window_get_device_cursor"
fun fun_c2ats_gdk_window_get_user_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_gpointer, l2) | ptr l1, ptr l2) -> void = "mac#gdk_window_get_user_data"
fun fun_c2ats_gdk_window_get_geometry: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void = "mac#gdk_window_get_geometry"
fun fun_c2ats_gdk_window_get_width: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> int = "mac#gdk_window_get_width"
fun fun_c2ats_gdk_window_get_height: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> int = "mac#gdk_window_get_height"
fun fun_c2ats_gdk_window_get_position: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gdk_window_get_position"
fun fun_c2ats_gdk_window_get_origin: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gint = "mac#gdk_window_get_origin"
fun fun_c2ats_gdk_window_get_root_coords: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#gdk_window_get_root_coords"
fun fun_c2ats_gdk_window_coords_to_parent: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, type_c2ats_gdouble, type_c2ats_gdouble, ptr l2, ptr l3) -> void = "mac#gdk_window_coords_to_parent"
fun fun_c2ats_gdk_window_coords_from_parent: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, type_c2ats_gdouble, type_c2ats_gdouble, ptr l2, ptr l3) -> void = "mac#gdk_window_coords_from_parent"
fun fun_c2ats_gdk_window_get_root_origin: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gdk_window_get_root_origin"
fun fun_c2ats_gdk_window_get_frame_extents: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> void = "mac#gdk_window_get_frame_extents"
fun fun_c2ats_gdk_window_get_scale_factor: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_gint = "mac#gdk_window_get_scale_factor"
fun fun_c2ats_gdk_window_get_pointer: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_GdkModifierType, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GdkWindow, l5) | ptr l5) = "mac#gdk_window_get_pointer"
fun fun_c2ats_gdk_window_get_device_position: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkDevice, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_GdkModifierType, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GdkWindow, l6) | ptr l6) = "mac#gdk_window_get_device_position"
fun fun_c2ats_gdk_window_get_device_position_double: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkDevice, l2), !ptr_v_1(type_c2ats_gdouble, l3), !ptr_v_1(type_c2ats_gdouble, l4), !ptr_v_1(type_c2ats_GdkModifierType, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GdkWindow, l6) | ptr l6) = "mac#gdk_window_get_device_position_double"
fun fun_c2ats_gdk_window_get_parent: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gdk_window_get_parent"
fun fun_c2ats_gdk_window_get_toplevel: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gdk_window_get_toplevel"
fun fun_c2ats_gdk_window_get_effective_parent: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gdk_window_get_effective_parent"
fun fun_c2ats_gdk_window_get_effective_toplevel: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gdk_window_get_effective_toplevel"
fun fun_c2ats_gdk_window_get_children: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gdk_window_get_children"
fun fun_c2ats_gdk_window_peek_children: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gdk_window_peek_children"
fun fun_c2ats_gdk_window_get_children_with_user_data: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gdk_window_get_children_with_user_data"
fun fun_c2ats_gdk_window_get_events: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_GdkEventMask = "mac#gdk_window_get_events"
fun fun_c2ats_gdk_window_set_events: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_GdkEventMask) -> void = "mac#gdk_window_set_events"
fun fun_c2ats_gdk_window_set_device_events: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l1, ptr l2, type_c2ats_GdkEventMask) -> void = "mac#gdk_window_set_device_events"
fun fun_c2ats_gdk_window_get_device_events: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l1, ptr l2) -> type_c2ats_GdkEventMask = "mac#gdk_window_get_device_events"
fun fun_c2ats_gdk_window_set_source_events: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_GdkInputSource, type_c2ats_GdkEventMask) -> void = "mac#gdk_window_set_source_events"
fun fun_c2ats_gdk_window_get_source_events: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_GdkInputSource) -> type_c2ats_GdkEventMask = "mac#gdk_window_get_source_events"
fun fun_c2ats_gdk_window_set_icon_list: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GList, l2) | ptr l1, ptr l2) -> void = "mac#gdk_window_set_icon_list"
fun fun_c2ats_gdk_window_set_icon_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gdk_window_set_icon_name"
fun fun_c2ats_gdk_window_set_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2) -> void = "mac#gdk_window_set_group"
fun fun_c2ats_gdk_window_get_group: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gdk_window_get_group"
fun fun_c2ats_gdk_window_set_decorations: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_GdkWMDecoration) -> void = "mac#gdk_window_set_decorations"
fun fun_c2ats_gdk_window_get_decorations: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkWMDecoration, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_window_get_decorations"
fun fun_c2ats_gdk_window_set_functions: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_GdkWMFunction) -> void = "mac#gdk_window_set_functions"
fun fun_c2ats_gdk_window_create_similar_surface: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_cairo_content_t, int, int) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l2) = "mac#gdk_window_create_similar_surface"
fun fun_c2ats_gdk_window_create_similar_image_surface: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_cairo_format_t, int, int, int) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l2) = "mac#gdk_window_create_similar_image_surface"
fun fun_c2ats_gdk_window_beep: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_beep"
fun fun_c2ats_gdk_window_iconify: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_iconify"
fun fun_c2ats_gdk_window_deiconify: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_deiconify"
fun fun_c2ats_gdk_window_stick: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_stick"
fun fun_c2ats_gdk_window_unstick: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_unstick"
fun fun_c2ats_gdk_window_maximize: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_maximize"
fun fun_c2ats_gdk_window_unmaximize: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_unmaximize"
fun fun_c2ats_gdk_window_fullscreen: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_fullscreen"
fun fun_c2ats_gdk_window_fullscreen_on_monitor: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gdk_window_fullscreen_on_monitor"
fun fun_c2ats_gdk_window_set_fullscreen_mode: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_GdkFullscreenMode) -> void = "mac#gdk_window_set_fullscreen_mode"
fun fun_c2ats_gdk_window_get_fullscreen_mode: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_GdkFullscreenMode = "mac#gdk_window_get_fullscreen_mode"
fun fun_c2ats_gdk_window_unfullscreen: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_unfullscreen"
fun fun_c2ats_gdk_window_set_keep_above: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gdk_window_set_keep_above"
fun fun_c2ats_gdk_window_set_keep_below: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gdk_window_set_keep_below"
fun fun_c2ats_gdk_window_set_opacity: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gdk_window_set_opacity"
fun fun_c2ats_gdk_window_register_dnd: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_register_dnd"
fun fun_c2ats_gdk_window_get_drag_protocol: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_2(type_c2ats_GdkWindow, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_GdkDragProtocol = "mac#gdk_window_get_drag_protocol"
fun fun_c2ats_gdk_window_begin_resize_drag: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_GdkWindowEdge, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_guint32) -> void = "mac#gdk_window_begin_resize_drag"
fun fun_c2ats_gdk_window_begin_resize_drag_for_device: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l1, type_c2ats_GdkWindowEdge, ptr l2, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_guint32) -> void = "mac#gdk_window_begin_resize_drag_for_device"
fun fun_c2ats_gdk_window_begin_move_drag: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_guint32) -> void = "mac#gdk_window_begin_move_drag"
fun fun_c2ats_gdk_window_begin_move_drag_for_device: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_guint32) -> void = "mac#gdk_window_begin_move_drag_for_device"
fun fun_c2ats_gdk_window_invalidate_rect: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gdk_window_invalidate_rect"
fun fun_c2ats_gdk_window_invalidate_region: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gdk_window_invalidate_region"
typedef type_c2ats_GdkWindowChildFunc = {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean
fun fun_c2ats_gdk_window_invalidate_maybe_recurse: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2, type_c2ats_GdkWindowChildFunc, type_c2ats_gpointer) -> void = "mac#gdk_window_invalidate_maybe_recurse"
fun fun_c2ats_gdk_window_get_update_area: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l2) = "mac#gdk_window_get_update_area"
fun fun_c2ats_gdk_window_freeze_updates: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_freeze_updates"
fun fun_c2ats_gdk_window_thaw_updates: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_thaw_updates"
fun fun_c2ats_gdk_window_freeze_toplevel_updates_libgtk_only: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_freeze_toplevel_updates_libgtk_only"
fun fun_c2ats_gdk_window_thaw_toplevel_updates_libgtk_only: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_thaw_toplevel_updates_libgtk_only"
fun fun_c2ats_gdk_window_process_all_updates: () -> void = "mac#gdk_window_process_all_updates"
fun fun_c2ats_gdk_window_process_updates: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gdk_window_process_updates"
fun fun_c2ats_gdk_window_set_debug_updates: (type_c2ats_gboolean) -> void = "mac#gdk_window_set_debug_updates"
fun fun_c2ats_gdk_window_constrain_size: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkGeometry, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_GdkWindowHints, type_c2ats_gint, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#gdk_window_constrain_size"
fun fun_c2ats_gdk_window_enable_synchronized_configure: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_enable_synchronized_configure"
fun fun_c2ats_gdk_window_configure_finished: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_configure_finished"
fun fun_c2ats_gdk_get_default_root_window: () -> [l1:addr] (ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) = "mac#gdk_get_default_root_window"
fun fun_c2ats_gdk_offscreen_window_get_surface: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l2) = "mac#gdk_offscreen_window_get_surface"
fun fun_c2ats_gdk_offscreen_window_set_embedder: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2) -> void = "mac#gdk_offscreen_window_set_embedder"
fun fun_c2ats_gdk_offscreen_window_get_embedder: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gdk_offscreen_window_get_embedder"
fun fun_c2ats_gdk_window_geometry_changed: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_window_geometry_changed"
fun fun_c2ats_gdk_window_set_support_multidevice: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gdk_window_set_support_multidevice"
fun fun_c2ats_gdk_window_get_support_multidevice: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_window_get_support_multidevice"
fun fun_c2ats_gdk_window_get_frame_clock: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkFrameClock, l2) | ptr l2) = "mac#gdk_window_get_frame_clock"
fun fun_c2ats_gdk_window_set_opaque_region: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2) -> void = "mac#gdk_window_set_opaque_region"
fun fun_c2ats_gdk_window_set_event_compression: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gdk_window_set_event_compression"
fun fun_c2ats_gdk_window_get_event_compression: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_window_get_event_compression"
fun fun_c2ats_gdk_window_set_shadow_width: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gdk_window_set_shadow_width"
fun fun_c2ats_gdk_window_show_window_menu: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkEvent, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_window_show_window_menu"
fun fun_c2ats_gdk_window_create_gl_context: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkGLContext, l3) | ptr l3) = "mac#gdk_window_create_gl_context"
// File: /usr/include/gtk-3.0/gdk/gdkseat.h
typedef type_c2ats_GdkSeatCapabilities = int
#define enum_c2ats_GDK_SEAT_CAPABILITY_NONE 0
#define enum_c2ats_GDK_SEAT_CAPABILITY_POINTER 1 << 0
#define enum_c2ats_GDK_SEAT_CAPABILITY_TOUCH 1 << 1
#define enum_c2ats_GDK_SEAT_CAPABILITY_TABLET_STYLUS 1 << 2
#define enum_c2ats_GDK_SEAT_CAPABILITY_KEYBOARD 1 << 3
#define enum_c2ats_GDK_SEAT_CAPABILITY_ALL_POINTING GDK_SEAT_CAPABILITY_POINTER lor GDK_SEAT_CAPABILITY_TOUCH lor GDK_SEAT_CAPABILITY_TABLET_STYLUS
#define enum_c2ats_GDK_SEAT_CAPABILITY_ALL GDK_SEAT_CAPABILITY_ALL_POINTING lor GDK_SEAT_CAPABILITY_KEYBOARD
typedef type_c2ats_GdkSeatGrabPrepareFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkSeat, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void
typedef struct_c2ats__GdkSeat = $extype_struct"struct _GdkSeat" of {
  parent_instance = type_c2ats_GObject
}
fun fun_c2ats_gdk_seat_get_type: () -> type_c2ats_GType = "mac#gdk_seat_get_type"
fun fun_c2ats_gdk_seat_grab: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GdkSeat, l1), !ptr_v_1(type_c2ats_GdkWindow, l2), !ptr_v_1(type_c2ats_GdkCursor, l3), !ptr_v_1(type_c2ats_GdkEvent, l4) | ptr l1, ptr l2, type_c2ats_GdkSeatCapabilities, type_c2ats_gboolean, ptr l3, ptr l4, type_c2ats_GdkSeatGrabPrepareFunc, type_c2ats_gpointer) -> type_c2ats_GdkGrabStatus = "mac#gdk_seat_grab"
fun fun_c2ats_gdk_seat_ungrab: {l1:addr} (!ptr_v_1(type_c2ats_GdkSeat, l1) | ptr l1) -> void = "mac#gdk_seat_ungrab"
fun fun_c2ats_gdk_seat_get_display: {l1:addr} (!ptr_v_1(type_c2ats_GdkSeat, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDisplay, l2) | ptr l2) = "mac#gdk_seat_get_display"
fun fun_c2ats_gdk_seat_get_capabilities: {l1:addr} (!ptr_v_1(type_c2ats_GdkSeat, l1) | ptr l1) -> type_c2ats_GdkSeatCapabilities = "mac#gdk_seat_get_capabilities"
fun fun_c2ats_gdk_seat_get_slaves: {l1:addr} (!ptr_v_1(type_c2ats_GdkSeat, l1) | ptr l1, type_c2ats_GdkSeatCapabilities) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gdk_seat_get_slaves"
fun fun_c2ats_gdk_seat_get_pointer: {l1:addr} (!ptr_v_1(type_c2ats_GdkSeat, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l2) = "mac#gdk_seat_get_pointer"
fun fun_c2ats_gdk_seat_get_keyboard: {l1:addr} (!ptr_v_1(type_c2ats_GdkSeat, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l2) = "mac#gdk_seat_get_keyboard"
// File: /usr/include/gtk-3.0/gdk/gdkrectangle.h
fun fun_c2ats_gdk_rectangle_intersect: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkRectangle, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2), !ptr_v_1(type_c2ats_GdkRectangle, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gdk_rectangle_intersect"
fun fun_c2ats_gdk_rectangle_union: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkRectangle, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2), !ptr_v_1(type_c2ats_GdkRectangle, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gdk_rectangle_union"
fun fun_c2ats_gdk_rectangle_equal: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkRectangle, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_rectangle_equal"
fun fun_c2ats_gdk_rectangle_get_type: () -> type_c2ats_GType = "mac#gdk_rectangle_get_type"
// File: /usr/include/gtk-3.0/gdk/gdkmonitor.h
abst@ype struct_c2ats__GdkMonitor // FIXME! Forward declaration.
typedef type_c2ats_GdkMonitor = struct_c2ats__GdkMonitor
abst@ype struct_c2ats__GdkMonitorClass // FIXME! Forward declaration.
typedef type_c2ats_GdkMonitorClass = struct_c2ats__GdkMonitorClass
typedef type_c2ats_GdkSubpixelLayout = int
#define enum_c2ats_GDK_SUBPIXEL_LAYOUT_UNKNOWN 0
#define enum_c2ats_GDK_SUBPIXEL_LAYOUT_NONE 1
#define enum_c2ats_GDK_SUBPIXEL_LAYOUT_HORIZONTAL_RGB 2
#define enum_c2ats_GDK_SUBPIXEL_LAYOUT_HORIZONTAL_BGR 3
#define enum_c2ats_GDK_SUBPIXEL_LAYOUT_VERTICAL_RGB 4
#define enum_c2ats_GDK_SUBPIXEL_LAYOUT_VERTICAL_BGR 5
fun fun_c2ats_gdk_monitor_get_type: () -> type_c2ats_GType = "mac#gdk_monitor_get_type"
fun fun_c2ats_gdk_monitor_get_display: {l1:addr} (!ptr_v_1(type_c2ats_GdkMonitor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDisplay, l2) | ptr l2) = "mac#gdk_monitor_get_display"
fun fun_c2ats_gdk_monitor_get_geometry: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkMonitor, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> void = "mac#gdk_monitor_get_geometry"
fun fun_c2ats_gdk_monitor_get_workarea: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkMonitor, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> void = "mac#gdk_monitor_get_workarea"
fun fun_c2ats_gdk_monitor_get_width_mm: {l1:addr} (!ptr_v_1(type_c2ats_GdkMonitor, l1) | ptr l1) -> int = "mac#gdk_monitor_get_width_mm"
fun fun_c2ats_gdk_monitor_get_height_mm: {l1:addr} (!ptr_v_1(type_c2ats_GdkMonitor, l1) | ptr l1) -> int = "mac#gdk_monitor_get_height_mm"
fun fun_c2ats_gdk_monitor_get_manufacturer: {l1:addr} (!ptr_v_1(type_c2ats_GdkMonitor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#gdk_monitor_get_manufacturer"
fun fun_c2ats_gdk_monitor_get_model: {l1:addr} (!ptr_v_1(type_c2ats_GdkMonitor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#gdk_monitor_get_model"
fun fun_c2ats_gdk_monitor_get_scale_factor: {l1:addr} (!ptr_v_1(type_c2ats_GdkMonitor, l1) | ptr l1) -> int = "mac#gdk_monitor_get_scale_factor"
fun fun_c2ats_gdk_monitor_get_refresh_rate: {l1:addr} (!ptr_v_1(type_c2ats_GdkMonitor, l1) | ptr l1) -> int = "mac#gdk_monitor_get_refresh_rate"
fun fun_c2ats_gdk_monitor_get_subpixel_layout: {l1:addr} (!ptr_v_1(type_c2ats_GdkMonitor, l1) | ptr l1) -> type_c2ats_GdkSubpixelLayout = "mac#gdk_monitor_get_subpixel_layout"
fun fun_c2ats_gdk_monitor_is_primary: {l1:addr} (!ptr_v_1(type_c2ats_GdkMonitor, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_monitor_is_primary"
// File: /usr/include/gtk-3.0/gdk/gdkdisplay.h
fun fun_c2ats_gdk_display_get_type: () -> type_c2ats_GType = "mac#gdk_display_get_type"
fun fun_c2ats_gdk_display_open: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDisplay, l2) | ptr l2) = "mac#gdk_display_open"
fun fun_c2ats_gdk_display_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gdk_display_get_name"
fun fun_c2ats_gdk_display_get_n_screens: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> type_c2ats_gint = "mac#gdk_display_get_n_screens"
fun fun_c2ats_gdk_display_get_screen: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l2) = "mac#gdk_display_get_screen"
fun fun_c2ats_gdk_display_get_default_screen: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l2) = "mac#gdk_display_get_default_screen"
fun fun_c2ats_gdk_display_pointer_ungrab: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1, type_c2ats_guint32) -> void = "mac#gdk_display_pointer_ungrab"
fun fun_c2ats_gdk_display_keyboard_ungrab: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1, type_c2ats_guint32) -> void = "mac#gdk_display_keyboard_ungrab"
fun fun_c2ats_gdk_display_pointer_is_grabbed: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_display_pointer_is_grabbed"
fun fun_c2ats_gdk_display_device_is_grabbed: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1), !ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_display_device_is_grabbed"
fun fun_c2ats_gdk_display_beep: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> void = "mac#gdk_display_beep"
fun fun_c2ats_gdk_display_sync: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> void = "mac#gdk_display_sync"
fun fun_c2ats_gdk_display_flush: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> void = "mac#gdk_display_flush"
fun fun_c2ats_gdk_display_close: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> void = "mac#gdk_display_close"
fun fun_c2ats_gdk_display_is_closed: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_display_is_closed"
fun fun_c2ats_gdk_display_list_devices: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gdk_display_list_devices"
fun fun_c2ats_gdk_display_get_event: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkEvent, l2) | ptr l2) = "mac#gdk_display_get_event"
fun fun_c2ats_gdk_display_peek_event: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkEvent, l2) | ptr l2) = "mac#gdk_display_peek_event"
fun fun_c2ats_gdk_display_put_event: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1), !ptr_v_1(type_c2ats_GdkEvent, l2) | ptr l1, ptr l2) -> void = "mac#gdk_display_put_event"
fun fun_c2ats_gdk_display_has_pending: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_display_has_pending"
fun fun_c2ats_gdk_display_set_double_click_time: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gdk_display_set_double_click_time"
fun fun_c2ats_gdk_display_set_double_click_distance: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gdk_display_set_double_click_distance"
fun fun_c2ats_gdk_display_get_default: () -> [l1:addr] (ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) = "mac#gdk_display_get_default"
fun fun_c2ats_gdk_display_get_pointer: {l1,l2,l2_1,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1), !ptr_v_2(type_c2ats_GdkScreen, l2, l2_1), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_GdkModifierType, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void = "mac#gdk_display_get_pointer"
fun fun_c2ats_gdk_display_get_window_at_pointer: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GdkWindow, l4) | ptr l4) = "mac#gdk_display_get_window_at_pointer"
fun fun_c2ats_gdk_display_warp_pointer: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1), !ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gdk_display_warp_pointer"
fun fun_c2ats_gdk_display_open_default_libgtk_only: () -> [l1:addr] (ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) = "mac#gdk_display_open_default_libgtk_only"
fun fun_c2ats_gdk_display_supports_cursor_alpha: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_display_supports_cursor_alpha"
fun fun_c2ats_gdk_display_supports_cursor_color: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_display_supports_cursor_color"
fun fun_c2ats_gdk_display_get_default_cursor_size: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> type_c2ats_guint = "mac#gdk_display_get_default_cursor_size"
fun fun_c2ats_gdk_display_get_maximal_cursor_size: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1), !ptr_v_1(type_c2ats_guint, l2), !ptr_v_1(type_c2ats_guint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gdk_display_get_maximal_cursor_size"
fun fun_c2ats_gdk_display_get_default_group: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gdk_display_get_default_group"
fun fun_c2ats_gdk_display_supports_selection_notification: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_display_supports_selection_notification"
fun fun_c2ats_gdk_display_request_selection_notification: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1, type_c2ats_GdkAtom) -> type_c2ats_gboolean = "mac#gdk_display_request_selection_notification"
fun fun_c2ats_gdk_display_supports_clipboard_persistence: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_display_supports_clipboard_persistence"
fun fun_c2ats_gdk_display_store_clipboard: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1), !ptr_v_1(type_c2ats_GdkWindow, l2), !ptr_v_1(type_c2ats_GdkAtom, l3) | ptr l1, ptr l2, type_c2ats_guint32, ptr l3, type_c2ats_gint) -> void = "mac#gdk_display_store_clipboard"
fun fun_c2ats_gdk_display_supports_shapes: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_display_supports_shapes"
fun fun_c2ats_gdk_display_supports_input_shapes: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_display_supports_input_shapes"
fun fun_c2ats_gdk_display_supports_composite: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_display_supports_composite"
fun fun_c2ats_gdk_display_notify_startup_complete: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gdk_display_notify_startup_complete"
fun fun_c2ats_gdk_display_get_device_manager: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDeviceManager, l2) | ptr l2) = "mac#gdk_display_get_device_manager"
fun fun_c2ats_gdk_display_get_app_launch_context: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkAppLaunchContext, l2) | ptr l2) = "mac#gdk_display_get_app_launch_context"
fun fun_c2ats_gdk_display_get_default_seat: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkSeat, l2) | ptr l2) = "mac#gdk_display_get_default_seat"
fun fun_c2ats_gdk_display_list_seats: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gdk_display_list_seats"
fun fun_c2ats_gdk_display_get_n_monitors: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> int = "mac#gdk_display_get_n_monitors"
fun fun_c2ats_gdk_display_get_monitor: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1, int) -> [l2:addr] (ptr_v_1(type_c2ats_GdkMonitor, l2) | ptr l2) = "mac#gdk_display_get_monitor"
fun fun_c2ats_gdk_display_get_primary_monitor: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkMonitor, l2) | ptr l2) = "mac#gdk_display_get_primary_monitor"
fun fun_c2ats_gdk_display_get_monitor_at_point: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1, int, int) -> [l2:addr] (ptr_v_1(type_c2ats_GdkMonitor, l2) | ptr l2) = "mac#gdk_display_get_monitor_at_point"
fun fun_c2ats_gdk_display_get_monitor_at_window: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkMonitor, l3) | ptr l3) = "mac#gdk_display_get_monitor_at_window"
// File: /usr/include/gtk-3.0/gdk/gdkscreen.h
fun fun_c2ats_gdk_screen_get_type: () -> type_c2ats_GType = "mac#gdk_screen_get_type"
fun fun_c2ats_gdk_screen_get_system_visual: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkVisual, l2) | ptr l2) = "mac#gdk_screen_get_system_visual"
fun fun_c2ats_gdk_screen_get_rgba_visual: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkVisual, l2) | ptr l2) = "mac#gdk_screen_get_rgba_visual"
fun fun_c2ats_gdk_screen_is_composited: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_screen_is_composited"
fun fun_c2ats_gdk_screen_get_root_window: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gdk_screen_get_root_window"
fun fun_c2ats_gdk_screen_get_display: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDisplay, l2) | ptr l2) = "mac#gdk_screen_get_display"
fun fun_c2ats_gdk_screen_get_number: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> type_c2ats_gint = "mac#gdk_screen_get_number"
fun fun_c2ats_gdk_screen_get_width: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> type_c2ats_gint = "mac#gdk_screen_get_width"
fun fun_c2ats_gdk_screen_get_height: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> type_c2ats_gint = "mac#gdk_screen_get_height"
fun fun_c2ats_gdk_screen_get_width_mm: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> type_c2ats_gint = "mac#gdk_screen_get_width_mm"
fun fun_c2ats_gdk_screen_get_height_mm: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> type_c2ats_gint = "mac#gdk_screen_get_height_mm"
fun fun_c2ats_gdk_screen_list_visuals: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gdk_screen_list_visuals"
fun fun_c2ats_gdk_screen_get_toplevel_windows: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gdk_screen_get_toplevel_windows"
fun fun_c2ats_gdk_screen_make_display_name: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gdk_screen_make_display_name"
fun fun_c2ats_gdk_screen_get_n_monitors: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> type_c2ats_gint = "mac#gdk_screen_get_n_monitors"
fun fun_c2ats_gdk_screen_get_primary_monitor: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> type_c2ats_gint = "mac#gdk_screen_get_primary_monitor"
fun fun_c2ats_gdk_screen_get_monitor_geometry: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#gdk_screen_get_monitor_geometry"
fun fun_c2ats_gdk_screen_get_monitor_workarea: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#gdk_screen_get_monitor_workarea"
fun fun_c2ats_gdk_screen_get_monitor_at_point: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gint = "mac#gdk_screen_get_monitor_at_point"
fun fun_c2ats_gdk_screen_get_monitor_at_window: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gdk_screen_get_monitor_at_window"
fun fun_c2ats_gdk_screen_get_monitor_width_mm: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gint = "mac#gdk_screen_get_monitor_width_mm"
fun fun_c2ats_gdk_screen_get_monitor_height_mm: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gint = "mac#gdk_screen_get_monitor_height_mm"
fun fun_c2ats_gdk_screen_get_monitor_plug_name: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gdk_screen_get_monitor_plug_name"
fun fun_c2ats_gdk_screen_get_monitor_scale_factor: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gint = "mac#gdk_screen_get_monitor_scale_factor"
fun fun_c2ats_gdk_screen_get_default: () -> [l1:addr] (ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) = "mac#gdk_screen_get_default"
fun fun_c2ats_gdk_screen_get_setting: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gdk_screen_get_setting"
fun fun_c2ats_gdk_screen_set_font_options: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1), !ptr_v_1(type_c2ats_cairo_font_options_t, l2) | ptr l1, ptr l2) -> void = "mac#gdk_screen_set_font_options"
fun fun_c2ats_gdk_screen_get_font_options: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_font_options_t, l2) | ptr l2) = "mac#gdk_screen_get_font_options"
fun fun_c2ats_gdk_screen_set_resolution: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gdk_screen_set_resolution"
fun fun_c2ats_gdk_screen_get_resolution: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gdk_screen_get_resolution"
fun fun_c2ats_gdk_screen_get_active_window: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gdk_screen_get_active_window"
fun fun_c2ats_gdk_screen_get_window_stack: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gdk_screen_get_window_stack"
// File: /usr/include/gtk-3.0/gdk/gdkapplaunchcontext.h
fun fun_c2ats_gdk_app_launch_context_get_type: () -> type_c2ats_GType = "mac#gdk_app_launch_context_get_type"
fun fun_c2ats_gdk_app_launch_context_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GdkAppLaunchContext, l1) | ptr l1) = "mac#gdk_app_launch_context_new"
fun fun_c2ats_gdk_app_launch_context_set_display: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkAppLaunchContext, l1), !ptr_v_1(type_c2ats_GdkDisplay, l2) | ptr l1, ptr l2) -> void = "mac#gdk_app_launch_context_set_display"
fun fun_c2ats_gdk_app_launch_context_set_screen: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkAppLaunchContext, l1), !ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l1, ptr l2) -> void = "mac#gdk_app_launch_context_set_screen"
fun fun_c2ats_gdk_app_launch_context_set_desktop: {l1:addr} (!ptr_v_1(type_c2ats_GdkAppLaunchContext, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gdk_app_launch_context_set_desktop"
fun fun_c2ats_gdk_app_launch_context_set_timestamp: {l1:addr} (!ptr_v_1(type_c2ats_GdkAppLaunchContext, l1) | ptr l1, type_c2ats_guint32) -> void = "mac#gdk_app_launch_context_set_timestamp"
fun fun_c2ats_gdk_app_launch_context_set_icon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkAppLaunchContext, l1), !ptr_v_1(type_c2ats_GIcon, l2) | ptr l1, ptr l2) -> void = "mac#gdk_app_launch_context_set_icon"
fun fun_c2ats_gdk_app_launch_context_set_icon_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkAppLaunchContext, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#gdk_app_launch_context_set_icon_name"
// File: /usr/include/gtk-3.0/gdk/deprecated/gdkcolor.h
typedef struct_c2ats__GdkColor = $extype_struct"struct _GdkColor" of {
  pixel = type_c2ats_guint32,
  red = type_c2ats_guint16,
  green = type_c2ats_guint16,
  blue = type_c2ats_guint16
}
fun fun_c2ats_gdk_color_get_type: () -> type_c2ats_GType = "mac#gdk_color_get_type"
fun fun_c2ats_gdk_color_copy: {l1:addr} (!ptr_v_1(type_c2ats_GdkColor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkColor, l2) | ptr l2) = "mac#gdk_color_copy"
fun fun_c2ats_gdk_color_free: {l1:addr} (!ptr_v_1(type_c2ats_GdkColor, l1) | ptr l1) -> void = "mac#gdk_color_free"
fun fun_c2ats_gdk_color_hash: {l1:addr} (!ptr_v_1(type_c2ats_GdkColor, l1) | ptr l1) -> type_c2ats_guint = "mac#gdk_color_hash"
fun fun_c2ats_gdk_color_equal: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkColor, l1), !ptr_v_1(type_c2ats_GdkColor, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_color_equal"
fun fun_c2ats_gdk_color_parse: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GdkColor, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_color_parse"
fun fun_c2ats_gdk_color_to_string: {l1:addr} (!ptr_v_1(type_c2ats_GdkColor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gdk_color_to_string"
// File: /usr/include/gtk-3.0/gdk/gdkrgba.h
typedef struct_c2ats__GdkRGBA = $extype_struct"struct _GdkRGBA" of {
  red = type_c2ats_gdouble,
  green = type_c2ats_gdouble,
  blue = type_c2ats_gdouble,
  alpha = type_c2ats_gdouble
}
fun fun_c2ats_gdk_rgba_get_type: () -> type_c2ats_GType = "mac#gdk_rgba_get_type"
fun fun_c2ats_gdk_rgba_copy: {l1:addr} (!ptr_v_1(type_c2ats_GdkRGBA, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l2) = "mac#gdk_rgba_copy"
fun fun_c2ats_gdk_rgba_free: {l1:addr} (!ptr_v_1(type_c2ats_GdkRGBA, l1) | ptr l1) -> void = "mac#gdk_rgba_free"
fun fun_c2ats_gdk_rgba_hash: (type_c2ats_gconstpointer) -> type_c2ats_guint = "mac#gdk_rgba_hash"
fun fun_c2ats_gdk_rgba_equal: (type_c2ats_gconstpointer, type_c2ats_gconstpointer) -> type_c2ats_gboolean = "mac#gdk_rgba_equal"
fun fun_c2ats_gdk_rgba_parse: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkRGBA, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_rgba_parse"
fun fun_c2ats_gdk_rgba_to_string: {l1:addr} (!ptr_v_1(type_c2ats_GdkRGBA, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gdk_rgba_to_string"
// File: /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-features.h
macdef takeout_c2ats_gdk_pixbuf_major_version = $extval([l1:addr] (ptr_v_1(type_c2ats_guint, l1) | ptr l1), "&gdk_pixbuf_major_version")
praxi addback_c2ats_gdk_pixbuf_major_version {l1:addr} (ptr_v_1(type_c2ats_guint, l1) | ptr l1): void
macdef takeout_c2ats_gdk_pixbuf_minor_version = $extval([l1:addr] (ptr_v_1(type_c2ats_guint, l1) | ptr l1), "&gdk_pixbuf_minor_version")
praxi addback_c2ats_gdk_pixbuf_minor_version {l1:addr} (ptr_v_1(type_c2ats_guint, l1) | ptr l1): void
macdef takeout_c2ats_gdk_pixbuf_micro_version = $extval([l1:addr] (ptr_v_1(type_c2ats_guint, l1) | ptr l1), "&gdk_pixbuf_micro_version")
praxi addback_c2ats_gdk_pixbuf_micro_version {l1:addr} (ptr_v_1(type_c2ats_guint, l1) | ptr l1): void
macdef takeout_c2ats_gdk_pixbuf_version = $extval([l1,l1_1:addr] (ptr_v_2(char, l1, l1_1) | ptr l1), "&gdk_pixbuf_version")
praxi addback_c2ats_gdk_pixbuf_version {l1,l1_1:addr} (ptr_v_2(char, l1, l1_1) | ptr l1): void
// File: /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h
typedef type_c2ats_GdkPixbufAlphaMode = int
#define enum_c2ats_GDK_PIXBUF_ALPHA_BILEVEL 0
#define enum_c2ats_GDK_PIXBUF_ALPHA_FULL 1
typedef type_c2ats_GdkColorspace = int
#define enum_c2ats_GDK_COLORSPACE_RGB 0
abst@ype struct_c2ats__GdkPixbuf // FIXME! Forward declaration.
typedef type_c2ats_GdkPixbuf = struct_c2ats__GdkPixbuf
typedef type_c2ats_GdkPixbufDestroyNotify = {l1:addr} (!ptr_v_1(type_c2ats_guchar, l1) | ptr l1, type_c2ats_gpointer) -> void
typedef type_c2ats_GdkPixbufError = int
#define enum_c2ats_GDK_PIXBUF_ERROR_CORRUPT_IMAGE 0
#define enum_c2ats_GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY 1
#define enum_c2ats_GDK_PIXBUF_ERROR_BAD_OPTION 2
#define enum_c2ats_GDK_PIXBUF_ERROR_UNKNOWN_TYPE 3
#define enum_c2ats_GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION 4
#define enum_c2ats_GDK_PIXBUF_ERROR_FAILED 5
#define enum_c2ats_GDK_PIXBUF_ERROR_INCOMPLETE_ANIMATION 6
fun fun_c2ats_gdk_pixbuf_error_quark: () -> type_c2ats_GQuark = "mac#gdk_pixbuf_error_quark"
fun fun_c2ats_gdk_pixbuf_get_type: () -> type_c2ats_GType = "mac#gdk_pixbuf_get_type"
fun fun_c2ats_gdk_pixbuf_ref: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gdk_pixbuf_ref"
fun fun_c2ats_gdk_pixbuf_unref: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> void = "mac#gdk_pixbuf_unref"
fun fun_c2ats_gdk_pixbuf_get_colorspace: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> type_c2ats_GdkColorspace = "mac#gdk_pixbuf_get_colorspace"
fun fun_c2ats_gdk_pixbuf_get_n_channels: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> int = "mac#gdk_pixbuf_get_n_channels"
fun fun_c2ats_gdk_pixbuf_get_has_alpha: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_pixbuf_get_has_alpha"
fun fun_c2ats_gdk_pixbuf_get_bits_per_sample: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> int = "mac#gdk_pixbuf_get_bits_per_sample"
fun fun_c2ats_gdk_pixbuf_get_pixels: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_guchar, l2) | ptr l2) = "mac#gdk_pixbuf_get_pixels"
fun fun_c2ats_gdk_pixbuf_get_width: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> int = "mac#gdk_pixbuf_get_width"
fun fun_c2ats_gdk_pixbuf_get_height: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> int = "mac#gdk_pixbuf_get_height"
fun fun_c2ats_gdk_pixbuf_get_rowstride: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> int = "mac#gdk_pixbuf_get_rowstride"
fun fun_c2ats_gdk_pixbuf_get_byte_length: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> type_c2ats_gsize = "mac#gdk_pixbuf_get_byte_length"
fun fun_c2ats_gdk_pixbuf_get_pixels_with_length: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_1(type_c2ats_guint, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_guchar, l3) | ptr l3) = "mac#gdk_pixbuf_get_pixels_with_length"
fun fun_c2ats_gdk_pixbuf_read_pixels: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_guint8, l2) | ptr l2) = "mac#gdk_pixbuf_read_pixels"
fun fun_c2ats_gdk_pixbuf_read_pixel_bytes: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GBytes, l2) | ptr l2) = "mac#gdk_pixbuf_read_pixel_bytes"
fun fun_c2ats_gdk_pixbuf_new: (type_c2ats_GdkColorspace, type_c2ats_gboolean, int, int, int) -> [l1:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) = "mac#gdk_pixbuf_new"
fun fun_c2ats_gdk_pixbuf_copy: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gdk_pixbuf_copy"
fun fun_c2ats_gdk_pixbuf_new_subpixbuf: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1, int, int, int, int) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gdk_pixbuf_new_subpixbuf"
fun fun_c2ats_gdk_pixbuf_new_from_file: {l1,l2,l2_1:addr} (!ptr_v_1(char, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l3) = "mac#gdk_pixbuf_new_from_file"
fun fun_c2ats_gdk_pixbuf_new_from_file_at_size: {l1,l2,l2_1:addr} (!ptr_v_1(char, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, int, int, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l3) = "mac#gdk_pixbuf_new_from_file_at_size"
fun fun_c2ats_gdk_pixbuf_new_from_file_at_scale: {l1,l2,l2_1:addr} (!ptr_v_1(char, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, int, int, type_c2ats_gboolean, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l3) = "mac#gdk_pixbuf_new_from_file_at_scale"
fun fun_c2ats_gdk_pixbuf_new_from_resource: {l1,l2,l2_1:addr} (!ptr_v_1(char, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l3) = "mac#gdk_pixbuf_new_from_resource"
fun fun_c2ats_gdk_pixbuf_new_from_resource_at_scale: {l1,l2,l2_1:addr} (!ptr_v_1(char, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, int, int, type_c2ats_gboolean, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l3) = "mac#gdk_pixbuf_new_from_resource_at_scale"
fun fun_c2ats_gdk_pixbuf_new_from_data: {l1:addr} (!ptr_v_1(type_c2ats_guchar, l1) | ptr l1, type_c2ats_GdkColorspace, type_c2ats_gboolean, int, int, int, int, type_c2ats_GdkPixbufDestroyNotify, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gdk_pixbuf_new_from_data"
fun fun_c2ats_gdk_pixbuf_new_from_bytes: {l1:addr} (!ptr_v_1(type_c2ats_GBytes, l1) | ptr l1, type_c2ats_GdkColorspace, type_c2ats_gboolean, int, int, int, int) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gdk_pixbuf_new_from_bytes"
fun fun_c2ats_gdk_pixbuf_new_from_xpm_data: {l1,l1_1:addr} (!ptr_v_2(char, l1, l1_1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gdk_pixbuf_new_from_xpm_data"
fun fun_c2ats_gdk_pixbuf_new_from_inline: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_guint8, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | type_c2ats_gint, ptr l1, type_c2ats_gboolean, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l3) = "mac#gdk_pixbuf_new_from_inline"
fun fun_c2ats_gdk_pixbuf_fill: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1, type_c2ats_guint32) -> void = "mac#gdk_pixbuf_fill"
fun fun_c2ats_gdk_pixbuf_save: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#gdk_pixbuf_save"
fun fun_c2ats_gdk_pixbuf_savev: {l1,l2,l3,l4,l4_1,l5,l5_1,l6,l6_1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3), !ptr_v_2(char, l4, l4_1), !ptr_v_2(char, l5, l5_1), !ptr_v_2(type_c2ats_GError, l6, l6_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> type_c2ats_gboolean = "mac#gdk_pixbuf_savev"
typedef type_c2ats_GdkPixbufSaveFunc = {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, type_c2ats_gsize, ptr l2, type_c2ats_gpointer) -> type_c2ats_gboolean
fun fun_c2ats_gdk_pixbuf_save_to_callback: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_GdkPixbufSaveFunc, type_c2ats_gpointer, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gdk_pixbuf_save_to_callback"
fun fun_c2ats_gdk_pixbuf_save_to_callbackv: {l1,l2,l3,l3_1,l4,l4_1,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_1(char, l2), !ptr_v_2(char, l3, l3_1), !ptr_v_2(char, l4, l4_1), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, type_c2ats_GdkPixbufSaveFunc, type_c2ats_gpointer, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#gdk_pixbuf_save_to_callbackv"
fun fun_c2ats_gdk_pixbuf_save_to_buffer: {l1,l2,l2_1,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_1(char, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#gdk_pixbuf_save_to_buffer"
fun fun_c2ats_gdk_pixbuf_save_to_bufferv: {l1,l2,l2_1,l3,l4,l5,l5_1,l6,l6_1,l7,l7_1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_1(type_c2ats_gsize, l3), !ptr_v_1(char, l4), !ptr_v_2(char, l5, l5_1), !ptr_v_2(char, l6, l6_1), !ptr_v_2(type_c2ats_GError, l7, l7_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7) -> type_c2ats_gboolean = "mac#gdk_pixbuf_save_to_bufferv"
fun fun_c2ats_gdk_pixbuf_new_from_stream: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l4) | ptr l4) = "mac#gdk_pixbuf_new_from_stream"
fun fun_c2ats_gdk_pixbuf_new_from_stream_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#gdk_pixbuf_new_from_stream_async"
fun fun_c2ats_gdk_pixbuf_new_from_stream_finish: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l3) = "mac#gdk_pixbuf_new_from_stream_finish"
fun fun_c2ats_gdk_pixbuf_new_from_stream_at_scale: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gboolean, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l4) | ptr l4) = "mac#gdk_pixbuf_new_from_stream_at_scale"
fun fun_c2ats_gdk_pixbuf_new_from_stream_at_scale_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gboolean, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#gdk_pixbuf_new_from_stream_at_scale_async"
fun fun_c2ats_gdk_pixbuf_save_to_stream: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_1(type_c2ats_GOutputStream, l2), !ptr_v_1(char, l3), !ptr_v_1(type_c2ats_GCancellable, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#gdk_pixbuf_save_to_stream"
fun fun_c2ats_gdk_pixbuf_save_to_stream_async: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_1(type_c2ats_GOutputStream, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GCancellable, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#gdk_pixbuf_save_to_stream_async"
fun fun_c2ats_gdk_pixbuf_save_to_stream_finish: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_pixbuf_save_to_stream_finish"
fun fun_c2ats_gdk_pixbuf_save_to_streamv_async: {l1,l2,l3,l4,l4_1,l5,l5_1,l6:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_1(type_c2ats_GOutputStream, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_gchar, l4, l4_1), !ptr_v_2(type_c2ats_gchar, l5, l5_1), !ptr_v_1(type_c2ats_GCancellable, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#gdk_pixbuf_save_to_streamv_async"
fun fun_c2ats_gdk_pixbuf_save_to_streamv: {l1,l2,l3,l4,l4_1,l5,l5_1,l6,l7,l7_1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_1(type_c2ats_GOutputStream, l2), !ptr_v_1(char, l3), !ptr_v_2(char, l4, l4_1), !ptr_v_2(char, l5, l5_1), !ptr_v_1(type_c2ats_GCancellable, l6), !ptr_v_2(type_c2ats_GError, l7, l7_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7) -> type_c2ats_gboolean = "mac#gdk_pixbuf_save_to_streamv"
fun fun_c2ats_gdk_pixbuf_add_alpha: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1, type_c2ats_gboolean, type_c2ats_guchar, type_c2ats_guchar, type_c2ats_guchar) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gdk_pixbuf_add_alpha"
fun fun_c2ats_gdk_pixbuf_copy_area: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, int, int, int, int, ptr l2, int, int) -> void = "mac#gdk_pixbuf_copy_area"
fun fun_c2ats_gdk_pixbuf_saturate_and_pixelate: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2, type_c2ats_gfloat, type_c2ats_gboolean) -> void = "mac#gdk_pixbuf_saturate_and_pixelate"
fun fun_c2ats_gdk_pixbuf_apply_embedded_orientation: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gdk_pixbuf_apply_embedded_orientation"
fun fun_c2ats_gdk_pixbuf_set_option: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gdk_pixbuf_set_option"
fun fun_c2ats_gdk_pixbuf_get_option: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#gdk_pixbuf_get_option"
fun fun_c2ats_gdk_pixbuf_remove_option: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_pixbuf_remove_option"
fun fun_c2ats_gdk_pixbuf_get_options: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GHashTable, l2) | ptr l2) = "mac#gdk_pixbuf_get_options"
fun fun_c2ats_gdk_pixbuf_copy_options: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_pixbuf_copy_options"
// File: /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-transform.h
typedef type_c2ats_GdkInterpType = int
#define enum_c2ats_GDK_INTERP_NEAREST 0
#define enum_c2ats_GDK_INTERP_TILES 1
#define enum_c2ats_GDK_INTERP_BILINEAR 2
#define enum_c2ats_GDK_INTERP_HYPER 3
typedef type_c2ats_GdkPixbufRotation = int
#define enum_c2ats_GDK_PIXBUF_ROTATE_NONE 0
#define enum_c2ats_GDK_PIXBUF_ROTATE_COUNTERCLOCKWISE 90
#define enum_c2ats_GDK_PIXBUF_ROTATE_UPSIDEDOWN 180
#define enum_c2ats_GDK_PIXBUF_ROTATE_CLOCKWISE 270
fun fun_c2ats_gdk_pixbuf_scale: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2, int, int, int, int, double, double, double, double, type_c2ats_GdkInterpType) -> void = "mac#gdk_pixbuf_scale"
fun fun_c2ats_gdk_pixbuf_composite: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2, int, int, int, int, double, double, double, double, type_c2ats_GdkInterpType, int) -> void = "mac#gdk_pixbuf_composite"
fun fun_c2ats_gdk_pixbuf_composite_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2, int, int, int, int, double, double, double, double, type_c2ats_GdkInterpType, int, int, int, int, type_c2ats_guint32, type_c2ats_guint32) -> void = "mac#gdk_pixbuf_composite_color"
fun fun_c2ats_gdk_pixbuf_scale_simple: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1, int, int, type_c2ats_GdkInterpType) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gdk_pixbuf_scale_simple"
fun fun_c2ats_gdk_pixbuf_composite_color_simple: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1, int, int, type_c2ats_GdkInterpType, int, int, type_c2ats_guint32, type_c2ats_guint32) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gdk_pixbuf_composite_color_simple"
fun fun_c2ats_gdk_pixbuf_rotate_simple: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1, type_c2ats_GdkPixbufRotation) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gdk_pixbuf_rotate_simple"
fun fun_c2ats_gdk_pixbuf_flip: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1, type_c2ats_gboolean) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gdk_pixbuf_flip"
// File: /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h
abst@ype struct_c2ats__GdkPixbufAnimation // FIXME! Forward declaration.
typedef type_c2ats_GdkPixbufAnimation = struct_c2ats__GdkPixbufAnimation
abst@ype struct_c2ats__GdkPixbufAnimationIter // FIXME! Forward declaration.
typedef type_c2ats_GdkPixbufAnimationIter = struct_c2ats__GdkPixbufAnimationIter
fun fun_c2ats_gdk_pixbuf_animation_get_type: () -> type_c2ats_GType = "mac#gdk_pixbuf_animation_get_type"
fun fun_c2ats_gdk_pixbuf_animation_new_from_file: {l1,l2,l2_1:addr} (!ptr_v_1(char, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbufAnimation, l3) | ptr l3) = "mac#gdk_pixbuf_animation_new_from_file"
fun fun_c2ats_gdk_pixbuf_animation_new_from_stream: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GdkPixbufAnimation, l4) | ptr l4) = "mac#gdk_pixbuf_animation_new_from_stream"
fun fun_c2ats_gdk_pixbuf_animation_new_from_stream_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GInputStream, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#gdk_pixbuf_animation_new_from_stream_async"
fun fun_c2ats_gdk_pixbuf_animation_new_from_stream_finish: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbufAnimation, l3) | ptr l3) = "mac#gdk_pixbuf_animation_new_from_stream_finish"
fun fun_c2ats_gdk_pixbuf_animation_new_from_resource: {l1,l2,l2_1:addr} (!ptr_v_1(char, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbufAnimation, l3) | ptr l3) = "mac#gdk_pixbuf_animation_new_from_resource"
fun fun_c2ats_gdk_pixbuf_animation_ref: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufAnimation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbufAnimation, l2) | ptr l2) = "mac#gdk_pixbuf_animation_ref"
fun fun_c2ats_gdk_pixbuf_animation_unref: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufAnimation, l1) | ptr l1) -> void = "mac#gdk_pixbuf_animation_unref"
fun fun_c2ats_gdk_pixbuf_animation_get_width: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufAnimation, l1) | ptr l1) -> int = "mac#gdk_pixbuf_animation_get_width"
fun fun_c2ats_gdk_pixbuf_animation_get_height: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufAnimation, l1) | ptr l1) -> int = "mac#gdk_pixbuf_animation_get_height"
fun fun_c2ats_gdk_pixbuf_animation_is_static_image: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufAnimation, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_pixbuf_animation_is_static_image"
fun fun_c2ats_gdk_pixbuf_animation_get_static_image: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufAnimation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gdk_pixbuf_animation_get_static_image"
fun fun_c2ats_gdk_pixbuf_animation_get_iter: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkPixbufAnimation, l1), !ptr_v_1(type_c2ats_GTimeVal, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbufAnimationIter, l3) | ptr l3) = "mac#gdk_pixbuf_animation_get_iter"
fun fun_c2ats_gdk_pixbuf_animation_iter_get_type: () -> type_c2ats_GType = "mac#gdk_pixbuf_animation_iter_get_type"
fun fun_c2ats_gdk_pixbuf_animation_iter_get_delay_time: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufAnimationIter, l1) | ptr l1) -> int = "mac#gdk_pixbuf_animation_iter_get_delay_time"
fun fun_c2ats_gdk_pixbuf_animation_iter_get_pixbuf: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufAnimationIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gdk_pixbuf_animation_iter_get_pixbuf"
fun fun_c2ats_gdk_pixbuf_animation_iter_on_currently_loading_frame: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufAnimationIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_pixbuf_animation_iter_on_currently_loading_frame"
fun fun_c2ats_gdk_pixbuf_animation_iter_advance: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkPixbufAnimationIter, l1), !ptr_v_1(type_c2ats_GTimeVal, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_pixbuf_animation_iter_advance"
// File: /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-simple-anim.h
abst@ype struct_c2ats__GdkPixbufSimpleAnim // FIXME! Forward declaration.
typedef type_c2ats_GdkPixbufSimpleAnim = struct_c2ats__GdkPixbufSimpleAnim
abst@ype struct_c2ats__GdkPixbufSimpleAnimClass // FIXME! Forward declaration.
typedef type_c2ats_GdkPixbufSimpleAnimClass = struct_c2ats__GdkPixbufSimpleAnimClass
fun fun_c2ats_gdk_pixbuf_simple_anim_get_type: () -> type_c2ats_GType = "mac#gdk_pixbuf_simple_anim_get_type"
fun fun_c2ats_gdk_pixbuf_simple_anim_iter_get_type: () -> type_c2ats_GType = "mac#gdk_pixbuf_simple_anim_iter_get_type"
fun fun_c2ats_gdk_pixbuf_simple_anim_new: (type_c2ats_gint, type_c2ats_gint, type_c2ats_gfloat) -> [l1:addr] (ptr_v_1(type_c2ats_GdkPixbufSimpleAnim, l1) | ptr l1) = "mac#gdk_pixbuf_simple_anim_new"
fun fun_c2ats_gdk_pixbuf_simple_anim_add_frame: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkPixbufSimpleAnim, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2) -> void = "mac#gdk_pixbuf_simple_anim_add_frame"
fun fun_c2ats_gdk_pixbuf_simple_anim_set_loop: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufSimpleAnim, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gdk_pixbuf_simple_anim_set_loop"
fun fun_c2ats_gdk_pixbuf_simple_anim_get_loop: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufSimpleAnim, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_pixbuf_simple_anim_get_loop"
// File: /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h
abst@ype struct_c2ats__GdkPixbufFormat // FIXME! Forward declaration.
typedef type_c2ats_GdkPixbufFormat = struct_c2ats__GdkPixbufFormat
fun fun_c2ats_gdk_pixbuf_format_get_type: () -> type_c2ats_GType = "mac#gdk_pixbuf_format_get_type"
fun fun_c2ats_gdk_pixbuf_get_formats: () -> [l1:addr] (ptr_v_1(type_c2ats_GSList, l1) | ptr l1) = "mac#gdk_pixbuf_get_formats"
fun fun_c2ats_gdk_pixbuf_format_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufFormat, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gdk_pixbuf_format_get_name"
fun fun_c2ats_gdk_pixbuf_format_get_description: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufFormat, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gdk_pixbuf_format_get_description"
fun fun_c2ats_gdk_pixbuf_format_get_mime_types: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufFormat, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#gdk_pixbuf_format_get_mime_types"
fun fun_c2ats_gdk_pixbuf_format_get_extensions: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufFormat, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#gdk_pixbuf_format_get_extensions"
fun fun_c2ats_gdk_pixbuf_format_is_save_option_supported: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkPixbufFormat, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_pixbuf_format_is_save_option_supported"
fun fun_c2ats_gdk_pixbuf_format_is_writable: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufFormat, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_pixbuf_format_is_writable"
fun fun_c2ats_gdk_pixbuf_format_is_scalable: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufFormat, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_pixbuf_format_is_scalable"
fun fun_c2ats_gdk_pixbuf_format_is_disabled: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufFormat, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_pixbuf_format_is_disabled"
fun fun_c2ats_gdk_pixbuf_format_set_disabled: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufFormat, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gdk_pixbuf_format_set_disabled"
fun fun_c2ats_gdk_pixbuf_format_get_license: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufFormat, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gdk_pixbuf_format_get_license"
fun fun_c2ats_gdk_pixbuf_get_file_info: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GdkPixbufFormat, l4) | ptr l4) = "mac#gdk_pixbuf_get_file_info"
fun fun_c2ats_gdk_pixbuf_get_file_info_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#gdk_pixbuf_get_file_info_async"
fun fun_c2ats_gdk_pixbuf_get_file_info_finish: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GAsyncResult, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GdkPixbufFormat, l5) | ptr l5) = "mac#gdk_pixbuf_get_file_info_finish"
fun fun_c2ats_gdk_pixbuf_format_copy: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufFormat, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbufFormat, l2) | ptr l2) = "mac#gdk_pixbuf_format_copy"
fun fun_c2ats_gdk_pixbuf_format_free: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufFormat, l1) | ptr l1) -> void = "mac#gdk_pixbuf_format_free"
// File: /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h
abst@ype struct_c2ats__GdkPixbufLoader // FIXME! Forward declaration.
typedef type_c2ats_GdkPixbufLoader = struct_c2ats__GdkPixbufLoader
typedef struct_c2ats__GdkPixbufLoader = $extype_struct"struct _GdkPixbufLoader" of {
  parent_instance = type_c2ats_GObject,
  priv = type_c2ats_gpointer
}
abst@ype struct_c2ats__GdkPixbufLoaderClass // FIXME! Forward declaration.
typedef type_c2ats_GdkPixbufLoaderClass = struct_c2ats__GdkPixbufLoaderClass
typedef struct_c2ats__GdkPixbufLoaderClass = $extype_struct"struct _GdkPixbufLoaderClass" of {
  parent_class = type_c2ats_GObjectClass,
  size_prepared = {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufLoader, l1) | ptr l1, int, int) -> void,
  area_prepared = {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufLoader, l1) | ptr l1) -> void,
  area_updated = {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufLoader, l1) | ptr l1, int, int, int, int) -> void,
  closed = {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufLoader, l1) | ptr l1) -> void
}
fun fun_c2ats_gdk_pixbuf_loader_get_type: () -> type_c2ats_GType = "mac#gdk_pixbuf_loader_get_type"
fun fun_c2ats_gdk_pixbuf_loader_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GdkPixbufLoader, l1) | ptr l1) = "mac#gdk_pixbuf_loader_new"
fun fun_c2ats_gdk_pixbuf_loader_new_with_type: {l1,l2,l2_1:addr} (!ptr_v_1(char, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbufLoader, l3) | ptr l3) = "mac#gdk_pixbuf_loader_new_with_type"
fun fun_c2ats_gdk_pixbuf_loader_new_with_mime_type: {l1,l2,l2_1:addr} (!ptr_v_1(char, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbufLoader, l3) | ptr l3) = "mac#gdk_pixbuf_loader_new_with_mime_type"
fun fun_c2ats_gdk_pixbuf_loader_set_size: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufLoader, l1) | ptr l1, int, int) -> void = "mac#gdk_pixbuf_loader_set_size"
fun fun_c2ats_gdk_pixbuf_loader_write: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GdkPixbufLoader, l1), !ptr_v_1(type_c2ats_guchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gsize, ptr l3) -> type_c2ats_gboolean = "mac#gdk_pixbuf_loader_write"
fun fun_c2ats_gdk_pixbuf_loader_write_bytes: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GdkPixbufLoader, l1), !ptr_v_1(type_c2ats_GBytes, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gdk_pixbuf_loader_write_bytes"
fun fun_c2ats_gdk_pixbuf_loader_get_pixbuf: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufLoader, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gdk_pixbuf_loader_get_pixbuf"
fun fun_c2ats_gdk_pixbuf_loader_get_animation: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufLoader, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbufAnimation, l2) | ptr l2) = "mac#gdk_pixbuf_loader_get_animation"
fun fun_c2ats_gdk_pixbuf_loader_close: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GdkPixbufLoader, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_pixbuf_loader_close"
fun fun_c2ats_gdk_pixbuf_loader_get_format: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufLoader, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbufFormat, l2) | ptr l2) = "mac#gdk_pixbuf_loader_get_format"
// File: /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-enum-types.h
fun fun_c2ats_gdk_pixbuf_alpha_mode_get_type: () -> type_c2ats_GType = "mac#gdk_pixbuf_alpha_mode_get_type"
fun fun_c2ats_gdk_colorspace_get_type: () -> type_c2ats_GType = "mac#gdk_colorspace_get_type"
fun fun_c2ats_gdk_pixbuf_error_get_type: () -> type_c2ats_GType = "mac#gdk_pixbuf_error_get_type"
fun fun_c2ats_gdk_interp_type_get_type: () -> type_c2ats_GType = "mac#gdk_interp_type_get_type"
fun fun_c2ats_gdk_pixbuf_rotation_get_type: () -> type_c2ats_GType = "mac#gdk_pixbuf_rotation_get_type"
// File: /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-autocleanups.h
typedef type_c2ats_GdkPixbuf_autoptr = cPtr0(type_c2ats_GdkPixbuf)
fun fun_c2ats_glib_autoptr_cleanup_GdkPixbuf: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkPixbuf, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkPixbuf"
typedef type_c2ats_GdkPixbufAnimation_autoptr = cPtr0(type_c2ats_GdkPixbufAnimation)
fun fun_c2ats_glib_autoptr_cleanup_GdkPixbufAnimation: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkPixbufAnimation, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkPixbufAnimation"
typedef type_c2ats_GdkPixbufAnimationIter_autoptr = cPtr0(type_c2ats_GdkPixbufAnimationIter)
fun fun_c2ats_glib_autoptr_cleanup_GdkPixbufAnimationIter: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkPixbufAnimationIter, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkPixbufAnimationIter"
typedef type_c2ats_GdkPixbufLoader_autoptr = cPtr0(type_c2ats_GdkPixbufLoader)
fun fun_c2ats_glib_autoptr_cleanup_GdkPixbufLoader: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkPixbufLoader, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkPixbufLoader"
typedef type_c2ats_GdkPixbufSimpleAnim_autoptr = cPtr0(type_c2ats_GdkPixbufSimpleAnim)
fun fun_c2ats_glib_autoptr_cleanup_GdkPixbufSimpleAnim: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkPixbufSimpleAnim, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkPixbufSimpleAnim"
// File: /usr/include/gtk-3.0/gdk/gdkpixbuf.h
fun fun_c2ats_gdk_pixbuf_get_from_window: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gdk_pixbuf_get_from_window"
fun fun_c2ats_gdk_pixbuf_get_from_surface: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gdk_pixbuf_get_from_surface"
// File: /usr/include/pango-1.0/pango/pangocairo.h
abst@ype struct_c2ats__PangoCairoFont // FIXME! Forward declaration.
typedef type_c2ats_PangoCairoFont = struct_c2ats__PangoCairoFont
abst@ype struct_c2ats__PangoCairoFontMap // FIXME! Forward declaration.
typedef type_c2ats_PangoCairoFontMap = struct_c2ats__PangoCairoFontMap
typedef type_c2ats_PangoCairoShapeRendererFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_PangoAttrShape, l2) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_gpointer) -> void
fun fun_c2ats_pango_cairo_font_map_get_type: () -> type_c2ats_GType = "mac#pango_cairo_font_map_get_type"
fun fun_c2ats_pango_cairo_font_map_new: () -> [l1:addr] (ptr_v_1(type_c2ats_PangoFontMap, l1) | ptr l1) = "mac#pango_cairo_font_map_new"
fun fun_c2ats_pango_cairo_font_map_new_for_font_type: (type_c2ats_cairo_font_type_t) -> [l1:addr] (ptr_v_1(type_c2ats_PangoFontMap, l1) | ptr l1) = "mac#pango_cairo_font_map_new_for_font_type"
fun fun_c2ats_pango_cairo_font_map_get_default: () -> [l1:addr] (ptr_v_1(type_c2ats_PangoFontMap, l1) | ptr l1) = "mac#pango_cairo_font_map_get_default"
fun fun_c2ats_pango_cairo_font_map_set_default: {l1:addr} (!ptr_v_1(type_c2ats_PangoCairoFontMap, l1) | ptr l1) -> void = "mac#pango_cairo_font_map_set_default"
fun fun_c2ats_pango_cairo_font_map_get_font_type: {l1:addr} (!ptr_v_1(type_c2ats_PangoCairoFontMap, l1) | ptr l1) -> type_c2ats_cairo_font_type_t = "mac#pango_cairo_font_map_get_font_type"
fun fun_c2ats_pango_cairo_font_map_set_resolution: {l1:addr} (!ptr_v_1(type_c2ats_PangoCairoFontMap, l1) | ptr l1, double) -> void = "mac#pango_cairo_font_map_set_resolution"
fun fun_c2ats_pango_cairo_font_map_get_resolution: {l1:addr} (!ptr_v_1(type_c2ats_PangoCairoFontMap, l1) | ptr l1) -> double = "mac#pango_cairo_font_map_get_resolution"
fun fun_c2ats_pango_cairo_font_map_create_context: {l1:addr} (!ptr_v_1(type_c2ats_PangoCairoFontMap, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoContext, l2) | ptr l2) = "mac#pango_cairo_font_map_create_context"
fun fun_c2ats_pango_cairo_font_get_type: () -> type_c2ats_GType = "mac#pango_cairo_font_get_type"
fun fun_c2ats_pango_cairo_font_get_scaled_font: {l1:addr} (!ptr_v_1(type_c2ats_PangoCairoFont, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_scaled_font_t, l2) | ptr l2) = "mac#pango_cairo_font_get_scaled_font"
fun fun_c2ats_pango_cairo_update_context: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_PangoContext, l2) | ptr l1, ptr l2) -> void = "mac#pango_cairo_update_context"
fun fun_c2ats_pango_cairo_context_set_font_options: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoContext, l1), !ptr_v_1(type_c2ats_cairo_font_options_t, l2) | ptr l1, ptr l2) -> void = "mac#pango_cairo_context_set_font_options"
fun fun_c2ats_pango_cairo_context_get_font_options: {l1:addr} (!ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_font_options_t, l2) | ptr l2) = "mac#pango_cairo_context_get_font_options"
fun fun_c2ats_pango_cairo_context_set_resolution: {l1:addr} (!ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1, double) -> void = "mac#pango_cairo_context_set_resolution"
fun fun_c2ats_pango_cairo_context_get_resolution: {l1:addr} (!ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1) -> double = "mac#pango_cairo_context_get_resolution"
fun fun_c2ats_pango_cairo_context_set_shape_renderer: {l1:addr} (!ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1, type_c2ats_PangoCairoShapeRendererFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#pango_cairo_context_set_shape_renderer"
fun fun_c2ats_pango_cairo_context_get_shape_renderer: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoContext, l1), !ptr_v_1(type_c2ats_gpointer, l2) | ptr l1, ptr l2) -> type_c2ats_PangoCairoShapeRendererFunc = "mac#pango_cairo_context_get_shape_renderer"
fun fun_c2ats_pango_cairo_create_context: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoContext, l2) | ptr l2) = "mac#pango_cairo_create_context"
fun fun_c2ats_pango_cairo_create_layout: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayout, l2) | ptr l2) = "mac#pango_cairo_create_layout"
fun fun_c2ats_pango_cairo_update_layout: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_PangoLayout, l2) | ptr l1, ptr l2) -> void = "mac#pango_cairo_update_layout"
fun fun_c2ats_pango_cairo_show_glyph_string: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_PangoFont, l2), !ptr_v_1(type_c2ats_PangoGlyphString, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_cairo_show_glyph_string"
fun fun_c2ats_pango_cairo_show_glyph_item: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(char, l2), !ptr_v_1(type_c2ats_PangoGlyphItem, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_cairo_show_glyph_item"
fun fun_c2ats_pango_cairo_show_layout_line: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_PangoLayoutLine, l2) | ptr l1, ptr l2) -> void = "mac#pango_cairo_show_layout_line"
fun fun_c2ats_pango_cairo_show_layout: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_PangoLayout, l2) | ptr l1, ptr l2) -> void = "mac#pango_cairo_show_layout"
fun fun_c2ats_pango_cairo_show_error_underline: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double, double, double, double) -> void = "mac#pango_cairo_show_error_underline"
fun fun_c2ats_pango_cairo_glyph_string_path: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_PangoFont, l2), !ptr_v_1(type_c2ats_PangoGlyphString, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#pango_cairo_glyph_string_path"
fun fun_c2ats_pango_cairo_layout_line_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_PangoLayoutLine, l2) | ptr l1, ptr l2) -> void = "mac#pango_cairo_layout_line_path"
fun fun_c2ats_pango_cairo_layout_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_PangoLayout, l2) | ptr l1, ptr l2) -> void = "mac#pango_cairo_layout_path"
fun fun_c2ats_pango_cairo_error_underline_path: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1, double, double, double, double) -> void = "mac#pango_cairo_error_underline_path"
// File: /usr/include/gtk-3.0/gdk/gdkcairo.h
fun fun_c2ats_gdk_cairo_create: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_t, l2) | ptr l2) = "mac#gdk_cairo_create"
fun fun_c2ats_gdk_cairo_get_clip_rectangle: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_cairo_get_clip_rectangle"
fun fun_c2ats_gdk_cairo_set_source_rgba: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, ptr l2) -> void = "mac#gdk_cairo_set_source_rgba"
fun fun_c2ats_gdk_cairo_set_source_pixbuf: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gdk_cairo_set_source_pixbuf"
fun fun_c2ats_gdk_cairo_set_source_window: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gdk_cairo_set_source_window"
fun fun_c2ats_gdk_cairo_rectangle: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> void = "mac#gdk_cairo_rectangle"
fun fun_c2ats_gdk_cairo_region: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2) -> void = "mac#gdk_cairo_region"
fun fun_c2ats_gdk_cairo_region_create_from_surface: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l2) = "mac#gdk_cairo_region_create_from_surface"
fun fun_c2ats_gdk_cairo_set_source_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_GdkColor, l2) | ptr l1, ptr l2) -> void = "mac#gdk_cairo_set_source_color"
fun fun_c2ats_gdk_cairo_surface_create_from_pixbuf: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, int, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l3) | ptr l3) = "mac#gdk_cairo_surface_create_from_pixbuf"
fun fun_c2ats_gdk_cairo_draw_from_gl: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2, int, int, int, int, int, int, int) -> void = "mac#gdk_cairo_draw_from_gl"
fun fun_c2ats_gdk_cairo_get_drawing_context: {l1:addr} (!ptr_v_1(type_c2ats_cairo_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDrawingContext, l2) | ptr l2) = "mac#gdk_cairo_get_drawing_context"
// File: /usr/include/gtk-3.0/gdk/gdkcursor.h
typedef type_c2ats_GdkCursorType = int
#define enum_c2ats_GDK_X_CURSOR 0
#define enum_c2ats_GDK_ARROW 2
#define enum_c2ats_GDK_BASED_ARROW_DOWN 4
#define enum_c2ats_GDK_BASED_ARROW_UP 6
#define enum_c2ats_GDK_BOAT 8
#define enum_c2ats_GDK_BOGOSITY 10
#define enum_c2ats_GDK_BOTTOM_LEFT_CORNER 12
#define enum_c2ats_GDK_BOTTOM_RIGHT_CORNER 14
#define enum_c2ats_GDK_BOTTOM_SIDE 16
#define enum_c2ats_GDK_BOTTOM_TEE 18
#define enum_c2ats_GDK_BOX_SPIRAL 20
#define enum_c2ats_GDK_CENTER_PTR 22
#define enum_c2ats_GDK_CIRCLE 24
#define enum_c2ats_GDK_CLOCK 26
#define enum_c2ats_GDK_COFFEE_MUG 28
#define enum_c2ats_GDK_CROSS 30
#define enum_c2ats_GDK_CROSS_REVERSE 32
#define enum_c2ats_GDK_CROSSHAIR 34
#define enum_c2ats_GDK_DIAMOND_CROSS 36
#define enum_c2ats_GDK_DOT 38
#define enum_c2ats_GDK_DOTBOX 40
#define enum_c2ats_GDK_DOUBLE_ARROW 42
#define enum_c2ats_GDK_DRAFT_LARGE 44
#define enum_c2ats_GDK_DRAFT_SMALL 46
#define enum_c2ats_GDK_DRAPED_BOX 48
#define enum_c2ats_GDK_EXCHANGE 50
#define enum_c2ats_GDK_FLEUR 52
#define enum_c2ats_GDK_GOBBLER 54
#define enum_c2ats_GDK_GUMBY 56
#define enum_c2ats_GDK_HAND1 58
#define enum_c2ats_GDK_HAND2 60
#define enum_c2ats_GDK_HEART 62
#define enum_c2ats_GDK_ICON 64
#define enum_c2ats_GDK_IRON_CROSS 66
#define enum_c2ats_GDK_LEFT_PTR 68
#define enum_c2ats_GDK_LEFT_SIDE 70
#define enum_c2ats_GDK_LEFT_TEE 72
#define enum_c2ats_GDK_LEFTBUTTON 74
#define enum_c2ats_GDK_LL_ANGLE 76
#define enum_c2ats_GDK_LR_ANGLE 78
#define enum_c2ats_GDK_MAN 80
#define enum_c2ats_GDK_MIDDLEBUTTON 82
#define enum_c2ats_GDK_MOUSE 84
#define enum_c2ats_GDK_PENCIL 86
#define enum_c2ats_GDK_PIRATE 88
#define enum_c2ats_GDK_PLUS 90
#define enum_c2ats_GDK_QUESTION_ARROW 92
#define enum_c2ats_GDK_RIGHT_PTR 94
#define enum_c2ats_GDK_RIGHT_SIDE 96
#define enum_c2ats_GDK_RIGHT_TEE 98
#define enum_c2ats_GDK_RIGHTBUTTON 100
#define enum_c2ats_GDK_RTL_LOGO 102
#define enum_c2ats_GDK_SAILBOAT 104
#define enum_c2ats_GDK_SB_DOWN_ARROW 106
#define enum_c2ats_GDK_SB_H_DOUBLE_ARROW 108
#define enum_c2ats_GDK_SB_LEFT_ARROW 110
#define enum_c2ats_GDK_SB_RIGHT_ARROW 112
#define enum_c2ats_GDK_SB_UP_ARROW 114
#define enum_c2ats_GDK_SB_V_DOUBLE_ARROW 116
#define enum_c2ats_GDK_SHUTTLE 118
#define enum_c2ats_GDK_SIZING 120
#define enum_c2ats_GDK_SPIDER 122
#define enum_c2ats_GDK_SPRAYCAN 124
#define enum_c2ats_GDK_STAR 126
#define enum_c2ats_GDK_TARGET 128
#define enum_c2ats_GDK_TCROSS 130
#define enum_c2ats_GDK_TOP_LEFT_ARROW 132
#define enum_c2ats_GDK_TOP_LEFT_CORNER 134
#define enum_c2ats_GDK_TOP_RIGHT_CORNER 136
#define enum_c2ats_GDK_TOP_SIDE 138
#define enum_c2ats_GDK_TOP_TEE 140
#define enum_c2ats_GDK_TREK 142
#define enum_c2ats_GDK_UL_ANGLE 144
#define enum_c2ats_GDK_UMBRELLA 146
#define enum_c2ats_GDK_UR_ANGLE 148
#define enum_c2ats_GDK_WATCH 150
#define enum_c2ats_GDK_XTERM 152
#define enum_c2ats_GDK_LAST_CURSOR 152 + 1
#define enum_c2ats_GDK_BLANK_CURSOR ~2
#define enum_c2ats_GDK_CURSOR_IS_PIXMAP ~1
fun fun_c2ats_gdk_cursor_get_type: () -> type_c2ats_GType = "mac#gdk_cursor_get_type"
fun fun_c2ats_gdk_cursor_new_for_display: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1, type_c2ats_GdkCursorType) -> [l2:addr] (ptr_v_1(type_c2ats_GdkCursor, l2) | ptr l2) = "mac#gdk_cursor_new_for_display"
fun fun_c2ats_gdk_cursor_new: (type_c2ats_GdkCursorType) -> [l1:addr] (ptr_v_1(type_c2ats_GdkCursor, l1) | ptr l1) = "mac#gdk_cursor_new"
fun fun_c2ats_gdk_cursor_new_from_pixbuf: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> [l3:addr] (ptr_v_1(type_c2ats_GdkCursor, l3) | ptr l3) = "mac#gdk_cursor_new_from_pixbuf"
fun fun_c2ats_gdk_cursor_new_from_surface: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1), !ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble) -> [l3:addr] (ptr_v_1(type_c2ats_GdkCursor, l3) | ptr l3) = "mac#gdk_cursor_new_from_surface"
fun fun_c2ats_gdk_cursor_new_from_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkCursor, l3) | ptr l3) = "mac#gdk_cursor_new_from_name"
fun fun_c2ats_gdk_cursor_get_display: {l1:addr} (!ptr_v_1(type_c2ats_GdkCursor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDisplay, l2) | ptr l2) = "mac#gdk_cursor_get_display"
fun fun_c2ats_gdk_cursor_ref: {l1:addr} (!ptr_v_1(type_c2ats_GdkCursor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkCursor, l2) | ptr l2) = "mac#gdk_cursor_ref"
fun fun_c2ats_gdk_cursor_unref: {l1:addr} (!ptr_v_1(type_c2ats_GdkCursor, l1) | ptr l1) -> void = "mac#gdk_cursor_unref"
fun fun_c2ats_gdk_cursor_get_image: {l1:addr} (!ptr_v_1(type_c2ats_GdkCursor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gdk_cursor_get_image"
fun fun_c2ats_gdk_cursor_get_surface: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkCursor, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l4) | ptr l4) = "mac#gdk_cursor_get_surface"
fun fun_c2ats_gdk_cursor_get_cursor_type: {l1:addr} (!ptr_v_1(type_c2ats_GdkCursor, l1) | ptr l1) -> type_c2ats_GdkCursorType = "mac#gdk_cursor_get_cursor_type"
// File: /usr/include/gtk-3.0/gdk/gdkdevicepad.h
abst@ype struct_c2ats__GdkDevicePad // FIXME! Forward declaration.
typedef type_c2ats_GdkDevicePad = struct_c2ats__GdkDevicePad
abst@ype struct_c2ats__GdkDevicePadInterface // FIXME! Forward declaration.
typedef type_c2ats_GdkDevicePadInterface = struct_c2ats__GdkDevicePadInterface
typedef type_c2ats_GdkDevicePadFeature = int
#define enum_c2ats_GDK_DEVICE_PAD_FEATURE_BUTTON 0
#define enum_c2ats_GDK_DEVICE_PAD_FEATURE_RING 1
#define enum_c2ats_GDK_DEVICE_PAD_FEATURE_STRIP 2
fun fun_c2ats_gdk_device_pad_get_type: () -> type_c2ats_GType = "mac#gdk_device_pad_get_type"
fun fun_c2ats_gdk_device_pad_get_n_groups: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevicePad, l1) | ptr l1) -> type_c2ats_gint = "mac#gdk_device_pad_get_n_groups"
fun fun_c2ats_gdk_device_pad_get_group_n_modes: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevicePad, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gint = "mac#gdk_device_pad_get_group_n_modes"
fun fun_c2ats_gdk_device_pad_get_n_features: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevicePad, l1) | ptr l1, type_c2ats_GdkDevicePadFeature) -> type_c2ats_gint = "mac#gdk_device_pad_get_n_features"
fun fun_c2ats_gdk_device_pad_get_feature_group: {l1:addr} (!ptr_v_1(type_c2ats_GdkDevicePad, l1) | ptr l1, type_c2ats_GdkDevicePadFeature, type_c2ats_gint) -> type_c2ats_gint = "mac#gdk_device_pad_get_feature_group"
// File: /usr/include/gtk-3.0/gdk/gdkdisplaymanager.h
fun fun_c2ats_gdk_display_manager_get_type: () -> type_c2ats_GType = "mac#gdk_display_manager_get_type"
fun fun_c2ats_gdk_display_manager_get: () -> [l1:addr] (ptr_v_1(type_c2ats_GdkDisplayManager, l1) | ptr l1) = "mac#gdk_display_manager_get"
fun fun_c2ats_gdk_display_manager_get_default_display: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplayManager, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDisplay, l2) | ptr l2) = "mac#gdk_display_manager_get_default_display"
fun fun_c2ats_gdk_display_manager_set_default_display: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDisplayManager, l1), !ptr_v_1(type_c2ats_GdkDisplay, l2) | ptr l1, ptr l2) -> void = "mac#gdk_display_manager_set_default_display"
fun fun_c2ats_gdk_display_manager_list_displays: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplayManager, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gdk_display_manager_list_displays"
fun fun_c2ats_gdk_display_manager_open_display: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDisplayManager, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkDisplay, l3) | ptr l3) = "mac#gdk_display_manager_open_display"
// File: /usr/include/gtk-3.0/gdk/gdkenumtypes.h
fun fun_c2ats_gdk_cursor_type_get_type: () -> type_c2ats_GType = "mac#gdk_cursor_type_get_type"
fun fun_c2ats_gdk_input_source_get_type: () -> type_c2ats_GType = "mac#gdk_input_source_get_type"
fun fun_c2ats_gdk_input_mode_get_type: () -> type_c2ats_GType = "mac#gdk_input_mode_get_type"
fun fun_c2ats_gdk_device_type_get_type: () -> type_c2ats_GType = "mac#gdk_device_type_get_type"
fun fun_c2ats_gdk_device_pad_feature_get_type: () -> type_c2ats_GType = "mac#gdk_device_pad_feature_get_type"
fun fun_c2ats_gdk_device_tool_type_get_type: () -> type_c2ats_GType = "mac#gdk_device_tool_type_get_type"
fun fun_c2ats_gdk_drag_action_get_type: () -> type_c2ats_GType = "mac#gdk_drag_action_get_type"
fun fun_c2ats_gdk_drag_cancel_reason_get_type: () -> type_c2ats_GType = "mac#gdk_drag_cancel_reason_get_type"
fun fun_c2ats_gdk_drag_protocol_get_type: () -> type_c2ats_GType = "mac#gdk_drag_protocol_get_type"
fun fun_c2ats_gdk_filter_return_get_type: () -> type_c2ats_GType = "mac#gdk_filter_return_get_type"
fun fun_c2ats_gdk_event_type_get_type: () -> type_c2ats_GType = "mac#gdk_event_type_get_type"
fun fun_c2ats_gdk_visibility_state_get_type: () -> type_c2ats_GType = "mac#gdk_visibility_state_get_type"
fun fun_c2ats_gdk_touchpad_gesture_phase_get_type: () -> type_c2ats_GType = "mac#gdk_touchpad_gesture_phase_get_type"
fun fun_c2ats_gdk_scroll_direction_get_type: () -> type_c2ats_GType = "mac#gdk_scroll_direction_get_type"
fun fun_c2ats_gdk_notify_type_get_type: () -> type_c2ats_GType = "mac#gdk_notify_type_get_type"
fun fun_c2ats_gdk_crossing_mode_get_type: () -> type_c2ats_GType = "mac#gdk_crossing_mode_get_type"
fun fun_c2ats_gdk_property_state_get_type: () -> type_c2ats_GType = "mac#gdk_property_state_get_type"
fun fun_c2ats_gdk_window_state_get_type: () -> type_c2ats_GType = "mac#gdk_window_state_get_type"
fun fun_c2ats_gdk_setting_action_get_type: () -> type_c2ats_GType = "mac#gdk_setting_action_get_type"
fun fun_c2ats_gdk_owner_change_get_type: () -> type_c2ats_GType = "mac#gdk_owner_change_get_type"
fun fun_c2ats_gdk_subpixel_layout_get_type: () -> type_c2ats_GType = "mac#gdk_subpixel_layout_get_type"
fun fun_c2ats_gdk_frame_clock_phase_get_type: () -> type_c2ats_GType = "mac#gdk_frame_clock_phase_get_type"
fun fun_c2ats_gdk_prop_mode_get_type: () -> type_c2ats_GType = "mac#gdk_prop_mode_get_type"
fun fun_c2ats_gdk_seat_capabilities_get_type: () -> type_c2ats_GType = "mac#gdk_seat_capabilities_get_type"
fun fun_c2ats_gdk_byte_order_get_type: () -> type_c2ats_GType = "mac#gdk_byte_order_get_type"
fun fun_c2ats_gdk_modifier_type_get_type: () -> type_c2ats_GType = "mac#gdk_modifier_type_get_type"
fun fun_c2ats_gdk_modifier_intent_get_type: () -> type_c2ats_GType = "mac#gdk_modifier_intent_get_type"
fun fun_c2ats_gdk_status_get_type: () -> type_c2ats_GType = "mac#gdk_status_get_type"
fun fun_c2ats_gdk_grab_status_get_type: () -> type_c2ats_GType = "mac#gdk_grab_status_get_type"
fun fun_c2ats_gdk_grab_ownership_get_type: () -> type_c2ats_GType = "mac#gdk_grab_ownership_get_type"
fun fun_c2ats_gdk_event_mask_get_type: () -> type_c2ats_GType = "mac#gdk_event_mask_get_type"
fun fun_c2ats_gdk_gl_error_get_type: () -> type_c2ats_GType = "mac#gdk_gl_error_get_type"
fun fun_c2ats_gdk_window_type_hint_get_type: () -> type_c2ats_GType = "mac#gdk_window_type_hint_get_type"
fun fun_c2ats_gdk_axis_use_get_type: () -> type_c2ats_GType = "mac#gdk_axis_use_get_type"
fun fun_c2ats_gdk_axis_flags_get_type: () -> type_c2ats_GType = "mac#gdk_axis_flags_get_type"
fun fun_c2ats_gdk_visual_type_get_type: () -> type_c2ats_GType = "mac#gdk_visual_type_get_type"
fun fun_c2ats_gdk_window_window_class_get_type: () -> type_c2ats_GType = "mac#gdk_window_window_class_get_type"
fun fun_c2ats_gdk_window_type_get_type: () -> type_c2ats_GType = "mac#gdk_window_type_get_type"
fun fun_c2ats_gdk_window_attributes_type_get_type: () -> type_c2ats_GType = "mac#gdk_window_attributes_type_get_type"
fun fun_c2ats_gdk_window_hints_get_type: () -> type_c2ats_GType = "mac#gdk_window_hints_get_type"
fun fun_c2ats_gdk_wm_decoration_get_type: () -> type_c2ats_GType = "mac#gdk_wm_decoration_get_type"
fun fun_c2ats_gdk_wm_function_get_type: () -> type_c2ats_GType = "mac#gdk_wm_function_get_type"
fun fun_c2ats_gdk_gravity_get_type: () -> type_c2ats_GType = "mac#gdk_gravity_get_type"
fun fun_c2ats_gdk_anchor_hints_get_type: () -> type_c2ats_GType = "mac#gdk_anchor_hints_get_type"
fun fun_c2ats_gdk_window_edge_get_type: () -> type_c2ats_GType = "mac#gdk_window_edge_get_type"
fun fun_c2ats_gdk_fullscreen_mode_get_type: () -> type_c2ats_GType = "mac#gdk_fullscreen_mode_get_type"
// File: /usr/include/gtk-3.0/gdk/gdkglcontext.h
fun fun_c2ats_gdk_gl_error_quark: () -> type_c2ats_GQuark = "mac#gdk_gl_error_quark"
fun fun_c2ats_gdk_gl_context_get_type: () -> type_c2ats_GType = "mac#gdk_gl_context_get_type"
fun fun_c2ats_gdk_gl_context_get_display: {l1:addr} (!ptr_v_1(type_c2ats_GdkGLContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDisplay, l2) | ptr l2) = "mac#gdk_gl_context_get_display"
fun fun_c2ats_gdk_gl_context_get_window: {l1:addr} (!ptr_v_1(type_c2ats_GdkGLContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gdk_gl_context_get_window"
fun fun_c2ats_gdk_gl_context_get_shared_context: {l1:addr} (!ptr_v_1(type_c2ats_GdkGLContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkGLContext, l2) | ptr l2) = "mac#gdk_gl_context_get_shared_context"
fun fun_c2ats_gdk_gl_context_get_version: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkGLContext, l1), !ptr_v_1(int, l2), !ptr_v_1(int, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gdk_gl_context_get_version"
fun fun_c2ats_gdk_gl_context_is_legacy: {l1:addr} (!ptr_v_1(type_c2ats_GdkGLContext, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_gl_context_is_legacy"
fun fun_c2ats_gdk_gl_context_set_required_version: {l1:addr} (!ptr_v_1(type_c2ats_GdkGLContext, l1) | ptr l1, int, int) -> void = "mac#gdk_gl_context_set_required_version"
fun fun_c2ats_gdk_gl_context_get_required_version: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkGLContext, l1), !ptr_v_1(int, l2), !ptr_v_1(int, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gdk_gl_context_get_required_version"
fun fun_c2ats_gdk_gl_context_set_debug_enabled: {l1:addr} (!ptr_v_1(type_c2ats_GdkGLContext, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gdk_gl_context_set_debug_enabled"
fun fun_c2ats_gdk_gl_context_get_debug_enabled: {l1:addr} (!ptr_v_1(type_c2ats_GdkGLContext, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_gl_context_get_debug_enabled"
fun fun_c2ats_gdk_gl_context_set_forward_compatible: {l1:addr} (!ptr_v_1(type_c2ats_GdkGLContext, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gdk_gl_context_set_forward_compatible"
fun fun_c2ats_gdk_gl_context_get_forward_compatible: {l1:addr} (!ptr_v_1(type_c2ats_GdkGLContext, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_gl_context_get_forward_compatible"
fun fun_c2ats_gdk_gl_context_set_use_es: {l1:addr} (!ptr_v_1(type_c2ats_GdkGLContext, l1) | ptr l1, int) -> void = "mac#gdk_gl_context_set_use_es"
fun fun_c2ats_gdk_gl_context_get_use_es: {l1:addr} (!ptr_v_1(type_c2ats_GdkGLContext, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_gl_context_get_use_es"
fun fun_c2ats_gdk_gl_context_realize: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GdkGLContext, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_gl_context_realize"
fun fun_c2ats_gdk_gl_context_make_current: {l1:addr} (!ptr_v_1(type_c2ats_GdkGLContext, l1) | ptr l1) -> void = "mac#gdk_gl_context_make_current"
fun fun_c2ats_gdk_gl_context_get_current: () -> [l1:addr] (ptr_v_1(type_c2ats_GdkGLContext, l1) | ptr l1) = "mac#gdk_gl_context_get_current"
fun fun_c2ats_gdk_gl_context_clear_current: () -> void = "mac#gdk_gl_context_clear_current"
// File: /usr/include/gtk-3.0/gdk/gdkkeys.h
abst@ype struct_c2ats__GdkKeymapKey // FIXME! Forward declaration.
typedef type_c2ats_GdkKeymapKey = struct_c2ats__GdkKeymapKey
typedef struct_c2ats__GdkKeymapKey = $extype_struct"struct _GdkKeymapKey" of {
  keycode = type_c2ats_guint,
  group = type_c2ats_gint,
  level = type_c2ats_gint
}
fun fun_c2ats_gdk_keymap_get_type: () -> type_c2ats_GType = "mac#gdk_keymap_get_type"
fun fun_c2ats_gdk_keymap_get_default: () -> [l1:addr] (ptr_v_1(type_c2ats_GdkKeymap, l1) | ptr l1) = "mac#gdk_keymap_get_default"
fun fun_c2ats_gdk_keymap_get_for_display: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkKeymap, l2) | ptr l2) = "mac#gdk_keymap_get_for_display"
fun fun_c2ats_gdk_keymap_lookup_key: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkKeymap, l1), !ptr_v_1(type_c2ats_GdkKeymapKey, l2) | ptr l1, ptr l2) -> type_c2ats_guint = "mac#gdk_keymap_lookup_key"
fun fun_c2ats_gdk_keymap_translate_keyboard_state: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GdkKeymap, l1), !ptr_v_1(type_c2ats_guint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_GdkModifierType, l5) | ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType, type_c2ats_gint, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#gdk_keymap_translate_keyboard_state"
fun fun_c2ats_gdk_keymap_get_entries_for_keyval: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GdkKeymap, l1), !ptr_v_2(type_c2ats_GdkKeymapKey, l2, l2_1), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_guint, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gdk_keymap_get_entries_for_keyval"
fun fun_c2ats_gdk_keymap_get_entries_for_keycode: {l1,l2,l2_1,l3,l3_1,l4:addr} (!ptr_v_1(type_c2ats_GdkKeymap, l1), !ptr_v_2(type_c2ats_GdkKeymapKey, l2, l2_1), !ptr_v_2(type_c2ats_guint, l3, l3_1), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, type_c2ats_guint, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#gdk_keymap_get_entries_for_keycode"
fun fun_c2ats_gdk_keymap_get_direction: {l1:addr} (!ptr_v_1(type_c2ats_GdkKeymap, l1) | ptr l1) -> type_c2ats_PangoDirection = "mac#gdk_keymap_get_direction"
fun fun_c2ats_gdk_keymap_have_bidi_layouts: {l1:addr} (!ptr_v_1(type_c2ats_GdkKeymap, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_keymap_have_bidi_layouts"
fun fun_c2ats_gdk_keymap_get_caps_lock_state: {l1:addr} (!ptr_v_1(type_c2ats_GdkKeymap, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_keymap_get_caps_lock_state"
fun fun_c2ats_gdk_keymap_get_num_lock_state: {l1:addr} (!ptr_v_1(type_c2ats_GdkKeymap, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_keymap_get_num_lock_state"
fun fun_c2ats_gdk_keymap_get_scroll_lock_state: {l1:addr} (!ptr_v_1(type_c2ats_GdkKeymap, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gdk_keymap_get_scroll_lock_state"
fun fun_c2ats_gdk_keymap_get_modifier_state: {l1:addr} (!ptr_v_1(type_c2ats_GdkKeymap, l1) | ptr l1) -> type_c2ats_guint = "mac#gdk_keymap_get_modifier_state"
fun fun_c2ats_gdk_keymap_add_virtual_modifiers: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkKeymap, l1), !ptr_v_1(type_c2ats_GdkModifierType, l2) | ptr l1, ptr l2) -> void = "mac#gdk_keymap_add_virtual_modifiers"
fun fun_c2ats_gdk_keymap_map_virtual_modifiers: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkKeymap, l1), !ptr_v_1(type_c2ats_GdkModifierType, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_keymap_map_virtual_modifiers"
fun fun_c2ats_gdk_keymap_get_modifier_mask: {l1:addr} (!ptr_v_1(type_c2ats_GdkKeymap, l1) | ptr l1, type_c2ats_GdkModifierIntent) -> type_c2ats_GdkModifierType = "mac#gdk_keymap_get_modifier_mask"
fun fun_c2ats_gdk_keyval_name: (type_c2ats_guint) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#gdk_keyval_name"
fun fun_c2ats_gdk_keyval_from_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_guint = "mac#gdk_keyval_from_name"
fun fun_c2ats_gdk_keyval_convert_case: {l1,l2:addr} (!ptr_v_1(type_c2ats_guint, l1), !ptr_v_1(type_c2ats_guint, l2) | type_c2ats_guint, ptr l1, ptr l2) -> void = "mac#gdk_keyval_convert_case"
fun fun_c2ats_gdk_keyval_to_upper: (type_c2ats_guint) -> type_c2ats_guint = "mac#gdk_keyval_to_upper"
fun fun_c2ats_gdk_keyval_to_lower: (type_c2ats_guint) -> type_c2ats_guint = "mac#gdk_keyval_to_lower"
fun fun_c2ats_gdk_keyval_is_upper: (type_c2ats_guint) -> type_c2ats_gboolean = "mac#gdk_keyval_is_upper"
fun fun_c2ats_gdk_keyval_is_lower: (type_c2ats_guint) -> type_c2ats_gboolean = "mac#gdk_keyval_is_lower"
fun fun_c2ats_gdk_keyval_to_unicode: (type_c2ats_guint) -> type_c2ats_guint32 = "mac#gdk_keyval_to_unicode"
fun fun_c2ats_gdk_unicode_to_keyval: (type_c2ats_guint32) -> type_c2ats_guint = "mac#gdk_unicode_to_keyval"
// File: /usr/include/gtk-3.0/gdk/gdkmain.h
fun fun_c2ats_gdk_parse_args: {l1,l2,l2_1,l2_2:addr} (!ptr_v_1(type_c2ats_gint, l1), !ptr_v_3(type_c2ats_gchar, l2, l2_1, l2_2) | ptr l1, ptr l2) -> void = "mac#gdk_parse_args"
fun fun_c2ats_gdk_init: {l1,l2,l2_1,l2_2:addr} (!ptr_v_1(type_c2ats_gint, l1), !ptr_v_3(type_c2ats_gchar, l2, l2_1, l2_2) | ptr l1, ptr l2) -> void = "mac#gdk_init"
fun fun_c2ats_gdk_init_check: {l1,l2,l2_1,l2_2:addr} (!ptr_v_1(type_c2ats_gint, l1), !ptr_v_3(type_c2ats_gchar, l2, l2_1, l2_2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gdk_init_check"
fun fun_c2ats_gdk_add_option_entries_libgtk_only: {l1:addr} (!ptr_v_1(type_c2ats_GOptionGroup, l1) | ptr l1) -> void = "mac#gdk_add_option_entries_libgtk_only"
fun fun_c2ats_gdk_pre_parse_libgtk_only: () -> void = "mac#gdk_pre_parse_libgtk_only"
fun fun_c2ats_gdk_get_program_class: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#gdk_get_program_class"
fun fun_c2ats_gdk_set_program_class: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#gdk_set_program_class"
fun fun_c2ats_gdk_notify_startup_complete: () -> void = "mac#gdk_notify_startup_complete"
fun fun_c2ats_gdk_notify_startup_complete_with_id: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#gdk_notify_startup_complete_with_id"
fun fun_c2ats_gdk_error_trap_push: () -> void = "mac#gdk_error_trap_push"
fun fun_c2ats_gdk_error_trap_pop: () -> type_c2ats_gint = "mac#gdk_error_trap_pop"
fun fun_c2ats_gdk_error_trap_pop_ignored: () -> void = "mac#gdk_error_trap_pop_ignored"
fun fun_c2ats_gdk_get_display_arg_name: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#gdk_get_display_arg_name"
fun fun_c2ats_gdk_get_display: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#gdk_get_display"
fun fun_c2ats_gdk_pointer_grab: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkWindow, l2), !ptr_v_1(type_c2ats_GdkCursor, l3) | ptr l1, type_c2ats_gboolean, type_c2ats_GdkEventMask, ptr l2, ptr l3, type_c2ats_guint32) -> type_c2ats_GdkGrabStatus = "mac#gdk_pointer_grab"
fun fun_c2ats_gdk_keyboard_grab: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gboolean, type_c2ats_guint32) -> type_c2ats_GdkGrabStatus = "mac#gdk_keyboard_grab"
fun fun_c2ats_gdk_pointer_ungrab: (type_c2ats_guint32) -> void = "mac#gdk_pointer_ungrab"
fun fun_c2ats_gdk_keyboard_ungrab: (type_c2ats_guint32) -> void = "mac#gdk_keyboard_ungrab"
fun fun_c2ats_gdk_pointer_is_grabbed: () -> type_c2ats_gboolean = "mac#gdk_pointer_is_grabbed"
fun fun_c2ats_gdk_screen_width: () -> type_c2ats_gint = "mac#gdk_screen_width"
fun fun_c2ats_gdk_screen_height: () -> type_c2ats_gint = "mac#gdk_screen_height"
fun fun_c2ats_gdk_screen_width_mm: () -> type_c2ats_gint = "mac#gdk_screen_width_mm"
fun fun_c2ats_gdk_screen_height_mm: () -> type_c2ats_gint = "mac#gdk_screen_height_mm"
fun fun_c2ats_gdk_set_double_click_time: (type_c2ats_guint) -> void = "mac#gdk_set_double_click_time"
fun fun_c2ats_gdk_beep: () -> void = "mac#gdk_beep"
fun fun_c2ats_gdk_flush: () -> void = "mac#gdk_flush"
fun fun_c2ats_gdk_disable_multidevice: () -> void = "mac#gdk_disable_multidevice"
fun fun_c2ats_gdk_set_allowed_backends: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#gdk_set_allowed_backends"
// File: /usr/include/gtk-3.0/gdk/gdkpango.h
fun fun_c2ats_gdk_pango_context_get_for_screen: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoContext, l2) | ptr l2) = "mac#gdk_pango_context_get_for_screen"
fun fun_c2ats_gdk_pango_context_get_for_display: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoContext, l2) | ptr l2) = "mac#gdk_pango_context_get_for_display"
fun fun_c2ats_gdk_pango_context_get: () -> [l1:addr] (ptr_v_1(type_c2ats_PangoContext, l1) | ptr l1) = "mac#gdk_pango_context_get"
fun fun_c2ats_gdk_pango_layout_line_get_clip_region: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoLayoutLine, l1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, type_c2ats_gint, type_c2ats_gint, ptr l2, type_c2ats_gint) -> [l3:addr] (ptr_v_1(type_c2ats_cairo_region_t, l3) | ptr l3) = "mac#gdk_pango_layout_line_get_clip_region"
fun fun_c2ats_gdk_pango_layout_get_clip_region: {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoLayout, l1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, type_c2ats_gint, type_c2ats_gint, ptr l2, type_c2ats_gint) -> [l3:addr] (ptr_v_1(type_c2ats_cairo_region_t, l3) | ptr l3) = "mac#gdk_pango_layout_get_clip_region"
// File: /usr/include/gtk-3.0/gdk/gdkproperty.h
typedef type_c2ats_GdkPropMode = int
#define enum_c2ats_GDK_PROP_MODE_REPLACE 0
#define enum_c2ats_GDK_PROP_MODE_PREPEND 1
#define enum_c2ats_GDK_PROP_MODE_APPEND 2
fun fun_c2ats_gdk_atom_intern: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gboolean) -> type_c2ats_GdkAtom = "mac#gdk_atom_intern"
fun fun_c2ats_gdk_atom_intern_static_string: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_GdkAtom = "mac#gdk_atom_intern_static_string"
fun fun_c2ats_gdk_atom_name: (type_c2ats_GdkAtom) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#gdk_atom_name"
fun fun_c2ats_gdk_property_get: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_GdkAtom, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_2(type_c2ats_guchar, l5, l5_1) | ptr l1, type_c2ats_GdkAtom, type_c2ats_GdkAtom, type_c2ats_gulong, type_c2ats_gulong, type_c2ats_gint, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#gdk_property_get"
fun fun_c2ats_gdk_property_change: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_1(type_c2ats_guchar, l2) | ptr l1, type_c2ats_GdkAtom, type_c2ats_GdkAtom, type_c2ats_gint, type_c2ats_GdkPropMode, ptr l2, type_c2ats_gint) -> void = "mac#gdk_property_change"
fun fun_c2ats_gdk_property_delete: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_GdkAtom) -> void = "mac#gdk_property_delete"
fun fun_c2ats_gdk_text_property_to_utf8_list_for_display: {l1,l2,l3,l3_1,l3_2:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1), !ptr_v_1(type_c2ats_guchar, l2), !ptr_v_3(type_c2ats_gchar, l3, l3_1, l3_2) | ptr l1, type_c2ats_GdkAtom, type_c2ats_gint, ptr l2, type_c2ats_gint, ptr l3) -> type_c2ats_gint = "mac#gdk_text_property_to_utf8_list_for_display"
fun fun_c2ats_gdk_utf8_to_string_target: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gdk_utf8_to_string_target"
// File: /usr/include/gtk-3.0/gdk/gdkselection.h
fun fun_c2ats_gdk_selection_owner_set: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_GdkAtom, type_c2ats_guint32, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gdk_selection_owner_set"
fun fun_c2ats_gdk_selection_owner_get: (type_c2ats_GdkAtom) -> [l1:addr] (ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) = "mac#gdk_selection_owner_get"
fun fun_c2ats_gdk_selection_owner_set_for_display: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2, type_c2ats_GdkAtom, type_c2ats_guint32, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gdk_selection_owner_set_for_display"
fun fun_c2ats_gdk_selection_owner_get_for_display: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1, type_c2ats_GdkAtom) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gdk_selection_owner_get_for_display"
fun fun_c2ats_gdk_selection_convert: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_GdkAtom, type_c2ats_GdkAtom, type_c2ats_guint32) -> void = "mac#gdk_selection_convert"
fun fun_c2ats_gdk_selection_property_get: {l1,l2,l2_1,l3,l4:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1), !ptr_v_2(type_c2ats_guchar, l2, l2_1), !ptr_v_1(type_c2ats_GdkAtom, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gint = "mac#gdk_selection_property_get"
fun fun_c2ats_gdk_selection_send_notify: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_GdkAtom, type_c2ats_GdkAtom, type_c2ats_GdkAtom, type_c2ats_guint32) -> void = "mac#gdk_selection_send_notify"
fun fun_c2ats_gdk_selection_send_notify_for_display: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2, type_c2ats_GdkAtom, type_c2ats_GdkAtom, type_c2ats_GdkAtom, type_c2ats_guint32) -> void = "mac#gdk_selection_send_notify_for_display"
// File: /usr/include/gtk-3.0/gdk/gdktestutils.h
fun fun_c2ats_gdk_test_render_sync: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1) -> void = "mac#gdk_test_render_sync"
fun fun_c2ats_gdk_test_simulate_key: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_guint, type_c2ats_GdkModifierType, type_c2ats_GdkEventType) -> type_c2ats_gboolean = "mac#gdk_test_simulate_key"
fun fun_c2ats_gdk_test_simulate_button: {l1:addr} (!ptr_v_1(type_c2ats_GdkWindow, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_guint, type_c2ats_GdkModifierType, type_c2ats_GdkEventType) -> type_c2ats_gboolean = "mac#gdk_test_simulate_button"
// File: /usr/include/gtk-3.0/gdk/gdkthreads.h
fun fun_c2ats_gdk_threads_init: () -> void = "mac#gdk_threads_init"
fun fun_c2ats_gdk_threads_enter: () -> void = "mac#gdk_threads_enter"
fun fun_c2ats_gdk_threads_leave: () -> void = "mac#gdk_threads_leave"
fun fun_c2ats_gdk_threads_set_lock_functions: (type_c2ats_GCallback, type_c2ats_GCallback) -> void = "mac#gdk_threads_set_lock_functions"
fun fun_c2ats_gdk_threads_add_idle_full: (type_c2ats_gint, type_c2ats_GSourceFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_guint = "mac#gdk_threads_add_idle_full"
fun fun_c2ats_gdk_threads_add_idle: (type_c2ats_GSourceFunc, type_c2ats_gpointer) -> type_c2ats_guint = "mac#gdk_threads_add_idle"
fun fun_c2ats_gdk_threads_add_timeout_full: (type_c2ats_gint, type_c2ats_guint, type_c2ats_GSourceFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_guint = "mac#gdk_threads_add_timeout_full"
fun fun_c2ats_gdk_threads_add_timeout: (type_c2ats_guint, type_c2ats_GSourceFunc, type_c2ats_gpointer) -> type_c2ats_guint = "mac#gdk_threads_add_timeout"
fun fun_c2ats_gdk_threads_add_timeout_seconds_full: (type_c2ats_gint, type_c2ats_guint, type_c2ats_GSourceFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_guint = "mac#gdk_threads_add_timeout_seconds_full"
fun fun_c2ats_gdk_threads_add_timeout_seconds: (type_c2ats_guint, type_c2ats_GSourceFunc, type_c2ats_gpointer) -> type_c2ats_guint = "mac#gdk_threads_add_timeout_seconds"
// File: /usr/include/gtk-3.0/gdk/gdkvisual.h
typedef type_c2ats_GdkVisualType = int
#define enum_c2ats_GDK_VISUAL_STATIC_GRAY 0
#define enum_c2ats_GDK_VISUAL_GRAYSCALE 1
#define enum_c2ats_GDK_VISUAL_STATIC_COLOR 2
#define enum_c2ats_GDK_VISUAL_PSEUDO_COLOR 3
#define enum_c2ats_GDK_VISUAL_TRUE_COLOR 4
#define enum_c2ats_GDK_VISUAL_DIRECT_COLOR 5
fun fun_c2ats_gdk_visual_get_type: () -> type_c2ats_GType = "mac#gdk_visual_get_type"
fun fun_c2ats_gdk_visual_get_best_depth: () -> type_c2ats_gint = "mac#gdk_visual_get_best_depth"
fun fun_c2ats_gdk_visual_get_best_type: () -> type_c2ats_GdkVisualType = "mac#gdk_visual_get_best_type"
fun fun_c2ats_gdk_visual_get_system: () -> [l1:addr] (ptr_v_1(type_c2ats_GdkVisual, l1) | ptr l1) = "mac#gdk_visual_get_system"
fun fun_c2ats_gdk_visual_get_best: () -> [l1:addr] (ptr_v_1(type_c2ats_GdkVisual, l1) | ptr l1) = "mac#gdk_visual_get_best"
fun fun_c2ats_gdk_visual_get_best_with_depth: (type_c2ats_gint) -> [l1:addr] (ptr_v_1(type_c2ats_GdkVisual, l1) | ptr l1) = "mac#gdk_visual_get_best_with_depth"
fun fun_c2ats_gdk_visual_get_best_with_type: (type_c2ats_GdkVisualType) -> [l1:addr] (ptr_v_1(type_c2ats_GdkVisual, l1) | ptr l1) = "mac#gdk_visual_get_best_with_type"
fun fun_c2ats_gdk_visual_get_best_with_both: (type_c2ats_gint, type_c2ats_GdkVisualType) -> [l1:addr] (ptr_v_1(type_c2ats_GdkVisual, l1) | ptr l1) = "mac#gdk_visual_get_best_with_both"
fun fun_c2ats_gdk_query_depths: {l1,l1_1,l2:addr} (!ptr_v_2(type_c2ats_gint, l1, l1_1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, ptr l2) -> void = "mac#gdk_query_depths"
fun fun_c2ats_gdk_query_visual_types: {l1,l1_1,l2:addr} (!ptr_v_2(type_c2ats_GdkVisualType, l1, l1_1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, ptr l2) -> void = "mac#gdk_query_visual_types"
fun fun_c2ats_gdk_list_visuals: () -> [l1:addr] (ptr_v_1(type_c2ats_GList, l1) | ptr l1) = "mac#gdk_list_visuals"
fun fun_c2ats_gdk_visual_get_screen: {l1:addr} (!ptr_v_1(type_c2ats_GdkVisual, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l2) = "mac#gdk_visual_get_screen"
fun fun_c2ats_gdk_visual_get_visual_type: {l1:addr} (!ptr_v_1(type_c2ats_GdkVisual, l1) | ptr l1) -> type_c2ats_GdkVisualType = "mac#gdk_visual_get_visual_type"
fun fun_c2ats_gdk_visual_get_depth: {l1:addr} (!ptr_v_1(type_c2ats_GdkVisual, l1) | ptr l1) -> type_c2ats_gint = "mac#gdk_visual_get_depth"
fun fun_c2ats_gdk_visual_get_byte_order: {l1:addr} (!ptr_v_1(type_c2ats_GdkVisual, l1) | ptr l1) -> type_c2ats_GdkByteOrder = "mac#gdk_visual_get_byte_order"
fun fun_c2ats_gdk_visual_get_colormap_size: {l1:addr} (!ptr_v_1(type_c2ats_GdkVisual, l1) | ptr l1) -> type_c2ats_gint = "mac#gdk_visual_get_colormap_size"
fun fun_c2ats_gdk_visual_get_bits_per_rgb: {l1:addr} (!ptr_v_1(type_c2ats_GdkVisual, l1) | ptr l1) -> type_c2ats_gint = "mac#gdk_visual_get_bits_per_rgb"
fun fun_c2ats_gdk_visual_get_red_pixel_details: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GdkVisual, l1), !ptr_v_1(type_c2ats_guint32, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gdk_visual_get_red_pixel_details"
fun fun_c2ats_gdk_visual_get_green_pixel_details: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GdkVisual, l1), !ptr_v_1(type_c2ats_guint32, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gdk_visual_get_green_pixel_details"
fun fun_c2ats_gdk_visual_get_blue_pixel_details: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GdkVisual, l1), !ptr_v_1(type_c2ats_guint32, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gdk_visual_get_blue_pixel_details"
// File: /usr/include/gtk-3.0/gdk/gdk-autocleanup.h
typedef type_c2ats_GdkAppLaunchContext_autoptr = cPtr0(type_c2ats_GdkAppLaunchContext)
fun fun_c2ats_glib_autoptr_cleanup_GdkAppLaunchContext: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkAppLaunchContext, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkAppLaunchContext"
typedef type_c2ats_GdkCursor_autoptr = cPtr0(type_c2ats_GdkCursor)
fun fun_c2ats_glib_autoptr_cleanup_GdkCursor: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkCursor, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkCursor"
typedef type_c2ats_GdkDevice_autoptr = cPtr0(type_c2ats_GdkDevice)
fun fun_c2ats_glib_autoptr_cleanup_GdkDevice: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkDevice, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkDevice"
typedef type_c2ats_GdkDeviceManager_autoptr = cPtr0(type_c2ats_GdkDeviceManager)
fun fun_c2ats_glib_autoptr_cleanup_GdkDeviceManager: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkDeviceManager, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkDeviceManager"
typedef type_c2ats_GdkDisplay_autoptr = cPtr0(type_c2ats_GdkDisplay)
fun fun_c2ats_glib_autoptr_cleanup_GdkDisplay: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkDisplay, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkDisplay"
typedef type_c2ats_GdkDisplayManager_autoptr = cPtr0(type_c2ats_GdkDisplayManager)
fun fun_c2ats_glib_autoptr_cleanup_GdkDisplayManager: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkDisplayManager, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkDisplayManager"
typedef type_c2ats_GdkDragContext_autoptr = cPtr0(type_c2ats_GdkDragContext)
fun fun_c2ats_glib_autoptr_cleanup_GdkDragContext: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkDragContext, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkDragContext"
typedef type_c2ats_GdkFrameClock_autoptr = cPtr0(type_c2ats_GdkFrameClock)
fun fun_c2ats_glib_autoptr_cleanup_GdkFrameClock: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkFrameClock, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkFrameClock"
typedef type_c2ats_GdkGLContext_autoptr = cPtr0(type_c2ats_GdkGLContext)
fun fun_c2ats_glib_autoptr_cleanup_GdkGLContext: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkGLContext, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkGLContext"
typedef type_c2ats_GdkKeymap_autoptr = cPtr0(type_c2ats_GdkKeymap)
fun fun_c2ats_glib_autoptr_cleanup_GdkKeymap: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkKeymap, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkKeymap"
typedef type_c2ats_GdkScreen_autoptr = cPtr0(type_c2ats_GdkScreen)
fun fun_c2ats_glib_autoptr_cleanup_GdkScreen: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkScreen, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkScreen"
typedef type_c2ats_GdkVisual_autoptr = cPtr0(type_c2ats_GdkVisual)
fun fun_c2ats_glib_autoptr_cleanup_GdkVisual: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkVisual, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkVisual"
typedef type_c2ats_GdkWindow_autoptr = cPtr0(type_c2ats_GdkWindow)
fun fun_c2ats_glib_autoptr_cleanup_GdkWindow: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkWindow, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkWindow"
typedef type_c2ats_GdkEvent_autoptr = cPtr0(type_c2ats_GdkEvent)
fun fun_c2ats_glib_autoptr_cleanup_GdkEvent: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkEvent, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkEvent"
typedef type_c2ats_GdkFrameTimings_autoptr = cPtr0(type_c2ats_GdkFrameTimings)
fun fun_c2ats_glib_autoptr_cleanup_GdkFrameTimings: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkFrameTimings, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkFrameTimings"
typedef type_c2ats_GdkRGBA_autoptr = cPtr0(type_c2ats_GdkRGBA)
fun fun_c2ats_glib_autoptr_cleanup_GdkRGBA: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GdkRGBA, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GdkRGBA"
// File: /usr/include/gtk-3.0/gtk/gtkenums.h
typedef type_c2ats_GtkAlign = int
#define enum_c2ats_GTK_ALIGN_FILL 0
#define enum_c2ats_GTK_ALIGN_START 1
#define enum_c2ats_GTK_ALIGN_END 2
#define enum_c2ats_GTK_ALIGN_CENTER 3
#define enum_c2ats_GTK_ALIGN_BASELINE 4
typedef type_c2ats_GtkArrowType = int
#define enum_c2ats_GTK_ARROW_UP 0
#define enum_c2ats_GTK_ARROW_DOWN 1
#define enum_c2ats_GTK_ARROW_LEFT 2
#define enum_c2ats_GTK_ARROW_RIGHT 3
#define enum_c2ats_GTK_ARROW_NONE 4
typedef type_c2ats_GtkBaselinePosition = int
#define enum_c2ats_GTK_BASELINE_POSITION_TOP 0
#define enum_c2ats_GTK_BASELINE_POSITION_CENTER 1
#define enum_c2ats_GTK_BASELINE_POSITION_BOTTOM 2
typedef type_c2ats_GtkDeleteType = int
#define enum_c2ats_GTK_DELETE_CHARS 0
#define enum_c2ats_GTK_DELETE_WORD_ENDS 1
#define enum_c2ats_GTK_DELETE_WORDS 2
#define enum_c2ats_GTK_DELETE_DISPLAY_LINES 3
#define enum_c2ats_GTK_DELETE_DISPLAY_LINE_ENDS 4
#define enum_c2ats_GTK_DELETE_PARAGRAPH_ENDS 5
#define enum_c2ats_GTK_DELETE_PARAGRAPHS 6
#define enum_c2ats_GTK_DELETE_WHITESPACE 7
typedef type_c2ats_GtkDirectionType = int
#define enum_c2ats_GTK_DIR_TAB_FORWARD 0
#define enum_c2ats_GTK_DIR_TAB_BACKWARD 1
#define enum_c2ats_GTK_DIR_UP 2
#define enum_c2ats_GTK_DIR_DOWN 3
#define enum_c2ats_GTK_DIR_LEFT 4
#define enum_c2ats_GTK_DIR_RIGHT 5
typedef type_c2ats_GtkIconSize = int
#define enum_c2ats_GTK_ICON_SIZE_INVALID 0
#define enum_c2ats_GTK_ICON_SIZE_MENU 1
#define enum_c2ats_GTK_ICON_SIZE_SMALL_TOOLBAR 2
#define enum_c2ats_GTK_ICON_SIZE_LARGE_TOOLBAR 3
#define enum_c2ats_GTK_ICON_SIZE_BUTTON 4
#define enum_c2ats_GTK_ICON_SIZE_DND 5
#define enum_c2ats_GTK_ICON_SIZE_DIALOG 6
typedef type_c2ats_GtkSensitivityType = int
#define enum_c2ats_GTK_SENSITIVITY_AUTO 0
#define enum_c2ats_GTK_SENSITIVITY_ON 1
#define enum_c2ats_GTK_SENSITIVITY_OFF 2
typedef type_c2ats_GtkTextDirection = int
#define enum_c2ats_GTK_TEXT_DIR_NONE 0
#define enum_c2ats_GTK_TEXT_DIR_LTR 1
#define enum_c2ats_GTK_TEXT_DIR_RTL 2
typedef type_c2ats_GtkJustification = int
#define enum_c2ats_GTK_JUSTIFY_LEFT 0
#define enum_c2ats_GTK_JUSTIFY_RIGHT 1
#define enum_c2ats_GTK_JUSTIFY_CENTER 2
#define enum_c2ats_GTK_JUSTIFY_FILL 3
typedef type_c2ats_GtkMenuDirectionType = int
#define enum_c2ats_GTK_MENU_DIR_PARENT 0
#define enum_c2ats_GTK_MENU_DIR_CHILD 1
#define enum_c2ats_GTK_MENU_DIR_NEXT 2
#define enum_c2ats_GTK_MENU_DIR_PREV 3
typedef type_c2ats_GtkMessageType = int
#define enum_c2ats_GTK_MESSAGE_INFO 0
#define enum_c2ats_GTK_MESSAGE_WARNING 1
#define enum_c2ats_GTK_MESSAGE_QUESTION 2
#define enum_c2ats_GTK_MESSAGE_ERROR 3
#define enum_c2ats_GTK_MESSAGE_OTHER 4
typedef type_c2ats_GtkMovementStep = int
#define enum_c2ats_GTK_MOVEMENT_LOGICAL_POSITIONS 0
#define enum_c2ats_GTK_MOVEMENT_VISUAL_POSITIONS 1
#define enum_c2ats_GTK_MOVEMENT_WORDS 2
#define enum_c2ats_GTK_MOVEMENT_DISPLAY_LINES 3
#define enum_c2ats_GTK_MOVEMENT_DISPLAY_LINE_ENDS 4
#define enum_c2ats_GTK_MOVEMENT_PARAGRAPHS 5
#define enum_c2ats_GTK_MOVEMENT_PARAGRAPH_ENDS 6
#define enum_c2ats_GTK_MOVEMENT_PAGES 7
#define enum_c2ats_GTK_MOVEMENT_BUFFER_ENDS 8
#define enum_c2ats_GTK_MOVEMENT_HORIZONTAL_PAGES 9
typedef type_c2ats_GtkScrollStep = int
#define enum_c2ats_GTK_SCROLL_STEPS 0
#define enum_c2ats_GTK_SCROLL_PAGES 1
#define enum_c2ats_GTK_SCROLL_ENDS 2
#define enum_c2ats_GTK_SCROLL_HORIZONTAL_STEPS 3
#define enum_c2ats_GTK_SCROLL_HORIZONTAL_PAGES 4
#define enum_c2ats_GTK_SCROLL_HORIZONTAL_ENDS 5
typedef type_c2ats_GtkOrientation = int
#define enum_c2ats_GTK_ORIENTATION_HORIZONTAL 0
#define enum_c2ats_GTK_ORIENTATION_VERTICAL 1
typedef type_c2ats_GtkPackType = int
#define enum_c2ats_GTK_PACK_START 0
#define enum_c2ats_GTK_PACK_END 1
typedef type_c2ats_GtkPositionType = int
#define enum_c2ats_GTK_POS_LEFT 0
#define enum_c2ats_GTK_POS_RIGHT 1
#define enum_c2ats_GTK_POS_TOP 2
#define enum_c2ats_GTK_POS_BOTTOM 3
typedef type_c2ats_GtkReliefStyle = int
#define enum_c2ats_GTK_RELIEF_NORMAL 0
#define enum_c2ats_GTK_RELIEF_HALF 1
#define enum_c2ats_GTK_RELIEF_NONE 2
typedef type_c2ats_GtkScrollType = int
#define enum_c2ats_GTK_SCROLL_NONE 0
#define enum_c2ats_GTK_SCROLL_JUMP 1
#define enum_c2ats_GTK_SCROLL_STEP_BACKWARD 2
#define enum_c2ats_GTK_SCROLL_STEP_FORWARD 3
#define enum_c2ats_GTK_SCROLL_PAGE_BACKWARD 4
#define enum_c2ats_GTK_SCROLL_PAGE_FORWARD 5
#define enum_c2ats_GTK_SCROLL_STEP_UP 6
#define enum_c2ats_GTK_SCROLL_STEP_DOWN 7
#define enum_c2ats_GTK_SCROLL_PAGE_UP 8
#define enum_c2ats_GTK_SCROLL_PAGE_DOWN 9
#define enum_c2ats_GTK_SCROLL_STEP_LEFT 10
#define enum_c2ats_GTK_SCROLL_STEP_RIGHT 11
#define enum_c2ats_GTK_SCROLL_PAGE_LEFT 12
#define enum_c2ats_GTK_SCROLL_PAGE_RIGHT 13
#define enum_c2ats_GTK_SCROLL_START 14
#define enum_c2ats_GTK_SCROLL_END 15
typedef type_c2ats_GtkSelectionMode = int
#define enum_c2ats_GTK_SELECTION_NONE 0
#define enum_c2ats_GTK_SELECTION_SINGLE 1
#define enum_c2ats_GTK_SELECTION_BROWSE 2
#define enum_c2ats_GTK_SELECTION_MULTIPLE 3
typedef type_c2ats_GtkShadowType = int
#define enum_c2ats_GTK_SHADOW_NONE 0
#define enum_c2ats_GTK_SHADOW_IN 1
#define enum_c2ats_GTK_SHADOW_OUT 2
#define enum_c2ats_GTK_SHADOW_ETCHED_IN 3
#define enum_c2ats_GTK_SHADOW_ETCHED_OUT 4
typedef type_c2ats_GtkStateType = int
#define enum_c2ats_GTK_STATE_NORMAL 0
#define enum_c2ats_GTK_STATE_ACTIVE 1
#define enum_c2ats_GTK_STATE_PRELIGHT 2
#define enum_c2ats_GTK_STATE_SELECTED 3
#define enum_c2ats_GTK_STATE_INSENSITIVE 4
#define enum_c2ats_GTK_STATE_INCONSISTENT 5
#define enum_c2ats_GTK_STATE_FOCUSED 6
typedef type_c2ats_GtkToolbarStyle = int
#define enum_c2ats_GTK_TOOLBAR_ICONS 0
#define enum_c2ats_GTK_TOOLBAR_TEXT 1
#define enum_c2ats_GTK_TOOLBAR_BOTH 2
#define enum_c2ats_GTK_TOOLBAR_BOTH_HORIZ 3
typedef type_c2ats_GtkWrapMode = int
#define enum_c2ats_GTK_WRAP_NONE 0
#define enum_c2ats_GTK_WRAP_CHAR 1
#define enum_c2ats_GTK_WRAP_WORD 2
#define enum_c2ats_GTK_WRAP_WORD_CHAR 3
typedef type_c2ats_GtkSortType = int
#define enum_c2ats_GTK_SORT_ASCENDING 0
#define enum_c2ats_GTK_SORT_DESCENDING 1
typedef type_c2ats_GtkIMPreeditStyle = int
#define enum_c2ats_GTK_IM_PREEDIT_NOTHING 0
#define enum_c2ats_GTK_IM_PREEDIT_CALLBACK 1
#define enum_c2ats_GTK_IM_PREEDIT_NONE 2
typedef type_c2ats_GtkIMStatusStyle = int
#define enum_c2ats_GTK_IM_STATUS_NOTHING 0
#define enum_c2ats_GTK_IM_STATUS_CALLBACK 1
#define enum_c2ats_GTK_IM_STATUS_NONE 2
typedef type_c2ats_GtkPackDirection = int
#define enum_c2ats_GTK_PACK_DIRECTION_LTR 0
#define enum_c2ats_GTK_PACK_DIRECTION_RTL 1
#define enum_c2ats_GTK_PACK_DIRECTION_TTB 2
#define enum_c2ats_GTK_PACK_DIRECTION_BTT 3
typedef type_c2ats_GtkPrintPages = int
#define enum_c2ats_GTK_PRINT_PAGES_ALL 0
#define enum_c2ats_GTK_PRINT_PAGES_CURRENT 1
#define enum_c2ats_GTK_PRINT_PAGES_RANGES 2
#define enum_c2ats_GTK_PRINT_PAGES_SELECTION 3
typedef type_c2ats_GtkPageSet = int
#define enum_c2ats_GTK_PAGE_SET_ALL 0
#define enum_c2ats_GTK_PAGE_SET_EVEN 1
#define enum_c2ats_GTK_PAGE_SET_ODD 2
typedef type_c2ats_GtkNumberUpLayout = int
#define enum_c2ats_GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM 0
#define enum_c2ats_GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP 1
#define enum_c2ats_GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM 2
#define enum_c2ats_GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP 3
#define enum_c2ats_GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT 4
#define enum_c2ats_GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT 5
#define enum_c2ats_GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT 6
#define enum_c2ats_GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT 7
typedef type_c2ats_GtkPageOrientation = int
#define enum_c2ats_GTK_PAGE_ORIENTATION_PORTRAIT 0
#define enum_c2ats_GTK_PAGE_ORIENTATION_LANDSCAPE 1
#define enum_c2ats_GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT 2
#define enum_c2ats_GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE 3
typedef type_c2ats_GtkPrintQuality = int
#define enum_c2ats_GTK_PRINT_QUALITY_LOW 0
#define enum_c2ats_GTK_PRINT_QUALITY_NORMAL 1
#define enum_c2ats_GTK_PRINT_QUALITY_HIGH 2
#define enum_c2ats_GTK_PRINT_QUALITY_DRAFT 3
typedef type_c2ats_GtkPrintDuplex = int
#define enum_c2ats_GTK_PRINT_DUPLEX_SIMPLEX 0
#define enum_c2ats_GTK_PRINT_DUPLEX_HORIZONTAL 1
#define enum_c2ats_GTK_PRINT_DUPLEX_VERTICAL 2
typedef type_c2ats_GtkUnit = int
#define enum_c2ats_GTK_UNIT_NONE 0
#define enum_c2ats_GTK_UNIT_POINTS 1
#define enum_c2ats_GTK_UNIT_INCH 2
#define enum_c2ats_GTK_UNIT_MM 3
typedef type_c2ats_GtkTreeViewGridLines = int
#define enum_c2ats_GTK_TREE_VIEW_GRID_LINES_NONE 0
#define enum_c2ats_GTK_TREE_VIEW_GRID_LINES_HORIZONTAL 1
#define enum_c2ats_GTK_TREE_VIEW_GRID_LINES_VERTICAL 2
#define enum_c2ats_GTK_TREE_VIEW_GRID_LINES_BOTH 3
typedef type_c2ats_GtkDragResult = int
#define enum_c2ats_GTK_DRAG_RESULT_SUCCESS 0
#define enum_c2ats_GTK_DRAG_RESULT_NO_TARGET 1
#define enum_c2ats_GTK_DRAG_RESULT_USER_CANCELLED 2
#define enum_c2ats_GTK_DRAG_RESULT_TIMEOUT_EXPIRED 3
#define enum_c2ats_GTK_DRAG_RESULT_GRAB_BROKEN 4
#define enum_c2ats_GTK_DRAG_RESULT_ERROR 5
typedef type_c2ats_GtkSizeGroupMode = int
#define enum_c2ats_GTK_SIZE_GROUP_NONE 0
#define enum_c2ats_GTK_SIZE_GROUP_HORIZONTAL 1
#define enum_c2ats_GTK_SIZE_GROUP_VERTICAL 2
#define enum_c2ats_GTK_SIZE_GROUP_BOTH 3
typedef type_c2ats_GtkSizeRequestMode = int
#define enum_c2ats_GTK_SIZE_REQUEST_HEIGHT_FOR_WIDTH 0
#define enum_c2ats_GTK_SIZE_REQUEST_WIDTH_FOR_HEIGHT 0 + 1
#define enum_c2ats_GTK_SIZE_REQUEST_CONSTANT_SIZE 0 + 2
typedef type_c2ats_GtkScrollablePolicy = int
#define enum_c2ats_GTK_SCROLL_MINIMUM 0
#define enum_c2ats_GTK_SCROLL_NATURAL 0 + 1
typedef type_c2ats_GtkStateFlags = int
#define enum_c2ats_GTK_STATE_FLAG_NORMAL 0
#define enum_c2ats_GTK_STATE_FLAG_ACTIVE 1 << 0
#define enum_c2ats_GTK_STATE_FLAG_PRELIGHT 1 << 1
#define enum_c2ats_GTK_STATE_FLAG_SELECTED 1 << 2
#define enum_c2ats_GTK_STATE_FLAG_INSENSITIVE 1 << 3
#define enum_c2ats_GTK_STATE_FLAG_INCONSISTENT 1 << 4
#define enum_c2ats_GTK_STATE_FLAG_FOCUSED 1 << 5
#define enum_c2ats_GTK_STATE_FLAG_BACKDROP 1 << 6
#define enum_c2ats_GTK_STATE_FLAG_DIR_LTR 1 << 7
#define enum_c2ats_GTK_STATE_FLAG_DIR_RTL 1 << 8
#define enum_c2ats_GTK_STATE_FLAG_LINK 1 << 9
#define enum_c2ats_GTK_STATE_FLAG_VISITED 1 << 10
#define enum_c2ats_GTK_STATE_FLAG_CHECKED 1 << 11
#define enum_c2ats_GTK_STATE_FLAG_DROP_ACTIVE 1 << 12
typedef type_c2ats_GtkRegionFlags = int
#define enum_c2ats_GTK_REGION_EVEN 1 << 0
#define enum_c2ats_GTK_REGION_ODD 1 << 1
#define enum_c2ats_GTK_REGION_FIRST 1 << 2
#define enum_c2ats_GTK_REGION_LAST 1 << 3
#define enum_c2ats_GTK_REGION_ONLY 1 << 4
#define enum_c2ats_GTK_REGION_SORTED 1 << 5
typedef type_c2ats_GtkJunctionSides = int
#define enum_c2ats_GTK_JUNCTION_NONE 0
#define enum_c2ats_GTK_JUNCTION_CORNER_TOPLEFT 1 << 0
#define enum_c2ats_GTK_JUNCTION_CORNER_TOPRIGHT 1 << 1
#define enum_c2ats_GTK_JUNCTION_CORNER_BOTTOMLEFT 1 << 2
#define enum_c2ats_GTK_JUNCTION_CORNER_BOTTOMRIGHT 1 << 3
#define enum_c2ats_GTK_JUNCTION_TOP GTK_JUNCTION_CORNER_TOPLEFT lor GTK_JUNCTION_CORNER_TOPRIGHT
#define enum_c2ats_GTK_JUNCTION_BOTTOM GTK_JUNCTION_CORNER_BOTTOMLEFT lor GTK_JUNCTION_CORNER_BOTTOMRIGHT
#define enum_c2ats_GTK_JUNCTION_LEFT GTK_JUNCTION_CORNER_TOPLEFT lor GTK_JUNCTION_CORNER_BOTTOMLEFT
#define enum_c2ats_GTK_JUNCTION_RIGHT GTK_JUNCTION_CORNER_TOPRIGHT lor GTK_JUNCTION_CORNER_BOTTOMRIGHT
typedef type_c2ats_GtkBorderStyle = int
#define enum_c2ats_GTK_BORDER_STYLE_NONE 0
#define enum_c2ats_GTK_BORDER_STYLE_SOLID 1
#define enum_c2ats_GTK_BORDER_STYLE_INSET 2
#define enum_c2ats_GTK_BORDER_STYLE_OUTSET 3
#define enum_c2ats_GTK_BORDER_STYLE_HIDDEN 4
#define enum_c2ats_GTK_BORDER_STYLE_DOTTED 5
#define enum_c2ats_GTK_BORDER_STYLE_DASHED 6
#define enum_c2ats_GTK_BORDER_STYLE_DOUBLE 7
#define enum_c2ats_GTK_BORDER_STYLE_GROOVE 8
#define enum_c2ats_GTK_BORDER_STYLE_RIDGE 9
typedef type_c2ats_GtkLevelBarMode = int
#define enum_c2ats_GTK_LEVEL_BAR_MODE_CONTINUOUS 0
#define enum_c2ats_GTK_LEVEL_BAR_MODE_DISCRETE 1
typedef type_c2ats_GtkInputPurpose = int
#define enum_c2ats_GTK_INPUT_PURPOSE_FREE_FORM 0
#define enum_c2ats_GTK_INPUT_PURPOSE_ALPHA 1
#define enum_c2ats_GTK_INPUT_PURPOSE_DIGITS 2
#define enum_c2ats_GTK_INPUT_PURPOSE_NUMBER 3
#define enum_c2ats_GTK_INPUT_PURPOSE_PHONE 4
#define enum_c2ats_GTK_INPUT_PURPOSE_URL 5
#define enum_c2ats_GTK_INPUT_PURPOSE_EMAIL 6
#define enum_c2ats_GTK_INPUT_PURPOSE_NAME 7
#define enum_c2ats_GTK_INPUT_PURPOSE_PASSWORD 8
#define enum_c2ats_GTK_INPUT_PURPOSE_PIN 9
typedef type_c2ats_GtkInputHints = int
#define enum_c2ats_GTK_INPUT_HINT_NONE 0
#define enum_c2ats_GTK_INPUT_HINT_SPELLCHECK 1 << 0
#define enum_c2ats_GTK_INPUT_HINT_NO_SPELLCHECK 1 << 1
#define enum_c2ats_GTK_INPUT_HINT_WORD_COMPLETION 1 << 2
#define enum_c2ats_GTK_INPUT_HINT_LOWERCASE 1 << 3
#define enum_c2ats_GTK_INPUT_HINT_UPPERCASE_CHARS 1 << 4
#define enum_c2ats_GTK_INPUT_HINT_UPPERCASE_WORDS 1 << 5
#define enum_c2ats_GTK_INPUT_HINT_UPPERCASE_SENTENCES 1 << 6
#define enum_c2ats_GTK_INPUT_HINT_INHIBIT_OSK 1 << 7
#define enum_c2ats_GTK_INPUT_HINT_VERTICAL_WRITING 1 << 8
typedef type_c2ats_GtkPropagationPhase = int
#define enum_c2ats_GTK_PHASE_NONE 0
#define enum_c2ats_GTK_PHASE_CAPTURE 1
#define enum_c2ats_GTK_PHASE_BUBBLE 2
#define enum_c2ats_GTK_PHASE_TARGET 3
typedef type_c2ats_GtkEventSequenceState = int
#define enum_c2ats_GTK_EVENT_SEQUENCE_NONE 0
#define enum_c2ats_GTK_EVENT_SEQUENCE_CLAIMED 1
#define enum_c2ats_GTK_EVENT_SEQUENCE_DENIED 2
typedef type_c2ats_GtkPanDirection = int
#define enum_c2ats_GTK_PAN_DIRECTION_LEFT 0
#define enum_c2ats_GTK_PAN_DIRECTION_RIGHT 1
#define enum_c2ats_GTK_PAN_DIRECTION_UP 2
#define enum_c2ats_GTK_PAN_DIRECTION_DOWN 3
typedef type_c2ats_GtkPopoverConstraint = int
#define enum_c2ats_GTK_POPOVER_CONSTRAINT_NONE 0
#define enum_c2ats_GTK_POPOVER_CONSTRAINT_WINDOW 1
// File: /usr/include/gtk-3.0/gtk/gtkaccelgroup.h
typedef type_c2ats_GtkAccelFlags = int
#define enum_c2ats_GTK_ACCEL_VISIBLE 1 << 0
#define enum_c2ats_GTK_ACCEL_LOCKED 1 << 1
#define enum_c2ats_GTK_ACCEL_MASK 0x7
abst@ype struct_c2ats__GtkAccelGroup // FIXME! Forward declaration.
typedef type_c2ats_GtkAccelGroup = struct_c2ats__GtkAccelGroup
abst@ype struct_c2ats__GtkAccelGroupClass // FIXME! Forward declaration.
typedef type_c2ats_GtkAccelGroupClass = struct_c2ats__GtkAccelGroupClass
abst@ype struct_c2ats__GtkAccelGroupPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkAccelGroupPrivate = struct_c2ats__GtkAccelGroupPrivate
abst@ype struct_c2ats__GtkAccelKey // FIXME! Forward declaration.
typedef type_c2ats_GtkAccelKey = struct_c2ats__GtkAccelKey
abst@ype struct_c2ats__GtkAccelGroupEntry // FIXME! Forward declaration.
typedef type_c2ats_GtkAccelGroupEntry = struct_c2ats__GtkAccelGroupEntry
typedef type_c2ats_GtkAccelGroupActivate = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAccelGroup, l1), !ptr_v_1(type_c2ats_GObject, l2) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_GdkModifierType) -> type_c2ats_gboolean
typedef type_c2ats_GtkAccelGroupFindFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAccelKey, l1), !ptr_v_1(type_c2ats_GClosure, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef struct_c2ats__GtkAccelGroup = $extype_struct"struct _GtkAccelGroup" of {
  parent = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkAccelGroupPrivate) *)
}
typedef struct_c2ats__GtkAccelGroupClass = $extype_struct"struct _GtkAccelGroupClass" of {
  parent_class = type_c2ats_GObjectClass,
  accel_changed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAccelGroup, l1), !ptr_v_1(type_c2ats_GClosure, l2) | ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType, ptr l2) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
typedef struct_c2ats__GtkAccelKey = $extype_struct"struct _GtkAccelKey" of {
  accel_key = type_c2ats_guint,
  accel_mods = type_c2ats_GdkModifierType,
  accel_flags = type_c2ats_guint
}
fun fun_c2ats_gtk_accel_group_get_type: () -> type_c2ats_GType = "mac#gtk_accel_group_get_type"
fun fun_c2ats_gtk_accel_group_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkAccelGroup, l1) | ptr l1) = "mac#gtk_accel_group_new"
fun fun_c2ats_gtk_accel_group_get_is_locked: {l1:addr} (!ptr_v_1(type_c2ats_GtkAccelGroup, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_accel_group_get_is_locked"
fun fun_c2ats_gtk_accel_group_get_modifier_mask: {l1:addr} (!ptr_v_1(type_c2ats_GtkAccelGroup, l1) | ptr l1) -> type_c2ats_GdkModifierType = "mac#gtk_accel_group_get_modifier_mask"
fun fun_c2ats_gtk_accel_group_lock: {l1:addr} (!ptr_v_1(type_c2ats_GtkAccelGroup, l1) | ptr l1) -> void = "mac#gtk_accel_group_lock"
fun fun_c2ats_gtk_accel_group_unlock: {l1:addr} (!ptr_v_1(type_c2ats_GtkAccelGroup, l1) | ptr l1) -> void = "mac#gtk_accel_group_unlock"
fun fun_c2ats_gtk_accel_group_connect: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAccelGroup, l1), !ptr_v_1(type_c2ats_GClosure, l2) | ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType, type_c2ats_GtkAccelFlags, ptr l2) -> void = "mac#gtk_accel_group_connect"
fun fun_c2ats_gtk_accel_group_connect_by_path: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkAccelGroup, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GClosure, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_accel_group_connect_by_path"
fun fun_c2ats_gtk_accel_group_disconnect: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAccelGroup, l1), !ptr_v_1(type_c2ats_GClosure, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_accel_group_disconnect"
fun fun_c2ats_gtk_accel_group_disconnect_key: {l1:addr} (!ptr_v_1(type_c2ats_GtkAccelGroup, l1) | ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType) -> type_c2ats_gboolean = "mac#gtk_accel_group_disconnect_key"
fun fun_c2ats_gtk_accel_group_activate: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAccelGroup, l1), !ptr_v_1(type_c2ats_GObject, l2) | ptr l1, type_c2ats_GQuark, ptr l2, type_c2ats_guint, type_c2ats_GdkModifierType) -> type_c2ats_gboolean = "mac#gtk_accel_group_activate"
fun fun_c2ats__gtk_accel_group_attach: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAccelGroup, l1), !ptr_v_1(type_c2ats_GObject, l2) | ptr l1, ptr l2) -> void = "mac#_gtk_accel_group_attach"
fun fun_c2ats__gtk_accel_group_detach: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAccelGroup, l1), !ptr_v_1(type_c2ats_GObject, l2) | ptr l1, ptr l2) -> void = "mac#_gtk_accel_group_detach"
fun fun_c2ats_gtk_accel_groups_activate: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType) -> type_c2ats_gboolean = "mac#gtk_accel_groups_activate"
fun fun_c2ats_gtk_accel_groups_from_object: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_accel_groups_from_object"
fun fun_c2ats_gtk_accel_group_find: {l1:addr} (!ptr_v_1(type_c2ats_GtkAccelGroup, l1) | ptr l1, type_c2ats_GtkAccelGroupFindFunc, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAccelKey, l2) | ptr l2) = "mac#gtk_accel_group_find"
fun fun_c2ats_gtk_accel_group_from_accel_closure: {l1:addr} (!ptr_v_1(type_c2ats_GClosure, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAccelGroup, l2) | ptr l2) = "mac#gtk_accel_group_from_accel_closure"
fun fun_c2ats_gtk_accelerator_valid: (type_c2ats_guint, type_c2ats_GdkModifierType) -> type_c2ats_gboolean = "mac#gtk_accelerator_valid"
fun fun_c2ats_gtk_accelerator_parse: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_guint, l2), !ptr_v_1(type_c2ats_GdkModifierType, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_accelerator_parse"
fun fun_c2ats_gtk_accelerator_parse_with_keycode: {l1,l2,l3,l3_1,l4:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_guint, l2), !ptr_v_2(type_c2ats_guint, l3, l3_1), !ptr_v_1(type_c2ats_GdkModifierType, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_accelerator_parse_with_keycode"
fun fun_c2ats_gtk_accelerator_name: (type_c2ats_guint, type_c2ats_GdkModifierType) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#gtk_accelerator_name"
fun fun_c2ats_gtk_accelerator_name_with_keycode: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint, type_c2ats_GdkModifierType) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_accelerator_name_with_keycode"
fun fun_c2ats_gtk_accelerator_get_label: (type_c2ats_guint, type_c2ats_GdkModifierType) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#gtk_accelerator_get_label"
fun fun_c2ats_gtk_accelerator_get_label_with_keycode: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint, type_c2ats_GdkModifierType) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_accelerator_get_label_with_keycode"
fun fun_c2ats_gtk_accelerator_set_default_mod_mask: (type_c2ats_GdkModifierType) -> void = "mac#gtk_accelerator_set_default_mod_mask"
fun fun_c2ats_gtk_accelerator_get_default_mod_mask: () -> type_c2ats_GdkModifierType = "mac#gtk_accelerator_get_default_mod_mask"
fun fun_c2ats_gtk_accel_group_query: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAccelGroup, l1), !ptr_v_1(type_c2ats_guint, l2) | ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkAccelGroupEntry, l3) | ptr l3) = "mac#gtk_accel_group_query"
typedef struct_c2ats__GtkAccelGroupEntry = $extype_struct"struct _GtkAccelGroupEntry" of {
  key = type_c2ats_GtkAccelKey,
  closure = ptr (* cPtr0(type_c2ats_GClosure) *),
  accel_path_quark = type_c2ats_GQuark
}
typedef type_c2ats_GtkAccelGroup_autoptr = cPtr0(type_c2ats_GtkAccelGroup)
fun fun_c2ats_glib_autoptr_cleanup_GtkAccelGroup: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkAccelGroup, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkAccelGroup"
// File: /usr/include/gtk-3.0/gtk/gtkborder.h
abst@ype struct_c2ats__GtkBorder // FIXME! Forward declaration.
typedef type_c2ats_GtkBorder = struct_c2ats__GtkBorder
typedef struct_c2ats__GtkBorder = $extype_struct"struct _GtkBorder" of {
  left = type_c2ats_gint16,
  right = type_c2ats_gint16,
  top = type_c2ats_gint16,
  bottom = type_c2ats_gint16
}
fun fun_c2ats_gtk_border_get_type: () -> type_c2ats_GType = "mac#gtk_border_get_type"
fun fun_c2ats_gtk_border_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkBorder, l1) | ptr l1) = "mac#gtk_border_new"
fun fun_c2ats_gtk_border_copy: {l1:addr} (!ptr_v_1(type_c2ats_GtkBorder, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkBorder, l2) | ptr l2) = "mac#gtk_border_copy"
fun fun_c2ats_gtk_border_free: {l1:addr} (!ptr_v_1(type_c2ats_GtkBorder, l1) | ptr l1) -> void = "mac#gtk_border_free"
typedef type_c2ats_GtkBorder_autoptr = cPtr0(type_c2ats_GtkBorder)
fun fun_c2ats_glib_autoptr_cleanup_GtkBorder: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkBorder, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkBorder"
// File: /usr/include/gtk-3.0/gtk/gtktypes.h
abst@ype struct_c2ats__GtkAdjustment // FIXME! Forward declaration.
typedef type_c2ats_GtkAdjustment = struct_c2ats__GtkAdjustment
abst@ype struct_c2ats__GtkBuilder // FIXME! Forward declaration.
typedef type_c2ats_GtkBuilder = struct_c2ats__GtkBuilder
abst@ype struct_c2ats__GtkClipboard // FIXME! Forward declaration.
typedef type_c2ats_GtkClipboard = struct_c2ats__GtkClipboard
abst@ype struct_c2ats__GtkIconSet // FIXME! Forward declaration.
typedef type_c2ats_GtkIconSet = struct_c2ats__GtkIconSet
abst@ype struct_c2ats__GtkIconSource // FIXME! Forward declaration.
typedef type_c2ats_GtkIconSource = struct_c2ats__GtkIconSource
abst@ype struct_c2ats__GtkRcStyle // FIXME! Forward declaration.
typedef type_c2ats_GtkRcStyle = struct_c2ats__GtkRcStyle
abst@ype struct_c2ats__GtkRequisition // FIXME! Forward declaration.
typedef type_c2ats_GtkRequisition = struct_c2ats__GtkRequisition
abst@ype struct_c2ats__GtkSelectionData // FIXME! Forward declaration.
typedef type_c2ats_GtkSelectionData = struct_c2ats__GtkSelectionData
abst@ype struct_c2ats__GtkSettings // FIXME! Forward declaration.
typedef type_c2ats_GtkSettings = struct_c2ats__GtkSettings
abst@ype struct_c2ats__GtkStyle // FIXME! Forward declaration.
typedef type_c2ats_GtkStyle = struct_c2ats__GtkStyle
abst@ype struct_c2ats__GtkStyleContext // FIXME! Forward declaration.
typedef type_c2ats_GtkStyleContext = struct_c2ats__GtkStyleContext
abst@ype struct_c2ats__GtkTooltip // FIXME! Forward declaration.
typedef type_c2ats_GtkTooltip = struct_c2ats__GtkTooltip
abst@ype struct_c2ats__GtkWidget // FIXME! Forward declaration.
typedef type_c2ats_GtkWidget = struct_c2ats__GtkWidget
abst@ype struct_c2ats__GtkWidgetPath // FIXME! Forward declaration.
typedef type_c2ats_GtkWidgetPath = struct_c2ats__GtkWidgetPath
abst@ype struct_c2ats__GtkWindow // FIXME! Forward declaration.
typedef type_c2ats_GtkWindow = struct_c2ats__GtkWindow
typedef type_c2ats_GtkRcPropertyParser = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1), !ptr_v_1(type_c2ats_GString, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean
typedef type_c2ats_GtkBuilderConnectFunc = {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1), !ptr_v_1(type_c2ats_GObject, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_GObject, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_GConnectFlags, type_c2ats_gpointer) -> void
// File: /usr/include/atk-1.0/atk/atkversion.h
fun fun_c2ats_atk_get_major_version: () -> type_c2ats_guint = "mac#atk_get_major_version"
fun fun_c2ats_atk_get_minor_version: () -> type_c2ats_guint = "mac#atk_get_minor_version"
fun fun_c2ats_atk_get_micro_version: () -> type_c2ats_guint = "mac#atk_get_micro_version"
fun fun_c2ats_atk_get_binary_age: () -> type_c2ats_guint = "mac#atk_get_binary_age"
fun fun_c2ats_atk_get_interface_age: () -> type_c2ats_guint = "mac#atk_get_interface_age"
// File: /usr/include/atk-1.0/atk/atkstate.h
typedef type_c2ats_AtkStateType = int
#define enum_c2ats_ATK_STATE_INVALID 0
#define enum_c2ats_ATK_STATE_ACTIVE 1
#define enum_c2ats_ATK_STATE_ARMED 2
#define enum_c2ats_ATK_STATE_BUSY 3
#define enum_c2ats_ATK_STATE_CHECKED 4
#define enum_c2ats_ATK_STATE_DEFUNCT 5
#define enum_c2ats_ATK_STATE_EDITABLE 6
#define enum_c2ats_ATK_STATE_ENABLED 7
#define enum_c2ats_ATK_STATE_EXPANDABLE 8
#define enum_c2ats_ATK_STATE_EXPANDED 9
#define enum_c2ats_ATK_STATE_FOCUSABLE 10
#define enum_c2ats_ATK_STATE_FOCUSED 11
#define enum_c2ats_ATK_STATE_HORIZONTAL 12
#define enum_c2ats_ATK_STATE_ICONIFIED 13
#define enum_c2ats_ATK_STATE_MODAL 14
#define enum_c2ats_ATK_STATE_MULTI_LINE 15
#define enum_c2ats_ATK_STATE_MULTISELECTABLE 16
#define enum_c2ats_ATK_STATE_OPAQUE 17
#define enum_c2ats_ATK_STATE_PRESSED 18
#define enum_c2ats_ATK_STATE_RESIZABLE 19
#define enum_c2ats_ATK_STATE_SELECTABLE 20
#define enum_c2ats_ATK_STATE_SELECTED 21
#define enum_c2ats_ATK_STATE_SENSITIVE 22
#define enum_c2ats_ATK_STATE_SHOWING 23
#define enum_c2ats_ATK_STATE_SINGLE_LINE 24
#define enum_c2ats_ATK_STATE_STALE 25
#define enum_c2ats_ATK_STATE_TRANSIENT 26
#define enum_c2ats_ATK_STATE_VERTICAL 27
#define enum_c2ats_ATK_STATE_VISIBLE 28
#define enum_c2ats_ATK_STATE_MANAGES_DESCENDANTS 29
#define enum_c2ats_ATK_STATE_INDETERMINATE 30
#define enum_c2ats_ATK_STATE_TRUNCATED 31
#define enum_c2ats_ATK_STATE_REQUIRED 32
#define enum_c2ats_ATK_STATE_INVALID_ENTRY 33
#define enum_c2ats_ATK_STATE_SUPPORTS_AUTOCOMPLETION 34
#define enum_c2ats_ATK_STATE_SELECTABLE_TEXT 35
#define enum_c2ats_ATK_STATE_DEFAULT 36
#define enum_c2ats_ATK_STATE_ANIMATED 37
#define enum_c2ats_ATK_STATE_VISITED 38
#define enum_c2ats_ATK_STATE_CHECKABLE 39
#define enum_c2ats_ATK_STATE_HAS_POPUP 40
#define enum_c2ats_ATK_STATE_HAS_TOOLTIP 41
#define enum_c2ats_ATK_STATE_READ_ONLY 42
#define enum_c2ats_ATK_STATE_LAST_DEFINED 43
typedef type_c2ats_AtkState = type_c2ats_guint64
fun fun_c2ats_atk_state_type_register: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_AtkStateType = "mac#atk_state_type_register"
fun fun_c2ats_atk_state_type_get_name: (type_c2ats_AtkStateType) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#atk_state_type_get_name"
fun fun_c2ats_atk_state_type_for_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_AtkStateType = "mac#atk_state_type_for_name"
// File: /usr/include/atk-1.0/atk/atkrelationtype.h
typedef type_c2ats_AtkRelationType = int
#define enum_c2ats_ATK_RELATION_NULL 0
#define enum_c2ats_ATK_RELATION_CONTROLLED_BY 0 + 1
#define enum_c2ats_ATK_RELATION_CONTROLLER_FOR 0 + 2
#define enum_c2ats_ATK_RELATION_LABEL_FOR 0 + 3
#define enum_c2ats_ATK_RELATION_LABELLED_BY 0 + 4
#define enum_c2ats_ATK_RELATION_MEMBER_OF 0 + 5
#define enum_c2ats_ATK_RELATION_NODE_CHILD_OF 0 + 6
#define enum_c2ats_ATK_RELATION_FLOWS_TO 0 + 7
#define enum_c2ats_ATK_RELATION_FLOWS_FROM 0 + 8
#define enum_c2ats_ATK_RELATION_SUBWINDOW_OF 0 + 9
#define enum_c2ats_ATK_RELATION_EMBEDS 0 + 10
#define enum_c2ats_ATK_RELATION_EMBEDDED_BY 0 + 11
#define enum_c2ats_ATK_RELATION_POPUP_FOR 0 + 12
#define enum_c2ats_ATK_RELATION_PARENT_WINDOW_OF 0 + 13
#define enum_c2ats_ATK_RELATION_DESCRIBED_BY 0 + 14
#define enum_c2ats_ATK_RELATION_DESCRIPTION_FOR 0 + 15
#define enum_c2ats_ATK_RELATION_NODE_PARENT_OF 0 + 16
#define enum_c2ats_ATK_RELATION_LAST_DEFINED 0 + 17
// File: /usr/include/atk-1.0/atk/atkobject.h
typedef type_c2ats_AtkRole = int
#define enum_c2ats_ATK_ROLE_INVALID 0
#define enum_c2ats_ATK_ROLE_ACCEL_LABEL 0 + 1
#define enum_c2ats_ATK_ROLE_ALERT 0 + 2
#define enum_c2ats_ATK_ROLE_ANIMATION 0 + 3
#define enum_c2ats_ATK_ROLE_ARROW 0 + 4
#define enum_c2ats_ATK_ROLE_CALENDAR 0 + 5
#define enum_c2ats_ATK_ROLE_CANVAS 0 + 6
#define enum_c2ats_ATK_ROLE_CHECK_BOX 0 + 7
#define enum_c2ats_ATK_ROLE_CHECK_MENU_ITEM 0 + 8
#define enum_c2ats_ATK_ROLE_COLOR_CHOOSER 0 + 9
#define enum_c2ats_ATK_ROLE_COLUMN_HEADER 0 + 10
#define enum_c2ats_ATK_ROLE_COMBO_BOX 0 + 11
#define enum_c2ats_ATK_ROLE_DATE_EDITOR 0 + 12
#define enum_c2ats_ATK_ROLE_DESKTOP_ICON 0 + 13
#define enum_c2ats_ATK_ROLE_DESKTOP_FRAME 0 + 14
#define enum_c2ats_ATK_ROLE_DIAL 0 + 15
#define enum_c2ats_ATK_ROLE_DIALOG 0 + 16
#define enum_c2ats_ATK_ROLE_DIRECTORY_PANE 0 + 17
#define enum_c2ats_ATK_ROLE_DRAWING_AREA 0 + 18
#define enum_c2ats_ATK_ROLE_FILE_CHOOSER 0 + 19
#define enum_c2ats_ATK_ROLE_FILLER 0 + 20
#define enum_c2ats_ATK_ROLE_FONT_CHOOSER 0 + 21
#define enum_c2ats_ATK_ROLE_FRAME 0 + 22
#define enum_c2ats_ATK_ROLE_GLASS_PANE 0 + 23
#define enum_c2ats_ATK_ROLE_HTML_CONTAINER 0 + 24
#define enum_c2ats_ATK_ROLE_ICON 0 + 25
#define enum_c2ats_ATK_ROLE_IMAGE 0 + 26
#define enum_c2ats_ATK_ROLE_INTERNAL_FRAME 0 + 27
#define enum_c2ats_ATK_ROLE_LABEL 0 + 28
#define enum_c2ats_ATK_ROLE_LAYERED_PANE 0 + 29
#define enum_c2ats_ATK_ROLE_LIST 0 + 30
#define enum_c2ats_ATK_ROLE_LIST_ITEM 0 + 31
#define enum_c2ats_ATK_ROLE_MENU 0 + 32
#define enum_c2ats_ATK_ROLE_MENU_BAR 0 + 33
#define enum_c2ats_ATK_ROLE_MENU_ITEM 0 + 34
#define enum_c2ats_ATK_ROLE_OPTION_PANE 0 + 35
#define enum_c2ats_ATK_ROLE_PAGE_TAB 0 + 36
#define enum_c2ats_ATK_ROLE_PAGE_TAB_LIST 0 + 37
#define enum_c2ats_ATK_ROLE_PANEL 0 + 38
#define enum_c2ats_ATK_ROLE_PASSWORD_TEXT 0 + 39
#define enum_c2ats_ATK_ROLE_POPUP_MENU 0 + 40
#define enum_c2ats_ATK_ROLE_PROGRESS_BAR 0 + 41
#define enum_c2ats_ATK_ROLE_PUSH_BUTTON 0 + 42
#define enum_c2ats_ATK_ROLE_RADIO_BUTTON 0 + 43
#define enum_c2ats_ATK_ROLE_RADIO_MENU_ITEM 0 + 44
#define enum_c2ats_ATK_ROLE_ROOT_PANE 0 + 45
#define enum_c2ats_ATK_ROLE_ROW_HEADER 0 + 46
#define enum_c2ats_ATK_ROLE_SCROLL_BAR 0 + 47
#define enum_c2ats_ATK_ROLE_SCROLL_PANE 0 + 48
#define enum_c2ats_ATK_ROLE_SEPARATOR 0 + 49
#define enum_c2ats_ATK_ROLE_SLIDER 0 + 50
#define enum_c2ats_ATK_ROLE_SPLIT_PANE 0 + 51
#define enum_c2ats_ATK_ROLE_SPIN_BUTTON 0 + 52
#define enum_c2ats_ATK_ROLE_STATUSBAR 0 + 53
#define enum_c2ats_ATK_ROLE_TABLE 0 + 54
#define enum_c2ats_ATK_ROLE_TABLE_CELL 0 + 55
#define enum_c2ats_ATK_ROLE_TABLE_COLUMN_HEADER 0 + 56
#define enum_c2ats_ATK_ROLE_TABLE_ROW_HEADER 0 + 57
#define enum_c2ats_ATK_ROLE_TEAR_OFF_MENU_ITEM 0 + 58
#define enum_c2ats_ATK_ROLE_TERMINAL 0 + 59
#define enum_c2ats_ATK_ROLE_TEXT 0 + 60
#define enum_c2ats_ATK_ROLE_TOGGLE_BUTTON 0 + 61
#define enum_c2ats_ATK_ROLE_TOOL_BAR 0 + 62
#define enum_c2ats_ATK_ROLE_TOOL_TIP 0 + 63
#define enum_c2ats_ATK_ROLE_TREE 0 + 64
#define enum_c2ats_ATK_ROLE_TREE_TABLE 0 + 65
#define enum_c2ats_ATK_ROLE_UNKNOWN 0 + 66
#define enum_c2ats_ATK_ROLE_VIEWPORT 0 + 67
#define enum_c2ats_ATK_ROLE_WINDOW 0 + 68
#define enum_c2ats_ATK_ROLE_HEADER 0 + 69
#define enum_c2ats_ATK_ROLE_FOOTER 0 + 70
#define enum_c2ats_ATK_ROLE_PARAGRAPH 0 + 71
#define enum_c2ats_ATK_ROLE_RULER 0 + 72
#define enum_c2ats_ATK_ROLE_APPLICATION 0 + 73
#define enum_c2ats_ATK_ROLE_AUTOCOMPLETE 0 + 74
#define enum_c2ats_ATK_ROLE_EDITBAR 0 + 75
#define enum_c2ats_ATK_ROLE_EMBEDDED 0 + 76
#define enum_c2ats_ATK_ROLE_ENTRY 0 + 77
#define enum_c2ats_ATK_ROLE_CHART 0 + 78
#define enum_c2ats_ATK_ROLE_CAPTION 0 + 79
#define enum_c2ats_ATK_ROLE_DOCUMENT_FRAME 0 + 80
#define enum_c2ats_ATK_ROLE_HEADING 0 + 81
#define enum_c2ats_ATK_ROLE_PAGE 0 + 82
#define enum_c2ats_ATK_ROLE_SECTION 0 + 83
#define enum_c2ats_ATK_ROLE_REDUNDANT_OBJECT 0 + 84
#define enum_c2ats_ATK_ROLE_FORM 0 + 85
#define enum_c2ats_ATK_ROLE_LINK 0 + 86
#define enum_c2ats_ATK_ROLE_INPUT_METHOD_WINDOW 0 + 87
#define enum_c2ats_ATK_ROLE_TABLE_ROW 0 + 88
#define enum_c2ats_ATK_ROLE_TREE_ITEM 0 + 89
#define enum_c2ats_ATK_ROLE_DOCUMENT_SPREADSHEET 0 + 90
#define enum_c2ats_ATK_ROLE_DOCUMENT_PRESENTATION 0 + 91
#define enum_c2ats_ATK_ROLE_DOCUMENT_TEXT 0 + 92
#define enum_c2ats_ATK_ROLE_DOCUMENT_WEB 0 + 93
#define enum_c2ats_ATK_ROLE_DOCUMENT_EMAIL 0 + 94
#define enum_c2ats_ATK_ROLE_COMMENT 0 + 95
#define enum_c2ats_ATK_ROLE_LIST_BOX 0 + 96
#define enum_c2ats_ATK_ROLE_GROUPING 0 + 97
#define enum_c2ats_ATK_ROLE_IMAGE_MAP 0 + 98
#define enum_c2ats_ATK_ROLE_NOTIFICATION 0 + 99
#define enum_c2ats_ATK_ROLE_INFO_BAR 0 + 100
#define enum_c2ats_ATK_ROLE_LEVEL_BAR 0 + 101
#define enum_c2ats_ATK_ROLE_TITLE_BAR 0 + 102
#define enum_c2ats_ATK_ROLE_BLOCK_QUOTE 0 + 103
#define enum_c2ats_ATK_ROLE_AUDIO 0 + 104
#define enum_c2ats_ATK_ROLE_VIDEO 0 + 105
#define enum_c2ats_ATK_ROLE_DEFINITION 0 + 106
#define enum_c2ats_ATK_ROLE_ARTICLE 0 + 107
#define enum_c2ats_ATK_ROLE_LANDMARK 0 + 108
#define enum_c2ats_ATK_ROLE_LOG 0 + 109
#define enum_c2ats_ATK_ROLE_MARQUEE 0 + 110
#define enum_c2ats_ATK_ROLE_MATH 0 + 111
#define enum_c2ats_ATK_ROLE_RATING 0 + 112
#define enum_c2ats_ATK_ROLE_TIMER 0 + 113
#define enum_c2ats_ATK_ROLE_DESCRIPTION_LIST 0 + 114
#define enum_c2ats_ATK_ROLE_DESCRIPTION_TERM 0 + 115
#define enum_c2ats_ATK_ROLE_DESCRIPTION_VALUE 0 + 116
#define enum_c2ats_ATK_ROLE_STATIC 0 + 117
#define enum_c2ats_ATK_ROLE_MATH_FRACTION 0 + 118
#define enum_c2ats_ATK_ROLE_MATH_ROOT 0 + 119
#define enum_c2ats_ATK_ROLE_SUBSCRIPT 0 + 120
#define enum_c2ats_ATK_ROLE_SUPERSCRIPT 0 + 121
#define enum_c2ats_ATK_ROLE_LAST_DEFINED 0 + 122
typedef type_c2ats_AtkLayer = int
#define enum_c2ats_ATK_LAYER_INVALID 0
#define enum_c2ats_ATK_LAYER_BACKGROUND 1
#define enum_c2ats_ATK_LAYER_CANVAS 2
#define enum_c2ats_ATK_LAYER_WIDGET 3
#define enum_c2ats_ATK_LAYER_MDI 4
#define enum_c2ats_ATK_LAYER_POPUP 5
#define enum_c2ats_ATK_LAYER_OVERLAY 6
#define enum_c2ats_ATK_LAYER_WINDOW 7
typedef type_c2ats_AtkAttributeSet = type_c2ats_GSList
abst@ype struct_c2ats__AtkAttribute // FIXME! Forward declaration.
typedef type_c2ats_AtkAttribute = struct_c2ats__AtkAttribute
typedef struct_c2ats__AtkAttribute = $extype_struct"struct _AtkAttribute" of {
  name = ptr (* cPtr0(type_c2ats_gchar) *),
  value = ptr (* cPtr0(type_c2ats_gchar) *)
}
abst@ype struct_c2ats__AtkImplementor // FIXME! Forward declaration.
typedef type_c2ats_AtkImplementor = struct_c2ats__AtkImplementor
abst@ype struct_c2ats__AtkImplementorIface // FIXME! Forward declaration.
typedef type_c2ats_AtkImplementorIface = struct_c2ats__AtkImplementorIface
abst@ype struct_c2ats__AtkObject // FIXME! Forward declaration.
typedef type_c2ats_AtkObject = struct_c2ats__AtkObject
abst@ype struct_c2ats__AtkObjectClass // FIXME! Forward declaration.
typedef type_c2ats_AtkObjectClass = struct_c2ats__AtkObjectClass
abst@ype struct_c2ats__AtkRelationSet // FIXME! Forward declaration.
typedef type_c2ats_AtkRelationSet = struct_c2ats__AtkRelationSet
abst@ype struct_c2ats__AtkStateSet // FIXME! Forward declaration.
typedef type_c2ats_AtkStateSet = struct_c2ats__AtkStateSet
typedef struct_c2ats__AtkPropertyValues = $extype_struct"struct _AtkPropertyValues" of {
  property_name = ptr (* cPtr0(type_c2ats_gchar) *),
  old_value = type_c2ats_GValue,
  new_value = type_c2ats_GValue
}
typedef type_c2ats_AtkPropertyValues = struct_c2ats__AtkPropertyValues
typedef type_c2ats_AtkFunction = (type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_AtkPropertyChangeHandler = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkObject, l1), !ptr_v_1(type_c2ats_AtkPropertyValues, l2) | ptr l1, ptr l2) -> void
typedef struct_c2ats__AtkObject = $extype_struct"struct _AtkObject" of {
  parent = type_c2ats_GObject,
  description = ptr (* cPtr0(type_c2ats_gchar) *),
  name = ptr (* cPtr0(type_c2ats_gchar) *),
  accessible_parent = ptr (* cPtr0(type_c2ats_AtkObject) *),
  role = type_c2ats_AtkRole,
  relation_set = ptr (* cPtr0(type_c2ats_AtkRelationSet) *),
  layer = type_c2ats_AtkLayer
}
typedef struct_c2ats__AtkObjectClass = $extype_struct"struct _AtkObjectClass" of {
  parent = type_c2ats_GObjectClass,
  get_name = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  get_description = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  get_parent = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2),
  get_n_children = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> type_c2ats_gint,
  ref_child = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2),
  get_index_in_parent = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> type_c2ats_gint,
  ref_relation_set = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkRelationSet, l2) | ptr l2),
  get_role = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> type_c2ats_AtkRole,
  get_layer = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> type_c2ats_AtkLayer,
  get_mdi_zorder = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> type_c2ats_gint,
  ref_state_set = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkStateSet, l2) | ptr l2),
  set_name = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkObject, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  set_description = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkObject, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  set_parent = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkObject, l1), !ptr_v_1(type_c2ats_AtkObject, l2) | ptr l1, ptr l2) -> void,
  set_role = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1, type_c2ats_AtkRole) -> void,
  connect_property_change_handler = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkObject, l1), !ptr_v_1(type_c2ats_AtkPropertyChangeHandler, l2) | ptr l1, ptr l2) -> type_c2ats_guint,
  remove_property_change_handler = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1, type_c2ats_guint) -> void,
  initialize = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1, type_c2ats_gpointer) -> void,
  children_changed = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1, type_c2ats_guint, type_c2ats_gpointer) -> void,
  focus_event = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1, type_c2ats_gboolean) -> void,
  property_change = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkObject, l1), !ptr_v_1(type_c2ats_AtkPropertyValues, l2) | ptr l1, ptr l2) -> void,
  state_change = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkObject, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void,
  visible_data_changed = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> void,
  active_descendant_changed = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkObject, l1), !ptr_v_1(type_c2ats_gpointer, l2) | ptr l1, ptr l2) -> void,
  get_attributes = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkAttributeSet, l2) | ptr l2),
  get_object_locale = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  pad1 = type_c2ats_AtkFunction
}
fun fun_c2ats_atk_object_get_type: () -> type_c2ats_GType = "mac#atk_object_get_type"
typedef struct_c2ats__AtkImplementorIface = $extype_struct"struct _AtkImplementorIface" of {
  parent = type_c2ats_GTypeInterface,
  ref_accessible = {l1:addr} (!ptr_v_1(type_c2ats_AtkImplementor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2)
}
fun fun_c2ats_atk_implementor_get_type: () -> type_c2ats_GType = "mac#atk_implementor_get_type"
fun fun_c2ats_atk_implementor_ref_accessible: {l1:addr} (!ptr_v_1(type_c2ats_AtkImplementor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2) = "mac#atk_implementor_ref_accessible"
fun fun_c2ats_atk_object_get_name: {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#atk_object_get_name"
fun fun_c2ats_atk_object_get_description: {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#atk_object_get_description"
fun fun_c2ats_atk_object_get_parent: {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2) = "mac#atk_object_get_parent"
fun fun_c2ats_atk_object_peek_parent: {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2) = "mac#atk_object_peek_parent"
fun fun_c2ats_atk_object_get_n_accessible_children: {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_object_get_n_accessible_children"
fun fun_c2ats_atk_object_ref_accessible_child: {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2) = "mac#atk_object_ref_accessible_child"
fun fun_c2ats_atk_object_ref_relation_set: {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkRelationSet, l2) | ptr l2) = "mac#atk_object_ref_relation_set"
fun fun_c2ats_atk_object_get_role: {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> type_c2ats_AtkRole = "mac#atk_object_get_role"
fun fun_c2ats_atk_object_get_layer: {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> type_c2ats_AtkLayer = "mac#atk_object_get_layer"
fun fun_c2ats_atk_object_get_mdi_zorder: {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_object_get_mdi_zorder"
fun fun_c2ats_atk_object_get_attributes: {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkAttributeSet, l2) | ptr l2) = "mac#atk_object_get_attributes"
fun fun_c2ats_atk_object_ref_state_set: {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkStateSet, l2) | ptr l2) = "mac#atk_object_ref_state_set"
fun fun_c2ats_atk_object_get_index_in_parent: {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_object_get_index_in_parent"
fun fun_c2ats_atk_object_set_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkObject, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#atk_object_set_name"
fun fun_c2ats_atk_object_set_description: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkObject, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#atk_object_set_description"
fun fun_c2ats_atk_object_set_parent: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkObject, l1), !ptr_v_1(type_c2ats_AtkObject, l2) | ptr l1, ptr l2) -> void = "mac#atk_object_set_parent"
fun fun_c2ats_atk_object_set_role: {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1, type_c2ats_AtkRole) -> void = "mac#atk_object_set_role"
fun fun_c2ats_atk_object_connect_property_change_handler: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkObject, l1), !ptr_v_1(type_c2ats_AtkPropertyChangeHandler, l2) | ptr l1, ptr l2) -> type_c2ats_guint = "mac#atk_object_connect_property_change_handler"
fun fun_c2ats_atk_object_remove_property_change_handler: {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1, type_c2ats_guint) -> void = "mac#atk_object_remove_property_change_handler"
fun fun_c2ats_atk_object_notify_state_change: {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1, type_c2ats_AtkState, type_c2ats_gboolean) -> void = "mac#atk_object_notify_state_change"
fun fun_c2ats_atk_object_initialize: {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#atk_object_initialize"
fun fun_c2ats_atk_role_get_name: (type_c2ats_AtkRole) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#atk_role_get_name"
fun fun_c2ats_atk_role_for_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_AtkRole = "mac#atk_role_for_name"
fun fun_c2ats_atk_object_add_relationship: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkObject, l1), !ptr_v_1(type_c2ats_AtkObject, l2) | ptr l1, type_c2ats_AtkRelationType, ptr l2) -> type_c2ats_gboolean = "mac#atk_object_add_relationship"
fun fun_c2ats_atk_object_remove_relationship: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkObject, l1), !ptr_v_1(type_c2ats_AtkObject, l2) | ptr l1, type_c2ats_AtkRelationType, ptr l2) -> type_c2ats_gboolean = "mac#atk_object_remove_relationship"
fun fun_c2ats_atk_role_get_localized_name: (type_c2ats_AtkRole) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#atk_role_get_localized_name"
fun fun_c2ats_atk_role_register: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_AtkRole = "mac#atk_role_register"
fun fun_c2ats_atk_object_get_object_locale: {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#atk_object_get_object_locale"
// File: /usr/include/atk-1.0/atk/atkaction.h
abst@ype struct_c2ats__AtkAction // FIXME! Forward declaration.
typedef type_c2ats_AtkAction = struct_c2ats__AtkAction
abst@ype struct_c2ats__AtkActionIface // FIXME! Forward declaration.
typedef type_c2ats_AtkActionIface = struct_c2ats__AtkActionIface
typedef struct_c2ats__AtkActionIface = $extype_struct"struct _AtkActionIface" of {
  parent = type_c2ats_GTypeInterface,
  do_action = {l1:addr} (!ptr_v_1(type_c2ats_AtkAction, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean,
  get_n_actions = {l1:addr} (!ptr_v_1(type_c2ats_AtkAction, l1) | ptr l1) -> type_c2ats_gint,
  get_description = {l1:addr} (!ptr_v_1(type_c2ats_AtkAction, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  get_name = {l1:addr} (!ptr_v_1(type_c2ats_AtkAction, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  get_keybinding = {l1:addr} (!ptr_v_1(type_c2ats_AtkAction, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  set_description = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkAction, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gint, ptr l2) -> type_c2ats_gboolean,
  get_localized_name = {l1:addr} (!ptr_v_1(type_c2ats_AtkAction, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2)
}
fun fun_c2ats_atk_action_get_type: () -> type_c2ats_GType = "mac#atk_action_get_type"
fun fun_c2ats_atk_action_do_action: {l1:addr} (!ptr_v_1(type_c2ats_AtkAction, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#atk_action_do_action"
fun fun_c2ats_atk_action_get_n_actions: {l1:addr} (!ptr_v_1(type_c2ats_AtkAction, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_action_get_n_actions"
fun fun_c2ats_atk_action_get_description: {l1:addr} (!ptr_v_1(type_c2ats_AtkAction, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#atk_action_get_description"
fun fun_c2ats_atk_action_get_name: {l1:addr} (!ptr_v_1(type_c2ats_AtkAction, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#atk_action_get_name"
fun fun_c2ats_atk_action_get_keybinding: {l1:addr} (!ptr_v_1(type_c2ats_AtkAction, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#atk_action_get_keybinding"
fun fun_c2ats_atk_action_set_description: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkAction, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gint, ptr l2) -> type_c2ats_gboolean = "mac#atk_action_set_description"
fun fun_c2ats_atk_action_get_localized_name: {l1:addr} (!ptr_v_1(type_c2ats_AtkAction, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#atk_action_get_localized_name"
// File: /usr/include/atk-1.0/atk/atkutil.h
abst@ype struct_c2ats__AtkUtil // FIXME! Forward declaration.
typedef type_c2ats_AtkUtil = struct_c2ats__AtkUtil
abst@ype struct_c2ats__AtkUtilClass // FIXME! Forward declaration.
typedef type_c2ats_AtkUtilClass = struct_c2ats__AtkUtilClass
abst@ype struct_c2ats__AtkKeyEventStruct // FIXME! Forward declaration.
typedef type_c2ats_AtkKeyEventStruct = struct_c2ats__AtkKeyEventStruct
typedef type_c2ats_AtkEventListener = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> void
typedef type_c2ats_AtkEventListenerInit = () -> void
typedef type_c2ats_AtkKeySnoopFunc = {l1:addr} (!ptr_v_1(type_c2ats_AtkKeyEventStruct, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gint
typedef struct_c2ats__AtkKeyEventStruct = $extype_struct"struct _AtkKeyEventStruct" of {
  type = type_c2ats_gint,
  state = type_c2ats_guint,
  keyval = type_c2ats_guint,
  length = type_c2ats_gint,
  string = ptr (* cPtr0(type_c2ats_gchar) *),
  keycode = type_c2ats_guint16,
  timestamp = type_c2ats_guint32
}
typedef type_c2ats_AtkKeyEventType = int
#define enum_c2ats_ATK_KEY_EVENT_PRESS 0
#define enum_c2ats_ATK_KEY_EVENT_RELEASE 1
#define enum_c2ats_ATK_KEY_EVENT_LAST_DEFINED 2
typedef struct_c2ats__AtkUtil = $extype_struct"struct _AtkUtil" of {
  parent = type_c2ats_GObject
}
typedef struct_c2ats__AtkUtilClass = $extype_struct"struct _AtkUtilClass" of {
  parent = type_c2ats_GObjectClass,
  add_global_event_listener = {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_GSignalEmissionHook, ptr l1) -> type_c2ats_guint,
  remove_global_event_listener = (type_c2ats_guint) -> void,
  add_key_event_listener = (type_c2ats_AtkKeySnoopFunc, type_c2ats_gpointer) -> type_c2ats_guint,
  remove_key_event_listener = (type_c2ats_guint) -> void,
  get_root = () -> [l1:addr] (ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1),
  get_toolkit_name = () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1),
  get_toolkit_version = () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1)
}
fun fun_c2ats_atk_util_get_type: () -> type_c2ats_GType = "mac#atk_util_get_type"
typedef type_c2ats_AtkCoordType = int
#define enum_c2ats_ATK_XY_SCREEN 0
#define enum_c2ats_ATK_XY_WINDOW 1
fun fun_c2ats_atk_add_focus_tracker: (type_c2ats_AtkEventListener) -> type_c2ats_guint = "mac#atk_add_focus_tracker"
fun fun_c2ats_atk_remove_focus_tracker: (type_c2ats_guint) -> void = "mac#atk_remove_focus_tracker"
fun fun_c2ats_atk_focus_tracker_init: (type_c2ats_AtkEventListenerInit) -> void = "mac#atk_focus_tracker_init"
fun fun_c2ats_atk_focus_tracker_notify: {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) -> void = "mac#atk_focus_tracker_notify"
fun fun_c2ats_atk_add_global_event_listener: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_GSignalEmissionHook, ptr l1) -> type_c2ats_guint = "mac#atk_add_global_event_listener"
fun fun_c2ats_atk_remove_global_event_listener: (type_c2ats_guint) -> void = "mac#atk_remove_global_event_listener"
fun fun_c2ats_atk_add_key_event_listener: (type_c2ats_AtkKeySnoopFunc, type_c2ats_gpointer) -> type_c2ats_guint = "mac#atk_add_key_event_listener"
fun fun_c2ats_atk_remove_key_event_listener: (type_c2ats_guint) -> void = "mac#atk_remove_key_event_listener"
fun fun_c2ats_atk_get_root: () -> [l1:addr] (ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) = "mac#atk_get_root"
fun fun_c2ats_atk_get_focus_object: () -> [l1:addr] (ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) = "mac#atk_get_focus_object"
fun fun_c2ats_atk_get_toolkit_name: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#atk_get_toolkit_name"
fun fun_c2ats_atk_get_toolkit_version: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#atk_get_toolkit_version"
fun fun_c2ats_atk_get_version: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#atk_get_version"
// File: /usr/include/atk-1.0/atk/atkcomponent.h
abst@ype struct_c2ats__AtkComponent // FIXME! Forward declaration.
typedef type_c2ats_AtkComponent = struct_c2ats__AtkComponent
abst@ype struct_c2ats__AtkComponentIface // FIXME! Forward declaration.
typedef type_c2ats_AtkComponentIface = struct_c2ats__AtkComponentIface
typedef type_c2ats_AtkFocusHandler = {l1:addr} (!ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1, type_c2ats_gboolean) -> void
abst@ype struct_c2ats__AtkRectangle // FIXME! Forward declaration.
typedef type_c2ats_AtkRectangle = struct_c2ats__AtkRectangle
typedef struct_c2ats__AtkRectangle = $extype_struct"struct _AtkRectangle" of {
  x = type_c2ats_gint,
  y = type_c2ats_gint,
  width = type_c2ats_gint,
  height = type_c2ats_gint
}
fun fun_c2ats_atk_rectangle_get_type: () -> type_c2ats_GType = "mac#atk_rectangle_get_type"
typedef struct_c2ats__AtkComponentIface = $extype_struct"struct _AtkComponentIface" of {
  parent = type_c2ats_GTypeInterface,
  add_focus_handler = {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1, type_c2ats_AtkFocusHandler) -> type_c2ats_guint,
  contains = {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_AtkCoordType) -> type_c2ats_gboolean,
  ref_accessible_at_point = {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_AtkCoordType) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2),
  get_extents = {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_AtkCoordType) -> void,
  get_position = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_AtkCoordType) -> void,
  get_size = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void,
  grab_focus = {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1) -> type_c2ats_gboolean,
  remove_focus_handler = {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1, type_c2ats_guint) -> void,
  set_extents = {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_AtkCoordType) -> type_c2ats_gboolean,
  set_position = {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_AtkCoordType) -> type_c2ats_gboolean,
  set_size = {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gboolean,
  get_layer = {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1) -> type_c2ats_AtkLayer,
  get_mdi_zorder = {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1) -> type_c2ats_gint,
  bounds_changed = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1), !ptr_v_1(type_c2ats_AtkRectangle, l2) | ptr l1, ptr l2) -> void,
  get_alpha = {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1) -> type_c2ats_gdouble
}
fun fun_c2ats_atk_component_get_type: () -> type_c2ats_GType = "mac#atk_component_get_type"
fun fun_c2ats_atk_component_add_focus_handler: {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1, type_c2ats_AtkFocusHandler) -> type_c2ats_guint = "mac#atk_component_add_focus_handler"
fun fun_c2ats_atk_component_contains: {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_AtkCoordType) -> type_c2ats_gboolean = "mac#atk_component_contains"
fun fun_c2ats_atk_component_ref_accessible_at_point: {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_AtkCoordType) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2) = "mac#atk_component_ref_accessible_at_point"
fun fun_c2ats_atk_component_get_extents: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_AtkCoordType) -> void = "mac#atk_component_get_extents"
fun fun_c2ats_atk_component_get_position: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_AtkCoordType) -> void = "mac#atk_component_get_position"
fun fun_c2ats_atk_component_get_size: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#atk_component_get_size"
fun fun_c2ats_atk_component_get_layer: {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1) -> type_c2ats_AtkLayer = "mac#atk_component_get_layer"
fun fun_c2ats_atk_component_get_mdi_zorder: {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_component_get_mdi_zorder"
fun fun_c2ats_atk_component_grab_focus: {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1) -> type_c2ats_gboolean = "mac#atk_component_grab_focus"
fun fun_c2ats_atk_component_remove_focus_handler: {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1, type_c2ats_guint) -> void = "mac#atk_component_remove_focus_handler"
fun fun_c2ats_atk_component_set_extents: {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_AtkCoordType) -> type_c2ats_gboolean = "mac#atk_component_set_extents"
fun fun_c2ats_atk_component_set_position: {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_AtkCoordType) -> type_c2ats_gboolean = "mac#atk_component_set_position"
fun fun_c2ats_atk_component_set_size: {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gboolean = "mac#atk_component_set_size"
fun fun_c2ats_atk_component_get_alpha: {l1:addr} (!ptr_v_1(type_c2ats_AtkComponent, l1) | ptr l1) -> type_c2ats_gdouble = "mac#atk_component_get_alpha"
// File: /usr/include/atk-1.0/atk/atkdocument.h
abst@ype struct_c2ats__AtkDocument // FIXME! Forward declaration.
typedef type_c2ats_AtkDocument = struct_c2ats__AtkDocument
abst@ype struct_c2ats__AtkDocumentIface // FIXME! Forward declaration.
typedef type_c2ats_AtkDocumentIface = struct_c2ats__AtkDocumentIface
typedef struct_c2ats__AtkDocumentIface = $extype_struct"struct _AtkDocumentIface" of {
  parent = type_c2ats_GTypeInterface,
  get_document_type = {l1:addr} (!ptr_v_1(type_c2ats_AtkDocument, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  get_document = {l1:addr} (!ptr_v_1(type_c2ats_AtkDocument, l1) | ptr l1) -> type_c2ats_gpointer,
  get_document_locale = {l1:addr} (!ptr_v_1(type_c2ats_AtkDocument, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  get_document_attributes = {l1:addr} (!ptr_v_1(type_c2ats_AtkDocument, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkAttributeSet, l2) | ptr l2),
  get_document_attribute_value = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkDocument, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3),
  set_document_attribute = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkDocument, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  get_current_page_number = {l1:addr} (!ptr_v_1(type_c2ats_AtkDocument, l1) | ptr l1) -> type_c2ats_gint,
  get_page_count = {l1:addr} (!ptr_v_1(type_c2ats_AtkDocument, l1) | ptr l1) -> type_c2ats_gint
}
fun fun_c2ats_atk_document_get_type: () -> type_c2ats_GType = "mac#atk_document_get_type"
fun fun_c2ats_atk_document_get_document_type: {l1:addr} (!ptr_v_1(type_c2ats_AtkDocument, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#atk_document_get_document_type"
fun fun_c2ats_atk_document_get_document: {l1:addr} (!ptr_v_1(type_c2ats_AtkDocument, l1) | ptr l1) -> type_c2ats_gpointer = "mac#atk_document_get_document"
fun fun_c2ats_atk_document_get_locale: {l1:addr} (!ptr_v_1(type_c2ats_AtkDocument, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#atk_document_get_locale"
fun fun_c2ats_atk_document_get_attributes: {l1:addr} (!ptr_v_1(type_c2ats_AtkDocument, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkAttributeSet, l2) | ptr l2) = "mac#atk_document_get_attributes"
fun fun_c2ats_atk_document_get_attribute_value: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkDocument, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#atk_document_get_attribute_value"
fun fun_c2ats_atk_document_set_attribute_value: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkDocument, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#atk_document_set_attribute_value"
fun fun_c2ats_atk_document_get_current_page_number: {l1:addr} (!ptr_v_1(type_c2ats_AtkDocument, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_document_get_current_page_number"
fun fun_c2ats_atk_document_get_page_count: {l1:addr} (!ptr_v_1(type_c2ats_AtkDocument, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_document_get_page_count"
// File: /usr/include/atk-1.0/atk/atktext.h
typedef type_c2ats_AtkTextAttribute = int
#define enum_c2ats_ATK_TEXT_ATTR_INVALID 0
#define enum_c2ats_ATK_TEXT_ATTR_LEFT_MARGIN 0 + 1
#define enum_c2ats_ATK_TEXT_ATTR_RIGHT_MARGIN 0 + 2
#define enum_c2ats_ATK_TEXT_ATTR_INDENT 0 + 3
#define enum_c2ats_ATK_TEXT_ATTR_INVISIBLE 0 + 4
#define enum_c2ats_ATK_TEXT_ATTR_EDITABLE 0 + 5
#define enum_c2ats_ATK_TEXT_ATTR_PIXELS_ABOVE_LINES 0 + 6
#define enum_c2ats_ATK_TEXT_ATTR_PIXELS_BELOW_LINES 0 + 7
#define enum_c2ats_ATK_TEXT_ATTR_PIXELS_INSIDE_WRAP 0 + 8
#define enum_c2ats_ATK_TEXT_ATTR_BG_FULL_HEIGHT 0 + 9
#define enum_c2ats_ATK_TEXT_ATTR_RISE 0 + 10
#define enum_c2ats_ATK_TEXT_ATTR_UNDERLINE 0 + 11
#define enum_c2ats_ATK_TEXT_ATTR_STRIKETHROUGH 0 + 12
#define enum_c2ats_ATK_TEXT_ATTR_SIZE 0 + 13
#define enum_c2ats_ATK_TEXT_ATTR_SCALE 0 + 14
#define enum_c2ats_ATK_TEXT_ATTR_WEIGHT 0 + 15
#define enum_c2ats_ATK_TEXT_ATTR_LANGUAGE 0 + 16
#define enum_c2ats_ATK_TEXT_ATTR_FAMILY_NAME 0 + 17
#define enum_c2ats_ATK_TEXT_ATTR_BG_COLOR 0 + 18
#define enum_c2ats_ATK_TEXT_ATTR_FG_COLOR 0 + 19
#define enum_c2ats_ATK_TEXT_ATTR_BG_STIPPLE 0 + 20
#define enum_c2ats_ATK_TEXT_ATTR_FG_STIPPLE 0 + 21
#define enum_c2ats_ATK_TEXT_ATTR_WRAP_MODE 0 + 22
#define enum_c2ats_ATK_TEXT_ATTR_DIRECTION 0 + 23
#define enum_c2ats_ATK_TEXT_ATTR_JUSTIFICATION 0 + 24
#define enum_c2ats_ATK_TEXT_ATTR_STRETCH 0 + 25
#define enum_c2ats_ATK_TEXT_ATTR_VARIANT 0 + 26
#define enum_c2ats_ATK_TEXT_ATTR_STYLE 0 + 27
#define enum_c2ats_ATK_TEXT_ATTR_LAST_DEFINED 0 + 28
fun fun_c2ats_atk_text_attribute_register: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_AtkTextAttribute = "mac#atk_text_attribute_register"
abst@ype struct_c2ats__AtkText // FIXME! Forward declaration.
typedef type_c2ats_AtkText = struct_c2ats__AtkText
abst@ype struct_c2ats__AtkTextIface // FIXME! Forward declaration.
typedef type_c2ats_AtkTextIface = struct_c2ats__AtkTextIface
typedef type_c2ats_AtkTextBoundary = int
#define enum_c2ats_ATK_TEXT_BOUNDARY_CHAR 0
#define enum_c2ats_ATK_TEXT_BOUNDARY_WORD_START 1
#define enum_c2ats_ATK_TEXT_BOUNDARY_WORD_END 2
#define enum_c2ats_ATK_TEXT_BOUNDARY_SENTENCE_START 3
#define enum_c2ats_ATK_TEXT_BOUNDARY_SENTENCE_END 4
#define enum_c2ats_ATK_TEXT_BOUNDARY_LINE_START 5
#define enum_c2ats_ATK_TEXT_BOUNDARY_LINE_END 6
typedef type_c2ats_AtkTextGranularity = int
#define enum_c2ats_ATK_TEXT_GRANULARITY_CHAR 0
#define enum_c2ats_ATK_TEXT_GRANULARITY_WORD 1
#define enum_c2ats_ATK_TEXT_GRANULARITY_SENTENCE 2
#define enum_c2ats_ATK_TEXT_GRANULARITY_LINE 3
#define enum_c2ats_ATK_TEXT_GRANULARITY_PARAGRAPH 4
abst@ype struct_c2ats__AtkTextRectangle // FIXME! Forward declaration.
typedef type_c2ats_AtkTextRectangle = struct_c2ats__AtkTextRectangle
typedef struct_c2ats__AtkTextRectangle = $extype_struct"struct _AtkTextRectangle" of {
  x = type_c2ats_gint,
  y = type_c2ats_gint,
  width = type_c2ats_gint,
  height = type_c2ats_gint
}
abst@ype struct_c2ats__AtkTextRange // FIXME! Forward declaration.
typedef type_c2ats_AtkTextRange = struct_c2ats__AtkTextRange
typedef struct_c2ats__AtkTextRange = $extype_struct"struct _AtkTextRange" of {
  bounds = type_c2ats_AtkTextRectangle,
  start_offset = type_c2ats_gint,
  end_offset = type_c2ats_gint,
  content = ptr (* cPtr0(type_c2ats_gchar) *)
}
fun fun_c2ats_atk_text_range_get_type: () -> type_c2ats_GType = "mac#atk_text_range_get_type"
typedef type_c2ats_AtkTextClipType = int
#define enum_c2ats_ATK_TEXT_CLIP_NONE 0
#define enum_c2ats_ATK_TEXT_CLIP_MIN 1
#define enum_c2ats_ATK_TEXT_CLIP_MAX 2
#define enum_c2ats_ATK_TEXT_CLIP_BOTH 3
typedef struct_c2ats__AtkTextIface = $extype_struct"struct _AtkTextIface" of {
  parent = type_c2ats_GTypeInterface,
  get_text = {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  get_text_after_offset = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkText, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, type_c2ats_AtkTextBoundary, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4),
  get_text_at_offset = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkText, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, type_c2ats_AtkTextBoundary, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4),
  get_character_at_offset = {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gunichar,
  get_text_before_offset = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkText, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, type_c2ats_AtkTextBoundary, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4),
  get_caret_offset = {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1) -> type_c2ats_gint,
  get_run_attributes = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkText, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_AtkAttributeSet, l4) | ptr l4),
  get_default_attributes = {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkAttributeSet, l2) | ptr l2),
  get_character_extents = {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_AtkText, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, type_c2ats_gint, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_AtkCoordType) -> void,
  get_character_count = {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1) -> type_c2ats_gint,
  get_offset_at_point = {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_AtkCoordType) -> type_c2ats_gint,
  get_n_selections = {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1) -> type_c2ats_gint,
  get_selection = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkText, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4),
  add_selection = {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gboolean,
  remove_selection = {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean,
  set_selection = {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gboolean,
  set_caret_offset = {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean,
  text_changed = {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void,
  text_caret_moved = {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1, type_c2ats_gint) -> void,
  text_selection_changed = {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1) -> void,
  text_attributes_changed = {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1) -> void,
  get_range_extents = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkText, l1), !ptr_v_1(type_c2ats_AtkTextRectangle, l2) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_AtkCoordType, ptr l2) -> void,
  get_bounded_ranges = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkText, l1), !ptr_v_1(type_c2ats_AtkTextRectangle, l2) | ptr l1, ptr l2, type_c2ats_AtkCoordType, type_c2ats_AtkTextClipType, type_c2ats_AtkTextClipType) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_AtkTextRange, l3, l3_1) | ptr l3),
  get_string_at_offset = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkText, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, type_c2ats_AtkTextGranularity, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4)
}
fun fun_c2ats_atk_text_get_type: () -> type_c2ats_GType = "mac#atk_text_get_type"
fun fun_c2ats_atk_text_get_text: {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#atk_text_get_text"
fun fun_c2ats_atk_text_get_character_at_offset: {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gunichar = "mac#atk_text_get_character_at_offset"
fun fun_c2ats_atk_text_get_text_after_offset: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkText, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, type_c2ats_AtkTextBoundary, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#atk_text_get_text_after_offset"
fun fun_c2ats_atk_text_get_text_at_offset: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkText, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, type_c2ats_AtkTextBoundary, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#atk_text_get_text_at_offset"
fun fun_c2ats_atk_text_get_text_before_offset: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkText, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, type_c2ats_AtkTextBoundary, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#atk_text_get_text_before_offset"
fun fun_c2ats_atk_text_get_string_at_offset: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkText, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, type_c2ats_AtkTextGranularity, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#atk_text_get_string_at_offset"
fun fun_c2ats_atk_text_get_caret_offset: {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_text_get_caret_offset"
fun fun_c2ats_atk_text_get_character_extents: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_AtkText, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, type_c2ats_gint, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_AtkCoordType) -> void = "mac#atk_text_get_character_extents"
fun fun_c2ats_atk_text_get_run_attributes: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkText, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_AtkAttributeSet, l4) | ptr l4) = "mac#atk_text_get_run_attributes"
fun fun_c2ats_atk_text_get_default_attributes: {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkAttributeSet, l2) | ptr l2) = "mac#atk_text_get_default_attributes"
fun fun_c2ats_atk_text_get_character_count: {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_text_get_character_count"
fun fun_c2ats_atk_text_get_offset_at_point: {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_AtkCoordType) -> type_c2ats_gint = "mac#atk_text_get_offset_at_point"
fun fun_c2ats_atk_text_get_n_selections: {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_text_get_n_selections"
fun fun_c2ats_atk_text_get_selection: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkText, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#atk_text_get_selection"
fun fun_c2ats_atk_text_add_selection: {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gboolean = "mac#atk_text_add_selection"
fun fun_c2ats_atk_text_remove_selection: {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#atk_text_remove_selection"
fun fun_c2ats_atk_text_set_selection: {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gboolean = "mac#atk_text_set_selection"
fun fun_c2ats_atk_text_set_caret_offset: {l1:addr} (!ptr_v_1(type_c2ats_AtkText, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#atk_text_set_caret_offset"
fun fun_c2ats_atk_text_get_range_extents: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkText, l1), !ptr_v_1(type_c2ats_AtkTextRectangle, l2) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_AtkCoordType, ptr l2) -> void = "mac#atk_text_get_range_extents"
fun fun_c2ats_atk_text_get_bounded_ranges: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkText, l1), !ptr_v_1(type_c2ats_AtkTextRectangle, l2) | ptr l1, ptr l2, type_c2ats_AtkCoordType, type_c2ats_AtkTextClipType, type_c2ats_AtkTextClipType) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_AtkTextRange, l3, l3_1) | ptr l3) = "mac#atk_text_get_bounded_ranges"
fun fun_c2ats_atk_text_free_ranges: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_AtkTextRange, l1, l1_1) | ptr l1) -> void = "mac#atk_text_free_ranges"
fun fun_c2ats_atk_attribute_set_free: {l1:addr} (!ptr_v_1(type_c2ats_AtkAttributeSet, l1) | ptr l1) -> void = "mac#atk_attribute_set_free"
fun fun_c2ats_atk_text_attribute_get_name: (type_c2ats_AtkTextAttribute) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#atk_text_attribute_get_name"
fun fun_c2ats_atk_text_attribute_for_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_AtkTextAttribute = "mac#atk_text_attribute_for_name"
fun fun_c2ats_atk_text_attribute_get_value: (type_c2ats_AtkTextAttribute, type_c2ats_gint) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#atk_text_attribute_get_value"
// File: /usr/include/atk-1.0/atk/atkeditabletext.h
abst@ype struct_c2ats__AtkEditableText // FIXME! Forward declaration.
typedef type_c2ats_AtkEditableText = struct_c2ats__AtkEditableText
abst@ype struct_c2ats__AtkEditableTextIface // FIXME! Forward declaration.
typedef type_c2ats_AtkEditableTextIface = struct_c2ats__AtkEditableTextIface
typedef struct_c2ats__AtkEditableTextIface = $extype_struct"struct _AtkEditableTextIface" of {
  parent_interface = type_c2ats_GTypeInterface,
  set_run_attributes = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkEditableText, l1), !ptr_v_1(type_c2ats_AtkAttributeSet, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gboolean,
  set_text_contents = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkEditableText, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  insert_text = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkEditableText, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, type_c2ats_gint, ptr l3) -> void,
  copy_text = {l1:addr} (!ptr_v_1(type_c2ats_AtkEditableText, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void,
  cut_text = {l1:addr} (!ptr_v_1(type_c2ats_AtkEditableText, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void,
  delete_text = {l1:addr} (!ptr_v_1(type_c2ats_AtkEditableText, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void,
  paste_text = {l1:addr} (!ptr_v_1(type_c2ats_AtkEditableText, l1) | ptr l1, type_c2ats_gint) -> void
}
fun fun_c2ats_atk_editable_text_get_type: () -> type_c2ats_GType = "mac#atk_editable_text_get_type"
fun fun_c2ats_atk_editable_text_set_run_attributes: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkEditableText, l1), !ptr_v_1(type_c2ats_AtkAttributeSet, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gboolean = "mac#atk_editable_text_set_run_attributes"
fun fun_c2ats_atk_editable_text_set_text_contents: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkEditableText, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#atk_editable_text_set_text_contents"
fun fun_c2ats_atk_editable_text_insert_text: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkEditableText, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, type_c2ats_gint, ptr l3) -> void = "mac#atk_editable_text_insert_text"
fun fun_c2ats_atk_editable_text_copy_text: {l1:addr} (!ptr_v_1(type_c2ats_AtkEditableText, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#atk_editable_text_copy_text"
fun fun_c2ats_atk_editable_text_cut_text: {l1:addr} (!ptr_v_1(type_c2ats_AtkEditableText, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#atk_editable_text_cut_text"
fun fun_c2ats_atk_editable_text_delete_text: {l1:addr} (!ptr_v_1(type_c2ats_AtkEditableText, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#atk_editable_text_delete_text"
fun fun_c2ats_atk_editable_text_paste_text: {l1:addr} (!ptr_v_1(type_c2ats_AtkEditableText, l1) | ptr l1, type_c2ats_gint) -> void = "mac#atk_editable_text_paste_text"
// File: /usr/include/atk-1.0/atk/atk-enum-types.h
fun fun_c2ats_atk_hyperlink_state_flags_get_type: () -> type_c2ats_GType = "mac#atk_hyperlink_state_flags_get_type"
fun fun_c2ats_atk_role_get_type: () -> type_c2ats_GType = "mac#atk_role_get_type"
fun fun_c2ats_atk_layer_get_type: () -> type_c2ats_GType = "mac#atk_layer_get_type"
fun fun_c2ats_atk_relation_type_get_type: () -> type_c2ats_GType = "mac#atk_relation_type_get_type"
fun fun_c2ats_atk_state_type_get_type: () -> type_c2ats_GType = "mac#atk_state_type_get_type"
fun fun_c2ats_atk_text_attribute_get_type: () -> type_c2ats_GType = "mac#atk_text_attribute_get_type"
fun fun_c2ats_atk_text_boundary_get_type: () -> type_c2ats_GType = "mac#atk_text_boundary_get_type"
fun fun_c2ats_atk_text_granularity_get_type: () -> type_c2ats_GType = "mac#atk_text_granularity_get_type"
fun fun_c2ats_atk_text_clip_type_get_type: () -> type_c2ats_GType = "mac#atk_text_clip_type_get_type"
fun fun_c2ats_atk_key_event_type_get_type: () -> type_c2ats_GType = "mac#atk_key_event_type_get_type"
fun fun_c2ats_atk_coord_type_get_type: () -> type_c2ats_GType = "mac#atk_coord_type_get_type"
fun fun_c2ats_atk_value_type_get_type: () -> type_c2ats_GType = "mac#atk_value_type_get_type"
// File: /usr/include/atk-1.0/atk/atkgobjectaccessible.h
abst@ype struct_c2ats__AtkGObjectAccessible // FIXME! Forward declaration.
typedef type_c2ats_AtkGObjectAccessible = struct_c2ats__AtkGObjectAccessible
abst@ype struct_c2ats__AtkGObjectAccessibleClass // FIXME! Forward declaration.
typedef type_c2ats_AtkGObjectAccessibleClass = struct_c2ats__AtkGObjectAccessibleClass
typedef struct_c2ats__AtkGObjectAccessible = $extype_struct"struct _AtkGObjectAccessible" of {
  parent = type_c2ats_AtkObject
}
fun fun_c2ats_atk_gobject_accessible_get_type: () -> type_c2ats_GType = "mac#atk_gobject_accessible_get_type"
typedef struct_c2ats__AtkGObjectAccessibleClass = $extype_struct"struct _AtkGObjectAccessibleClass" of {
  parent_class = type_c2ats_AtkObjectClass,
  pad1 = type_c2ats_AtkFunction,
  pad2 = type_c2ats_AtkFunction
}
fun fun_c2ats_atk_gobject_accessible_for_object: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2) = "mac#atk_gobject_accessible_for_object"
fun fun_c2ats_atk_gobject_accessible_get_object: {l1:addr} (!ptr_v_1(type_c2ats_AtkGObjectAccessible, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GObject, l2) | ptr l2) = "mac#atk_gobject_accessible_get_object"
// File: /usr/include/atk-1.0/atk/atkhyperlink.h
typedef type_c2ats_AtkHyperlinkStateFlags = int
#define enum_c2ats_ATK_HYPERLINK_IS_INLINE 1 << 0
abst@ype struct_c2ats__AtkHyperlink // FIXME! Forward declaration.
typedef type_c2ats_AtkHyperlink = struct_c2ats__AtkHyperlink
abst@ype struct_c2ats__AtkHyperlinkClass // FIXME! Forward declaration.
typedef type_c2ats_AtkHyperlinkClass = struct_c2ats__AtkHyperlinkClass
typedef struct_c2ats__AtkHyperlink = $extype_struct"struct _AtkHyperlink" of {
  parent = type_c2ats_GObject
}
typedef struct_c2ats__AtkHyperlinkClass = $extype_struct"struct _AtkHyperlinkClass" of {
  parent = type_c2ats_GObjectClass,
  get_uri = {l1:addr} (!ptr_v_1(type_c2ats_AtkHyperlink, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  get_object = {l1:addr} (!ptr_v_1(type_c2ats_AtkHyperlink, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2),
  get_end_index = {l1:addr} (!ptr_v_1(type_c2ats_AtkHyperlink, l1) | ptr l1) -> type_c2ats_gint,
  get_start_index = {l1:addr} (!ptr_v_1(type_c2ats_AtkHyperlink, l1) | ptr l1) -> type_c2ats_gint,
  is_valid = {l1:addr} (!ptr_v_1(type_c2ats_AtkHyperlink, l1) | ptr l1) -> type_c2ats_gboolean,
  get_n_anchors = {l1:addr} (!ptr_v_1(type_c2ats_AtkHyperlink, l1) | ptr l1) -> type_c2ats_gint,
  link_state = {l1:addr} (!ptr_v_1(type_c2ats_AtkHyperlink, l1) | ptr l1) -> type_c2ats_guint,
  is_selected_link = {l1:addr} (!ptr_v_1(type_c2ats_AtkHyperlink, l1) | ptr l1) -> type_c2ats_gboolean,
  link_activated = {l1:addr} (!ptr_v_1(type_c2ats_AtkHyperlink, l1) | ptr l1) -> void,
  pad1 = type_c2ats_AtkFunction
}
fun fun_c2ats_atk_hyperlink_get_type: () -> type_c2ats_GType = "mac#atk_hyperlink_get_type"
fun fun_c2ats_atk_hyperlink_get_uri: {l1:addr} (!ptr_v_1(type_c2ats_AtkHyperlink, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#atk_hyperlink_get_uri"
fun fun_c2ats_atk_hyperlink_get_object: {l1:addr} (!ptr_v_1(type_c2ats_AtkHyperlink, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2) = "mac#atk_hyperlink_get_object"
fun fun_c2ats_atk_hyperlink_get_end_index: {l1:addr} (!ptr_v_1(type_c2ats_AtkHyperlink, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_hyperlink_get_end_index"
fun fun_c2ats_atk_hyperlink_get_start_index: {l1:addr} (!ptr_v_1(type_c2ats_AtkHyperlink, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_hyperlink_get_start_index"
fun fun_c2ats_atk_hyperlink_is_valid: {l1:addr} (!ptr_v_1(type_c2ats_AtkHyperlink, l1) | ptr l1) -> type_c2ats_gboolean = "mac#atk_hyperlink_is_valid"
fun fun_c2ats_atk_hyperlink_is_inline: {l1:addr} (!ptr_v_1(type_c2ats_AtkHyperlink, l1) | ptr l1) -> type_c2ats_gboolean = "mac#atk_hyperlink_is_inline"
fun fun_c2ats_atk_hyperlink_get_n_anchors: {l1:addr} (!ptr_v_1(type_c2ats_AtkHyperlink, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_hyperlink_get_n_anchors"
fun fun_c2ats_atk_hyperlink_is_selected_link: {l1:addr} (!ptr_v_1(type_c2ats_AtkHyperlink, l1) | ptr l1) -> type_c2ats_gboolean = "mac#atk_hyperlink_is_selected_link"
// File: /usr/include/atk-1.0/atk/atkhyperlinkimpl.h
abst@ype struct_c2ats__AtkHyperlinkImpl // FIXME! Forward declaration.
typedef type_c2ats_AtkHyperlinkImpl = struct_c2ats__AtkHyperlinkImpl
abst@ype struct_c2ats__AtkHyperlinkImplIface // FIXME! Forward declaration.
typedef type_c2ats_AtkHyperlinkImplIface = struct_c2ats__AtkHyperlinkImplIface
typedef struct_c2ats__AtkHyperlinkImplIface = $extype_struct"struct _AtkHyperlinkImplIface" of {
  parent = type_c2ats_GTypeInterface,
  get_hyperlink = {l1:addr} (!ptr_v_1(type_c2ats_AtkHyperlinkImpl, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkHyperlink, l2) | ptr l2)
}
fun fun_c2ats_atk_hyperlink_impl_get_type: () -> type_c2ats_GType = "mac#atk_hyperlink_impl_get_type"
fun fun_c2ats_atk_hyperlink_impl_get_hyperlink: {l1:addr} (!ptr_v_1(type_c2ats_AtkHyperlinkImpl, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkHyperlink, l2) | ptr l2) = "mac#atk_hyperlink_impl_get_hyperlink"
// File: /usr/include/atk-1.0/atk/atkhypertext.h
abst@ype struct_c2ats__AtkHypertext // FIXME! Forward declaration.
typedef type_c2ats_AtkHypertext = struct_c2ats__AtkHypertext
abst@ype struct_c2ats__AtkHypertextIface // FIXME! Forward declaration.
typedef type_c2ats_AtkHypertextIface = struct_c2ats__AtkHypertextIface
typedef struct_c2ats__AtkHypertextIface = $extype_struct"struct _AtkHypertextIface" of {
  parent = type_c2ats_GTypeInterface,
  get_link = {l1:addr} (!ptr_v_1(type_c2ats_AtkHypertext, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_AtkHyperlink, l2) | ptr l2),
  get_n_links = {l1:addr} (!ptr_v_1(type_c2ats_AtkHypertext, l1) | ptr l1) -> type_c2ats_gint,
  get_link_index = {l1:addr} (!ptr_v_1(type_c2ats_AtkHypertext, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gint,
  link_selected = {l1:addr} (!ptr_v_1(type_c2ats_AtkHypertext, l1) | ptr l1, type_c2ats_gint) -> void
}
fun fun_c2ats_atk_hypertext_get_type: () -> type_c2ats_GType = "mac#atk_hypertext_get_type"
fun fun_c2ats_atk_hypertext_get_link: {l1:addr} (!ptr_v_1(type_c2ats_AtkHypertext, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_AtkHyperlink, l2) | ptr l2) = "mac#atk_hypertext_get_link"
fun fun_c2ats_atk_hypertext_get_n_links: {l1:addr} (!ptr_v_1(type_c2ats_AtkHypertext, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_hypertext_get_n_links"
fun fun_c2ats_atk_hypertext_get_link_index: {l1:addr} (!ptr_v_1(type_c2ats_AtkHypertext, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gint = "mac#atk_hypertext_get_link_index"
// File: /usr/include/atk-1.0/atk/atkimage.h
abst@ype struct_c2ats__AtkImage // FIXME! Forward declaration.
typedef type_c2ats_AtkImage = struct_c2ats__AtkImage
abst@ype struct_c2ats__AtkImageIface // FIXME! Forward declaration.
typedef type_c2ats_AtkImageIface = struct_c2ats__AtkImageIface
typedef struct_c2ats__AtkImageIface = $extype_struct"struct _AtkImageIface" of {
  parent = type_c2ats_GTypeInterface,
  get_image_position = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkImage, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_AtkCoordType) -> void,
  get_image_description = {l1:addr} (!ptr_v_1(type_c2ats_AtkImage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  get_image_size = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkImage, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void,
  set_image_description = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkImage, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  get_image_locale = {l1:addr} (!ptr_v_1(type_c2ats_AtkImage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2)
}
fun fun_c2ats_atk_image_get_type: () -> type_c2ats_GType = "mac#atk_image_get_type"
fun fun_c2ats_atk_image_get_image_description: {l1:addr} (!ptr_v_1(type_c2ats_AtkImage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#atk_image_get_image_description"
fun fun_c2ats_atk_image_get_image_size: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkImage, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#atk_image_get_image_size"
fun fun_c2ats_atk_image_set_image_description: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkImage, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#atk_image_set_image_description"
fun fun_c2ats_atk_image_get_image_position: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkImage, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_AtkCoordType) -> void = "mac#atk_image_get_image_position"
fun fun_c2ats_atk_image_get_image_locale: {l1:addr} (!ptr_v_1(type_c2ats_AtkImage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#atk_image_get_image_locale"
// File: /usr/include/atk-1.0/atk/atknoopobject.h
abst@ype struct_c2ats__AtkNoOpObject // FIXME! Forward declaration.
typedef type_c2ats_AtkNoOpObject = struct_c2ats__AtkNoOpObject
abst@ype struct_c2ats__AtkNoOpObjectClass // FIXME! Forward declaration.
typedef type_c2ats_AtkNoOpObjectClass = struct_c2ats__AtkNoOpObjectClass
typedef struct_c2ats__AtkNoOpObject = $extype_struct"struct _AtkNoOpObject" of {
  parent = type_c2ats_AtkObject
}
fun fun_c2ats_atk_no_op_object_get_type: () -> type_c2ats_GType = "mac#atk_no_op_object_get_type"
typedef struct_c2ats__AtkNoOpObjectClass = $extype_struct"struct _AtkNoOpObjectClass" of {
  parent_class = type_c2ats_AtkObjectClass
}
fun fun_c2ats_atk_no_op_object_new: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2) = "mac#atk_no_op_object_new"
// File: /usr/include/atk-1.0/atk/atkobjectfactory.h
abst@ype struct_c2ats__AtkObjectFactory // FIXME! Forward declaration.
typedef type_c2ats_AtkObjectFactory = struct_c2ats__AtkObjectFactory
abst@ype struct_c2ats__AtkObjectFactoryClass // FIXME! Forward declaration.
typedef type_c2ats_AtkObjectFactoryClass = struct_c2ats__AtkObjectFactoryClass
typedef struct_c2ats__AtkObjectFactory = $extype_struct"struct _AtkObjectFactory" of {
  parent = type_c2ats_GObject
}
typedef struct_c2ats__AtkObjectFactoryClass = $extype_struct"struct _AtkObjectFactoryClass" of {
  parent_class = type_c2ats_GObjectClass,
  create_accessible = {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2),
  invalidate = {l1:addr} (!ptr_v_1(type_c2ats_AtkObjectFactory, l1) | ptr l1) -> void,
  get_accessible_type = () -> type_c2ats_GType,
  pad1 = type_c2ats_AtkFunction,
  pad2 = type_c2ats_AtkFunction
}
fun fun_c2ats_atk_object_factory_get_type: () -> type_c2ats_GType = "mac#atk_object_factory_get_type"
fun fun_c2ats_atk_object_factory_create_accessible: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkObjectFactory, l1), !ptr_v_1(type_c2ats_GObject, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_AtkObject, l3) | ptr l3) = "mac#atk_object_factory_create_accessible"
fun fun_c2ats_atk_object_factory_invalidate: {l1:addr} (!ptr_v_1(type_c2ats_AtkObjectFactory, l1) | ptr l1) -> void = "mac#atk_object_factory_invalidate"
fun fun_c2ats_atk_object_factory_get_accessible_type: {l1:addr} (!ptr_v_1(type_c2ats_AtkObjectFactory, l1) | ptr l1) -> type_c2ats_GType = "mac#atk_object_factory_get_accessible_type"
// File: /usr/include/atk-1.0/atk/atknoopobjectfactory.h
abst@ype struct_c2ats__AtkNoOpObjectFactory // FIXME! Forward declaration.
typedef type_c2ats_AtkNoOpObjectFactory = struct_c2ats__AtkNoOpObjectFactory
abst@ype struct_c2ats__AtkNoOpObjectFactoryClass // FIXME! Forward declaration.
typedef type_c2ats_AtkNoOpObjectFactoryClass = struct_c2ats__AtkNoOpObjectFactoryClass
typedef struct_c2ats__AtkNoOpObjectFactory = $extype_struct"struct _AtkNoOpObjectFactory" of {
  parent = type_c2ats_AtkObjectFactory
}
typedef struct_c2ats__AtkNoOpObjectFactoryClass = $extype_struct"struct _AtkNoOpObjectFactoryClass" of {
  parent_class = type_c2ats_AtkObjectFactoryClass
}
fun fun_c2ats_atk_no_op_object_factory_get_type: () -> type_c2ats_GType = "mac#atk_no_op_object_factory_get_type"
fun fun_c2ats_atk_no_op_object_factory_new: () -> [l1:addr] (ptr_v_1(type_c2ats_AtkObjectFactory, l1) | ptr l1) = "mac#atk_no_op_object_factory_new"
// File: /usr/include/atk-1.0/atk/atkplug.h
abst@ype struct_c2ats__AtkPlug // FIXME! Forward declaration.
typedef type_c2ats_AtkPlug = struct_c2ats__AtkPlug
abst@ype struct_c2ats__AtkPlugClass // FIXME! Forward declaration.
typedef type_c2ats_AtkPlugClass = struct_c2ats__AtkPlugClass
typedef struct_c2ats__AtkPlug = $extype_struct"struct _AtkPlug" of {
  parent = type_c2ats_AtkObject
}
fun fun_c2ats_atk_plug_get_type: () -> type_c2ats_GType = "mac#atk_plug_get_type"
typedef struct_c2ats__AtkPlugClass = $extype_struct"struct _AtkPlugClass" of {
  parent_class = type_c2ats_AtkObjectClass,
  get_object_id = {l1:addr} (!ptr_v_1(type_c2ats_AtkPlug, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2)
}
fun fun_c2ats_atk_plug_new: () -> [l1:addr] (ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) = "mac#atk_plug_new"
fun fun_c2ats_atk_plug_get_id: {l1:addr} (!ptr_v_1(type_c2ats_AtkPlug, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#atk_plug_get_id"
// File: /usr/include/atk-1.0/atk/atkrange.h
abst@ype struct_c2ats__AtkRange // FIXME! Forward declaration.
typedef type_c2ats_AtkRange = struct_c2ats__AtkRange
fun fun_c2ats_atk_range_get_type: () -> type_c2ats_GType = "mac#atk_range_get_type"
fun fun_c2ats_atk_range_copy: {l1:addr} (!ptr_v_1(type_c2ats_AtkRange, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkRange, l2) | ptr l2) = "mac#atk_range_copy"
fun fun_c2ats_atk_range_free: {l1:addr} (!ptr_v_1(type_c2ats_AtkRange, l1) | ptr l1) -> void = "mac#atk_range_free"
fun fun_c2ats_atk_range_get_lower_limit: {l1:addr} (!ptr_v_1(type_c2ats_AtkRange, l1) | ptr l1) -> type_c2ats_gdouble = "mac#atk_range_get_lower_limit"
fun fun_c2ats_atk_range_get_upper_limit: {l1:addr} (!ptr_v_1(type_c2ats_AtkRange, l1) | ptr l1) -> type_c2ats_gdouble = "mac#atk_range_get_upper_limit"
fun fun_c2ats_atk_range_get_description: {l1:addr} (!ptr_v_1(type_c2ats_AtkRange, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#atk_range_get_description"
fun fun_c2ats_atk_range_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_gdouble, type_c2ats_gdouble, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkRange, l2) | ptr l2) = "mac#atk_range_new"
// File: /usr/include/atk-1.0/atk/atkregistry.h
typedef struct_c2ats__AtkRegistry = $extype_struct"struct _AtkRegistry" of {
  parent = type_c2ats_GObject,
  factory_type_registry = ptr (* cPtr0(type_c2ats_GHashTable) *),
  factory_singleton_cache = ptr (* cPtr0(type_c2ats_GHashTable) *)
}
typedef struct_c2ats__AtkRegistryClass = $extype_struct"struct _AtkRegistryClass" of {
  parent_class = type_c2ats_GObjectClass
}
typedef type_c2ats_AtkRegistry = struct_c2ats__AtkRegistry
typedef type_c2ats_AtkRegistryClass = struct_c2ats__AtkRegistryClass
fun fun_c2ats_atk_registry_get_type: () -> type_c2ats_GType = "mac#atk_registry_get_type"
fun fun_c2ats_atk_registry_set_factory_type: {l1:addr} (!ptr_v_1(type_c2ats_AtkRegistry, l1) | ptr l1, type_c2ats_GType, type_c2ats_GType) -> void = "mac#atk_registry_set_factory_type"
fun fun_c2ats_atk_registry_get_factory_type: {l1:addr} (!ptr_v_1(type_c2ats_AtkRegistry, l1) | ptr l1, type_c2ats_GType) -> type_c2ats_GType = "mac#atk_registry_get_factory_type"
fun fun_c2ats_atk_registry_get_factory: {l1:addr} (!ptr_v_1(type_c2ats_AtkRegistry, l1) | ptr l1, type_c2ats_GType) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObjectFactory, l2) | ptr l2) = "mac#atk_registry_get_factory"
fun fun_c2ats_atk_get_default_registry: () -> [l1:addr] (ptr_v_1(type_c2ats_AtkRegistry, l1) | ptr l1) = "mac#atk_get_default_registry"
// File: /usr/include/atk-1.0/atk/atkrelation.h
abst@ype struct_c2ats__AtkRelation // FIXME! Forward declaration.
typedef type_c2ats_AtkRelation = struct_c2ats__AtkRelation
abst@ype struct_c2ats__AtkRelationClass // FIXME! Forward declaration.
typedef type_c2ats_AtkRelationClass = struct_c2ats__AtkRelationClass
typedef struct_c2ats__AtkRelation = $extype_struct"struct _AtkRelation" of {
  parent = type_c2ats_GObject,
  target = ptr (* cPtr0(type_c2ats_GPtrArray) *),
  relationship = type_c2ats_AtkRelationType
}
typedef struct_c2ats__AtkRelationClass = $extype_struct"struct _AtkRelationClass" of {
  parent = type_c2ats_GObjectClass
}
fun fun_c2ats_atk_relation_get_type: () -> type_c2ats_GType = "mac#atk_relation_get_type"
fun fun_c2ats_atk_relation_type_register: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_AtkRelationType = "mac#atk_relation_type_register"
fun fun_c2ats_atk_relation_type_get_name: (type_c2ats_AtkRelationType) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#atk_relation_type_get_name"
fun fun_c2ats_atk_relation_type_for_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_AtkRelationType = "mac#atk_relation_type_for_name"
fun fun_c2ats_atk_relation_new: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_AtkObject, l1, l1_1) | ptr l1, type_c2ats_gint, type_c2ats_AtkRelationType) -> [l2:addr] (ptr_v_1(type_c2ats_AtkRelation, l2) | ptr l2) = "mac#atk_relation_new"
fun fun_c2ats_atk_relation_get_relation_type: {l1:addr} (!ptr_v_1(type_c2ats_AtkRelation, l1) | ptr l1) -> type_c2ats_AtkRelationType = "mac#atk_relation_get_relation_type"
fun fun_c2ats_atk_relation_get_target: {l1:addr} (!ptr_v_1(type_c2ats_AtkRelation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GPtrArray, l2) | ptr l2) = "mac#atk_relation_get_target"
fun fun_c2ats_atk_relation_add_target: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkRelation, l1), !ptr_v_1(type_c2ats_AtkObject, l2) | ptr l1, ptr l2) -> void = "mac#atk_relation_add_target"
fun fun_c2ats_atk_relation_remove_target: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkRelation, l1), !ptr_v_1(type_c2ats_AtkObject, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#atk_relation_remove_target"
// File: /usr/include/atk-1.0/atk/atkrelationset.h
abst@ype struct_c2ats__AtkRelationSetClass // FIXME! Forward declaration.
typedef type_c2ats_AtkRelationSetClass = struct_c2ats__AtkRelationSetClass
typedef struct_c2ats__AtkRelationSet = $extype_struct"struct _AtkRelationSet" of {
  parent = type_c2ats_GObject,
  relations = ptr (* cPtr0(type_c2ats_GPtrArray) *)
}
typedef struct_c2ats__AtkRelationSetClass = $extype_struct"struct _AtkRelationSetClass" of {
  parent = type_c2ats_GObjectClass,
  pad1 = type_c2ats_AtkFunction,
  pad2 = type_c2ats_AtkFunction
}
fun fun_c2ats_atk_relation_set_get_type: () -> type_c2ats_GType = "mac#atk_relation_set_get_type"
fun fun_c2ats_atk_relation_set_new: () -> [l1:addr] (ptr_v_1(type_c2ats_AtkRelationSet, l1) | ptr l1) = "mac#atk_relation_set_new"
fun fun_c2ats_atk_relation_set_contains: {l1:addr} (!ptr_v_1(type_c2ats_AtkRelationSet, l1) | ptr l1, type_c2ats_AtkRelationType) -> type_c2ats_gboolean = "mac#atk_relation_set_contains"
fun fun_c2ats_atk_relation_set_contains_target: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkRelationSet, l1), !ptr_v_1(type_c2ats_AtkObject, l2) | ptr l1, type_c2ats_AtkRelationType, ptr l2) -> type_c2ats_gboolean = "mac#atk_relation_set_contains_target"
fun fun_c2ats_atk_relation_set_remove: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkRelationSet, l1), !ptr_v_1(type_c2ats_AtkRelation, l2) | ptr l1, ptr l2) -> void = "mac#atk_relation_set_remove"
fun fun_c2ats_atk_relation_set_add: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkRelationSet, l1), !ptr_v_1(type_c2ats_AtkRelation, l2) | ptr l1, ptr l2) -> void = "mac#atk_relation_set_add"
fun fun_c2ats_atk_relation_set_get_n_relations: {l1:addr} (!ptr_v_1(type_c2ats_AtkRelationSet, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_relation_set_get_n_relations"
fun fun_c2ats_atk_relation_set_get_relation: {l1:addr} (!ptr_v_1(type_c2ats_AtkRelationSet, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_AtkRelation, l2) | ptr l2) = "mac#atk_relation_set_get_relation"
fun fun_c2ats_atk_relation_set_get_relation_by_type: {l1:addr} (!ptr_v_1(type_c2ats_AtkRelationSet, l1) | ptr l1, type_c2ats_AtkRelationType) -> [l2:addr] (ptr_v_1(type_c2ats_AtkRelation, l2) | ptr l2) = "mac#atk_relation_set_get_relation_by_type"
fun fun_c2ats_atk_relation_set_add_relation_by_type: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkRelationSet, l1), !ptr_v_1(type_c2ats_AtkObject, l2) | ptr l1, type_c2ats_AtkRelationType, ptr l2) -> void = "mac#atk_relation_set_add_relation_by_type"
// File: /usr/include/atk-1.0/atk/atkselection.h
abst@ype struct_c2ats__AtkSelection // FIXME! Forward declaration.
typedef type_c2ats_AtkSelection = struct_c2ats__AtkSelection
abst@ype struct_c2ats__AtkSelectionIface // FIXME! Forward declaration.
typedef type_c2ats_AtkSelectionIface = struct_c2ats__AtkSelectionIface
typedef struct_c2ats__AtkSelectionIface = $extype_struct"struct _AtkSelectionIface" of {
  parent = type_c2ats_GTypeInterface,
  add_selection = {l1:addr} (!ptr_v_1(type_c2ats_AtkSelection, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean,
  clear_selection = {l1:addr} (!ptr_v_1(type_c2ats_AtkSelection, l1) | ptr l1) -> type_c2ats_gboolean,
  ref_selection = {l1:addr} (!ptr_v_1(type_c2ats_AtkSelection, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2),
  get_selection_count = {l1:addr} (!ptr_v_1(type_c2ats_AtkSelection, l1) | ptr l1) -> type_c2ats_gint,
  is_child_selected = {l1:addr} (!ptr_v_1(type_c2ats_AtkSelection, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean,
  remove_selection = {l1:addr} (!ptr_v_1(type_c2ats_AtkSelection, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean,
  select_all_selection = {l1:addr} (!ptr_v_1(type_c2ats_AtkSelection, l1) | ptr l1) -> type_c2ats_gboolean,
  selection_changed = {l1:addr} (!ptr_v_1(type_c2ats_AtkSelection, l1) | ptr l1) -> void
}
fun fun_c2ats_atk_selection_get_type: () -> type_c2ats_GType = "mac#atk_selection_get_type"
fun fun_c2ats_atk_selection_add_selection: {l1:addr} (!ptr_v_1(type_c2ats_AtkSelection, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#atk_selection_add_selection"
fun fun_c2ats_atk_selection_clear_selection: {l1:addr} (!ptr_v_1(type_c2ats_AtkSelection, l1) | ptr l1) -> type_c2ats_gboolean = "mac#atk_selection_clear_selection"
fun fun_c2ats_atk_selection_ref_selection: {l1:addr} (!ptr_v_1(type_c2ats_AtkSelection, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2) = "mac#atk_selection_ref_selection"
fun fun_c2ats_atk_selection_get_selection_count: {l1:addr} (!ptr_v_1(type_c2ats_AtkSelection, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_selection_get_selection_count"
fun fun_c2ats_atk_selection_is_child_selected: {l1:addr} (!ptr_v_1(type_c2ats_AtkSelection, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#atk_selection_is_child_selected"
fun fun_c2ats_atk_selection_remove_selection: {l1:addr} (!ptr_v_1(type_c2ats_AtkSelection, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#atk_selection_remove_selection"
fun fun_c2ats_atk_selection_select_all_selection: {l1:addr} (!ptr_v_1(type_c2ats_AtkSelection, l1) | ptr l1) -> type_c2ats_gboolean = "mac#atk_selection_select_all_selection"
// File: /usr/include/atk-1.0/atk/atksocket.h
abst@ype struct_c2ats__AtkSocket // FIXME! Forward declaration.
typedef type_c2ats_AtkSocket = struct_c2ats__AtkSocket
abst@ype struct_c2ats__AtkSocketClass // FIXME! Forward declaration.
typedef type_c2ats_AtkSocketClass = struct_c2ats__AtkSocketClass
typedef struct_c2ats__AtkSocket = $extype_struct"struct _AtkSocket" of {
  parent = type_c2ats_AtkObject,
  embedded_plug_id = ptr (* cPtr0(type_c2ats_gchar) *)
}
fun fun_c2ats_atk_socket_get_type: () -> type_c2ats_GType = "mac#atk_socket_get_type"
typedef struct_c2ats__AtkSocketClass = $extype_struct"struct _AtkSocketClass" of {
  parent_class = type_c2ats_AtkObjectClass,
  embed = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkSocket, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void
}
fun fun_c2ats_atk_socket_new: () -> [l1:addr] (ptr_v_1(type_c2ats_AtkObject, l1) | ptr l1) = "mac#atk_socket_new"
fun fun_c2ats_atk_socket_embed: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkSocket, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#atk_socket_embed"
fun fun_c2ats_atk_socket_is_occupied: {l1:addr} (!ptr_v_1(type_c2ats_AtkSocket, l1) | ptr l1) -> type_c2ats_gboolean = "mac#atk_socket_is_occupied"
// File: /usr/include/atk-1.0/atk/atkstateset.h
abst@ype struct_c2ats__AtkStateSetClass // FIXME! Forward declaration.
typedef type_c2ats_AtkStateSetClass = struct_c2ats__AtkStateSetClass
typedef struct_c2ats__AtkStateSet = $extype_struct"struct _AtkStateSet" of {
  parent = type_c2ats_GObject
}
typedef struct_c2ats__AtkStateSetClass = $extype_struct"struct _AtkStateSetClass" of {
  parent = type_c2ats_GObjectClass
}
fun fun_c2ats_atk_state_set_get_type: () -> type_c2ats_GType = "mac#atk_state_set_get_type"
fun fun_c2ats_atk_state_set_new: () -> [l1:addr] (ptr_v_1(type_c2ats_AtkStateSet, l1) | ptr l1) = "mac#atk_state_set_new"
fun fun_c2ats_atk_state_set_is_empty: {l1:addr} (!ptr_v_1(type_c2ats_AtkStateSet, l1) | ptr l1) -> type_c2ats_gboolean = "mac#atk_state_set_is_empty"
fun fun_c2ats_atk_state_set_add_state: {l1:addr} (!ptr_v_1(type_c2ats_AtkStateSet, l1) | ptr l1, type_c2ats_AtkStateType) -> type_c2ats_gboolean = "mac#atk_state_set_add_state"
fun fun_c2ats_atk_state_set_add_states: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkStateSet, l1), !ptr_v_1(type_c2ats_AtkStateType, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#atk_state_set_add_states"
fun fun_c2ats_atk_state_set_clear_states: {l1:addr} (!ptr_v_1(type_c2ats_AtkStateSet, l1) | ptr l1) -> void = "mac#atk_state_set_clear_states"
fun fun_c2ats_atk_state_set_contains_state: {l1:addr} (!ptr_v_1(type_c2ats_AtkStateSet, l1) | ptr l1, type_c2ats_AtkStateType) -> type_c2ats_gboolean = "mac#atk_state_set_contains_state"
fun fun_c2ats_atk_state_set_contains_states: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkStateSet, l1), !ptr_v_1(type_c2ats_AtkStateType, l2) | ptr l1, ptr l2, type_c2ats_gint) -> type_c2ats_gboolean = "mac#atk_state_set_contains_states"
fun fun_c2ats_atk_state_set_remove_state: {l1:addr} (!ptr_v_1(type_c2ats_AtkStateSet, l1) | ptr l1, type_c2ats_AtkStateType) -> type_c2ats_gboolean = "mac#atk_state_set_remove_state"
fun fun_c2ats_atk_state_set_and_sets: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkStateSet, l1), !ptr_v_1(type_c2ats_AtkStateSet, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_AtkStateSet, l3) | ptr l3) = "mac#atk_state_set_and_sets"
fun fun_c2ats_atk_state_set_or_sets: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkStateSet, l1), !ptr_v_1(type_c2ats_AtkStateSet, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_AtkStateSet, l3) | ptr l3) = "mac#atk_state_set_or_sets"
fun fun_c2ats_atk_state_set_xor_sets: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkStateSet, l1), !ptr_v_1(type_c2ats_AtkStateSet, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_AtkStateSet, l3) | ptr l3) = "mac#atk_state_set_xor_sets"
// File: /usr/include/atk-1.0/atk/atkstreamablecontent.h
abst@ype struct_c2ats__AtkStreamableContent // FIXME! Forward declaration.
typedef type_c2ats_AtkStreamableContent = struct_c2ats__AtkStreamableContent
abst@ype struct_c2ats__AtkStreamableContentIface // FIXME! Forward declaration.
typedef type_c2ats_AtkStreamableContentIface = struct_c2ats__AtkStreamableContentIface
typedef struct_c2ats__AtkStreamableContentIface = $extype_struct"struct _AtkStreamableContentIface" of {
  parent = type_c2ats_GTypeInterface,
  get_n_mime_types = {l1:addr} (!ptr_v_1(type_c2ats_AtkStreamableContent, l1) | ptr l1) -> type_c2ats_gint,
  get_mime_type = {l1:addr} (!ptr_v_1(type_c2ats_AtkStreamableContent, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  get_stream = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkStreamableContent, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GIOChannel, l3) | ptr l3),
  get_uri = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkStreamableContent, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3),
  pad1 = type_c2ats_AtkFunction,
  pad2 = type_c2ats_AtkFunction,
  pad3 = type_c2ats_AtkFunction
}
fun fun_c2ats_atk_streamable_content_get_type: () -> type_c2ats_GType = "mac#atk_streamable_content_get_type"
fun fun_c2ats_atk_streamable_content_get_n_mime_types: {l1:addr} (!ptr_v_1(type_c2ats_AtkStreamableContent, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_streamable_content_get_n_mime_types"
fun fun_c2ats_atk_streamable_content_get_mime_type: {l1:addr} (!ptr_v_1(type_c2ats_AtkStreamableContent, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#atk_streamable_content_get_mime_type"
fun fun_c2ats_atk_streamable_content_get_stream: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkStreamableContent, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GIOChannel, l3) | ptr l3) = "mac#atk_streamable_content_get_stream"
fun fun_c2ats_atk_streamable_content_get_uri: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkStreamableContent, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#atk_streamable_content_get_uri"
// File: /usr/include/atk-1.0/atk/atktable.h
abst@ype struct_c2ats__AtkTable // FIXME! Forward declaration.
typedef type_c2ats_AtkTable = struct_c2ats__AtkTable
abst@ype struct_c2ats__AtkTableIface // FIXME! Forward declaration.
typedef type_c2ats_AtkTableIface = struct_c2ats__AtkTableIface
typedef struct_c2ats__AtkTableIface = $extype_struct"struct _AtkTableIface" of {
  parent = type_c2ats_GTypeInterface,
  ref_at = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2),
  get_index_at = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gint,
  get_column_at_index = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gint,
  get_row_at_index = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gint,
  get_n_columns = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1) -> type_c2ats_gint,
  get_n_rows = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1) -> type_c2ats_gint,
  get_column_extent_at = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gint,
  get_row_extent_at = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gint,
  get_caption = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2),
  get_column_description = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  get_column_header = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2),
  get_row_description = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  get_row_header = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2),
  get_summary = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2),
  set_caption = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkTable, l1), !ptr_v_1(type_c2ats_AtkObject, l2) | ptr l1, ptr l2) -> void,
  set_column_description = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkTable, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void,
  set_column_header = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkTable, l1), !ptr_v_1(type_c2ats_AtkObject, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void,
  set_row_description = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkTable, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void,
  set_row_header = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkTable, l1), !ptr_v_1(type_c2ats_AtkObject, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void,
  set_summary = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkTable, l1), !ptr_v_1(type_c2ats_AtkObject, l2) | ptr l1, ptr l2) -> void,
  get_selected_columns = {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1), !ptr_v_2(type_c2ats_gint, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gint,
  get_selected_rows = {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1), !ptr_v_2(type_c2ats_gint, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gint,
  is_column_selected = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean,
  is_row_selected = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean,
  is_selected = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gboolean,
  add_row_selection = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean,
  remove_row_selection = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean,
  add_column_selection = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean,
  remove_column_selection = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean,
  row_inserted = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void,
  column_inserted = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void,
  row_deleted = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void,
  column_deleted = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void,
  row_reordered = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1) -> void,
  column_reordered = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1) -> void,
  model_changed = {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1) -> void
}
fun fun_c2ats_atk_table_get_type: () -> type_c2ats_GType = "mac#atk_table_get_type"
fun fun_c2ats_atk_table_ref_at: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2) = "mac#atk_table_ref_at"
fun fun_c2ats_atk_table_get_index_at: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gint = "mac#atk_table_get_index_at"
fun fun_c2ats_atk_table_get_column_at_index: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gint = "mac#atk_table_get_column_at_index"
fun fun_c2ats_atk_table_get_row_at_index: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gint = "mac#atk_table_get_row_at_index"
fun fun_c2ats_atk_table_get_n_columns: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_table_get_n_columns"
fun fun_c2ats_atk_table_get_n_rows: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_table_get_n_rows"
fun fun_c2ats_atk_table_get_column_extent_at: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gint = "mac#atk_table_get_column_extent_at"
fun fun_c2ats_atk_table_get_row_extent_at: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gint = "mac#atk_table_get_row_extent_at"
fun fun_c2ats_atk_table_get_caption: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2) = "mac#atk_table_get_caption"
fun fun_c2ats_atk_table_get_column_description: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#atk_table_get_column_description"
fun fun_c2ats_atk_table_get_column_header: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2) = "mac#atk_table_get_column_header"
fun fun_c2ats_atk_table_get_row_description: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#atk_table_get_row_description"
fun fun_c2ats_atk_table_get_row_header: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2) = "mac#atk_table_get_row_header"
fun fun_c2ats_atk_table_get_summary: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2) = "mac#atk_table_get_summary"
fun fun_c2ats_atk_table_set_caption: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkTable, l1), !ptr_v_1(type_c2ats_AtkObject, l2) | ptr l1, ptr l2) -> void = "mac#atk_table_set_caption"
fun fun_c2ats_atk_table_set_column_description: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkTable, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#atk_table_set_column_description"
fun fun_c2ats_atk_table_set_column_header: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkTable, l1), !ptr_v_1(type_c2ats_AtkObject, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#atk_table_set_column_header"
fun fun_c2ats_atk_table_set_row_description: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkTable, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#atk_table_set_row_description"
fun fun_c2ats_atk_table_set_row_header: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkTable, l1), !ptr_v_1(type_c2ats_AtkObject, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#atk_table_set_row_header"
fun fun_c2ats_atk_table_set_summary: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkTable, l1), !ptr_v_1(type_c2ats_AtkObject, l2) | ptr l1, ptr l2) -> void = "mac#atk_table_set_summary"
fun fun_c2ats_atk_table_get_selected_columns: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1), !ptr_v_2(type_c2ats_gint, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#atk_table_get_selected_columns"
fun fun_c2ats_atk_table_get_selected_rows: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1), !ptr_v_2(type_c2ats_gint, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#atk_table_get_selected_rows"
fun fun_c2ats_atk_table_is_column_selected: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#atk_table_is_column_selected"
fun fun_c2ats_atk_table_is_row_selected: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#atk_table_is_row_selected"
fun fun_c2ats_atk_table_is_selected: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gboolean = "mac#atk_table_is_selected"
fun fun_c2ats_atk_table_add_row_selection: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#atk_table_add_row_selection"
fun fun_c2ats_atk_table_remove_row_selection: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#atk_table_remove_row_selection"
fun fun_c2ats_atk_table_add_column_selection: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#atk_table_add_column_selection"
fun fun_c2ats_atk_table_remove_column_selection: {l1:addr} (!ptr_v_1(type_c2ats_AtkTable, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#atk_table_remove_column_selection"
// File: /usr/include/atk-1.0/atk/atktablecell.h
abst@ype struct_c2ats__AtkTableCell // FIXME! Forward declaration.
typedef type_c2ats_AtkTableCell = struct_c2ats__AtkTableCell
abst@ype struct_c2ats__AtkTableCellIface // FIXME! Forward declaration.
typedef type_c2ats_AtkTableCellIface = struct_c2ats__AtkTableCellIface
typedef struct_c2ats__AtkTableCellIface = $extype_struct"struct _AtkTableCellIface" of {
  parent = type_c2ats_GTypeInterface,
  get_column_span = {l1:addr} (!ptr_v_1(type_c2ats_AtkTableCell, l1) | ptr l1) -> type_c2ats_gint,
  get_column_header_cells = {l1:addr} (!ptr_v_1(type_c2ats_AtkTableCell, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GPtrArray, l2) | ptr l2),
  get_position = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkTableCell, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  get_row_span = {l1:addr} (!ptr_v_1(type_c2ats_AtkTableCell, l1) | ptr l1) -> type_c2ats_gint,
  get_row_header_cells = {l1:addr} (!ptr_v_1(type_c2ats_AtkTableCell, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GPtrArray, l2) | ptr l2),
  get_row_column_span = {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_AtkTableCell, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean,
  get_table = {l1:addr} (!ptr_v_1(type_c2ats_AtkTableCell, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2)
}
fun fun_c2ats_atk_table_cell_get_type: () -> type_c2ats_GType = "mac#atk_table_cell_get_type"
fun fun_c2ats_atk_table_cell_get_column_span: {l1:addr} (!ptr_v_1(type_c2ats_AtkTableCell, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_table_cell_get_column_span"
fun fun_c2ats_atk_table_cell_get_column_header_cells: {l1:addr} (!ptr_v_1(type_c2ats_AtkTableCell, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GPtrArray, l2) | ptr l2) = "mac#atk_table_cell_get_column_header_cells"
fun fun_c2ats_atk_table_cell_get_position: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_AtkTableCell, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#atk_table_cell_get_position"
fun fun_c2ats_atk_table_cell_get_row_span: {l1:addr} (!ptr_v_1(type_c2ats_AtkTableCell, l1) | ptr l1) -> type_c2ats_gint = "mac#atk_table_cell_get_row_span"
fun fun_c2ats_atk_table_cell_get_row_header_cells: {l1:addr} (!ptr_v_1(type_c2ats_AtkTableCell, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GPtrArray, l2) | ptr l2) = "mac#atk_table_cell_get_row_header_cells"
fun fun_c2ats_atk_table_cell_get_row_column_span: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_AtkTableCell, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#atk_table_cell_get_row_column_span"
fun fun_c2ats_atk_table_cell_get_table: {l1:addr} (!ptr_v_1(type_c2ats_AtkTableCell, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2) = "mac#atk_table_cell_get_table"
// File: /usr/include/atk-1.0/atk/atkmisc.h
abst@ype struct_c2ats__AtkMisc // FIXME! Forward declaration.
typedef type_c2ats_AtkMisc = struct_c2ats__AtkMisc
abst@ype struct_c2ats__AtkMiscClass // FIXME! Forward declaration.
typedef type_c2ats_AtkMiscClass = struct_c2ats__AtkMiscClass
typedef struct_c2ats__AtkMisc = $extype_struct"struct _AtkMisc" of {
  parent = type_c2ats_GObject
}
macdef takeout_c2ats_atk_misc_instance = $extval([l1,l1_1:addr] (ptr_v_2(type_c2ats_AtkMisc, l1, l1_1) | ptr l1), "&atk_misc_instance")
praxi addback_c2ats_atk_misc_instance {l1,l1_1:addr} (ptr_v_2(type_c2ats_AtkMisc, l1, l1_1) | ptr l1): void
typedef struct_c2ats__AtkMiscClass = $extype_struct"struct _AtkMiscClass" of {
  parent = type_c2ats_GObjectClass,
  threads_enter = {l1:addr} (!ptr_v_1(type_c2ats_AtkMisc, l1) | ptr l1) -> void,
  threads_leave = {l1:addr} (!ptr_v_1(type_c2ats_AtkMisc, l1) | ptr l1) -> void,
  vfuncs = @[type_c2ats_gpointer][32]
}
fun fun_c2ats_atk_misc_get_type: () -> type_c2ats_GType = "mac#atk_misc_get_type"
fun fun_c2ats_atk_misc_threads_enter: {l1:addr} (!ptr_v_1(type_c2ats_AtkMisc, l1) | ptr l1) -> void = "mac#atk_misc_threads_enter"
fun fun_c2ats_atk_misc_threads_leave: {l1:addr} (!ptr_v_1(type_c2ats_AtkMisc, l1) | ptr l1) -> void = "mac#atk_misc_threads_leave"
fun fun_c2ats_atk_misc_get_instance: () -> [l1:addr] (ptr_v_1(type_c2ats_AtkMisc, l1) | ptr l1) = "mac#atk_misc_get_instance"
// File: /usr/include/atk-1.0/atk/atkvalue.h
abst@ype struct_c2ats__AtkValue // FIXME! Forward declaration.
typedef type_c2ats_AtkValue = struct_c2ats__AtkValue
abst@ype struct_c2ats__AtkValueIface // FIXME! Forward declaration.
typedef type_c2ats_AtkValueIface = struct_c2ats__AtkValueIface
typedef type_c2ats_AtkValueType = int
#define enum_c2ats_ATK_VALUE_VERY_WEAK 0
#define enum_c2ats_ATK_VALUE_WEAK 1
#define enum_c2ats_ATK_VALUE_ACCEPTABLE 2
#define enum_c2ats_ATK_VALUE_STRONG 3
#define enum_c2ats_ATK_VALUE_VERY_STRONG 4
#define enum_c2ats_ATK_VALUE_VERY_LOW 5
#define enum_c2ats_ATK_VALUE_LOW 6
#define enum_c2ats_ATK_VALUE_MEDIUM 7
#define enum_c2ats_ATK_VALUE_HIGH 8
#define enum_c2ats_ATK_VALUE_VERY_HIGH 9
#define enum_c2ats_ATK_VALUE_VERY_BAD 10
#define enum_c2ats_ATK_VALUE_BAD 11
#define enum_c2ats_ATK_VALUE_GOOD 12
#define enum_c2ats_ATK_VALUE_VERY_GOOD 13
#define enum_c2ats_ATK_VALUE_BEST 14
#define enum_c2ats_ATK_VALUE_LAST_DEFINED 15
typedef struct_c2ats__AtkValueIface = $extype_struct"struct _AtkValueIface" of {
  parent = type_c2ats_GTypeInterface,
  get_current_value = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkValue, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> void,
  get_maximum_value = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkValue, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> void,
  get_minimum_value = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkValue, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> void,
  set_current_value = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkValue, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  get_minimum_increment = {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkValue, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> void,
  get_value_and_text = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_AtkValue, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> void,
  get_range = {l1:addr} (!ptr_v_1(type_c2ats_AtkValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkRange, l2) | ptr l2),
  get_increment = {l1:addr} (!ptr_v_1(type_c2ats_AtkValue, l1) | ptr l1) -> type_c2ats_gdouble,
  get_sub_ranges = {l1:addr} (!ptr_v_1(type_c2ats_AtkValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2),
  set_value = {l1:addr} (!ptr_v_1(type_c2ats_AtkValue, l1) | ptr l1, type_c2ats_gdouble) -> void
}
fun fun_c2ats_atk_value_get_type: () -> type_c2ats_GType = "mac#atk_value_get_type"
fun fun_c2ats_atk_value_get_current_value: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkValue, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> void = "mac#atk_value_get_current_value"
fun fun_c2ats_atk_value_get_maximum_value: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkValue, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> void = "mac#atk_value_get_maximum_value"
fun fun_c2ats_atk_value_get_minimum_value: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkValue, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> void = "mac#atk_value_get_minimum_value"
fun fun_c2ats_atk_value_set_current_value: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkValue, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#atk_value_set_current_value"
fun fun_c2ats_atk_value_get_minimum_increment: {l1,l2:addr} (!ptr_v_1(type_c2ats_AtkValue, l1), !ptr_v_1(type_c2ats_GValue, l2) | ptr l1, ptr l2) -> void = "mac#atk_value_get_minimum_increment"
fun fun_c2ats_atk_value_get_value_and_text: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_AtkValue, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> void = "mac#atk_value_get_value_and_text"
fun fun_c2ats_atk_value_get_range: {l1:addr} (!ptr_v_1(type_c2ats_AtkValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkRange, l2) | ptr l2) = "mac#atk_value_get_range"
fun fun_c2ats_atk_value_get_increment: {l1:addr} (!ptr_v_1(type_c2ats_AtkValue, l1) | ptr l1) -> type_c2ats_gdouble = "mac#atk_value_get_increment"
fun fun_c2ats_atk_value_get_sub_ranges: {l1:addr} (!ptr_v_1(type_c2ats_AtkValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#atk_value_get_sub_ranges"
fun fun_c2ats_atk_value_set_value: {l1:addr} (!ptr_v_1(type_c2ats_AtkValue, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#atk_value_set_value"
fun fun_c2ats_atk_value_type_get_name: (type_c2ats_AtkValueType) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#atk_value_type_get_name"
fun fun_c2ats_atk_value_type_get_localized_name: (type_c2ats_AtkValueType) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#atk_value_type_get_localized_name"
// File: /usr/include/atk-1.0/atk/atkwindow.h
abst@ype struct_c2ats__AtkWindow // FIXME! Forward declaration.
typedef type_c2ats_AtkWindow = struct_c2ats__AtkWindow
abst@ype struct_c2ats__AtkWindowIface // FIXME! Forward declaration.
typedef type_c2ats_AtkWindowIface = struct_c2ats__AtkWindowIface
typedef struct_c2ats__AtkWindowIface = $extype_struct"struct _AtkWindowIface" of {
  parent = type_c2ats_GTypeInterface
}
fun fun_c2ats_atk_window_get_type: () -> type_c2ats_GType = "mac#atk_window_get_type"
// File: /usr/include/gtk-3.0/gtk/gtkwidget.h
typedef type_c2ats_GtkWidgetHelpType = int
#define enum_c2ats_GTK_WIDGET_HELP_TOOLTIP 0
#define enum_c2ats_GTK_WIDGET_HELP_WHATS_THIS 1
abst@ype struct_c2ats__GtkWidgetPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkWidgetPrivate = struct_c2ats__GtkWidgetPrivate
abst@ype struct_c2ats__GtkWidgetClass // FIXME! Forward declaration.
typedef type_c2ats_GtkWidgetClass = struct_c2ats__GtkWidgetClass
abst@ype struct_c2ats__GtkWidgetClassPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkWidgetClassPrivate = struct_c2ats__GtkWidgetClassPrivate
typedef type_c2ats_GtkAllocation = type_c2ats_GdkRectangle
typedef type_c2ats_GtkCallback = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gpointer) -> void
typedef type_c2ats_GtkTickCallback = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkFrameClock, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef struct_c2ats__GtkRequisition = $extype_struct"struct _GtkRequisition" of {
  width = type_c2ats_gint,
  height = type_c2ats_gint
}
typedef struct_c2ats__GtkWidget = $extype_struct"struct _GtkWidget" of {
  parent_instance = type_c2ats_GInitiallyUnowned,
  priv = ptr (* cPtr0(type_c2ats_GtkWidgetPrivate) *)
}
typedef struct_c2ats__GtkWidgetClass = $extype_struct"struct _GtkWidgetClass" of {
  parent_class = type_c2ats_GInitiallyUnownedClass,
  activate_signal = type_c2ats_guint,
  dispatch_child_properties_changed = {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_2(type_c2ats_GParamSpec, l2, l2_1) | ptr l1, type_c2ats_guint, ptr l2) -> void,
  destroy = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void,
  show = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void,
  show_all = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void,
  hide = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void,
  map = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void,
  unmap = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void,
  realize = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void,
  unrealize = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void,
  size_allocate = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkAllocation, l2) | ptr l1, ptr l2) -> void,
  state_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GtkStateType) -> void,
  state_flags_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GtkStateFlags) -> void,
  parent_set = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void,
  hierarchy_changed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void,
  style_set = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkStyle, l2) | ptr l1, ptr l2) -> void,
  direction_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GtkTextDirection) -> void,
  grab_notify = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void,
  child_notify = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l1, ptr l2) -> void,
  draw = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  get_request_mode = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_GtkSizeRequestMode,
  get_preferred_height = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void,
  get_preferred_width_for_height = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> void,
  get_preferred_width = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void,
  get_preferred_height_for_width = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> void,
  mnemonic_activate = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> type_c2ats_gboolean,
  grab_focus = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void,
  focus = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GtkDirectionType) -> type_c2ats_gboolean,
  move_focus = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GtkDirectionType) -> void,
  keynav_failed = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GtkDirectionType) -> type_c2ats_gboolean,
  event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEvent, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  button_press_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventButton, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  button_release_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventButton, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  scroll_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventScroll, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  motion_notify_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventMotion, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  delete_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventAny, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  destroy_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventAny, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  key_press_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventKey, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  key_release_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventKey, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  enter_notify_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventCrossing, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  leave_notify_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventCrossing, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  configure_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventConfigure, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  focus_in_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventFocus, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  focus_out_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventFocus, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  map_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventAny, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  unmap_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventAny, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  property_notify_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventProperty, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  selection_clear_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventSelection, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  selection_request_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventSelection, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  selection_notify_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventSelection, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  proximity_in_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventProximity, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  proximity_out_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventProximity, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  visibility_notify_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventVisibility, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  window_state_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventWindowState, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  damage_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventExpose, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  grab_broken_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventGrabBroken, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  selection_get = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkSelectionData, l2) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_guint) -> void,
  selection_received = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkSelectionData, l2) | ptr l1, ptr l2, type_c2ats_guint) -> void,
  drag_begin = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkDragContext, l2) | ptr l1, ptr l2) -> void,
  drag_end = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkDragContext, l2) | ptr l1, ptr l2) -> void,
  drag_data_get = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkDragContext, l2), !ptr_v_1(type_c2ats_GtkSelectionData, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_guint, type_c2ats_guint) -> void,
  drag_data_delete = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkDragContext, l2) | ptr l1, ptr l2) -> void,
  drag_leave = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkDragContext, l2) | ptr l1, ptr l2, type_c2ats_guint) -> void,
  drag_motion = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkDragContext, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint, type_c2ats_guint) -> type_c2ats_gboolean,
  drag_drop = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkDragContext, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint, type_c2ats_guint) -> type_c2ats_gboolean,
  drag_data_received = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkDragContext, l2), !ptr_v_1(type_c2ats_GtkSelectionData, l3) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint, ptr l3, type_c2ats_guint, type_c2ats_guint) -> void,
  drag_failed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkDragContext, l2) | ptr l1, ptr l2, type_c2ats_GtkDragResult) -> type_c2ats_gboolean,
  popup_menu = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean,
  show_help = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GtkWidgetHelpType) -> type_c2ats_gboolean,
  get_accessible = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2),
  screen_changed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l1, ptr l2) -> void,
  can_activate_accel = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_gboolean,
  composited_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void,
  query_tooltip = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkTooltip, l2) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gboolean, ptr l2) -> type_c2ats_gboolean,
  compute_expand = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gboolean, l2), !ptr_v_1(type_c2ats_gboolean, l3) | ptr l1, ptr l2, ptr l3) -> void,
  adjust_size_request = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_GtkOrientation, ptr l2, ptr l3) -> void,
  adjust_size_allocation = {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, type_c2ats_GtkOrientation, ptr l2, ptr l3, ptr l4, ptr l5) -> void,
  style_updated = {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void,
  touch_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventTouch, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  get_preferred_height_and_baseline_for_width = {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, type_c2ats_gint, ptr l2, ptr l3, ptr l4, ptr l5) -> void,
  adjust_baseline_request = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void,
  adjust_baseline_allocation = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, ptr l2) -> void,
  queue_draw_region = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2) -> void,
  priv = ptr (* cPtr0(type_c2ats_GtkWidgetClassPrivate) *),
  _gtk_reserved6 = () -> void,
  _gtk_reserved7 = () -> void
}
fun fun_c2ats_gtk_widget_get_type: () -> type_c2ats_GType = "mac#gtk_widget_get_type"
fun fun_c2ats_gtk_widget_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_GType, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_widget_new"
fun fun_c2ats_gtk_widget_destroy: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_destroy"
fun fun_c2ats_gtk_widget_destroyed: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_2(type_c2ats_GtkWidget, l2, l2_1) | ptr l1, ptr l2) -> void = "mac#gtk_widget_destroyed"
fun fun_c2ats_gtk_widget_unparent: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_unparent"
fun fun_c2ats_gtk_widget_show: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_show"
fun fun_c2ats_gtk_widget_hide: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_hide"
fun fun_c2ats_gtk_widget_show_now: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_show_now"
fun fun_c2ats_gtk_widget_show_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_show_all"
fun fun_c2ats_gtk_widget_set_no_show_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_no_show_all"
fun fun_c2ats_gtk_widget_get_no_show_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_get_no_show_all"
fun fun_c2ats_gtk_widget_map: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_map"
fun fun_c2ats_gtk_widget_unmap: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_unmap"
fun fun_c2ats_gtk_widget_realize: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_realize"
fun fun_c2ats_gtk_widget_unrealize: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_unrealize"
fun fun_c2ats_gtk_widget_draw: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_draw"
fun fun_c2ats_gtk_widget_queue_draw: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_queue_draw"
fun fun_c2ats_gtk_widget_queue_draw_area: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_widget_queue_draw_area"
fun fun_c2ats_gtk_widget_queue_draw_region: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_queue_draw_region"
fun fun_c2ats_gtk_widget_queue_resize: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_queue_resize"
fun fun_c2ats_gtk_widget_queue_resize_no_redraw: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_queue_resize_no_redraw"
fun fun_c2ats_gtk_widget_queue_allocate: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_queue_allocate"
fun fun_c2ats_gtk_widget_get_frame_clock: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkFrameClock, l2) | ptr l2) = "mac#gtk_widget_get_frame_clock"
fun fun_c2ats_gtk_widget_size_request: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkRequisition, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_size_request"
fun fun_c2ats_gtk_widget_size_allocate: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkAllocation, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_size_allocate"
fun fun_c2ats_gtk_widget_size_allocate_with_baseline: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkAllocation, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_widget_size_allocate_with_baseline"
fun fun_c2ats_gtk_widget_get_request_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_GtkSizeRequestMode = "mac#gtk_widget_get_request_mode"
fun fun_c2ats_gtk_widget_get_preferred_width: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_widget_get_preferred_width"
fun fun_c2ats_gtk_widget_get_preferred_height_for_width: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#gtk_widget_get_preferred_height_for_width"
fun fun_c2ats_gtk_widget_get_preferred_height: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_widget_get_preferred_height"
fun fun_c2ats_gtk_widget_get_preferred_width_for_height: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#gtk_widget_get_preferred_width_for_height"
fun fun_c2ats_gtk_widget_get_preferred_height_and_baseline_for_width: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, type_c2ats_gint, ptr l2, ptr l3, ptr l4, ptr l5) -> void = "mac#gtk_widget_get_preferred_height_and_baseline_for_width"
fun fun_c2ats_gtk_widget_get_preferred_size: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkRequisition, l2), !ptr_v_1(type_c2ats_GtkRequisition, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_widget_get_preferred_size"
fun fun_c2ats_gtk_widget_get_child_requisition: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkRequisition, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_get_child_requisition"
fun fun_c2ats_gtk_widget_add_accelerator: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkAccelGroup, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_guint, type_c2ats_GdkModifierType, type_c2ats_GtkAccelFlags) -> void = "mac#gtk_widget_add_accelerator"
fun fun_c2ats_gtk_widget_remove_accelerator: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkAccelGroup, l2) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_GdkModifierType) -> type_c2ats_gboolean = "mac#gtk_widget_remove_accelerator"
fun fun_c2ats_gtk_widget_set_accel_path: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkAccelGroup, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_widget_set_accel_path"
fun fun_c2ats_gtk_widget_list_accel_closures: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_widget_list_accel_closures"
fun fun_c2ats_gtk_widget_can_activate_accel: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_gboolean = "mac#gtk_widget_can_activate_accel"
fun fun_c2ats_gtk_widget_mnemonic_activate: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gtk_widget_mnemonic_activate"
fun fun_c2ats_gtk_widget_event: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEvent, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_widget_event"
fun fun_c2ats_gtk_widget_send_expose: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEvent, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gtk_widget_send_expose"
fun fun_c2ats_gtk_widget_send_focus_change: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEvent, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_widget_send_focus_change"
fun fun_c2ats_gtk_widget_activate: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_activate"
fun fun_c2ats_gtk_widget_reparent: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_reparent"
fun fun_c2ats_gtk_widget_intersect: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2), !ptr_v_1(type_c2ats_GdkRectangle, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_widget_intersect"
fun fun_c2ats_gtk_widget_region_intersect: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_cairo_region_t, l3) | ptr l3) = "mac#gtk_widget_region_intersect"
fun fun_c2ats_gtk_widget_freeze_child_notify: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_freeze_child_notify"
fun fun_c2ats_gtk_widget_child_notify: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_child_notify"
fun fun_c2ats_gtk_widget_thaw_child_notify: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_thaw_child_notify"
fun fun_c2ats_gtk_widget_set_can_focus: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_can_focus"
fun fun_c2ats_gtk_widget_get_can_focus: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_get_can_focus"
fun fun_c2ats_gtk_widget_has_focus: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_has_focus"
fun fun_c2ats_gtk_widget_is_focus: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_is_focus"
fun fun_c2ats_gtk_widget_has_visible_focus: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_has_visible_focus"
fun fun_c2ats_gtk_widget_grab_focus: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_grab_focus"
fun fun_c2ats_gtk_widget_set_focus_on_click: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_focus_on_click"
fun fun_c2ats_gtk_widget_get_focus_on_click: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_get_focus_on_click"
fun fun_c2ats_gtk_widget_set_can_default: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_can_default"
fun fun_c2ats_gtk_widget_get_can_default: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_get_can_default"
fun fun_c2ats_gtk_widget_has_default: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_has_default"
fun fun_c2ats_gtk_widget_grab_default: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_grab_default"
fun fun_c2ats_gtk_widget_set_receives_default: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_receives_default"
fun fun_c2ats_gtk_widget_get_receives_default: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_get_receives_default"
fun fun_c2ats_gtk_widget_has_grab: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_has_grab"
fun fun_c2ats_gtk_widget_device_is_shadowed: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_widget_device_is_shadowed"
fun fun_c2ats_gtk_widget_set_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_set_name"
fun fun_c2ats_gtk_widget_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_widget_get_name"
fun fun_c2ats_gtk_widget_set_state: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GtkStateType) -> void = "mac#gtk_widget_set_state"
fun fun_c2ats_gtk_widget_get_state: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_GtkStateType = "mac#gtk_widget_get_state"
fun fun_c2ats_gtk_widget_set_state_flags: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GtkStateFlags, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_state_flags"
fun fun_c2ats_gtk_widget_unset_state_flags: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GtkStateFlags) -> void = "mac#gtk_widget_unset_state_flags"
fun fun_c2ats_gtk_widget_get_state_flags: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_GtkStateFlags = "mac#gtk_widget_get_state_flags"
fun fun_c2ats_gtk_widget_set_sensitive: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_sensitive"
fun fun_c2ats_gtk_widget_get_sensitive: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_get_sensitive"
fun fun_c2ats_gtk_widget_is_sensitive: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_is_sensitive"
fun fun_c2ats_gtk_widget_set_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_visible"
fun fun_c2ats_gtk_widget_get_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_get_visible"
fun fun_c2ats_gtk_widget_is_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_is_visible"
fun fun_c2ats_gtk_widget_set_has_window: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_has_window"
fun fun_c2ats_gtk_widget_get_has_window: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_get_has_window"
fun fun_c2ats_gtk_widget_is_toplevel: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_is_toplevel"
fun fun_c2ats_gtk_widget_is_drawable: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_is_drawable"
fun fun_c2ats_gtk_widget_set_realized: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_realized"
fun fun_c2ats_gtk_widget_get_realized: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_get_realized"
fun fun_c2ats_gtk_widget_set_mapped: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_mapped"
fun fun_c2ats_gtk_widget_get_mapped: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_get_mapped"
fun fun_c2ats_gtk_widget_set_app_paintable: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_app_paintable"
fun fun_c2ats_gtk_widget_get_app_paintable: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_get_app_paintable"
fun fun_c2ats_gtk_widget_set_double_buffered: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_double_buffered"
fun fun_c2ats_gtk_widget_get_double_buffered: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_get_double_buffered"
fun fun_c2ats_gtk_widget_set_redraw_on_allocate: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_redraw_on_allocate"
fun fun_c2ats_gtk_widget_set_parent: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_set_parent"
fun fun_c2ats_gtk_widget_get_parent: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_widget_get_parent"
fun fun_c2ats_gtk_widget_set_parent_window: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_set_parent_window"
fun fun_c2ats_gtk_widget_get_parent_window: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gtk_widget_get_parent_window"
fun fun_c2ats_gtk_widget_set_child_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_child_visible"
fun fun_c2ats_gtk_widget_get_child_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_get_child_visible"
fun fun_c2ats_gtk_widget_set_window: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_set_window"
fun fun_c2ats_gtk_widget_get_window: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gtk_widget_get_window"
fun fun_c2ats_gtk_widget_register_window: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_register_window"
fun fun_c2ats_gtk_widget_unregister_window: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_unregister_window"
fun fun_c2ats_gtk_widget_get_allocated_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> int = "mac#gtk_widget_get_allocated_width"
fun fun_c2ats_gtk_widget_get_allocated_height: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> int = "mac#gtk_widget_get_allocated_height"
fun fun_c2ats_gtk_widget_get_allocated_baseline: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> int = "mac#gtk_widget_get_allocated_baseline"
fun fun_c2ats_gtk_widget_get_allocated_size: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkAllocation, l2), !ptr_v_1(int, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_widget_get_allocated_size"
fun fun_c2ats_gtk_widget_get_allocation: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkAllocation, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_get_allocation"
fun fun_c2ats_gtk_widget_set_allocation: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkAllocation, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_set_allocation"
fun fun_c2ats_gtk_widget_set_clip: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkAllocation, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_set_clip"
fun fun_c2ats_gtk_widget_get_clip: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkAllocation, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_get_clip"
fun fun_c2ats_gtk_widget_get_requisition: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkRequisition, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_get_requisition"
fun fun_c2ats_gtk_widget_child_focus: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GtkDirectionType) -> type_c2ats_gboolean = "mac#gtk_widget_child_focus"
fun fun_c2ats_gtk_widget_keynav_failed: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GtkDirectionType) -> type_c2ats_gboolean = "mac#gtk_widget_keynav_failed"
fun fun_c2ats_gtk_widget_error_bell: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_error_bell"
fun fun_c2ats_gtk_widget_set_size_request: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_widget_set_size_request"
fun fun_c2ats_gtk_widget_get_size_request: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_widget_get_size_request"
fun fun_c2ats_gtk_widget_set_events: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_widget_set_events"
fun fun_c2ats_gtk_widget_add_events: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_widget_add_events"
fun fun_c2ats_gtk_widget_set_device_events: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l1, ptr l2, type_c2ats_GdkEventMask) -> void = "mac#gtk_widget_set_device_events"
fun fun_c2ats_gtk_widget_add_device_events: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l1, ptr l2, type_c2ats_GdkEventMask) -> void = "mac#gtk_widget_add_device_events"
fun fun_c2ats_gtk_widget_set_opacity: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, double) -> void = "mac#gtk_widget_set_opacity"
fun fun_c2ats_gtk_widget_get_opacity: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> double = "mac#gtk_widget_get_opacity"
fun fun_c2ats_gtk_widget_set_device_enabled: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_device_enabled"
fun fun_c2ats_gtk_widget_get_device_enabled: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_widget_get_device_enabled"
fun fun_c2ats_gtk_widget_get_toplevel: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_widget_get_toplevel"
fun fun_c2ats_gtk_widget_get_ancestor: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GType) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_widget_get_ancestor"
fun fun_c2ats_gtk_widget_get_visual: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkVisual, l2) | ptr l2) = "mac#gtk_widget_get_visual"
fun fun_c2ats_gtk_widget_set_visual: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkVisual, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_set_visual"
fun fun_c2ats_gtk_widget_get_screen: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l2) = "mac#gtk_widget_get_screen"
fun fun_c2ats_gtk_widget_has_screen: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_has_screen"
fun fun_c2ats_gtk_widget_get_scale_factor: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_widget_get_scale_factor"
fun fun_c2ats_gtk_widget_get_display: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDisplay, l2) | ptr l2) = "mac#gtk_widget_get_display"
fun fun_c2ats_gtk_widget_get_root_window: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gtk_widget_get_root_window"
fun fun_c2ats_gtk_widget_get_settings: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSettings, l2) | ptr l2) = "mac#gtk_widget_get_settings"
fun fun_c2ats_gtk_widget_get_clipboard: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GdkAtom) -> [l2:addr] (ptr_v_1(type_c2ats_GtkClipboard, l2) | ptr l2) = "mac#gtk_widget_get_clipboard"
fun fun_c2ats_gtk_widget_get_hexpand: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_get_hexpand"
fun fun_c2ats_gtk_widget_set_hexpand: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_hexpand"
fun fun_c2ats_gtk_widget_get_hexpand_set: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_get_hexpand_set"
fun fun_c2ats_gtk_widget_set_hexpand_set: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_hexpand_set"
fun fun_c2ats_gtk_widget_get_vexpand: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_get_vexpand"
fun fun_c2ats_gtk_widget_set_vexpand: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_vexpand"
fun fun_c2ats_gtk_widget_get_vexpand_set: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_get_vexpand_set"
fun fun_c2ats_gtk_widget_set_vexpand_set: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_vexpand_set"
fun fun_c2ats_gtk_widget_queue_compute_expand: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_queue_compute_expand"
fun fun_c2ats_gtk_widget_compute_expand: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GtkOrientation) -> type_c2ats_gboolean = "mac#gtk_widget_compute_expand"
fun fun_c2ats_gtk_widget_get_support_multidevice: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_get_support_multidevice"
fun fun_c2ats_gtk_widget_set_support_multidevice: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_support_multidevice"
fun fun_c2ats_gtk_widget_class_set_accessible_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetClass, l1) | ptr l1, type_c2ats_GType) -> void = "mac#gtk_widget_class_set_accessible_type"
fun fun_c2ats_gtk_widget_class_set_accessible_role: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetClass, l1) | ptr l1, type_c2ats_AtkRole) -> void = "mac#gtk_widget_class_set_accessible_role"
fun fun_c2ats_gtk_widget_get_accessible: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2) = "mac#gtk_widget_get_accessible"
fun fun_c2ats_gtk_widget_get_halign: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_GtkAlign = "mac#gtk_widget_get_halign"
fun fun_c2ats_gtk_widget_set_halign: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GtkAlign) -> void = "mac#gtk_widget_set_halign"
fun fun_c2ats_gtk_widget_get_valign: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_GtkAlign = "mac#gtk_widget_get_valign"
fun fun_c2ats_gtk_widget_get_valign_with_baseline: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_GtkAlign = "mac#gtk_widget_get_valign_with_baseline"
fun fun_c2ats_gtk_widget_set_valign: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GtkAlign) -> void = "mac#gtk_widget_set_valign"
fun fun_c2ats_gtk_widget_get_margin_left: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_widget_get_margin_left"
fun fun_c2ats_gtk_widget_set_margin_left: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_widget_set_margin_left"
fun fun_c2ats_gtk_widget_get_margin_right: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_widget_get_margin_right"
fun fun_c2ats_gtk_widget_set_margin_right: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_widget_set_margin_right"
fun fun_c2ats_gtk_widget_get_margin_start: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_widget_get_margin_start"
fun fun_c2ats_gtk_widget_set_margin_start: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_widget_set_margin_start"
fun fun_c2ats_gtk_widget_get_margin_end: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_widget_get_margin_end"
fun fun_c2ats_gtk_widget_set_margin_end: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_widget_set_margin_end"
fun fun_c2ats_gtk_widget_get_margin_top: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_widget_get_margin_top"
fun fun_c2ats_gtk_widget_set_margin_top: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_widget_set_margin_top"
fun fun_c2ats_gtk_widget_get_margin_bottom: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_widget_get_margin_bottom"
fun fun_c2ats_gtk_widget_set_margin_bottom: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_widget_set_margin_bottom"
fun fun_c2ats_gtk_widget_get_events: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_widget_get_events"
fun fun_c2ats_gtk_widget_get_device_events: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l1, ptr l2) -> type_c2ats_GdkEventMask = "mac#gtk_widget_get_device_events"
fun fun_c2ats_gtk_widget_get_pointer: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_widget_get_pointer"
fun fun_c2ats_gtk_widget_is_ancestor: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_widget_is_ancestor"
fun fun_c2ats_gtk_widget_translate_coordinates: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#gtk_widget_translate_coordinates"
fun fun_c2ats_gtk_widget_hide_on_delete: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_hide_on_delete"
fun fun_c2ats_gtk_widget_override_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, type_c2ats_GtkStateFlags, ptr l2) -> void = "mac#gtk_widget_override_color"
fun fun_c2ats_gtk_widget_override_background_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, type_c2ats_GtkStateFlags, ptr l2) -> void = "mac#gtk_widget_override_background_color"
fun fun_c2ats_gtk_widget_override_font: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_override_font"
fun fun_c2ats_gtk_widget_override_symbolic_color: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GdkRGBA, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_widget_override_symbolic_color"
fun fun_c2ats_gtk_widget_override_cursor: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2), !ptr_v_1(type_c2ats_GdkRGBA, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_widget_override_cursor"
fun fun_c2ats_gtk_widget_reset_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_reset_style"
fun fun_c2ats_gtk_widget_create_pango_context: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoContext, l2) | ptr l2) = "mac#gtk_widget_create_pango_context"
fun fun_c2ats_gtk_widget_get_pango_context: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoContext, l2) | ptr l2) = "mac#gtk_widget_get_pango_context"
fun fun_c2ats_gtk_widget_set_font_options: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_cairo_font_options_t, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_set_font_options"
fun fun_c2ats_gtk_widget_get_font_options: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_font_options_t, l2) | ptr l2) = "mac#gtk_widget_get_font_options"
fun fun_c2ats_gtk_widget_create_pango_layout: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_PangoLayout, l3) | ptr l3) = "mac#gtk_widget_create_pango_layout"
fun fun_c2ats_gtk_widget_render_icon_pixbuf: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GtkIconSize) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l3) = "mac#gtk_widget_render_icon_pixbuf"
fun fun_c2ats_gtk_widget_set_composite_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_set_composite_name"
fun fun_c2ats_gtk_widget_get_composite_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_widget_get_composite_name"
fun fun_c2ats_gtk_widget_push_composite_child: () -> void = "mac#gtk_widget_push_composite_child"
fun fun_c2ats_gtk_widget_pop_composite_child: () -> void = "mac#gtk_widget_pop_composite_child"
fun fun_c2ats_gtk_widget_class_install_style_property: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetClass, l1), !ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_class_install_style_property"
fun fun_c2ats_gtk_widget_class_install_style_property_parser: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetClass, l1), !ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l1, ptr l2, type_c2ats_GtkRcPropertyParser) -> void = "mac#gtk_widget_class_install_style_property_parser"
fun fun_c2ats_gtk_widget_class_find_style_property: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetClass, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GParamSpec, l3) | ptr l3) = "mac#gtk_widget_class_find_style_property"
fun fun_c2ats_gtk_widget_class_list_style_properties: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetClass, l1), !ptr_v_1(type_c2ats_guint, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_GParamSpec, l3, l3_1) | ptr l3) = "mac#gtk_widget_class_list_style_properties"
fun fun_c2ats_gtk_widget_style_get_property: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_widget_style_get_property"
fun fun_c2ats_gtk_widget_style_get_valist: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_va_list) -> void = "mac#gtk_widget_style_get_valist"
fun fun_c2ats_gtk_widget_style_get: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_style_get"
fun fun_c2ats_gtk_widget_set_direction: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GtkTextDirection) -> void = "mac#gtk_widget_set_direction"
fun fun_c2ats_gtk_widget_get_direction: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_GtkTextDirection = "mac#gtk_widget_get_direction"
fun fun_c2ats_gtk_widget_set_default_direction: (type_c2ats_GtkTextDirection) -> void = "mac#gtk_widget_set_default_direction"
fun fun_c2ats_gtk_widget_get_default_direction: () -> type_c2ats_GtkTextDirection = "mac#gtk_widget_get_default_direction"
fun fun_c2ats_gtk_widget_is_composited: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_is_composited"
fun fun_c2ats_gtk_widget_shape_combine_region: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_shape_combine_region"
fun fun_c2ats_gtk_widget_input_shape_combine_region: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_cairo_region_t, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_input_shape_combine_region"
fun fun_c2ats_gtk_widget_list_mnemonic_labels: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_widget_list_mnemonic_labels"
fun fun_c2ats_gtk_widget_add_mnemonic_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_add_mnemonic_label"
fun fun_c2ats_gtk_widget_remove_mnemonic_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_remove_mnemonic_label"
fun fun_c2ats_gtk_widget_set_tooltip_window: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkWindow, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_set_tooltip_window"
fun fun_c2ats_gtk_widget_get_tooltip_window: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWindow, l2) | ptr l2) = "mac#gtk_widget_get_tooltip_window"
fun fun_c2ats_gtk_widget_trigger_tooltip_query: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_trigger_tooltip_query"
fun fun_c2ats_gtk_widget_set_tooltip_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_set_tooltip_text"
fun fun_c2ats_gtk_widget_get_tooltip_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_widget_get_tooltip_text"
fun fun_c2ats_gtk_widget_set_tooltip_markup: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_set_tooltip_markup"
fun fun_c2ats_gtk_widget_get_tooltip_markup: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_widget_get_tooltip_markup"
fun fun_c2ats_gtk_widget_set_has_tooltip: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_widget_set_has_tooltip"
fun fun_c2ats_gtk_widget_get_has_tooltip: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_get_has_tooltip"
fun fun_c2ats_gtk_cairo_should_draw_window: {l1,l2:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_cairo_should_draw_window"
fun fun_c2ats_gtk_cairo_transform_to_window: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_cairo_t, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GdkWindow, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_cairo_transform_to_window"
fun fun_c2ats_gtk_requisition_get_type: () -> type_c2ats_GType = "mac#gtk_requisition_get_type"
fun fun_c2ats_gtk_requisition_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkRequisition, l1) | ptr l1) = "mac#gtk_requisition_new"
fun fun_c2ats_gtk_requisition_copy: {l1:addr} (!ptr_v_1(type_c2ats_GtkRequisition, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkRequisition, l2) | ptr l2) = "mac#gtk_requisition_copy"
fun fun_c2ats_gtk_requisition_free: {l1:addr} (!ptr_v_1(type_c2ats_GtkRequisition, l1) | ptr l1) -> void = "mac#gtk_requisition_free"
fun fun_c2ats_gtk_widget_in_destruction: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_in_destruction"
fun fun_c2ats_gtk_widget_get_style_context: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStyleContext, l2) | ptr l2) = "mac#gtk_widget_get_style_context"
fun fun_c2ats_gtk_widget_get_path: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidgetPath, l2) | ptr l2) = "mac#gtk_widget_get_path"
fun fun_c2ats_gtk_widget_class_set_css_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetClass, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_class_set_css_name"
fun fun_c2ats_gtk_widget_class_get_css_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetClass, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#gtk_widget_class_get_css_name"
fun fun_c2ats_gtk_widget_get_modifier_mask: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GdkModifierIntent) -> type_c2ats_GdkModifierType = "mac#gtk_widget_get_modifier_mask"
fun fun_c2ats_gtk_widget_insert_action_group: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GActionGroup, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_widget_insert_action_group"
fun fun_c2ats_gtk_widget_add_tick_callback: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GtkTickCallback, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_guint = "mac#gtk_widget_add_tick_callback"
fun fun_c2ats_gtk_widget_remove_tick_callback: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_widget_remove_tick_callback"
fun fun_c2ats_gtk_widget_init_template: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_init_template"
fun fun_c2ats_gtk_widget_get_template_child: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GType, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GObject, l3) | ptr l3) = "mac#gtk_widget_get_template_child"
fun fun_c2ats_gtk_widget_class_set_template: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetClass, l1), !ptr_v_1(type_c2ats_GBytes, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_class_set_template"
fun fun_c2ats_gtk_widget_class_set_template_from_resource: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetClass, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_class_set_template_from_resource"
fun fun_c2ats_gtk_widget_class_bind_template_callback_full: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetClass, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GCallback) -> void = "mac#gtk_widget_class_bind_template_callback_full"
fun fun_c2ats_gtk_widget_class_set_connect_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetClass, l1) | ptr l1, type_c2ats_GtkBuilderConnectFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_widget_class_set_connect_func"
fun fun_c2ats_gtk_widget_class_bind_template_child_full: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetClass, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_gssize) -> void = "mac#gtk_widget_class_bind_template_child_full"
fun fun_c2ats_gtk_widget_get_action_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GActionGroup, l3) | ptr l3) = "mac#gtk_widget_get_action_group"
fun fun_c2ats_gtk_widget_list_action_prefixes: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#gtk_widget_list_action_prefixes"
fun fun_c2ats_gtk_widget_set_font_map: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_PangoFontMap, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_set_font_map"
fun fun_c2ats_gtk_widget_get_font_map: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontMap, l2) | ptr l2) = "mac#gtk_widget_get_font_map"
typedef type_c2ats_GtkWidget_autoptr = cPtr0(type_c2ats_GtkWidget)
fun fun_c2ats_glib_autoptr_cleanup_GtkWidget: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkWidget, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkWidget"
typedef type_c2ats_GtkRequisition_autoptr = cPtr0(type_c2ats_GtkRequisition)
fun fun_c2ats_glib_autoptr_cleanup_GtkRequisition: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkRequisition, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkRequisition"
// File: /usr/include/gtk-3.0/gtk/gtkapplication.h
abst@ype struct_c2ats__GtkApplication // FIXME! Forward declaration.
typedef type_c2ats_GtkApplication = struct_c2ats__GtkApplication
abst@ype struct_c2ats__GtkApplicationClass // FIXME! Forward declaration.
typedef type_c2ats_GtkApplicationClass = struct_c2ats__GtkApplicationClass
abst@ype struct_c2ats__GtkApplicationPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkApplicationPrivate = struct_c2ats__GtkApplicationPrivate
typedef struct_c2ats__GtkApplication = $extype_struct"struct _GtkApplication" of {
  parent = type_c2ats_GApplication,
  priv = ptr (* cPtr0(type_c2ats_GtkApplicationPrivate) *)
}
typedef struct_c2ats__GtkApplicationClass = $extype_struct"struct _GtkApplicationClass" of {
  parent_class = type_c2ats_GApplicationClass,
  window_added = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1), !ptr_v_1(type_c2ats_GtkWindow, l2) | ptr l1, ptr l2) -> void,
  window_removed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1), !ptr_v_1(type_c2ats_GtkWindow, l2) | ptr l1, ptr l2) -> void,
  padding = @[type_c2ats_gpointer][12]
}
fun fun_c2ats_gtk_application_get_type: () -> type_c2ats_GType = "mac#gtk_application_get_type"
fun fun_c2ats_gtk_application_new: (string, type_c2ats_GApplicationFlags) -> [l2:addr] (ptr_v_1(type_c2ats_GtkApplication, l2) | ptr l2) = "mac#gtk_application_new"
fun fun_c2ats_gtk_application_add_window: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1), !ptr_v_1(type_c2ats_GtkWindow, l2) | ptr l1, ptr l2) -> void = "mac#gtk_application_add_window"
fun fun_c2ats_gtk_application_remove_window: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1), !ptr_v_1(type_c2ats_GtkWindow, l2) | ptr l1, ptr l2) -> void = "mac#gtk_application_remove_window"
fun fun_c2ats_gtk_application_get_windows: {l1:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_application_get_windows"
fun fun_c2ats_gtk_application_get_app_menu: {l1:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMenuModel, l2) | ptr l2) = "mac#gtk_application_get_app_menu"
fun fun_c2ats_gtk_application_set_app_menu: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1), !ptr_v_1(type_c2ats_GMenuModel, l2) | ptr l1, ptr l2) -> void = "mac#gtk_application_set_app_menu"
fun fun_c2ats_gtk_application_get_menubar: {l1:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMenuModel, l2) | ptr l2) = "mac#gtk_application_get_menubar"
fun fun_c2ats_gtk_application_set_menubar: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1), !ptr_v_1(type_c2ats_GMenuModel, l2) | ptr l1, ptr l2) -> void = "mac#gtk_application_set_menubar"
fun fun_c2ats_gtk_application_add_accelerator: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GVariant, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_application_add_accelerator"
fun fun_c2ats_gtk_application_remove_accelerator: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GVariant, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_application_remove_accelerator"
typedef type_c2ats_GtkApplicationInhibitFlags = int
#define enum_c2ats_GTK_APPLICATION_INHIBIT_LOGOUT 1 << 0
#define enum_c2ats_GTK_APPLICATION_INHIBIT_SWITCH 1 << 1
#define enum_c2ats_GTK_APPLICATION_INHIBIT_SUSPEND 1 << 2
#define enum_c2ats_GTK_APPLICATION_INHIBIT_IDLE 1 << 3
fun fun_c2ats_gtk_application_inhibit: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1), !ptr_v_1(type_c2ats_GtkWindow, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, type_c2ats_GtkApplicationInhibitFlags, ptr l3) -> type_c2ats_guint = "mac#gtk_application_inhibit"
fun fun_c2ats_gtk_application_uninhibit: {l1:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_application_uninhibit"
fun fun_c2ats_gtk_application_is_inhibited: {l1:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1) | ptr l1, type_c2ats_GtkApplicationInhibitFlags) -> type_c2ats_gboolean = "mac#gtk_application_is_inhibited"
fun fun_c2ats_gtk_application_get_window_by_id: {l1:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWindow, l2) | ptr l2) = "mac#gtk_application_get_window_by_id"
fun fun_c2ats_gtk_application_get_active_window: {l1:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWindow, l2) | ptr l2) = "mac#gtk_application_get_active_window"
fun fun_c2ats_gtk_application_list_action_descriptions: {l1:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#gtk_application_list_action_descriptions"
fun fun_c2ats_gtk_application_get_accels_for_action: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#gtk_application_get_accels_for_action"
fun fun_c2ats_gtk_application_get_actions_for_accel: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#gtk_application_get_actions_for_accel"
fun fun_c2ats_gtk_application_set_accels_for_action: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_application_set_accels_for_action"
fun fun_c2ats_gtk_application_prefers_app_menu: {l1:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_application_prefers_app_menu"
fun fun_c2ats_gtk_application_get_menu_by_id: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GMenu, l3) | ptr l3) = "mac#gtk_application_get_menu_by_id"
typedef type_c2ats_GtkApplication_autoptr = cPtr0(type_c2ats_GtkApplication)
fun fun_c2ats_glib_autoptr_cleanup_GtkApplication: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkApplication, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkApplication"
// File: /usr/include/gtk-3.0/gtk/gtkcontainer.h
abst@ype struct_c2ats__GtkContainer // FIXME! Forward declaration.
typedef type_c2ats_GtkContainer = struct_c2ats__GtkContainer
abst@ype struct_c2ats__GtkContainerPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkContainerPrivate = struct_c2ats__GtkContainerPrivate
abst@ype struct_c2ats__GtkContainerClass // FIXME! Forward declaration.
typedef type_c2ats_GtkContainerClass = struct_c2ats__GtkContainerClass
typedef struct_c2ats__GtkContainer = $extype_struct"struct _GtkContainer" of {
  widget = type_c2ats_GtkWidget,
  priv = ptr (* cPtr0(type_c2ats_GtkContainerPrivate) *)
}
typedef struct_c2ats__GtkContainerClass = $extype_struct"struct _GtkContainerClass" of {
  parent_class = type_c2ats_GtkWidgetClass,
  add = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void,
  remove = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void,
  check_resize = {l1:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1) | ptr l1) -> void,
  forall = {l1:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1) | ptr l1, type_c2ats_gboolean, type_c2ats_GtkCallback, type_c2ats_gpointer) -> void,
  set_focus_child = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void,
  child_type = {l1:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1) | ptr l1) -> type_c2ats_GType,
  composite_name = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3),
  set_child_property = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GValue, l3), !ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, ptr l4) -> void,
  get_child_property = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GValue, l3), !ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, ptr l4) -> void,
  get_path_for_child = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidgetPath, l3) | ptr l3),
  _handle_border_width = uint,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void,
  _gtk_reserved6 = () -> void,
  _gtk_reserved7 = () -> void,
  _gtk_reserved8 = () -> void
}
typedef type_c2ats_GtkResizeMode = int
#define enum_c2ats_GTK_RESIZE_PARENT 0
#define enum_c2ats_GTK_RESIZE_QUEUE 1
#define enum_c2ats_GTK_RESIZE_IMMEDIATE 2
fun fun_c2ats_gtk_container_get_type: () -> type_c2ats_GType = "mac#gtk_container_get_type"
fun fun_c2ats_gtk_container_set_border_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_container_set_border_width"
fun fun_c2ats_gtk_container_get_border_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_container_get_border_width"
fun fun_c2ats_gtk_container_add: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_container_add"
fun fun_c2ats_gtk_container_remove: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_container_remove"
fun fun_c2ats_gtk_container_set_resize_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1) | ptr l1, type_c2ats_GtkResizeMode) -> void = "mac#gtk_container_set_resize_mode"
fun fun_c2ats_gtk_container_get_resize_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1) | ptr l1) -> type_c2ats_GtkResizeMode = "mac#gtk_container_get_resize_mode"
fun fun_c2ats_gtk_container_check_resize: {l1:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1) | ptr l1) -> void = "mac#gtk_container_check_resize"
fun fun_c2ats_gtk_container_foreach: {l1:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1) | ptr l1, type_c2ats_GtkCallback, type_c2ats_gpointer) -> void = "mac#gtk_container_foreach"
fun fun_c2ats_gtk_container_get_children: {l1:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_container_get_children"
fun fun_c2ats_gtk_container_propagate_draw: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_cairo_t, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_container_propagate_draw"
fun fun_c2ats_gtk_container_set_focus_chain: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GList, l2) | ptr l1, ptr l2) -> void = "mac#gtk_container_set_focus_chain"
fun fun_c2ats_gtk_container_get_focus_chain: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_2(type_c2ats_GList, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_container_get_focus_chain"
fun fun_c2ats_gtk_container_unset_focus_chain: {l1:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1) | ptr l1) -> void = "mac#gtk_container_unset_focus_chain"
fun fun_c2ats_gtk_container_set_reallocate_redraws: {l1:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_container_set_reallocate_redraws"
fun fun_c2ats_gtk_container_set_focus_child: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_container_set_focus_child"
fun fun_c2ats_gtk_container_get_focus_child: {l1:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_container_get_focus_child"
fun fun_c2ats_gtk_container_set_focus_vadjustment: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> void = "mac#gtk_container_set_focus_vadjustment"
fun fun_c2ats_gtk_container_get_focus_vadjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_container_get_focus_vadjustment"
fun fun_c2ats_gtk_container_set_focus_hadjustment: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> void = "mac#gtk_container_set_focus_hadjustment"
fun fun_c2ats_gtk_container_get_focus_hadjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_container_get_focus_hadjustment"
fun fun_c2ats_gtk_container_resize_children: {l1:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1) | ptr l1) -> void = "mac#gtk_container_resize_children"
fun fun_c2ats_gtk_container_child_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1) | ptr l1) -> type_c2ats_GType = "mac#gtk_container_child_type"
fun fun_c2ats_gtk_container_class_install_child_property: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkContainerClass, l1), !ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l1, type_c2ats_guint, ptr l2) -> void = "mac#gtk_container_class_install_child_property"
fun fun_c2ats_gtk_container_class_install_child_properties: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GtkContainerClass, l1), !ptr_v_2(type_c2ats_GParamSpec, l2, l2_1) | ptr l1, type_c2ats_guint, ptr l2) -> void = "mac#gtk_container_class_install_child_properties"
fun fun_c2ats_gtk_container_class_find_child_property: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObjectClass, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GParamSpec, l3) | ptr l3) = "mac#gtk_container_class_find_child_property"
fun fun_c2ats_gtk_container_class_list_child_properties: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObjectClass, l1), !ptr_v_1(type_c2ats_guint, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_GParamSpec, l3, l3_1) | ptr l3) = "mac#gtk_container_class_list_child_properties"
fun fun_c2ats_gtk_container_add_with_properties: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_container_add_with_properties"
fun fun_c2ats_gtk_container_child_set: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_container_child_set"
fun fun_c2ats_gtk_container_child_get: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_container_child_get"
fun fun_c2ats_gtk_container_child_set_valist: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_va_list) -> void = "mac#gtk_container_child_set_valist"
fun fun_c2ats_gtk_container_child_get_valist: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_va_list) -> void = "mac#gtk_container_child_get_valist"
fun fun_c2ats_gtk_container_child_set_property: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GValue, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_container_child_set_property"
fun fun_c2ats_gtk_container_child_get_property: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GValue, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_container_child_get_property"
fun fun_c2ats_gtk_container_child_notify: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_container_child_notify"
fun fun_c2ats_gtk_container_child_notify_by_pspec: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GParamSpec, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_container_child_notify_by_pspec"
fun fun_c2ats_gtk_container_forall: {l1:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1) | ptr l1, type_c2ats_GtkCallback, type_c2ats_gpointer) -> void = "mac#gtk_container_forall"
fun fun_c2ats_gtk_container_class_handle_border_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkContainerClass, l1) | ptr l1) -> void = "mac#gtk_container_class_handle_border_width"
fun fun_c2ats_gtk_container_get_path_for_child: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkContainer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidgetPath, l3) | ptr l3) = "mac#gtk_container_get_path_for_child"
typedef type_c2ats_GtkContainer_autoptr = cPtr0(type_c2ats_GtkContainer)
fun fun_c2ats_glib_autoptr_cleanup_GtkContainer: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkContainer, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkContainer"
// File: /usr/include/gtk-3.0/gtk/gtkbin.h
abst@ype struct_c2ats__GtkBin // FIXME! Forward declaration.
typedef type_c2ats_GtkBin = struct_c2ats__GtkBin
abst@ype struct_c2ats__GtkBinPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkBinPrivate = struct_c2ats__GtkBinPrivate
abst@ype struct_c2ats__GtkBinClass // FIXME! Forward declaration.
typedef type_c2ats_GtkBinClass = struct_c2ats__GtkBinClass
typedef struct_c2ats__GtkBin = $extype_struct"struct _GtkBin" of {
  container = type_c2ats_GtkContainer,
  priv = ptr (* cPtr0(type_c2ats_GtkBinPrivate) *)
}
typedef struct_c2ats__GtkBinClass = $extype_struct"struct _GtkBinClass" of {
  parent_class = type_c2ats_GtkContainerClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_bin_get_type: () -> type_c2ats_GType = "mac#gtk_bin_get_type"
fun fun_c2ats_gtk_bin_get_child: {l1:addr} (!ptr_v_1(type_c2ats_GtkBin, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_bin_get_child"
fun fun_c2ats__gtk_bin_set_child: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBin, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#_gtk_bin_set_child"
typedef type_c2ats_GtkBin_autoptr = cPtr0(type_c2ats_GtkBin)
fun fun_c2ats_glib_autoptr_cleanup_GtkBin: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkBin, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkBin"
// File: /usr/include/gtk-3.0/gtk/gtkwindow.h
abst@ype struct_c2ats__GtkWindowPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkWindowPrivate = struct_c2ats__GtkWindowPrivate
abst@ype struct_c2ats__GtkWindowClass // FIXME! Forward declaration.
typedef type_c2ats_GtkWindowClass = struct_c2ats__GtkWindowClass
abst@ype struct_c2ats__GtkWindowGeometryInfo // FIXME! Forward declaration.
typedef type_c2ats_GtkWindowGeometryInfo = struct_c2ats__GtkWindowGeometryInfo
abst@ype struct_c2ats__GtkWindowGroup // FIXME! Forward declaration.
typedef type_c2ats_GtkWindowGroup = struct_c2ats__GtkWindowGroup
abst@ype struct_c2ats__GtkWindowGroupClass // FIXME! Forward declaration.
typedef type_c2ats_GtkWindowGroupClass = struct_c2ats__GtkWindowGroupClass
abst@ype struct_c2ats__GtkWindowGroupPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkWindowGroupPrivate = struct_c2ats__GtkWindowGroupPrivate
typedef struct_c2ats__GtkWindow = $extype_struct"struct _GtkWindow" of {
  bin = type_c2ats_GtkBin,
  priv = ptr (* cPtr0(type_c2ats_GtkWindowPrivate) *)
}
typedef struct_c2ats__GtkWindowClass = $extype_struct"struct _GtkWindowClass" of {
  parent_class = type_c2ats_GtkBinClass,
  set_focus = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void,
  activate_focus = {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> void,
  activate_default = {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> void,
  keys_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> void,
  enable_debugging = {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gboolean) -> type_c2ats_gboolean,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void
}
typedef type_c2ats_GtkWindowType = int
#define enum_c2ats_GTK_WINDOW_TOPLEVEL 0
#define enum_c2ats_GTK_WINDOW_POPUP 1
typedef type_c2ats_GtkWindowPosition = int
#define enum_c2ats_GTK_WIN_POS_NONE 0
#define enum_c2ats_GTK_WIN_POS_CENTER 1
#define enum_c2ats_GTK_WIN_POS_MOUSE 2
#define enum_c2ats_GTK_WIN_POS_CENTER_ALWAYS 3
#define enum_c2ats_GTK_WIN_POS_CENTER_ON_PARENT 4
fun fun_c2ats_gtk_window_get_type: () -> type_c2ats_GType = "mac#gtk_window_get_type"
fun fun_c2ats_gtk_window_new: (type_c2ats_GtkWindowType) -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_window_new"
fun fun_c2ats_gtk_window_set_title: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, string) -> void = "mac#gtk_window_set_title"
fun fun_c2ats_gtk_window_get_title: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_window_get_title"
fun fun_c2ats_gtk_window_set_wmclass: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_window_set_wmclass"
fun fun_c2ats_gtk_window_set_role: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_window_set_role"
fun fun_c2ats_gtk_window_set_startup_id: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_window_set_startup_id"
fun fun_c2ats_gtk_window_get_role: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_window_get_role"
fun fun_c2ats_gtk_window_add_accel_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GtkAccelGroup, l2) | ptr l1, ptr l2) -> void = "mac#gtk_window_add_accel_group"
fun fun_c2ats_gtk_window_remove_accel_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GtkAccelGroup, l2) | ptr l1, ptr l2) -> void = "mac#gtk_window_remove_accel_group"
fun fun_c2ats_gtk_window_set_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_GtkWindowPosition) -> void = "mac#gtk_window_set_position"
fun fun_c2ats_gtk_window_activate_focus: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_activate_focus"
fun fun_c2ats_gtk_window_set_focus: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_window_set_focus"
fun fun_c2ats_gtk_window_get_focus: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_window_get_focus"
fun fun_c2ats_gtk_window_set_default: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_window_set_default"
fun fun_c2ats_gtk_window_get_default_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_window_get_default_widget"
fun fun_c2ats_gtk_window_activate_default: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_activate_default"
fun fun_c2ats_gtk_window_set_transient_for: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GtkWindow, l2) | ptr l1, ptr l2) -> void = "mac#gtk_window_set_transient_for"
fun fun_c2ats_gtk_window_get_transient_for: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWindow, l2) | ptr l2) = "mac#gtk_window_get_transient_for"
fun fun_c2ats_gtk_window_set_attached_to: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_window_set_attached_to"
fun fun_c2ats_gtk_window_get_attached_to: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_window_get_attached_to"
fun fun_c2ats_gtk_window_set_opacity: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_window_set_opacity"
fun fun_c2ats_gtk_window_get_opacity: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_window_get_opacity"
fun fun_c2ats_gtk_window_set_type_hint: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_GdkWindowTypeHint) -> void = "mac#gtk_window_set_type_hint"
fun fun_c2ats_gtk_window_get_type_hint: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_GdkWindowTypeHint = "mac#gtk_window_get_type_hint"
fun fun_c2ats_gtk_window_set_skip_taskbar_hint: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_window_set_skip_taskbar_hint"
fun fun_c2ats_gtk_window_get_skip_taskbar_hint: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_get_skip_taskbar_hint"
fun fun_c2ats_gtk_window_set_skip_pager_hint: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_window_set_skip_pager_hint"
fun fun_c2ats_gtk_window_get_skip_pager_hint: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_get_skip_pager_hint"
fun fun_c2ats_gtk_window_set_urgency_hint: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_window_set_urgency_hint"
fun fun_c2ats_gtk_window_get_urgency_hint: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_get_urgency_hint"
fun fun_c2ats_gtk_window_set_accept_focus: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_window_set_accept_focus"
fun fun_c2ats_gtk_window_get_accept_focus: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_get_accept_focus"
fun fun_c2ats_gtk_window_set_focus_on_map: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_window_set_focus_on_map"
fun fun_c2ats_gtk_window_get_focus_on_map: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_get_focus_on_map"
fun fun_c2ats_gtk_window_set_destroy_with_parent: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_window_set_destroy_with_parent"
fun fun_c2ats_gtk_window_get_destroy_with_parent: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_get_destroy_with_parent"
fun fun_c2ats_gtk_window_set_hide_titlebar_when_maximized: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_window_set_hide_titlebar_when_maximized"
fun fun_c2ats_gtk_window_get_hide_titlebar_when_maximized: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_get_hide_titlebar_when_maximized"
fun fun_c2ats_gtk_window_set_mnemonics_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_window_set_mnemonics_visible"
fun fun_c2ats_gtk_window_get_mnemonics_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_get_mnemonics_visible"
fun fun_c2ats_gtk_window_set_focus_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_window_set_focus_visible"
fun fun_c2ats_gtk_window_get_focus_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_get_focus_visible"
fun fun_c2ats_gtk_window_set_resizable: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_window_set_resizable"
fun fun_c2ats_gtk_window_get_resizable: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_get_resizable"
fun fun_c2ats_gtk_window_set_gravity: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_GdkGravity) -> void = "mac#gtk_window_set_gravity"
fun fun_c2ats_gtk_window_get_gravity: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_GdkGravity = "mac#gtk_window_get_gravity"
fun fun_c2ats_gtk_window_set_geometry_hints: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GdkGeometry, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GdkWindowHints) -> void = "mac#gtk_window_set_geometry_hints"
fun fun_c2ats_gtk_window_set_screen: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l1, ptr l2) -> void = "mac#gtk_window_set_screen"
fun fun_c2ats_gtk_window_get_screen: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l2) = "mac#gtk_window_get_screen"
fun fun_c2ats_gtk_window_is_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_is_active"
fun fun_c2ats_gtk_window_has_toplevel_focus: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_has_toplevel_focus"
fun fun_c2ats_gtk_window_set_decorated: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_window_set_decorated"
fun fun_c2ats_gtk_window_get_decorated: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_get_decorated"
fun fun_c2ats_gtk_window_set_deletable: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_window_set_deletable"
fun fun_c2ats_gtk_window_get_deletable: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_get_deletable"
fun fun_c2ats_gtk_window_set_icon_list: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GList, l2) | ptr l1, ptr l2) -> void = "mac#gtk_window_set_icon_list"
fun fun_c2ats_gtk_window_get_icon_list: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_window_get_icon_list"
fun fun_c2ats_gtk_window_set_icon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2) -> void = "mac#gtk_window_set_icon"
fun fun_c2ats_gtk_window_set_icon_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_window_set_icon_name"
fun fun_c2ats_gtk_window_set_icon_from_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_window_set_icon_from_file"
fun fun_c2ats_gtk_window_get_icon: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gtk_window_get_icon"
fun fun_c2ats_gtk_window_get_icon_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_window_get_icon_name"
fun fun_c2ats_gtk_window_set_default_icon_list: {l1:addr} (!ptr_v_1(type_c2ats_GList, l1) | ptr l1) -> void = "mac#gtk_window_set_default_icon_list"
fun fun_c2ats_gtk_window_get_default_icon_list: () -> [l1:addr] (ptr_v_1(type_c2ats_GList, l1) | ptr l1) = "mac#gtk_window_get_default_icon_list"
fun fun_c2ats_gtk_window_set_default_icon: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> void = "mac#gtk_window_set_default_icon"
fun fun_c2ats_gtk_window_set_default_icon_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#gtk_window_set_default_icon_name"
fun fun_c2ats_gtk_window_get_default_icon_name: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#gtk_window_get_default_icon_name"
fun fun_c2ats_gtk_window_set_default_icon_from_file: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_window_set_default_icon_from_file"
fun fun_c2ats_gtk_window_set_auto_startup_notification: (type_c2ats_gboolean) -> void = "mac#gtk_window_set_auto_startup_notification"
fun fun_c2ats_gtk_window_set_modal: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_window_set_modal"
fun fun_c2ats_gtk_window_get_modal: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_get_modal"
fun fun_c2ats_gtk_window_list_toplevels: () -> [l1:addr] (ptr_v_1(type_c2ats_GList, l1) | ptr l1) = "mac#gtk_window_list_toplevels"
fun fun_c2ats_gtk_window_set_has_user_ref_count: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_window_set_has_user_ref_count"
fun fun_c2ats_gtk_window_add_mnemonic: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, type_c2ats_guint, ptr l2) -> void = "mac#gtk_window_add_mnemonic"
fun fun_c2ats_gtk_window_remove_mnemonic: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, type_c2ats_guint, ptr l2) -> void = "mac#gtk_window_remove_mnemonic"
fun fun_c2ats_gtk_window_mnemonic_activate: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType) -> type_c2ats_gboolean = "mac#gtk_window_mnemonic_activate"
fun fun_c2ats_gtk_window_set_mnemonic_modifier: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_GdkModifierType) -> void = "mac#gtk_window_set_mnemonic_modifier"
fun fun_c2ats_gtk_window_get_mnemonic_modifier: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_GdkModifierType = "mac#gtk_window_get_mnemonic_modifier"
fun fun_c2ats_gtk_window_activate_key: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GdkEventKey, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_window_activate_key"
fun fun_c2ats_gtk_window_propagate_key_event: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GdkEventKey, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_window_propagate_key_event"
fun fun_c2ats_gtk_window_present: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> void = "mac#gtk_window_present"
fun fun_c2ats_gtk_window_present_with_time: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_guint32) -> void = "mac#gtk_window_present_with_time"
fun fun_c2ats_gtk_window_iconify: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> void = "mac#gtk_window_iconify"
fun fun_c2ats_gtk_window_deiconify: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> void = "mac#gtk_window_deiconify"
fun fun_c2ats_gtk_window_stick: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> void = "mac#gtk_window_stick"
fun fun_c2ats_gtk_window_unstick: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> void = "mac#gtk_window_unstick"
fun fun_c2ats_gtk_window_maximize: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> void = "mac#gtk_window_maximize"
fun fun_c2ats_gtk_window_unmaximize: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> void = "mac#gtk_window_unmaximize"
fun fun_c2ats_gtk_window_fullscreen: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> void = "mac#gtk_window_fullscreen"
fun fun_c2ats_gtk_window_unfullscreen: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> void = "mac#gtk_window_unfullscreen"
fun fun_c2ats_gtk_window_fullscreen_on_monitor: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_window_fullscreen_on_monitor"
fun fun_c2ats_gtk_window_close: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> void = "mac#gtk_window_close"
fun fun_c2ats_gtk_window_set_keep_above: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_window_set_keep_above"
fun fun_c2ats_gtk_window_set_keep_below: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_window_set_keep_below"
fun fun_c2ats_gtk_window_begin_resize_drag: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_GdkWindowEdge, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_guint32) -> void = "mac#gtk_window_begin_resize_drag"
fun fun_c2ats_gtk_window_begin_move_drag: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_guint32) -> void = "mac#gtk_window_begin_move_drag"
fun fun_c2ats_gtk_window_set_default_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_window_set_default_size"
fun fun_c2ats_gtk_window_get_default_size: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_window_get_default_size"
fun fun_c2ats_gtk_window_resize: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_window_resize"
fun fun_c2ats_gtk_window_get_size: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_window_get_size"
fun fun_c2ats_gtk_window_move: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_window_move"
fun fun_c2ats_gtk_window_get_position: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_window_get_position"
fun fun_c2ats_gtk_window_parse_geometry: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_window_parse_geometry"
fun fun_c2ats_gtk_window_set_default_geometry: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_window_set_default_geometry"
fun fun_c2ats_gtk_window_resize_to_geometry: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_window_resize_to_geometry"
fun fun_c2ats_gtk_window_get_group: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWindowGroup, l2) | ptr l2) = "mac#gtk_window_get_group"
fun fun_c2ats_gtk_window_has_group: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_has_group"
fun fun_c2ats_gtk_window_reshow_with_initial_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> void = "mac#gtk_window_reshow_with_initial_size"
fun fun_c2ats_gtk_window_get_window_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_GtkWindowType = "mac#gtk_window_get_window_type"
fun fun_c2ats_gtk_window_get_application: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkApplication, l2) | ptr l2) = "mac#gtk_window_get_application"
fun fun_c2ats_gtk_window_set_application: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GtkApplication, l2) | ptr l1, ptr l2) -> void = "mac#gtk_window_set_application"
fun fun_c2ats_gtk_window_set_has_resize_grip: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_window_set_has_resize_grip"
fun fun_c2ats_gtk_window_get_has_resize_grip: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_get_has_resize_grip"
fun fun_c2ats_gtk_window_resize_grip_is_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_resize_grip_is_visible"
fun fun_c2ats_gtk_window_get_resize_grip_area: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_window_get_resize_grip_area"
fun fun_c2ats_gtk_window_set_titlebar: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_window_set_titlebar"
fun fun_c2ats_gtk_window_get_titlebar: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_window_get_titlebar"
fun fun_c2ats_gtk_window_is_maximized: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_window_is_maximized"
fun fun_c2ats_gtk_window_set_interactive_debugging: (type_c2ats_gboolean) -> void = "mac#gtk_window_set_interactive_debugging"
typedef type_c2ats_GtkWindow_autoptr = cPtr0(type_c2ats_GtkWindow)
fun fun_c2ats_glib_autoptr_cleanup_GtkWindow: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkWindow, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkWindow"
typedef type_c2ats_GtkWindowGroup_autoptr = cPtr0(type_c2ats_GtkWindowGroup)
fun fun_c2ats_glib_autoptr_cleanup_GtkWindowGroup: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkWindowGroup, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkWindowGroup"
// File: /usr/include/gtk-3.0/gtk/gtkdialog.h
typedef type_c2ats_GtkDialogFlags = int
#define enum_c2ats_GTK_DIALOG_MODAL 1 << 0
#define enum_c2ats_GTK_DIALOG_DESTROY_WITH_PARENT 1 << 1
#define enum_c2ats_GTK_DIALOG_USE_HEADER_BAR 1 << 2
typedef type_c2ats_GtkResponseType = int
#define enum_c2ats_GTK_RESPONSE_NONE ~1
#define enum_c2ats_GTK_RESPONSE_REJECT ~2
#define enum_c2ats_GTK_RESPONSE_ACCEPT ~3
#define enum_c2ats_GTK_RESPONSE_DELETE_EVENT ~4
#define enum_c2ats_GTK_RESPONSE_OK ~5
#define enum_c2ats_GTK_RESPONSE_CANCEL ~6
#define enum_c2ats_GTK_RESPONSE_CLOSE ~7
#define enum_c2ats_GTK_RESPONSE_YES ~8
#define enum_c2ats_GTK_RESPONSE_NO ~9
#define enum_c2ats_GTK_RESPONSE_APPLY ~10
#define enum_c2ats_GTK_RESPONSE_HELP ~11
abst@ype struct_c2ats__GtkDialog // FIXME! Forward declaration.
typedef type_c2ats_GtkDialog = struct_c2ats__GtkDialog
abst@ype struct_c2ats__GtkDialogPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkDialogPrivate = struct_c2ats__GtkDialogPrivate
abst@ype struct_c2ats__GtkDialogClass // FIXME! Forward declaration.
typedef type_c2ats_GtkDialogClass = struct_c2ats__GtkDialogClass
typedef struct_c2ats__GtkDialog = $extype_struct"struct _GtkDialog" of {
  window = type_c2ats_GtkWindow,
  priv = ptr (* cPtr0(type_c2ats_GtkDialogPrivate) *)
}
typedef struct_c2ats__GtkDialogClass = $extype_struct"struct _GtkDialogClass" of {
  parent_class = type_c2ats_GtkWindowClass,
  response = {l1:addr} (!ptr_v_1(type_c2ats_GtkDialog, l1) | ptr l1, type_c2ats_gint) -> void,
  close = {l1:addr} (!ptr_v_1(type_c2ats_GtkDialog, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_dialog_get_type: () -> type_c2ats_GType = "mac#gtk_dialog_get_type"
fun fun_c2ats_gtk_dialog_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_dialog_new"
fun fun_c2ats_gtk_dialog_new_with_buttons: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GtkWindow, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, type_c2ats_GtkDialogFlags, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GtkWidget, l4) | ptr l4) = "mac#gtk_dialog_new_with_buttons"
fun fun_c2ats_gtk_dialog_add_action_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkDialog, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_dialog_add_action_widget"
fun fun_c2ats_gtk_dialog_add_button: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkDialog, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_dialog_add_button"
fun fun_c2ats_gtk_dialog_add_buttons: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkDialog, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_dialog_add_buttons"
fun fun_c2ats_gtk_dialog_set_response_sensitive: {l1:addr} (!ptr_v_1(type_c2ats_GtkDialog, l1) | ptr l1, type_c2ats_gint, type_c2ats_gboolean) -> void = "mac#gtk_dialog_set_response_sensitive"
fun fun_c2ats_gtk_dialog_set_default_response: {l1:addr} (!ptr_v_1(type_c2ats_GtkDialog, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_dialog_set_default_response"
fun fun_c2ats_gtk_dialog_get_widget_for_response: {l1:addr} (!ptr_v_1(type_c2ats_GtkDialog, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_dialog_get_widget_for_response"
fun fun_c2ats_gtk_dialog_get_response_for_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkDialog, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gtk_dialog_get_response_for_widget"
fun fun_c2ats_gtk_alternative_dialog_button_order: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_alternative_dialog_button_order"
fun fun_c2ats_gtk_dialog_set_alternative_button_order: {l1:addr} (!ptr_v_1(type_c2ats_GtkDialog, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_dialog_set_alternative_button_order"
fun fun_c2ats_gtk_dialog_set_alternative_button_order_from_array: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkDialog, l1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#gtk_dialog_set_alternative_button_order_from_array"
fun fun_c2ats_gtk_dialog_response: {l1:addr} (!ptr_v_1(type_c2ats_GtkDialog, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_dialog_response"
fun fun_c2ats_gtk_dialog_run: {l1:addr} (!ptr_v_1(type_c2ats_GtkDialog, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_dialog_run"
fun fun_c2ats_gtk_dialog_get_action_area: {l1:addr} (!ptr_v_1(type_c2ats_GtkDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_dialog_get_action_area"
fun fun_c2ats_gtk_dialog_get_content_area: {l1:addr} (!ptr_v_1(type_c2ats_GtkDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_dialog_get_content_area"
fun fun_c2ats_gtk_dialog_get_header_bar: {l1:addr} (!ptr_v_1(type_c2ats_GtkDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_dialog_get_header_bar"
typedef type_c2ats_GtkDialog_autoptr = cPtr0(type_c2ats_GtkDialog)
fun fun_c2ats_glib_autoptr_cleanup_GtkDialog: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkDialog, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkDialog"
// File: /usr/include/gtk-3.0/gtk/gtkaboutdialog.h
abst@ype struct_c2ats__GtkAboutDialog // FIXME! Forward declaration.
typedef type_c2ats_GtkAboutDialog = struct_c2ats__GtkAboutDialog
abst@ype struct_c2ats__GtkAboutDialogClass // FIXME! Forward declaration.
typedef type_c2ats_GtkAboutDialogClass = struct_c2ats__GtkAboutDialogClass
abst@ype struct_c2ats__GtkAboutDialogPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkAboutDialogPrivate = struct_c2ats__GtkAboutDialogPrivate
typedef type_c2ats_GtkLicense = int
#define enum_c2ats_GTK_LICENSE_UNKNOWN 0
#define enum_c2ats_GTK_LICENSE_CUSTOM 1
#define enum_c2ats_GTK_LICENSE_GPL_2_0 2
#define enum_c2ats_GTK_LICENSE_GPL_3_0 3
#define enum_c2ats_GTK_LICENSE_LGPL_2_1 4
#define enum_c2ats_GTK_LICENSE_LGPL_3_0 5
#define enum_c2ats_GTK_LICENSE_BSD 6
#define enum_c2ats_GTK_LICENSE_MIT_X11 7
#define enum_c2ats_GTK_LICENSE_ARTISTIC 8
#define enum_c2ats_GTK_LICENSE_GPL_2_0_ONLY 9
#define enum_c2ats_GTK_LICENSE_GPL_3_0_ONLY 10
#define enum_c2ats_GTK_LICENSE_LGPL_2_1_ONLY 11
#define enum_c2ats_GTK_LICENSE_LGPL_3_0_ONLY 12
#define enum_c2ats_GTK_LICENSE_AGPL_3_0 13
typedef struct_c2ats__GtkAboutDialog = $extype_struct"struct _GtkAboutDialog" of {
  parent_instance = type_c2ats_GtkDialog,
  priv = ptr (* cPtr0(type_c2ats_GtkAboutDialogPrivate) *)
}
typedef struct_c2ats__GtkAboutDialogClass = $extype_struct"struct _GtkAboutDialogClass" of {
  parent_class = type_c2ats_GtkDialogClass,
  activate_link = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_about_dialog_get_type: () -> type_c2ats_GType = "mac#gtk_about_dialog_get_type"
fun fun_c2ats_gtk_about_dialog_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_about_dialog_new"
fun fun_c2ats_gtk_show_about_dialog: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_show_about_dialog"
fun fun_c2ats_gtk_about_dialog_get_program_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_about_dialog_get_program_name"
fun fun_c2ats_gtk_about_dialog_set_program_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_about_dialog_set_program_name"
fun fun_c2ats_gtk_about_dialog_get_version: {l1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_about_dialog_get_version"
fun fun_c2ats_gtk_about_dialog_set_version: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_about_dialog_set_version"
fun fun_c2ats_gtk_about_dialog_get_copyright: {l1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_about_dialog_get_copyright"
fun fun_c2ats_gtk_about_dialog_set_copyright: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_about_dialog_set_copyright"
fun fun_c2ats_gtk_about_dialog_get_comments: {l1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_about_dialog_get_comments"
fun fun_c2ats_gtk_about_dialog_set_comments: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_about_dialog_set_comments"
fun fun_c2ats_gtk_about_dialog_get_license: {l1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_about_dialog_get_license"
fun fun_c2ats_gtk_about_dialog_set_license: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_about_dialog_set_license"
fun fun_c2ats_gtk_about_dialog_set_license_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1) | ptr l1, type_c2ats_GtkLicense) -> void = "mac#gtk_about_dialog_set_license_type"
fun fun_c2ats_gtk_about_dialog_get_license_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1) | ptr l1) -> type_c2ats_GtkLicense = "mac#gtk_about_dialog_get_license_type"
fun fun_c2ats_gtk_about_dialog_get_wrap_license: {l1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_about_dialog_get_wrap_license"
fun fun_c2ats_gtk_about_dialog_set_wrap_license: {l1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_about_dialog_set_wrap_license"
fun fun_c2ats_gtk_about_dialog_get_website: {l1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_about_dialog_get_website"
fun fun_c2ats_gtk_about_dialog_set_website: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_about_dialog_set_website"
fun fun_c2ats_gtk_about_dialog_get_website_label: {l1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_about_dialog_get_website_label"
fun fun_c2ats_gtk_about_dialog_set_website_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_about_dialog_set_website_label"
fun fun_c2ats_gtk_about_dialog_get_authors: {l1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#gtk_about_dialog_get_authors"
fun fun_c2ats_gtk_about_dialog_set_authors: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l1, ptr l2) -> void = "mac#gtk_about_dialog_set_authors"
fun fun_c2ats_gtk_about_dialog_get_documenters: {l1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#gtk_about_dialog_get_documenters"
fun fun_c2ats_gtk_about_dialog_set_documenters: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l1, ptr l2) -> void = "mac#gtk_about_dialog_set_documenters"
fun fun_c2ats_gtk_about_dialog_get_artists: {l1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#gtk_about_dialog_get_artists"
fun fun_c2ats_gtk_about_dialog_set_artists: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l1, ptr l2) -> void = "mac#gtk_about_dialog_set_artists"
fun fun_c2ats_gtk_about_dialog_get_translator_credits: {l1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_about_dialog_get_translator_credits"
fun fun_c2ats_gtk_about_dialog_set_translator_credits: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_about_dialog_set_translator_credits"
fun fun_c2ats_gtk_about_dialog_get_logo: {l1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gtk_about_dialog_get_logo"
fun fun_c2ats_gtk_about_dialog_set_logo: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2) -> void = "mac#gtk_about_dialog_set_logo"
fun fun_c2ats_gtk_about_dialog_get_logo_icon_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_about_dialog_get_logo_icon_name"
fun fun_c2ats_gtk_about_dialog_set_logo_icon_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_about_dialog_set_logo_icon_name"
fun fun_c2ats_gtk_about_dialog_add_credit_section: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkAboutDialog, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_about_dialog_add_credit_section"
typedef type_c2ats_GtkAboutDialog_autoptr = cPtr0(type_c2ats_GtkAboutDialog)
fun fun_c2ats_glib_autoptr_cleanup_GtkAboutDialog: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkAboutDialog, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkAboutDialog"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkmisc.h
abst@ype struct_c2ats__GtkMisc // FIXME! Forward declaration.
typedef type_c2ats_GtkMisc = struct_c2ats__GtkMisc
abst@ype struct_c2ats__GtkMiscPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkMiscPrivate = struct_c2ats__GtkMiscPrivate
abst@ype struct_c2ats__GtkMiscClass // FIXME! Forward declaration.
typedef type_c2ats_GtkMiscClass = struct_c2ats__GtkMiscClass
typedef struct_c2ats__GtkMisc = $extype_struct"struct _GtkMisc" of {
  widget = type_c2ats_GtkWidget,
  priv = ptr (* cPtr0(type_c2ats_GtkMiscPrivate) *)
}
typedef struct_c2ats__GtkMiscClass = $extype_struct"struct _GtkMiscClass" of {
  parent_class = type_c2ats_GtkWidgetClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_misc_get_type: () -> type_c2ats_GType = "mac#gtk_misc_get_type"
fun fun_c2ats_gtk_misc_set_alignment: {l1:addr} (!ptr_v_1(type_c2ats_GtkMisc, l1) | ptr l1, type_c2ats_gfloat, type_c2ats_gfloat) -> void = "mac#gtk_misc_set_alignment"
fun fun_c2ats_gtk_misc_get_alignment: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkMisc, l1), !ptr_v_1(type_c2ats_gfloat, l2), !ptr_v_1(type_c2ats_gfloat, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_misc_get_alignment"
fun fun_c2ats_gtk_misc_set_padding: {l1:addr} (!ptr_v_1(type_c2ats_GtkMisc, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_misc_set_padding"
fun fun_c2ats_gtk_misc_get_padding: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkMisc, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_misc_get_padding"
fun fun_c2ats__gtk_misc_get_padding_and_border: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMisc, l1), !ptr_v_1(type_c2ats_GtkBorder, l2) | ptr l1, ptr l2) -> void = "mac#_gtk_misc_get_padding_and_border"
// File: /usr/include/gtk-3.0/gtk/gtkmenushell.h
abst@ype struct_c2ats__GtkMenuShell // FIXME! Forward declaration.
typedef type_c2ats_GtkMenuShell = struct_c2ats__GtkMenuShell
abst@ype struct_c2ats__GtkMenuShellClass // FIXME! Forward declaration.
typedef type_c2ats_GtkMenuShellClass = struct_c2ats__GtkMenuShellClass
abst@ype struct_c2ats__GtkMenuShellPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkMenuShellPrivate = struct_c2ats__GtkMenuShellPrivate
typedef struct_c2ats__GtkMenuShell = $extype_struct"struct _GtkMenuShell" of {
  container = type_c2ats_GtkContainer,
  priv = ptr (* cPtr0(type_c2ats_GtkMenuShellPrivate) *)
}
typedef struct_c2ats__GtkMenuShellClass = $extype_struct"struct _GtkMenuShellClass" of {
  parent_class = type_c2ats_GtkContainerClass,
  submenu_placement = type_c2ats_guint,
  deactivate = {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1) | ptr l1) -> void,
  selection_done = {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1) | ptr l1) -> void,
  move_current = {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1) | ptr l1, type_c2ats_GtkMenuDirectionType) -> void,
  activate_current = {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1) | ptr l1, type_c2ats_gboolean) -> void,
  cancel = {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1) | ptr l1) -> void,
  select_item = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void,
  insert = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void,
  get_popup_delay = {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1) | ptr l1) -> type_c2ats_gint,
  move_selected = {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_menu_shell_get_type: () -> type_c2ats_GType = "mac#gtk_menu_shell_get_type"
fun fun_c2ats_gtk_menu_shell_append: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_shell_append"
fun fun_c2ats_gtk_menu_shell_prepend: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_shell_prepend"
fun fun_c2ats_gtk_menu_shell_insert: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_menu_shell_insert"
fun fun_c2ats_gtk_menu_shell_deactivate: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1) | ptr l1) -> void = "mac#gtk_menu_shell_deactivate"
fun fun_c2ats_gtk_menu_shell_select_item: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_shell_select_item"
fun fun_c2ats_gtk_menu_shell_deselect: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1) | ptr l1) -> void = "mac#gtk_menu_shell_deselect"
fun fun_c2ats_gtk_menu_shell_activate_item: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gtk_menu_shell_activate_item"
fun fun_c2ats_gtk_menu_shell_select_first: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_menu_shell_select_first"
fun fun_c2ats_gtk_menu_shell_cancel: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1) | ptr l1) -> void = "mac#gtk_menu_shell_cancel"
fun fun_c2ats_gtk_menu_shell_get_take_focus: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_menu_shell_get_take_focus"
fun fun_c2ats_gtk_menu_shell_set_take_focus: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_menu_shell_set_take_focus"
fun fun_c2ats_gtk_menu_shell_get_selected_item: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_menu_shell_get_selected_item"
fun fun_c2ats_gtk_menu_shell_get_parent_shell: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_menu_shell_get_parent_shell"
fun fun_c2ats_gtk_menu_shell_bind_model: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkMenuShell, l1), !ptr_v_1(type_c2ats_GMenuModel, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean) -> void = "mac#gtk_menu_shell_bind_model"
typedef type_c2ats_GtkMenuShell_autoptr = cPtr0(type_c2ats_GtkMenuShell)
fun fun_c2ats_glib_autoptr_cleanup_GtkMenuShell: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkMenuShell, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkMenuShell"
// File: /usr/include/gtk-3.0/gtk/gtkmenu.h
abst@ype struct_c2ats__GtkMenu // FIXME! Forward declaration.
typedef type_c2ats_GtkMenu = struct_c2ats__GtkMenu
abst@ype struct_c2ats__GtkMenuClass // FIXME! Forward declaration.
typedef type_c2ats_GtkMenuClass = struct_c2ats__GtkMenuClass
abst@ype struct_c2ats__GtkMenuPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkMenuPrivate = struct_c2ats__GtkMenuPrivate
typedef type_c2ats_GtkArrowPlacement = int
#define enum_c2ats_GTK_ARROWS_BOTH 0
#define enum_c2ats_GTK_ARROWS_START 1
#define enum_c2ats_GTK_ARROWS_END 2
typedef type_c2ats_GtkMenuPositionFunc = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gboolean, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gpointer) -> void
typedef type_c2ats_GtkMenuDetachFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkMenu, l2) | ptr l1, ptr l2) -> void
typedef struct_c2ats__GtkMenu = $extype_struct"struct _GtkMenu" of {
  menu_shell = type_c2ats_GtkMenuShell,
  priv = ptr (* cPtr0(type_c2ats_GtkMenuPrivate) *)
}
typedef struct_c2ats__GtkMenuClass = $extype_struct"struct _GtkMenuClass" of {
  parent_class = type_c2ats_GtkMenuShellClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_menu_get_type: () -> type_c2ats_GType = "mac#gtk_menu_get_type"
fun fun_c2ats_gtk_menu_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_menu_new"
fun fun_c2ats_gtk_menu_new_from_model: {l1:addr} (!ptr_v_1(type_c2ats_GMenuModel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_menu_new_from_model"
fun fun_c2ats_gtk_menu_popup: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GtkMenuPositionFunc, type_c2ats_gpointer, type_c2ats_guint, type_c2ats_guint32) -> void = "mac#gtk_menu_popup"
fun fun_c2ats_gtk_menu_popup_for_device: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1), !ptr_v_1(type_c2ats_GdkDevice, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_GtkWidget, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_GtkMenuPositionFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify, type_c2ats_guint, type_c2ats_guint32) -> void = "mac#gtk_menu_popup_for_device"
fun fun_c2ats_gtk_menu_popup_at_rect: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1), !ptr_v_1(type_c2ats_GdkWindow, l2), !ptr_v_1(type_c2ats_GdkRectangle, l3), !ptr_v_1(type_c2ats_GdkEvent, l4) | ptr l1, ptr l2, ptr l3, type_c2ats_GdkGravity, type_c2ats_GdkGravity, ptr l4) -> void = "mac#gtk_menu_popup_at_rect"
fun fun_c2ats_gtk_menu_popup_at_widget: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GdkEvent, l3) | ptr l1, ptr l2, type_c2ats_GdkGravity, type_c2ats_GdkGravity, ptr l3) -> void = "mac#gtk_menu_popup_at_widget"
fun fun_c2ats_gtk_menu_popup_at_pointer: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1), !ptr_v_1(type_c2ats_GdkEvent, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_popup_at_pointer"
fun fun_c2ats_gtk_menu_reposition: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1) | ptr l1) -> void = "mac#gtk_menu_reposition"
fun fun_c2ats_gtk_menu_popdown: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1) | ptr l1) -> void = "mac#gtk_menu_popdown"
fun fun_c2ats_gtk_menu_get_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_menu_get_active"
fun fun_c2ats_gtk_menu_set_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_menu_set_active"
fun fun_c2ats_gtk_menu_set_accel_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1), !ptr_v_1(type_c2ats_GtkAccelGroup, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_set_accel_group"
fun fun_c2ats_gtk_menu_get_accel_group: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAccelGroup, l2) | ptr l2) = "mac#gtk_menu_get_accel_group"
fun fun_c2ats_gtk_menu_set_accel_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_set_accel_path"
fun fun_c2ats_gtk_menu_get_accel_path: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_menu_get_accel_path"
fun fun_c2ats_gtk_menu_attach_to_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_GtkMenuDetachFunc) -> void = "mac#gtk_menu_attach_to_widget"
fun fun_c2ats_gtk_menu_detach: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1) | ptr l1) -> void = "mac#gtk_menu_detach"
fun fun_c2ats_gtk_menu_get_attach_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_menu_get_attach_widget"
fun fun_c2ats_gtk_menu_set_tearoff_state: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_menu_set_tearoff_state"
fun fun_c2ats_gtk_menu_get_tearoff_state: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_menu_get_tearoff_state"
fun fun_c2ats_gtk_menu_set_title: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_set_title"
fun fun_c2ats_gtk_menu_get_title: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_menu_get_title"
fun fun_c2ats_gtk_menu_reorder_child: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_menu_reorder_child"
fun fun_c2ats_gtk_menu_set_screen: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1), !ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_set_screen"
fun fun_c2ats_gtk_menu_attach: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_guint, type_c2ats_guint, type_c2ats_guint) -> void = "mac#gtk_menu_attach"
fun fun_c2ats_gtk_menu_set_monitor: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_menu_set_monitor"
fun fun_c2ats_gtk_menu_get_monitor: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_menu_get_monitor"
fun fun_c2ats_gtk_menu_place_on_monitor: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1), !ptr_v_1(type_c2ats_GdkMonitor, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_place_on_monitor"
fun fun_c2ats_gtk_menu_get_for_attach_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_menu_get_for_attach_widget"
fun fun_c2ats_gtk_menu_set_reserve_toggle_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_menu_set_reserve_toggle_size"
fun fun_c2ats_gtk_menu_get_reserve_toggle_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_menu_get_reserve_toggle_size"
typedef type_c2ats_GtkMenu_autoptr = cPtr0(type_c2ats_GtkMenu)
fun fun_c2ats_glib_autoptr_cleanup_GtkMenu: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkMenu, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkMenu"
// File: /usr/include/gtk-3.0/gtk/gtklabel.h
abst@ype struct_c2ats__GtkLabel // FIXME! Forward declaration.
typedef type_c2ats_GtkLabel = struct_c2ats__GtkLabel
abst@ype struct_c2ats__GtkLabelPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkLabelPrivate = struct_c2ats__GtkLabelPrivate
abst@ype struct_c2ats__GtkLabelClass // FIXME! Forward declaration.
typedef type_c2ats_GtkLabelClass = struct_c2ats__GtkLabelClass
abst@ype struct_c2ats__GtkLabelSelectionInfo // FIXME! Forward declaration.
typedef type_c2ats_GtkLabelSelectionInfo = struct_c2ats__GtkLabelSelectionInfo
typedef struct_c2ats__GtkLabel = $extype_struct"struct _GtkLabel" of {
  misc = type_c2ats_GtkMisc,
  priv = ptr (* cPtr0(type_c2ats_GtkLabelPrivate) *)
}
typedef struct_c2ats__GtkLabelClass = $extype_struct"struct _GtkLabelClass" of {
  parent_class = type_c2ats_GtkMiscClass,
  move_cursor = {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1, type_c2ats_GtkMovementStep, type_c2ats_gint, type_c2ats_gboolean) -> void,
  copy_clipboard = {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> void,
  populate_popup = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1), !ptr_v_1(type_c2ats_GtkMenu, l2) | ptr l1, ptr l2) -> void,
  activate_link = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void,
  _gtk_reserved6 = () -> void,
  _gtk_reserved7 = () -> void,
  _gtk_reserved8 = () -> void
}
fun fun_c2ats_gtk_label_get_type: () -> type_c2ats_GType = "mac#gtk_label_get_type"
fun fun_c2ats_gtk_label_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_label_new"
fun fun_c2ats_gtk_label_new_with_mnemonic: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_label_new_with_mnemonic"
fun fun_c2ats_gtk_label_set_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_label_set_text"
fun fun_c2ats_gtk_label_get_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_label_get_text"
fun fun_c2ats_gtk_label_set_attributes: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1), !ptr_v_1(type_c2ats_PangoAttrList, l2) | ptr l1, ptr l2) -> void = "mac#gtk_label_set_attributes"
fun fun_c2ats_gtk_label_get_attributes: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoAttrList, l2) | ptr l2) = "mac#gtk_label_get_attributes"
fun fun_c2ats_gtk_label_set_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_label_set_label"
fun fun_c2ats_gtk_label_get_label: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_label_get_label"
fun fun_c2ats_gtk_label_set_markup: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_label_set_markup"
fun fun_c2ats_gtk_label_set_use_markup: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_label_set_use_markup"
fun fun_c2ats_gtk_label_get_use_markup: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_label_get_use_markup"
fun fun_c2ats_gtk_label_set_use_underline: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_label_set_use_underline"
fun fun_c2ats_gtk_label_get_use_underline: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_label_get_use_underline"
fun fun_c2ats_gtk_label_set_markup_with_mnemonic: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_label_set_markup_with_mnemonic"
fun fun_c2ats_gtk_label_get_mnemonic_keyval: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_label_get_mnemonic_keyval"
fun fun_c2ats_gtk_label_set_mnemonic_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_label_set_mnemonic_widget"
fun fun_c2ats_gtk_label_get_mnemonic_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_label_get_mnemonic_widget"
fun fun_c2ats_gtk_label_set_text_with_mnemonic: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_label_set_text_with_mnemonic"
fun fun_c2ats_gtk_label_set_justify: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1, type_c2ats_GtkJustification) -> void = "mac#gtk_label_set_justify"
fun fun_c2ats_gtk_label_get_justify: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> type_c2ats_GtkJustification = "mac#gtk_label_get_justify"
fun fun_c2ats_gtk_label_set_ellipsize: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1, type_c2ats_PangoEllipsizeMode) -> void = "mac#gtk_label_set_ellipsize"
fun fun_c2ats_gtk_label_get_ellipsize: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> type_c2ats_PangoEllipsizeMode = "mac#gtk_label_get_ellipsize"
fun fun_c2ats_gtk_label_set_width_chars: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_label_set_width_chars"
fun fun_c2ats_gtk_label_get_width_chars: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_label_get_width_chars"
fun fun_c2ats_gtk_label_set_max_width_chars: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_label_set_max_width_chars"
fun fun_c2ats_gtk_label_get_max_width_chars: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_label_get_max_width_chars"
fun fun_c2ats_gtk_label_set_lines: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_label_set_lines"
fun fun_c2ats_gtk_label_get_lines: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_label_get_lines"
fun fun_c2ats_gtk_label_set_pattern: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_label_set_pattern"
fun fun_c2ats_gtk_label_set_line_wrap: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_label_set_line_wrap"
fun fun_c2ats_gtk_label_get_line_wrap: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_label_get_line_wrap"
fun fun_c2ats_gtk_label_set_line_wrap_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1, type_c2ats_PangoWrapMode) -> void = "mac#gtk_label_set_line_wrap_mode"
fun fun_c2ats_gtk_label_get_line_wrap_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> type_c2ats_PangoWrapMode = "mac#gtk_label_get_line_wrap_mode"
fun fun_c2ats_gtk_label_set_selectable: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_label_set_selectable"
fun fun_c2ats_gtk_label_get_selectable: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_label_get_selectable"
fun fun_c2ats_gtk_label_set_angle: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_label_set_angle"
fun fun_c2ats_gtk_label_get_angle: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_label_get_angle"
fun fun_c2ats_gtk_label_select_region: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_label_select_region"
fun fun_c2ats_gtk_label_get_selection_bounds: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_label_get_selection_bounds"
fun fun_c2ats_gtk_label_get_layout: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayout, l2) | ptr l2) = "mac#gtk_label_get_layout"
fun fun_c2ats_gtk_label_get_layout_offsets: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_label_get_layout_offsets"
fun fun_c2ats_gtk_label_set_single_line_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_label_set_single_line_mode"
fun fun_c2ats_gtk_label_get_single_line_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_label_get_single_line_mode"
fun fun_c2ats_gtk_label_get_current_uri: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_label_get_current_uri"
fun fun_c2ats_gtk_label_set_track_visited_links: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_label_set_track_visited_links"
fun fun_c2ats_gtk_label_get_track_visited_links: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_label_get_track_visited_links"
fun fun_c2ats_gtk_label_set_xalign: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1, type_c2ats_gfloat) -> void = "mac#gtk_label_set_xalign"
fun fun_c2ats_gtk_label_get_xalign: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> type_c2ats_gfloat = "mac#gtk_label_get_xalign"
fun fun_c2ats_gtk_label_set_yalign: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1, type_c2ats_gfloat) -> void = "mac#gtk_label_set_yalign"
fun fun_c2ats_gtk_label_get_yalign: {l1:addr} (!ptr_v_1(type_c2ats_GtkLabel, l1) | ptr l1) -> type_c2ats_gfloat = "mac#gtk_label_get_yalign"
typedef type_c2ats_GtkLabel_autoptr = cPtr0(type_c2ats_GtkLabel)
fun fun_c2ats_glib_autoptr_cleanup_GtkLabel: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkLabel, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkLabel"
// File: /usr/include/gtk-3.0/gtk/gtkaccellabel.h
abst@ype struct_c2ats__GtkAccelLabel // FIXME! Forward declaration.
typedef type_c2ats_GtkAccelLabel = struct_c2ats__GtkAccelLabel
abst@ype struct_c2ats__GtkAccelLabelClass // FIXME! Forward declaration.
typedef type_c2ats_GtkAccelLabelClass = struct_c2ats__GtkAccelLabelClass
abst@ype struct_c2ats__GtkAccelLabelPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkAccelLabelPrivate = struct_c2ats__GtkAccelLabelPrivate
typedef struct_c2ats__GtkAccelLabel = $extype_struct"struct _GtkAccelLabel" of {
  label = type_c2ats_GtkLabel,
  priv = ptr (* cPtr0(type_c2ats_GtkAccelLabelPrivate) *)
}
typedef struct_c2ats__GtkAccelLabelClass = $extype_struct"struct _GtkAccelLabelClass" of {
  parent_class = type_c2ats_GtkLabelClass,
  signal_quote1 = ptr (* cPtr0(type_c2ats_gchar) *),
  signal_quote2 = ptr (* cPtr0(type_c2ats_gchar) *),
  mod_name_shift = ptr (* cPtr0(type_c2ats_gchar) *),
  mod_name_control = ptr (* cPtr0(type_c2ats_gchar) *),
  mod_name_alt = ptr (* cPtr0(type_c2ats_gchar) *),
  mod_separator = ptr (* cPtr0(type_c2ats_gchar) *),
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_accel_label_get_type: () -> type_c2ats_GType = "mac#gtk_accel_label_get_type"
fun fun_c2ats_gtk_accel_label_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_accel_label_new"
fun fun_c2ats_gtk_accel_label_get_accel_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkAccelLabel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_accel_label_get_accel_widget"
fun fun_c2ats_gtk_accel_label_get_accel_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkAccelLabel, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_accel_label_get_accel_width"
fun fun_c2ats_gtk_accel_label_set_accel_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAccelLabel, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_accel_label_set_accel_widget"
fun fun_c2ats_gtk_accel_label_set_accel_closure: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAccelLabel, l1), !ptr_v_1(type_c2ats_GClosure, l2) | ptr l1, ptr l2) -> void = "mac#gtk_accel_label_set_accel_closure"
fun fun_c2ats_gtk_accel_label_refetch: {l1:addr} (!ptr_v_1(type_c2ats_GtkAccelLabel, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_accel_label_refetch"
fun fun_c2ats_gtk_accel_label_set_accel: {l1:addr} (!ptr_v_1(type_c2ats_GtkAccelLabel, l1) | ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType) -> void = "mac#gtk_accel_label_set_accel"
fun fun_c2ats_gtk_accel_label_get_accel: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkAccelLabel, l1), !ptr_v_1(type_c2ats_guint, l2), !ptr_v_1(type_c2ats_GdkModifierType, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_accel_label_get_accel"
fun fun_c2ats__gtk_accel_label_class_get_accelerator_label: {l1:addr} (!ptr_v_1(type_c2ats_GtkAccelLabelClass, l1) | ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#_gtk_accel_label_class_get_accelerator_label"
typedef type_c2ats_GtkAccelLabel_autoptr = cPtr0(type_c2ats_GtkAccelLabel)
fun fun_c2ats_glib_autoptr_cleanup_GtkAccelLabel: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkAccelLabel, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkAccelLabel"
// File: /usr/include/gtk-3.0/gtk/gtkaccelmap.h
abst@ype struct_c2ats__GtkAccelMap // FIXME! Forward declaration.
typedef type_c2ats_GtkAccelMap = struct_c2ats__GtkAccelMap
abst@ype struct_c2ats__GtkAccelMapClass // FIXME! Forward declaration.
typedef type_c2ats_GtkAccelMapClass = struct_c2ats__GtkAccelMapClass
typedef type_c2ats_GtkAccelMapForeach = {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_gpointer, ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType, type_c2ats_gboolean) -> void
fun fun_c2ats_gtk_accel_map_add_entry: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType) -> void = "mac#gtk_accel_map_add_entry"
fun fun_c2ats_gtk_accel_map_lookup_entry: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GtkAccelKey, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_accel_map_lookup_entry"
fun fun_c2ats_gtk_accel_map_change_entry: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gtk_accel_map_change_entry"
fun fun_c2ats_gtk_accel_map_load: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#gtk_accel_map_load"
fun fun_c2ats_gtk_accel_map_save: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#gtk_accel_map_save"
fun fun_c2ats_gtk_accel_map_foreach: (type_c2ats_gpointer, type_c2ats_GtkAccelMapForeach) -> void = "mac#gtk_accel_map_foreach"
fun fun_c2ats_gtk_accel_map_load_fd: (type_c2ats_gint) -> void = "mac#gtk_accel_map_load_fd"
fun fun_c2ats_gtk_accel_map_load_scanner: {l1:addr} (!ptr_v_1(type_c2ats_GScanner, l1) | ptr l1) -> void = "mac#gtk_accel_map_load_scanner"
fun fun_c2ats_gtk_accel_map_save_fd: (type_c2ats_gint) -> void = "mac#gtk_accel_map_save_fd"
fun fun_c2ats_gtk_accel_map_lock_path: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#gtk_accel_map_lock_path"
fun fun_c2ats_gtk_accel_map_unlock_path: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#gtk_accel_map_unlock_path"
fun fun_c2ats_gtk_accel_map_add_filter: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#gtk_accel_map_add_filter"
fun fun_c2ats_gtk_accel_map_foreach_unfiltered: (type_c2ats_gpointer, type_c2ats_GtkAccelMapForeach) -> void = "mac#gtk_accel_map_foreach_unfiltered"
fun fun_c2ats_gtk_accel_map_get_type: () -> type_c2ats_GType = "mac#gtk_accel_map_get_type"
fun fun_c2ats_gtk_accel_map_get: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkAccelMap, l1) | ptr l1) = "mac#gtk_accel_map_get"
typedef type_c2ats_GtkAccelMap_autoptr = cPtr0(type_c2ats_GtkAccelMap)
fun fun_c2ats_glib_autoptr_cleanup_GtkAccelMap: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkAccelMap, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkAccelMap"
// File: /usr/include/gtk-3.0/gtk/gtkaccessible.h
abst@ype struct_c2ats__GtkAccessible // FIXME! Forward declaration.
typedef type_c2ats_GtkAccessible = struct_c2ats__GtkAccessible
abst@ype struct_c2ats__GtkAccessiblePrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkAccessiblePrivate = struct_c2ats__GtkAccessiblePrivate
abst@ype struct_c2ats__GtkAccessibleClass // FIXME! Forward declaration.
typedef type_c2ats_GtkAccessibleClass = struct_c2ats__GtkAccessibleClass
typedef struct_c2ats__GtkAccessible = $extype_struct"struct _GtkAccessible" of {
  parent = type_c2ats_AtkObject,
  priv = ptr (* cPtr0(type_c2ats_GtkAccessiblePrivate) *)
}
typedef struct_c2ats__GtkAccessibleClass = $extype_struct"struct _GtkAccessibleClass" of {
  parent_class = type_c2ats_AtkObjectClass,
  connect_widget_destroyed = {l1:addr} (!ptr_v_1(type_c2ats_GtkAccessible, l1) | ptr l1) -> void,
  widget_set = {l1:addr} (!ptr_v_1(type_c2ats_GtkAccessible, l1) | ptr l1) -> void,
  widget_unset = {l1:addr} (!ptr_v_1(type_c2ats_GtkAccessible, l1) | ptr l1) -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_accessible_get_type: () -> type_c2ats_GType = "mac#gtk_accessible_get_type"
fun fun_c2ats_gtk_accessible_set_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAccessible, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_accessible_set_widget"
fun fun_c2ats_gtk_accessible_get_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkAccessible, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_accessible_get_widget"
fun fun_c2ats_gtk_accessible_connect_widget_destroyed: {l1:addr} (!ptr_v_1(type_c2ats_GtkAccessible, l1) | ptr l1) -> void = "mac#gtk_accessible_connect_widget_destroyed"
// File: /usr/include/gtk-3.0/gtk/gtkactionable.h
abst@ype struct_c2ats__GtkActionableInterface // FIXME! Forward declaration.
typedef type_c2ats_GtkActionableInterface = struct_c2ats__GtkActionableInterface
abst@ype struct_c2ats__GtkActionable // FIXME! Forward declaration.
typedef type_c2ats_GtkActionable = struct_c2ats__GtkActionable
typedef struct_c2ats__GtkActionableInterface = $extype_struct"struct _GtkActionableInterface" of {
  g_iface = type_c2ats_GTypeInterface,
  get_action_name = {l1:addr} (!ptr_v_1(type_c2ats_GtkActionable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  set_action_name = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionable, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  get_action_target_value = {l1:addr} (!ptr_v_1(type_c2ats_GtkActionable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2),
  set_action_target_value = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionable, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> void
}
fun fun_c2ats_gtk_actionable_get_type: () -> type_c2ats_GType = "mac#gtk_actionable_get_type"
fun fun_c2ats_gtk_actionable_get_action_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkActionable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_actionable_get_action_name"
fun fun_c2ats_gtk_actionable_set_action_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionable, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_actionable_set_action_name"
fun fun_c2ats_gtk_actionable_get_action_target_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkActionable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#gtk_actionable_get_action_target_value"
fun fun_c2ats_gtk_actionable_set_action_target_value: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionable, l1), !ptr_v_1(type_c2ats_GVariant, l2) | ptr l1, ptr l2) -> void = "mac#gtk_actionable_set_action_target_value"
fun fun_c2ats_gtk_actionable_set_action_target: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionable, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_actionable_set_action_target"
fun fun_c2ats_gtk_actionable_set_detailed_action_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionable, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_actionable_set_detailed_action_name"
// File: /usr/include/gtk-3.0/gtk/gtkactionbar.h
abst@ype struct_c2ats__GtkActionBar // FIXME! Forward declaration.
typedef type_c2ats_GtkActionBar = struct_c2ats__GtkActionBar
abst@ype struct_c2ats__GtkActionBarPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkActionBarPrivate = struct_c2ats__GtkActionBarPrivate
abst@ype struct_c2ats__GtkActionBarClass // FIXME! Forward declaration.
typedef type_c2ats_GtkActionBarClass = struct_c2ats__GtkActionBarClass
typedef struct_c2ats__GtkActionBar = $extype_struct"struct _GtkActionBar" of {
  bin = type_c2ats_GtkBin
}
typedef struct_c2ats__GtkActionBarClass = $extype_struct"struct _GtkActionBarClass" of {
  parent_class = type_c2ats_GtkBinClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_action_bar_get_type: () -> type_c2ats_GType = "mac#gtk_action_bar_get_type"
fun fun_c2ats_gtk_action_bar_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_action_bar_new"
fun fun_c2ats_gtk_action_bar_get_center_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkActionBar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_action_bar_get_center_widget"
fun fun_c2ats_gtk_action_bar_set_center_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionBar, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_action_bar_set_center_widget"
fun fun_c2ats_gtk_action_bar_pack_start: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionBar, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_action_bar_pack_start"
fun fun_c2ats_gtk_action_bar_pack_end: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionBar, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_action_bar_pack_end"
// File: /usr/include/gtk-3.0/gtk/gtkadjustment.h
abst@ype struct_c2ats__GtkAdjustmentPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkAdjustmentPrivate = struct_c2ats__GtkAdjustmentPrivate
abst@ype struct_c2ats__GtkAdjustmentClass // FIXME! Forward declaration.
typedef type_c2ats_GtkAdjustmentClass = struct_c2ats__GtkAdjustmentClass
typedef struct_c2ats__GtkAdjustment = $extype_struct"struct _GtkAdjustment" of {
  parent_instance = type_c2ats_GInitiallyUnowned,
  priv = ptr (* cPtr0(type_c2ats_GtkAdjustmentPrivate) *)
}
typedef struct_c2ats__GtkAdjustmentClass = $extype_struct"struct _GtkAdjustmentClass" of {
  parent_class = type_c2ats_GInitiallyUnownedClass,
  changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1) -> void,
  value_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_adjustment_get_type: () -> type_c2ats_GType = "mac#gtk_adjustment_get_type"
fun fun_c2ats_gtk_adjustment_new: (type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> [l1:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1) = "mac#gtk_adjustment_new"
fun fun_c2ats_gtk_adjustment_changed: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1) -> void = "mac#gtk_adjustment_changed"
fun fun_c2ats_gtk_adjustment_value_changed: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1) -> void = "mac#gtk_adjustment_value_changed"
fun fun_c2ats_gtk_adjustment_clamp_page: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_adjustment_clamp_page"
fun fun_c2ats_gtk_adjustment_get_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_adjustment_get_value"
fun fun_c2ats_gtk_adjustment_set_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_adjustment_set_value"
fun fun_c2ats_gtk_adjustment_get_lower: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_adjustment_get_lower"
fun fun_c2ats_gtk_adjustment_set_lower: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_adjustment_set_lower"
fun fun_c2ats_gtk_adjustment_get_upper: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_adjustment_get_upper"
fun fun_c2ats_gtk_adjustment_set_upper: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_adjustment_set_upper"
fun fun_c2ats_gtk_adjustment_get_step_increment: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_adjustment_get_step_increment"
fun fun_c2ats_gtk_adjustment_set_step_increment: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_adjustment_set_step_increment"
fun fun_c2ats_gtk_adjustment_get_page_increment: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_adjustment_get_page_increment"
fun fun_c2ats_gtk_adjustment_set_page_increment: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_adjustment_set_page_increment"
fun fun_c2ats_gtk_adjustment_get_page_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_adjustment_get_page_size"
fun fun_c2ats_gtk_adjustment_set_page_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_adjustment_set_page_size"
fun fun_c2ats_gtk_adjustment_configure: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_adjustment_configure"
fun fun_c2ats_gtk_adjustment_get_minimum_increment: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_adjustment_get_minimum_increment"
// File: /usr/include/gtk-3.0/gtk/gtkappchooser.h
abst@ype struct_c2ats__GtkAppChooser // FIXME! Forward declaration.
typedef type_c2ats_GtkAppChooser = struct_c2ats__GtkAppChooser
fun fun_c2ats_gtk_app_chooser_get_type: () -> type_c2ats_GType = "mac#gtk_app_chooser_get_type"
fun fun_c2ats_gtk_app_chooser_get_app_info: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GAppInfo, l2) | ptr l2) = "mac#gtk_app_chooser_get_app_info"
fun fun_c2ats_gtk_app_chooser_get_content_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_app_chooser_get_content_type"
fun fun_c2ats_gtk_app_chooser_refresh: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooser, l1) | ptr l1) -> void = "mac#gtk_app_chooser_refresh"
// File: /usr/include/gtk-3.0/gtk/gtkappchooserdialog.h
abst@ype struct_c2ats__GtkAppChooserDialog // FIXME! Forward declaration.
typedef type_c2ats_GtkAppChooserDialog = struct_c2ats__GtkAppChooserDialog
abst@ype struct_c2ats__GtkAppChooserDialogClass // FIXME! Forward declaration.
typedef type_c2ats_GtkAppChooserDialogClass = struct_c2ats__GtkAppChooserDialogClass
abst@ype struct_c2ats__GtkAppChooserDialogPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkAppChooserDialogPrivate = struct_c2ats__GtkAppChooserDialogPrivate
typedef struct_c2ats__GtkAppChooserDialog = $extype_struct"struct _GtkAppChooserDialog" of {
  parent = type_c2ats_GtkDialog,
  priv = ptr (* cPtr0(type_c2ats_GtkAppChooserDialogPrivate) *)
}
typedef struct_c2ats__GtkAppChooserDialogClass = $extype_struct"struct _GtkAppChooserDialogClass" of {
  parent_class = type_c2ats_GtkDialogClass,
  padding = @[type_c2ats_gpointer][16]
}
fun fun_c2ats_gtk_app_chooser_dialog_get_type: () -> type_c2ats_GType = "mac#gtk_app_chooser_dialog_get_type"
fun fun_c2ats_gtk_app_chooser_dialog_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GFile, l2) | ptr l1, type_c2ats_GtkDialogFlags, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_app_chooser_dialog_new"
fun fun_c2ats_gtk_app_chooser_dialog_new_for_content_type: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GtkDialogFlags, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_app_chooser_dialog_new_for_content_type"
fun fun_c2ats_gtk_app_chooser_dialog_get_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooserDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_app_chooser_dialog_get_widget"
fun fun_c2ats_gtk_app_chooser_dialog_set_heading: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAppChooserDialog, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_app_chooser_dialog_set_heading"
fun fun_c2ats_gtk_app_chooser_dialog_get_heading: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooserDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_app_chooser_dialog_get_heading"
// File: /usr/include/gtk-3.0/gtk/gtkbox.h
abst@ype struct_c2ats__GtkBox // FIXME! Forward declaration.
typedef type_c2ats_GtkBox = struct_c2ats__GtkBox
abst@ype struct_c2ats__GtkBoxPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkBoxPrivate = struct_c2ats__GtkBoxPrivate
abst@ype struct_c2ats__GtkBoxClass // FIXME! Forward declaration.
typedef type_c2ats_GtkBoxClass = struct_c2ats__GtkBoxClass
typedef struct_c2ats__GtkBox = $extype_struct"struct _GtkBox" of {
  container = type_c2ats_GtkContainer,
  priv = ptr (* cPtr0(type_c2ats_GtkBoxPrivate) *)
}
typedef struct_c2ats__GtkBoxClass = $extype_struct"struct _GtkBoxClass" of {
  parent_class = type_c2ats_GtkContainerClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_box_get_type: () -> type_c2ats_GType = "mac#gtk_box_get_type"
fun fun_c2ats_gtk_box_new: (type_c2ats_GtkOrientation, type_c2ats_gint) -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_box_new"
fun fun_c2ats_gtk_box_pack_start: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBox, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_gboolean, type_c2ats_guint) -> void = "mac#gtk_box_pack_start"
fun fun_c2ats_gtk_box_pack_end: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBox, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_gboolean, type_c2ats_guint) -> void = "mac#gtk_box_pack_end"
fun fun_c2ats_gtk_box_set_homogeneous: {l1:addr} (!ptr_v_1(type_c2ats_GtkBox, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_box_set_homogeneous"
fun fun_c2ats_gtk_box_get_homogeneous: {l1:addr} (!ptr_v_1(type_c2ats_GtkBox, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_box_get_homogeneous"
fun fun_c2ats_gtk_box_set_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkBox, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_box_set_spacing"
fun fun_c2ats_gtk_box_get_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkBox, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_box_get_spacing"
fun fun_c2ats_gtk_box_set_baseline_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkBox, l1) | ptr l1, type_c2ats_GtkBaselinePosition) -> void = "mac#gtk_box_set_baseline_position"
fun fun_c2ats_gtk_box_get_baseline_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkBox, l1) | ptr l1) -> type_c2ats_GtkBaselinePosition = "mac#gtk_box_get_baseline_position"
fun fun_c2ats_gtk_box_reorder_child: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBox, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_box_reorder_child"
fun fun_c2ats_gtk_box_query_child_packing: {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GtkBox, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gboolean, l3), !ptr_v_1(type_c2ats_gboolean, l4), !ptr_v_1(type_c2ats_guint, l5), !ptr_v_1(type_c2ats_GtkPackType, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> void = "mac#gtk_box_query_child_packing"
fun fun_c2ats_gtk_box_set_child_packing: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBox, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_gboolean, type_c2ats_guint, type_c2ats_GtkPackType) -> void = "mac#gtk_box_set_child_packing"
fun fun_c2ats_gtk_box_set_center_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBox, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_box_set_center_widget"
fun fun_c2ats_gtk_box_get_center_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkBox, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_box_get_center_widget"
// File: /usr/include/gtk-3.0/gtk/gtkappchooserwidget.h
abst@ype struct_c2ats__GtkAppChooserWidget // FIXME! Forward declaration.
typedef type_c2ats_GtkAppChooserWidget = struct_c2ats__GtkAppChooserWidget
abst@ype struct_c2ats__GtkAppChooserWidgetClass // FIXME! Forward declaration.
typedef type_c2ats_GtkAppChooserWidgetClass = struct_c2ats__GtkAppChooserWidgetClass
abst@ype struct_c2ats__GtkAppChooserWidgetPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkAppChooserWidgetPrivate = struct_c2ats__GtkAppChooserWidgetPrivate
typedef struct_c2ats__GtkAppChooserWidget = $extype_struct"struct _GtkAppChooserWidget" of {
  parent = type_c2ats_GtkBox,
  priv = ptr (* cPtr0(type_c2ats_GtkAppChooserWidgetPrivate) *)
}
typedef struct_c2ats__GtkAppChooserWidgetClass = $extype_struct"struct _GtkAppChooserWidgetClass" of {
  parent_class = type_c2ats_GtkBoxClass,
  application_selected = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAppChooserWidget, l1), !ptr_v_1(type_c2ats_GAppInfo, l2) | ptr l1, ptr l2) -> void,
  application_activated = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAppChooserWidget, l1), !ptr_v_1(type_c2ats_GAppInfo, l2) | ptr l1, ptr l2) -> void,
  populate_popup = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkAppChooserWidget, l1), !ptr_v_1(type_c2ats_GtkMenu, l2), !ptr_v_1(type_c2ats_GAppInfo, l3) | ptr l1, ptr l2, ptr l3) -> void,
  padding = @[type_c2ats_gpointer][16]
}
fun fun_c2ats_gtk_app_chooser_widget_get_type: () -> type_c2ats_GType = "mac#gtk_app_chooser_widget_get_type"
fun fun_c2ats_gtk_app_chooser_widget_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_app_chooser_widget_new"
fun fun_c2ats_gtk_app_chooser_widget_set_show_default: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooserWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_app_chooser_widget_set_show_default"
fun fun_c2ats_gtk_app_chooser_widget_get_show_default: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooserWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_app_chooser_widget_get_show_default"
fun fun_c2ats_gtk_app_chooser_widget_set_show_recommended: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooserWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_app_chooser_widget_set_show_recommended"
fun fun_c2ats_gtk_app_chooser_widget_get_show_recommended: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooserWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_app_chooser_widget_get_show_recommended"
fun fun_c2ats_gtk_app_chooser_widget_set_show_fallback: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooserWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_app_chooser_widget_set_show_fallback"
fun fun_c2ats_gtk_app_chooser_widget_get_show_fallback: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooserWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_app_chooser_widget_get_show_fallback"
fun fun_c2ats_gtk_app_chooser_widget_set_show_other: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooserWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_app_chooser_widget_set_show_other"
fun fun_c2ats_gtk_app_chooser_widget_get_show_other: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooserWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_app_chooser_widget_get_show_other"
fun fun_c2ats_gtk_app_chooser_widget_set_show_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooserWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_app_chooser_widget_set_show_all"
fun fun_c2ats_gtk_app_chooser_widget_get_show_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooserWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_app_chooser_widget_get_show_all"
fun fun_c2ats_gtk_app_chooser_widget_set_default_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAppChooserWidget, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_app_chooser_widget_set_default_text"
fun fun_c2ats_gtk_app_chooser_widget_get_default_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooserWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_app_chooser_widget_get_default_text"
// File: /usr/include/gtk-3.0/gtk/gtktreemodel.h
abst@ype struct_c2ats__GtkTreeIter // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeIter = struct_c2ats__GtkTreeIter
abst@ype struct_c2ats__GtkTreePath // FIXME! Forward declaration.
typedef type_c2ats_GtkTreePath = struct_c2ats__GtkTreePath
abst@ype struct_c2ats__GtkTreeRowReference // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeRowReference = struct_c2ats__GtkTreeRowReference
abst@ype struct_c2ats__GtkTreeModel // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeModel = struct_c2ats__GtkTreeModel
abst@ype struct_c2ats__GtkTreeModelIface // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeModelIface = struct_c2ats__GtkTreeModelIface
typedef type_c2ats_GtkTreeModelForeachFunc = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GtkTreeModelFlags = int
#define enum_c2ats_GTK_TREE_MODEL_ITERS_PERSIST 1 << 0
#define enum_c2ats_GTK_TREE_MODEL_LIST_ONLY 1 << 1
typedef struct_c2ats__GtkTreeIter = $extype_struct"struct _GtkTreeIter" of {
  stamp = type_c2ats_gint,
  user_data = type_c2ats_gpointer,
  user_data2 = type_c2ats_gpointer,
  user_data3 = type_c2ats_gpointer
}
typedef struct_c2ats__GtkTreeModelIface = $extype_struct"struct _GtkTreeModelIface" of {
  g_iface = type_c2ats_GTypeInterface,
  row_changed = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> void,
  row_inserted = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> void,
  row_has_child_toggled = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> void,
  row_deleted = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> void,
  rows_reordered = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void,
  get_flags = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1) | ptr l1) -> type_c2ats_GtkTreeModelFlags,
  get_n_columns = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1) | ptr l1) -> type_c2ats_gint,
  get_column_type = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_GType,
  get_iter = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreePath, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  get_path = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkTreePath, l3) | ptr l3),
  get_value = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_gint, ptr l3) -> void,
  iter_next = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  iter_previous = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  iter_children = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  iter_has_child = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  iter_n_children = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> type_c2ats_gint,
  iter_nth_child = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint) -> type_c2ats_gboolean,
  iter_parent = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  ref_node = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> void,
  unref_node = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> void
}
fun fun_c2ats_gtk_tree_path_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkTreePath, l1) | ptr l1) = "mac#gtk_tree_path_new"
fun fun_c2ats_gtk_tree_path_new_from_string: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l2) = "mac#gtk_tree_path_new_from_string"
fun fun_c2ats_gtk_tree_path_new_from_indices: (type_c2ats_gint) -> [l1:addr] (ptr_v_1(type_c2ats_GtkTreePath, l1) | ptr l1) = "mac#gtk_tree_path_new_from_indices"
fun fun_c2ats_gtk_tree_path_new_from_indicesv: {l1:addr} (!ptr_v_1(type_c2ats_gint, l1) | ptr l1, type_c2ats_gsize) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l2) = "mac#gtk_tree_path_new_from_indicesv"
fun fun_c2ats_gtk_tree_path_to_string: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreePath, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_tree_path_to_string"
fun fun_c2ats_gtk_tree_path_new_first: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkTreePath, l1) | ptr l1) = "mac#gtk_tree_path_new_first"
fun fun_c2ats_gtk_tree_path_append_index: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreePath, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_tree_path_append_index"
fun fun_c2ats_gtk_tree_path_prepend_index: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreePath, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_tree_path_prepend_index"
fun fun_c2ats_gtk_tree_path_get_depth: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreePath, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_tree_path_get_depth"
fun fun_c2ats_gtk_tree_path_get_indices: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreePath, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gint, l2) | ptr l2) = "mac#gtk_tree_path_get_indices"
fun fun_c2ats_gtk_tree_path_get_indices_with_depth: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreePath, l1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gint, l3) | ptr l3) = "mac#gtk_tree_path_get_indices_with_depth"
fun fun_c2ats_gtk_tree_path_free: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreePath, l1) | ptr l1) -> void = "mac#gtk_tree_path_free"
fun fun_c2ats_gtk_tree_path_copy: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreePath, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l2) = "mac#gtk_tree_path_copy"
fun fun_c2ats_gtk_tree_path_get_type: () -> type_c2ats_GType = "mac#gtk_tree_path_get_type"
fun fun_c2ats_gtk_tree_path_compare: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreePath, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gtk_tree_path_compare"
fun fun_c2ats_gtk_tree_path_next: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreePath, l1) | ptr l1) -> void = "mac#gtk_tree_path_next"
fun fun_c2ats_gtk_tree_path_prev: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreePath, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_path_prev"
fun fun_c2ats_gtk_tree_path_up: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreePath, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_path_up"
fun fun_c2ats_gtk_tree_path_down: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreePath, l1) | ptr l1) -> void = "mac#gtk_tree_path_down"
fun fun_c2ats_gtk_tree_path_is_ancestor: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreePath, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_tree_path_is_ancestor"
fun fun_c2ats_gtk_tree_path_is_descendant: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreePath, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_tree_path_is_descendant"
fun fun_c2ats_gtk_tree_row_reference_get_type: () -> type_c2ats_GType = "mac#gtk_tree_row_reference_get_type"
fun fun_c2ats_gtk_tree_row_reference_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkTreeRowReference, l3) | ptr l3) = "mac#gtk_tree_row_reference_new"
fun fun_c2ats_gtk_tree_row_reference_new_proxy: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_GtkTreeModel, l2), !ptr_v_1(type_c2ats_GtkTreePath, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GtkTreeRowReference, l4) | ptr l4) = "mac#gtk_tree_row_reference_new_proxy"
fun fun_c2ats_gtk_tree_row_reference_get_path: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeRowReference, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l2) = "mac#gtk_tree_row_reference_get_path"
fun fun_c2ats_gtk_tree_row_reference_get_model: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeRowReference, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeModel, l2) | ptr l2) = "mac#gtk_tree_row_reference_get_model"
fun fun_c2ats_gtk_tree_row_reference_valid: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeRowReference, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_row_reference_valid"
fun fun_c2ats_gtk_tree_row_reference_copy: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeRowReference, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeRowReference, l2) | ptr l2) = "mac#gtk_tree_row_reference_copy"
fun fun_c2ats_gtk_tree_row_reference_free: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeRowReference, l1) | ptr l1) -> void = "mac#gtk_tree_row_reference_free"
fun fun_c2ats_gtk_tree_row_reference_inserted: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_row_reference_inserted"
fun fun_c2ats_gtk_tree_row_reference_deleted: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_row_reference_deleted"
fun fun_c2ats_gtk_tree_row_reference_reordered: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_tree_row_reference_reordered"
fun fun_c2ats_gtk_tree_iter_copy: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l2) = "mac#gtk_tree_iter_copy"
fun fun_c2ats_gtk_tree_iter_free: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeIter, l1) | ptr l1) -> void = "mac#gtk_tree_iter_free"
fun fun_c2ats_gtk_tree_iter_get_type: () -> type_c2ats_GType = "mac#gtk_tree_iter_get_type"
fun fun_c2ats_gtk_tree_model_get_type: () -> type_c2ats_GType = "mac#gtk_tree_model_get_type"
fun fun_c2ats_gtk_tree_model_get_flags: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1) | ptr l1) -> type_c2ats_GtkTreeModelFlags = "mac#gtk_tree_model_get_flags"
fun fun_c2ats_gtk_tree_model_get_n_columns: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_tree_model_get_n_columns"
fun fun_c2ats_gtk_tree_model_get_column_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_GType = "mac#gtk_tree_model_get_column_type"
fun fun_c2ats_gtk_tree_model_get_iter: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreePath, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_tree_model_get_iter"
fun fun_c2ats_gtk_tree_model_get_iter_from_string: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_tree_model_get_iter_from_string"
fun fun_c2ats_gtk_tree_model_get_string_from_iter: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#gtk_tree_model_get_string_from_iter"
fun fun_c2ats_gtk_tree_model_get_iter_first: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_tree_model_get_iter_first"
fun fun_c2ats_gtk_tree_model_get_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkTreePath, l3) | ptr l3) = "mac#gtk_tree_model_get_path"
fun fun_c2ats_gtk_tree_model_get_value: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_gint, ptr l3) -> void = "mac#gtk_tree_model_get_value"
fun fun_c2ats_gtk_tree_model_iter_previous: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_tree_model_iter_previous"
fun fun_c2ats_gtk_tree_model_iter_next: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_tree_model_iter_next"
fun fun_c2ats_gtk_tree_model_iter_children: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_tree_model_iter_children"
fun fun_c2ats_gtk_tree_model_iter_has_child: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_tree_model_iter_has_child"
fun fun_c2ats_gtk_tree_model_iter_n_children: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gtk_tree_model_iter_n_children"
fun fun_c2ats_gtk_tree_model_iter_nth_child: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_tree_model_iter_nth_child"
fun fun_c2ats_gtk_tree_model_iter_parent: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_tree_model_iter_parent"
fun fun_c2ats_gtk_tree_model_ref_node: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_model_ref_node"
fun fun_c2ats_gtk_tree_model_unref_node: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_model_unref_node"
fun fun_c2ats_gtk_tree_model_get: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_model_get"
fun fun_c2ats_gtk_tree_model_get_valist: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2, type_c2ats_va_list) -> void = "mac#gtk_tree_model_get_valist"
fun fun_c2ats_gtk_tree_model_foreach: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1) | ptr l1, type_c2ats_GtkTreeModelForeachFunc, type_c2ats_gpointer) -> void = "mac#gtk_tree_model_foreach"
fun fun_c2ats_gtk_tree_model_row_changed: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_tree_model_row_changed"
fun fun_c2ats_gtk_tree_model_row_inserted: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_tree_model_row_inserted"
fun fun_c2ats_gtk_tree_model_row_has_child_toggled: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_tree_model_row_has_child_toggled"
fun fun_c2ats_gtk_tree_model_row_deleted: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_model_row_deleted"
fun fun_c2ats_gtk_tree_model_rows_reordered: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_tree_model_rows_reordered"
fun fun_c2ats_gtk_tree_model_rows_reordered_with_length: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gint) -> void = "mac#gtk_tree_model_rows_reordered_with_length"
// File: /usr/include/gtk-3.0/gtk/gtkcelleditable.h
abst@ype struct_c2ats__GtkCellEditable // FIXME! Forward declaration.
typedef type_c2ats_GtkCellEditable = struct_c2ats__GtkCellEditable
abst@ype struct_c2ats__GtkCellEditableIface // FIXME! Forward declaration.
typedef type_c2ats_GtkCellEditableIface = struct_c2ats__GtkCellEditableIface
typedef struct_c2ats__GtkCellEditableIface = $extype_struct"struct _GtkCellEditableIface" of {
  g_iface = type_c2ats_GTypeInterface,
  editing_done = {l1:addr} (!ptr_v_1(type_c2ats_GtkCellEditable, l1) | ptr l1) -> void,
  remove_widget = {l1:addr} (!ptr_v_1(type_c2ats_GtkCellEditable, l1) | ptr l1) -> void,
  start_editing = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellEditable, l1), !ptr_v_1(type_c2ats_GdkEvent, l2) | ptr l1, ptr l2) -> void
}
fun fun_c2ats_gtk_cell_editable_get_type: () -> type_c2ats_GType = "mac#gtk_cell_editable_get_type"
fun fun_c2ats_gtk_cell_editable_start_editing: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellEditable, l1), !ptr_v_1(type_c2ats_GdkEvent, l2) | ptr l1, ptr l2) -> void = "mac#gtk_cell_editable_start_editing"
fun fun_c2ats_gtk_cell_editable_editing_done: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellEditable, l1) | ptr l1) -> void = "mac#gtk_cell_editable_editing_done"
fun fun_c2ats_gtk_cell_editable_remove_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellEditable, l1) | ptr l1) -> void = "mac#gtk_cell_editable_remove_widget"
// File: /usr/include/gtk-3.0/gtk/gtkcellrenderer.h
typedef type_c2ats_GtkCellRendererState = int
#define enum_c2ats_GTK_CELL_RENDERER_SELECTED 1 << 0
#define enum_c2ats_GTK_CELL_RENDERER_PRELIT 1 << 1
#define enum_c2ats_GTK_CELL_RENDERER_INSENSITIVE 1 << 2
#define enum_c2ats_GTK_CELL_RENDERER_SORTED 1 << 3
#define enum_c2ats_GTK_CELL_RENDERER_FOCUSED 1 << 4
#define enum_c2ats_GTK_CELL_RENDERER_EXPANDABLE 1 << 5
#define enum_c2ats_GTK_CELL_RENDERER_EXPANDED 1 << 6
typedef type_c2ats_GtkCellRendererMode = int
#define enum_c2ats_GTK_CELL_RENDERER_MODE_INERT 0
#define enum_c2ats_GTK_CELL_RENDERER_MODE_ACTIVATABLE 1
#define enum_c2ats_GTK_CELL_RENDERER_MODE_EDITABLE 2
abst@ype struct_c2ats__GtkCellRenderer // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRenderer = struct_c2ats__GtkCellRenderer
abst@ype struct_c2ats__GtkCellRendererPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererPrivate = struct_c2ats__GtkCellRendererPrivate
abst@ype struct_c2ats__GtkCellRendererClass // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererClass = struct_c2ats__GtkCellRendererClass
abst@ype struct_c2ats__GtkCellRendererClassPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererClassPrivate = struct_c2ats__GtkCellRendererClassPrivate
typedef struct_c2ats__GtkCellRenderer = $extype_struct"struct _GtkCellRenderer" of {
  parent_instance = type_c2ats_GInitiallyUnowned,
  priv = ptr (* cPtr0(type_c2ats_GtkCellRendererPrivate) *)
}
typedef struct_c2ats__GtkCellRendererClass = $extype_struct"struct _GtkCellRendererClass" of {
  parent_class = type_c2ats_GInitiallyUnownedClass,
  get_request_mode = {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1) -> type_c2ats_GtkSizeRequestMode,
  get_preferred_width = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void,
  get_preferred_height_for_width = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, type_c2ats_gint, ptr l3, ptr l4) -> void,
  get_preferred_height = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void,
  get_preferred_width_for_height = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, type_c2ats_gint, ptr l3, ptr l4) -> void,
  get_aligned_area = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GdkRectangle, l3), !ptr_v_1(type_c2ats_GdkRectangle, l4) | ptr l1, ptr l2, type_c2ats_GtkCellRendererState, ptr l3, ptr l4) -> void,
  get_size = {l1,l2,l3,l4,l5,l6,l7:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GdkRectangle, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5), !ptr_v_1(type_c2ats_gint, l6), !ptr_v_1(type_c2ats_gint, l7) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7) -> void,
  render = {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_GdkRectangle, l4), !ptr_v_1(type_c2ats_GdkRectangle, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_GtkCellRendererState) -> void,
  activate = {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GdkEvent, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_GdkRectangle, l5), !ptr_v_1(type_c2ats_GdkRectangle, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, type_c2ats_GtkCellRendererState) -> type_c2ats_gboolean,
  start_editing = {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GdkEvent, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_GdkRectangle, l5), !ptr_v_1(type_c2ats_GdkRectangle, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, type_c2ats_GtkCellRendererState) -> [l7:addr] (ptr_v_1(type_c2ats_GtkCellEditable, l7) | ptr l7),
  editing_canceled = {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1) -> void,
  editing_started = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GtkCellEditable, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void,
  priv = ptr (* cPtr0(type_c2ats_GtkCellRendererClassPrivate) *),
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_cell_renderer_get_type: () -> type_c2ats_GType = "mac#gtk_cell_renderer_get_type"
fun fun_c2ats_gtk_cell_renderer_get_request_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1) -> type_c2ats_GtkSizeRequestMode = "mac#gtk_cell_renderer_get_request_mode"
fun fun_c2ats_gtk_cell_renderer_get_preferred_width: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_cell_renderer_get_preferred_width"
fun fun_c2ats_gtk_cell_renderer_get_preferred_height_for_width: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, type_c2ats_gint, ptr l3, ptr l4) -> void = "mac#gtk_cell_renderer_get_preferred_height_for_width"
fun fun_c2ats_gtk_cell_renderer_get_preferred_height: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_cell_renderer_get_preferred_height"
fun fun_c2ats_gtk_cell_renderer_get_preferred_width_for_height: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, type_c2ats_gint, ptr l3, ptr l4) -> void = "mac#gtk_cell_renderer_get_preferred_width_for_height"
fun fun_c2ats_gtk_cell_renderer_get_preferred_size: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GtkRequisition, l3), !ptr_v_1(type_c2ats_GtkRequisition, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_cell_renderer_get_preferred_size"
fun fun_c2ats_gtk_cell_renderer_get_aligned_area: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GdkRectangle, l3), !ptr_v_1(type_c2ats_GdkRectangle, l4) | ptr l1, ptr l2, type_c2ats_GtkCellRendererState, ptr l3, ptr l4) -> void = "mac#gtk_cell_renderer_get_aligned_area"
fun fun_c2ats_gtk_cell_renderer_get_size: {l1,l2,l3,l4,l5,l6,l7:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GdkRectangle, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5), !ptr_v_1(type_c2ats_gint, l6), !ptr_v_1(type_c2ats_gint, l7) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7) -> void = "mac#gtk_cell_renderer_get_size"
fun fun_c2ats_gtk_cell_renderer_render: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_GdkRectangle, l4), !ptr_v_1(type_c2ats_GdkRectangle, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_GtkCellRendererState) -> void = "mac#gtk_cell_renderer_render"
fun fun_c2ats_gtk_cell_renderer_activate: {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GdkEvent, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_GdkRectangle, l5), !ptr_v_1(type_c2ats_GdkRectangle, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, type_c2ats_GtkCellRendererState) -> type_c2ats_gboolean = "mac#gtk_cell_renderer_activate"
fun fun_c2ats_gtk_cell_renderer_start_editing: {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GdkEvent, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_GdkRectangle, l5), !ptr_v_1(type_c2ats_GdkRectangle, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, type_c2ats_GtkCellRendererState) -> [l7:addr] (ptr_v_1(type_c2ats_GtkCellEditable, l7) | ptr l7) = "mac#gtk_cell_renderer_start_editing"
fun fun_c2ats_gtk_cell_renderer_set_fixed_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_cell_renderer_set_fixed_size"
fun fun_c2ats_gtk_cell_renderer_get_fixed_size: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_cell_renderer_get_fixed_size"
fun fun_c2ats_gtk_cell_renderer_set_alignment: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1, type_c2ats_gfloat, type_c2ats_gfloat) -> void = "mac#gtk_cell_renderer_set_alignment"
fun fun_c2ats_gtk_cell_renderer_get_alignment: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_gfloat, l2), !ptr_v_1(type_c2ats_gfloat, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_cell_renderer_get_alignment"
fun fun_c2ats_gtk_cell_renderer_set_padding: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_cell_renderer_set_padding"
fun fun_c2ats_gtk_cell_renderer_get_padding: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_cell_renderer_get_padding"
fun fun_c2ats_gtk_cell_renderer_set_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_cell_renderer_set_visible"
fun fun_c2ats_gtk_cell_renderer_get_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_cell_renderer_get_visible"
fun fun_c2ats_gtk_cell_renderer_set_sensitive: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_cell_renderer_set_sensitive"
fun fun_c2ats_gtk_cell_renderer_get_sensitive: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_cell_renderer_get_sensitive"
fun fun_c2ats_gtk_cell_renderer_is_activatable: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_cell_renderer_is_activatable"
fun fun_c2ats_gtk_cell_renderer_stop_editing: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_cell_renderer_stop_editing"
fun fun_c2ats__gtk_cell_renderer_calc_offset: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, type_c2ats_GtkTextDirection, type_c2ats_gint, type_c2ats_gint, ptr l3, ptr l4) -> void = "mac#_gtk_cell_renderer_calc_offset"
fun fun_c2ats_gtk_cell_renderer_get_state: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_GtkCellRendererState) -> type_c2ats_GtkStateFlags = "mac#gtk_cell_renderer_get_state"
fun fun_c2ats_gtk_cell_renderer_class_set_accessible_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRendererClass, l1) | ptr l1, type_c2ats_GType) -> void = "mac#gtk_cell_renderer_class_set_accessible_type"
fun fun_c2ats__gtk_cell_renderer_get_accessible_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1) -> type_c2ats_GType = "mac#_gtk_cell_renderer_get_accessible_type"
// File: /usr/include/gtk-3.0/gtk/gtktreesortable.h
abst@ype struct_c2ats__GtkTreeSortable // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeSortable = struct_c2ats__GtkTreeSortable
abst@ype struct_c2ats__GtkTreeSortableIface // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeSortableIface = struct_c2ats__GtkTreeSortableIface
typedef type_c2ats_GtkTreeIterCompareFunc = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gpointer) -> type_c2ats_gint
typedef struct_c2ats__GtkTreeSortableIface = $extype_struct"struct _GtkTreeSortableIface" of {
  g_iface = type_c2ats_GTypeInterface,
  sort_column_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSortable, l1) | ptr l1) -> void,
  get_sort_column_id = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeSortable, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_GtkSortType, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  set_sort_column_id = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSortable, l1) | ptr l1, type_c2ats_gint, type_c2ats_GtkSortType) -> void,
  set_sort_func = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSortable, l1) | ptr l1, type_c2ats_gint, type_c2ats_GtkTreeIterCompareFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void,
  set_default_sort_func = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSortable, l1) | ptr l1, type_c2ats_GtkTreeIterCompareFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void,
  has_default_sort_func = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSortable, l1) | ptr l1) -> type_c2ats_gboolean
}
fun fun_c2ats_gtk_tree_sortable_get_type: () -> type_c2ats_GType = "mac#gtk_tree_sortable_get_type"
fun fun_c2ats_gtk_tree_sortable_sort_column_changed: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSortable, l1) | ptr l1) -> void = "mac#gtk_tree_sortable_sort_column_changed"
fun fun_c2ats_gtk_tree_sortable_get_sort_column_id: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeSortable, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_GtkSortType, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_tree_sortable_get_sort_column_id"
fun fun_c2ats_gtk_tree_sortable_set_sort_column_id: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSortable, l1) | ptr l1, type_c2ats_gint, type_c2ats_GtkSortType) -> void = "mac#gtk_tree_sortable_set_sort_column_id"
fun fun_c2ats_gtk_tree_sortable_set_sort_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSortable, l1) | ptr l1, type_c2ats_gint, type_c2ats_GtkTreeIterCompareFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_tree_sortable_set_sort_func"
fun fun_c2ats_gtk_tree_sortable_set_default_sort_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSortable, l1) | ptr l1, type_c2ats_GtkTreeIterCompareFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_tree_sortable_set_default_sort_func"
fun fun_c2ats_gtk_tree_sortable_has_default_sort_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSortable, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_sortable_has_default_sort_func"
// File: /usr/include/gtk-3.0/gtk/gtkcellarea.h
abst@ype struct_c2ats__GtkCellArea // FIXME! Forward declaration.
typedef type_c2ats_GtkCellArea = struct_c2ats__GtkCellArea
abst@ype struct_c2ats__GtkCellAreaClass // FIXME! Forward declaration.
typedef type_c2ats_GtkCellAreaClass = struct_c2ats__GtkCellAreaClass
abst@ype struct_c2ats__GtkCellAreaPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkCellAreaPrivate = struct_c2ats__GtkCellAreaPrivate
abst@ype struct_c2ats__GtkCellAreaContext // FIXME! Forward declaration.
typedef type_c2ats_GtkCellAreaContext = struct_c2ats__GtkCellAreaContext
typedef type_c2ats_GtkCellCallback = {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GtkCellAllocCallback = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellRenderer, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2), !ptr_v_1(type_c2ats_GdkRectangle, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef struct_c2ats__GtkCellArea = $extype_struct"struct _GtkCellArea" of {
  parent_instance = type_c2ats_GInitiallyUnowned,
  priv = ptr (* cPtr0(type_c2ats_GtkCellAreaPrivate) *)
}
typedef struct_c2ats__GtkCellAreaClass = $extype_struct"struct _GtkCellAreaClass" of {
  parent_class = type_c2ats_GInitiallyUnownedClass,
  add = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2) -> void,
  remove = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2) -> void,
  foreach = {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1, type_c2ats_GtkCellCallback, type_c2ats_gpointer) -> void,
  foreach_alloc = {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_GdkRectangle, l4), !ptr_v_1(type_c2ats_GdkRectangle, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_GtkCellAllocCallback, type_c2ats_gpointer) -> void,
  event = {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_GdkEvent, l4), !ptr_v_1(type_c2ats_GdkRectangle, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_GtkCellRendererState) -> type_c2ats_gint,
  render = {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_cairo_t, l4), !ptr_v_1(type_c2ats_GdkRectangle, l5), !ptr_v_1(type_c2ats_GdkRectangle, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, type_c2ats_GtkCellRendererState, type_c2ats_gboolean) -> void,
  apply_attributes = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkTreeModel, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean, type_c2ats_gboolean) -> void,
  create_context = {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellAreaContext, l2) | ptr l2),
  copy_context = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkCellAreaContext, l3) | ptr l3),
  get_request_mode = {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1) -> type_c2ats_GtkSizeRequestMode,
  get_preferred_width = {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void,
  get_preferred_height_for_width = {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, ptr l2, ptr l3, type_c2ats_gint, ptr l4, ptr l5) -> void,
  get_preferred_height = {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void,
  get_preferred_width_for_height = {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, ptr l2, ptr l3, type_c2ats_gint, ptr l4, ptr l5) -> void,
  set_cell_property = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_GValue, l3), !ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, ptr l4) -> void,
  get_cell_property = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_GValue, l3), !ptr_v_1(type_c2ats_GParamSpec, l4) | ptr l1, ptr l2, type_c2ats_guint, ptr l3, ptr l4) -> void,
  focus = {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1, type_c2ats_GtkDirectionType) -> type_c2ats_gboolean,
  is_activatable = {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1) -> type_c2ats_gboolean,
  activate = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_GdkRectangle, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_GtkCellRendererState, type_c2ats_gboolean) -> type_c2ats_gboolean,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void,
  _gtk_reserved6 = () -> void,
  _gtk_reserved7 = () -> void,
  _gtk_reserved8 = () -> void
}
fun fun_c2ats_gtk_cell_area_get_type: () -> type_c2ats_GType = "mac#gtk_cell_area_get_type"
fun fun_c2ats_gtk_cell_area_add: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2) -> void = "mac#gtk_cell_area_add"
fun fun_c2ats_gtk_cell_area_remove: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2) -> void = "mac#gtk_cell_area_remove"
fun fun_c2ats_gtk_cell_area_has_renderer: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_cell_area_has_renderer"
fun fun_c2ats_gtk_cell_area_foreach: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1, type_c2ats_GtkCellCallback, type_c2ats_gpointer) -> void = "mac#gtk_cell_area_foreach"
fun fun_c2ats_gtk_cell_area_foreach_alloc: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_GdkRectangle, l4), !ptr_v_1(type_c2ats_GdkRectangle, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_GtkCellAllocCallback, type_c2ats_gpointer) -> void = "mac#gtk_cell_area_foreach_alloc"
fun fun_c2ats_gtk_cell_area_event: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_GdkEvent, l4), !ptr_v_1(type_c2ats_GdkRectangle, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_GtkCellRendererState) -> type_c2ats_gint = "mac#gtk_cell_area_event"
fun fun_c2ats_gtk_cell_area_render: {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_cairo_t, l4), !ptr_v_1(type_c2ats_GdkRectangle, l5), !ptr_v_1(type_c2ats_GdkRectangle, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, type_c2ats_GtkCellRendererState, type_c2ats_gboolean) -> void = "mac#gtk_cell_area_render"
fun fun_c2ats_gtk_cell_area_get_cell_allocation: {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_GtkCellRenderer, l4), !ptr_v_1(type_c2ats_GdkRectangle, l5), !ptr_v_1(type_c2ats_GdkRectangle, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> void = "mac#gtk_cell_area_get_cell_allocation"
fun fun_c2ats_gtk_cell_area_get_cell_at_position: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_GdkRectangle, l4), !ptr_v_1(type_c2ats_GdkRectangle, l5) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GtkCellRenderer, l6) | ptr l6) = "mac#gtk_cell_area_get_cell_at_position"
fun fun_c2ats_gtk_cell_area_create_context: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellAreaContext, l2) | ptr l2) = "mac#gtk_cell_area_create_context"
fun fun_c2ats_gtk_cell_area_copy_context: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkCellAreaContext, l3) | ptr l3) = "mac#gtk_cell_area_copy_context"
fun fun_c2ats_gtk_cell_area_get_request_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1) -> type_c2ats_GtkSizeRequestMode = "mac#gtk_cell_area_get_request_mode"
fun fun_c2ats_gtk_cell_area_get_preferred_width: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void = "mac#gtk_cell_area_get_preferred_width"
fun fun_c2ats_gtk_cell_area_get_preferred_height_for_width: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, ptr l2, ptr l3, type_c2ats_gint, ptr l4, ptr l5) -> void = "mac#gtk_cell_area_get_preferred_height_for_width"
fun fun_c2ats_gtk_cell_area_get_preferred_height: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void = "mac#gtk_cell_area_get_preferred_height"
fun fun_c2ats_gtk_cell_area_get_preferred_width_for_height: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, ptr l2, ptr l3, type_c2ats_gint, ptr l4, ptr l5) -> void = "mac#gtk_cell_area_get_preferred_width_for_height"
fun fun_c2ats_gtk_cell_area_get_current_path_string: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_cell_area_get_current_path_string"
fun fun_c2ats_gtk_cell_area_apply_attributes: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkTreeModel, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean, type_c2ats_gboolean) -> void = "mac#gtk_cell_area_apply_attributes"
fun fun_c2ats_gtk_cell_area_attribute_connect: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint) -> void = "mac#gtk_cell_area_attribute_connect"
fun fun_c2ats_gtk_cell_area_attribute_disconnect: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_cell_area_attribute_disconnect"
fun fun_c2ats_gtk_cell_area_attribute_get_column: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gint = "mac#gtk_cell_area_attribute_get_column"
fun fun_c2ats_gtk_cell_area_class_install_cell_property: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellAreaClass, l1), !ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l1, type_c2ats_guint, ptr l2) -> void = "mac#gtk_cell_area_class_install_cell_property"
fun fun_c2ats_gtk_cell_area_class_find_cell_property: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellAreaClass, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GParamSpec, l3) | ptr l3) = "mac#gtk_cell_area_class_find_cell_property"
fun fun_c2ats_gtk_cell_area_class_list_cell_properties: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellAreaClass, l1), !ptr_v_1(type_c2ats_guint, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_GParamSpec, l3, l3_1) | ptr l3) = "mac#gtk_cell_area_class_list_cell_properties"
fun fun_c2ats_gtk_cell_area_add_with_properties: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_cell_area_add_with_properties"
fun fun_c2ats_gtk_cell_area_cell_set: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_cell_area_cell_set"
fun fun_c2ats_gtk_cell_area_cell_get: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_cell_area_cell_get"
fun fun_c2ats_gtk_cell_area_cell_set_valist: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_va_list) -> void = "mac#gtk_cell_area_cell_set_valist"
fun fun_c2ats_gtk_cell_area_cell_get_valist: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_va_list) -> void = "mac#gtk_cell_area_cell_get_valist"
fun fun_c2ats_gtk_cell_area_cell_set_property: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GValue, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_cell_area_cell_set_property"
fun fun_c2ats_gtk_cell_area_cell_get_property: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GValue, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_cell_area_cell_get_property"
fun fun_c2ats_gtk_cell_area_is_activatable: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_cell_area_is_activatable"
fun fun_c2ats_gtk_cell_area_activate: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_GdkRectangle, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_GtkCellRendererState, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gtk_cell_area_activate"
fun fun_c2ats_gtk_cell_area_focus: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1, type_c2ats_GtkDirectionType) -> type_c2ats_gboolean = "mac#gtk_cell_area_focus"
fun fun_c2ats_gtk_cell_area_set_focus_cell: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2) -> void = "mac#gtk_cell_area_set_focus_cell"
fun fun_c2ats_gtk_cell_area_get_focus_cell: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l2) = "mac#gtk_cell_area_get_focus_cell"
fun fun_c2ats_gtk_cell_area_add_focus_sibling: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_GtkCellRenderer, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_cell_area_add_focus_sibling"
fun fun_c2ats_gtk_cell_area_remove_focus_sibling: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_GtkCellRenderer, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_cell_area_remove_focus_sibling"
fun fun_c2ats_gtk_cell_area_is_focus_sibling: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_GtkCellRenderer, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_cell_area_is_focus_sibling"
fun fun_c2ats_gtk_cell_area_get_focus_siblings: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GList, l3) | ptr l3) = "mac#gtk_cell_area_get_focus_siblings"
fun fun_c2ats_gtk_cell_area_get_focus_from_sibling: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkCellRenderer, l3) | ptr l3) = "mac#gtk_cell_area_get_focus_from_sibling"
fun fun_c2ats_gtk_cell_area_get_edited_cell: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l2) = "mac#gtk_cell_area_get_edited_cell"
fun fun_c2ats_gtk_cell_area_get_edit_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellEditable, l2) | ptr l2) = "mac#gtk_cell_area_get_edit_widget"
fun fun_c2ats_gtk_cell_area_activate_cell: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GtkCellRenderer, l3), !ptr_v_1(type_c2ats_GdkEvent, l4), !ptr_v_1(type_c2ats_GdkRectangle, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_GtkCellRendererState) -> type_c2ats_gboolean = "mac#gtk_cell_area_activate_cell"
fun fun_c2ats_gtk_cell_area_stop_editing: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_cell_area_stop_editing"
fun fun_c2ats_gtk_cell_area_inner_cell_area: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GdkRectangle, l3), !ptr_v_1(type_c2ats_GdkRectangle, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_cell_area_inner_cell_area"
fun fun_c2ats_gtk_cell_area_request_renderer: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, ptr l2, type_c2ats_GtkOrientation, ptr l3, type_c2ats_gint, ptr l4, ptr l5) -> void = "mac#gtk_cell_area_request_renderer"
fun fun_c2ats__gtk_cell_area_set_cell_data_func_with_proxy: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2, type_c2ats_GFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify, type_c2ats_gpointer) -> void = "mac#_gtk_cell_area_set_cell_data_func_with_proxy"
// File: /usr/include/gtk-3.0/gtk/gtktreeviewcolumn.h
abst@ype struct_c2ats__GtkTreeViewColumn // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeViewColumn = struct_c2ats__GtkTreeViewColumn
abst@ype struct_c2ats__GtkTreeViewColumnClass // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeViewColumnClass = struct_c2ats__GtkTreeViewColumnClass
abst@ype struct_c2ats__GtkTreeViewColumnPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeViewColumnPrivate = struct_c2ats__GtkTreeViewColumnPrivate
typedef type_c2ats_GtkTreeViewColumnSizing = int
#define enum_c2ats_GTK_TREE_VIEW_COLUMN_GROW_ONLY 0
#define enum_c2ats_GTK_TREE_VIEW_COLUMN_AUTOSIZE 1
#define enum_c2ats_GTK_TREE_VIEW_COLUMN_FIXED 2
typedef type_c2ats_GtkTreeCellDataFunc = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_GtkTreeModel, l3), !ptr_v_1(type_c2ats_GtkTreeIter, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gpointer) -> void
typedef struct_c2ats__GtkTreeViewColumn = $extype_struct"struct _GtkTreeViewColumn" of {
  parent_instance = type_c2ats_GInitiallyUnowned,
  priv = ptr (* cPtr0(type_c2ats_GtkTreeViewColumnPrivate) *)
}
typedef struct_c2ats__GtkTreeViewColumnClass = $extype_struct"struct _GtkTreeViewColumnClass" of {
  parent_class = type_c2ats_GInitiallyUnownedClass,
  clicked = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_tree_view_column_get_type: () -> type_c2ats_GType = "mac#gtk_tree_view_column_get_type"
fun fun_c2ats_gtk_tree_view_column_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) = "mac#gtk_tree_view_column_new"
fun fun_c2ats_gtk_tree_view_column_new_with_area: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeViewColumn, l2) | ptr l2) = "mac#gtk_tree_view_column_new_with_area"
fun fun_c2ats_gtk_tree_view_column_new_with_attributes: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkTreeViewColumn, l3) | ptr l3) = "mac#gtk_tree_view_column_new_with_attributes"
fun fun_c2ats_gtk_tree_view_column_pack_start: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_column_pack_start"
fun fun_c2ats_gtk_tree_view_column_pack_end: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_column_pack_end"
fun fun_c2ats_gtk_tree_view_column_clear: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> void = "mac#gtk_tree_view_column_clear"
fun fun_c2ats_gtk_tree_view_column_add_attribute: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint) -> void = "mac#gtk_tree_view_column_add_attribute"
fun fun_c2ats_gtk_tree_view_column_set_attributes: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_view_column_set_attributes"
fun fun_c2ats_gtk_tree_view_column_set_cell_data_func: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2, type_c2ats_GtkTreeCellDataFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_tree_view_column_set_cell_data_func"
fun fun_c2ats_gtk_tree_view_column_clear_attributes: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_view_column_clear_attributes"
fun fun_c2ats_gtk_tree_view_column_set_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_tree_view_column_set_spacing"
fun fun_c2ats_gtk_tree_view_column_get_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_tree_view_column_get_spacing"
fun fun_c2ats_gtk_tree_view_column_set_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_column_set_visible"
fun fun_c2ats_gtk_tree_view_column_get_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_column_get_visible"
fun fun_c2ats_gtk_tree_view_column_set_resizable: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_column_set_resizable"
fun fun_c2ats_gtk_tree_view_column_get_resizable: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_column_get_resizable"
fun fun_c2ats_gtk_tree_view_column_set_sizing: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1, type_c2ats_GtkTreeViewColumnSizing) -> void = "mac#gtk_tree_view_column_set_sizing"
fun fun_c2ats_gtk_tree_view_column_get_sizing: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> type_c2ats_GtkTreeViewColumnSizing = "mac#gtk_tree_view_column_get_sizing"
fun fun_c2ats_gtk_tree_view_column_get_x_offset: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_tree_view_column_get_x_offset"
fun fun_c2ats_gtk_tree_view_column_get_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_tree_view_column_get_width"
fun fun_c2ats_gtk_tree_view_column_get_fixed_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_tree_view_column_get_fixed_width"
fun fun_c2ats_gtk_tree_view_column_set_fixed_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_tree_view_column_set_fixed_width"
fun fun_c2ats_gtk_tree_view_column_set_min_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_tree_view_column_set_min_width"
fun fun_c2ats_gtk_tree_view_column_get_min_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_tree_view_column_get_min_width"
fun fun_c2ats_gtk_tree_view_column_set_max_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_tree_view_column_set_max_width"
fun fun_c2ats_gtk_tree_view_column_get_max_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_tree_view_column_get_max_width"
fun fun_c2ats_gtk_tree_view_column_clicked: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> void = "mac#gtk_tree_view_column_clicked"
fun fun_c2ats_gtk_tree_view_column_set_title: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_view_column_set_title"
fun fun_c2ats_gtk_tree_view_column_get_title: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_tree_view_column_get_title"
fun fun_c2ats_gtk_tree_view_column_set_expand: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_column_set_expand"
fun fun_c2ats_gtk_tree_view_column_get_expand: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_column_get_expand"
fun fun_c2ats_gtk_tree_view_column_set_clickable: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_column_set_clickable"
fun fun_c2ats_gtk_tree_view_column_get_clickable: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_column_get_clickable"
fun fun_c2ats_gtk_tree_view_column_set_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_view_column_set_widget"
fun fun_c2ats_gtk_tree_view_column_get_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_tree_view_column_get_widget"
fun fun_c2ats_gtk_tree_view_column_set_alignment: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1, type_c2ats_gfloat) -> void = "mac#gtk_tree_view_column_set_alignment"
fun fun_c2ats_gtk_tree_view_column_get_alignment: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> type_c2ats_gfloat = "mac#gtk_tree_view_column_get_alignment"
fun fun_c2ats_gtk_tree_view_column_set_reorderable: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_column_set_reorderable"
fun fun_c2ats_gtk_tree_view_column_get_reorderable: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_column_get_reorderable"
fun fun_c2ats_gtk_tree_view_column_set_sort_column_id: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_tree_view_column_set_sort_column_id"
fun fun_c2ats_gtk_tree_view_column_get_sort_column_id: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_tree_view_column_get_sort_column_id"
fun fun_c2ats_gtk_tree_view_column_set_sort_indicator: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_column_set_sort_indicator"
fun fun_c2ats_gtk_tree_view_column_get_sort_indicator: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_column_get_sort_indicator"
fun fun_c2ats_gtk_tree_view_column_set_sort_order: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1, type_c2ats_GtkSortType) -> void = "mac#gtk_tree_view_column_set_sort_order"
fun fun_c2ats_gtk_tree_view_column_get_sort_order: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> type_c2ats_GtkSortType = "mac#gtk_tree_view_column_get_sort_order"
fun fun_c2ats_gtk_tree_view_column_cell_set_cell_data: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1), !ptr_v_1(type_c2ats_GtkTreeModel, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_column_cell_set_cell_data"
fun fun_c2ats_gtk_tree_view_column_cell_get_size: {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5), !ptr_v_1(type_c2ats_gint, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> void = "mac#gtk_tree_view_column_cell_get_size"
fun fun_c2ats_gtk_tree_view_column_cell_is_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_column_cell_is_visible"
fun fun_c2ats_gtk_tree_view_column_focus_cell: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_view_column_focus_cell"
fun fun_c2ats_gtk_tree_view_column_cell_get_position: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#gtk_tree_view_column_cell_get_position"
fun fun_c2ats_gtk_tree_view_column_queue_resize: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> void = "mac#gtk_tree_view_column_queue_resize"
fun fun_c2ats_gtk_tree_view_column_get_tree_view: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_tree_view_column_get_tree_view"
fun fun_c2ats_gtk_tree_view_column_get_button: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeViewColumn, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_tree_view_column_get_button"
// File: /usr/include/gtk-3.0/gtk/gtktextattributes.h
abst@ype struct_c2ats__GtkTextAttributes // FIXME! Forward declaration.
typedef type_c2ats_GtkTextAttributes = struct_c2ats__GtkTextAttributes
abst@ype struct_c2ats__GtkTextAppearance // FIXME! Forward declaration.
typedef type_c2ats_GtkTextAppearance = struct_c2ats__GtkTextAppearance
typedef struct_c2ats__GtkTextAppearance = $extype_struct"struct _GtkTextAppearance" of {
  bg_color = type_c2ats_GdkColor,
  fg_color = type_c2ats_GdkColor,
  rise = type_c2ats_gint,
  underline = type_c2ats_guint,
  strikethrough = type_c2ats_guint,
  draw_bg = type_c2ats_guint,
  inside_selection = type_c2ats_guint,
  is_text = type_c2ats_guint,
  rgba = @[cPtr0(type_c2ats_GdkRGBA)][2]
}
typedef struct_c2ats__GtkTextAttributes = $extype_struct"struct _GtkTextAttributes" of {
  refcount = type_c2ats_guint,
  appearance = type_c2ats_GtkTextAppearance,
  justification = type_c2ats_GtkJustification,
  direction = type_c2ats_GtkTextDirection,
  font = ptr (* cPtr0(type_c2ats_PangoFontDescription) *),
  font_scale = type_c2ats_gdouble,
  left_margin = type_c2ats_gint,
  right_margin = type_c2ats_gint,
  indent = type_c2ats_gint,
  pixels_above_lines = type_c2ats_gint,
  pixels_below_lines = type_c2ats_gint,
  pixels_inside_wrap = type_c2ats_gint,
  tabs = ptr (* cPtr0(type_c2ats_PangoTabArray) *),
  wrap_mode = type_c2ats_GtkWrapMode,
  language = ptr (* cPtr0(type_c2ats_PangoLanguage) *),
  pg_bg_color = ptr (* cPtr0(type_c2ats_GdkColor) *),
  invisible = type_c2ats_guint,
  bg_full_height = type_c2ats_guint,
  editable = type_c2ats_guint,
  no_fallback = type_c2ats_guint,
  pg_bg_rgba = ptr (* cPtr0(type_c2ats_GdkRGBA) *),
  letter_spacing = type_c2ats_gint,
  font_features = ptr (* cPtr0(type_c2ats_gchar) *)
}
fun fun_c2ats_gtk_text_attributes_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkTextAttributes, l1) | ptr l1) = "mac#gtk_text_attributes_new"
fun fun_c2ats_gtk_text_attributes_copy: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextAttributes, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTextAttributes, l2) | ptr l2) = "mac#gtk_text_attributes_copy"
fun fun_c2ats_gtk_text_attributes_copy_values: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextAttributes, l1), !ptr_v_1(type_c2ats_GtkTextAttributes, l2) | ptr l1, ptr l2) -> void = "mac#gtk_text_attributes_copy_values"
fun fun_c2ats_gtk_text_attributes_unref: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextAttributes, l1) | ptr l1) -> void = "mac#gtk_text_attributes_unref"
fun fun_c2ats_gtk_text_attributes_ref: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextAttributes, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTextAttributes, l2) | ptr l2) = "mac#gtk_text_attributes_ref"
fun fun_c2ats_gtk_text_attributes_get_type: () -> type_c2ats_GType = "mac#gtk_text_attributes_get_type"
// File: /usr/include/gtk-3.0/gtk/gtktextchild.h
abst@ype struct_c2ats__GtkTextChildAnchor // FIXME! Forward declaration.
typedef type_c2ats_GtkTextChildAnchor = struct_c2ats__GtkTextChildAnchor
abst@ype struct_c2ats__GtkTextChildAnchorClass // FIXME! Forward declaration.
typedef type_c2ats_GtkTextChildAnchorClass = struct_c2ats__GtkTextChildAnchorClass
typedef struct_c2ats__GtkTextChildAnchor = $extype_struct"struct _GtkTextChildAnchor" of {
  parent_instance = type_c2ats_GObject,
  segment = type_c2ats_gpointer
}
typedef struct_c2ats__GtkTextChildAnchorClass = $extype_struct"struct _GtkTextChildAnchorClass" of {
  parent_class = type_c2ats_GObjectClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_text_child_anchor_get_type: () -> type_c2ats_GType = "mac#gtk_text_child_anchor_get_type"
fun fun_c2ats_gtk_text_child_anchor_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkTextChildAnchor, l1) | ptr l1) = "mac#gtk_text_child_anchor_new"
fun fun_c2ats_gtk_text_child_anchor_get_widgets: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextChildAnchor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_text_child_anchor_get_widgets"
fun fun_c2ats_gtk_text_child_anchor_get_deleted: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextChildAnchor, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_child_anchor_get_deleted"
// File: /usr/include/gtk-3.0/gtk/gtktexttag.h
abst@ype struct_c2ats__GtkTextIter // FIXME! Forward declaration.
typedef type_c2ats_GtkTextIter = struct_c2ats__GtkTextIter
abst@ype struct_c2ats__GtkTextTagTable // FIXME! Forward declaration.
typedef type_c2ats_GtkTextTagTable = struct_c2ats__GtkTextTagTable
abst@ype struct_c2ats__GtkTextTag // FIXME! Forward declaration.
typedef type_c2ats_GtkTextTag = struct_c2ats__GtkTextTag
abst@ype struct_c2ats__GtkTextTagPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkTextTagPrivate = struct_c2ats__GtkTextTagPrivate
abst@ype struct_c2ats__GtkTextTagClass // FIXME! Forward declaration.
typedef type_c2ats_GtkTextTagClass = struct_c2ats__GtkTextTagClass
typedef struct_c2ats__GtkTextTag = $extype_struct"struct _GtkTextTag" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkTextTagPrivate) *)
}
typedef struct_c2ats__GtkTextTagClass = $extype_struct"struct _GtkTextTagClass" of {
  parent_class = type_c2ats_GObjectClass,
  event = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTextTag, l1), !ptr_v_1(type_c2ats_GObject, l2), !ptr_v_1(type_c2ats_GdkEvent, l3), !ptr_v_1(type_c2ats_GtkTextIter, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_text_tag_get_type: () -> type_c2ats_GType = "mac#gtk_text_tag_get_type"
fun fun_c2ats_gtk_text_tag_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTextTag, l2) | ptr l2) = "mac#gtk_text_tag_new"
fun fun_c2ats_gtk_text_tag_get_priority: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextTag, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_tag_get_priority"
fun fun_c2ats_gtk_text_tag_set_priority: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextTag, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_text_tag_set_priority"
fun fun_c2ats_gtk_text_tag_event: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTextTag, l1), !ptr_v_1(type_c2ats_GObject, l2), !ptr_v_1(type_c2ats_GdkEvent, l3), !ptr_v_1(type_c2ats_GtkTextIter, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#gtk_text_tag_event"
fun fun_c2ats_gtk_text_tag_changed: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextTag, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_text_tag_changed"
// File: /usr/include/gtk-3.0/gtk/gtktextiter.h
typedef type_c2ats_GtkTextSearchFlags = int
#define enum_c2ats_GTK_TEXT_SEARCH_VISIBLE_ONLY 1 << 0
#define enum_c2ats_GTK_TEXT_SEARCH_TEXT_ONLY 1 << 1
#define enum_c2ats_GTK_TEXT_SEARCH_CASE_INSENSITIVE 1 << 2
abst@ype struct_c2ats__GtkTextBuffer // FIXME! Forward declaration.
typedef type_c2ats_GtkTextBuffer = struct_c2ats__GtkTextBuffer
typedef struct_c2ats__GtkTextIter = $extype_struct"struct _GtkTextIter" of {
  dummy1 = type_c2ats_gpointer,
  dummy2 = type_c2ats_gpointer,
  dummy3 = type_c2ats_gint,
  dummy4 = type_c2ats_gint,
  dummy5 = type_c2ats_gint,
  dummy6 = type_c2ats_gint,
  dummy7 = type_c2ats_gint,
  dummy8 = type_c2ats_gint,
  dummy9 = type_c2ats_gpointer,
  dummy10 = type_c2ats_gpointer,
  dummy11 = type_c2ats_gint,
  dummy12 = type_c2ats_gint,
  dummy13 = type_c2ats_gint,
  dummy14 = type_c2ats_gpointer
}
fun fun_c2ats_gtk_text_iter_get_buffer: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTextBuffer, l2) | ptr l2) = "mac#gtk_text_iter_get_buffer"
fun fun_c2ats_gtk_text_iter_copy: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l2) = "mac#gtk_text_iter_copy"
fun fun_c2ats_gtk_text_iter_free: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> void = "mac#gtk_text_iter_free"
fun fun_c2ats_gtk_text_iter_assign: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_text_iter_assign"
fun fun_c2ats_gtk_text_iter_get_type: () -> type_c2ats_GType = "mac#gtk_text_iter_get_type"
fun fun_c2ats_gtk_text_iter_get_offset: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_iter_get_offset"
fun fun_c2ats_gtk_text_iter_get_line: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_iter_get_line"
fun fun_c2ats_gtk_text_iter_get_line_offset: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_iter_get_line_offset"
fun fun_c2ats_gtk_text_iter_get_line_index: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_iter_get_line_index"
fun fun_c2ats_gtk_text_iter_get_visible_line_offset: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_iter_get_visible_line_offset"
fun fun_c2ats_gtk_text_iter_get_visible_line_index: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_iter_get_visible_line_index"
fun fun_c2ats_gtk_text_iter_get_char: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gunichar = "mac#gtk_text_iter_get_char"
fun fun_c2ats_gtk_text_iter_get_slice: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#gtk_text_iter_get_slice"
fun fun_c2ats_gtk_text_iter_get_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#gtk_text_iter_get_text"
fun fun_c2ats_gtk_text_iter_get_visible_slice: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#gtk_text_iter_get_visible_slice"
fun fun_c2ats_gtk_text_iter_get_visible_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#gtk_text_iter_get_visible_text"
fun fun_c2ats_gtk_text_iter_get_pixbuf: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gtk_text_iter_get_pixbuf"
fun fun_c2ats_gtk_text_iter_get_marks: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_text_iter_get_marks"
fun fun_c2ats_gtk_text_iter_get_child_anchor: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTextChildAnchor, l2) | ptr l2) = "mac#gtk_text_iter_get_child_anchor"
fun fun_c2ats_gtk_text_iter_get_toggled_tags: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gboolean) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_text_iter_get_toggled_tags"
fun fun_c2ats_gtk_text_iter_starts_tag: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_GtkTextTag, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_text_iter_starts_tag"
fun fun_c2ats_gtk_text_iter_begins_tag: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_GtkTextTag, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_text_iter_begins_tag"
fun fun_c2ats_gtk_text_iter_ends_tag: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_GtkTextTag, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_text_iter_ends_tag"
fun fun_c2ats_gtk_text_iter_toggles_tag: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_GtkTextTag, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_text_iter_toggles_tag"
fun fun_c2ats_gtk_text_iter_has_tag: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_GtkTextTag, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_text_iter_has_tag"
fun fun_c2ats_gtk_text_iter_get_tags: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_text_iter_get_tags"
fun fun_c2ats_gtk_text_iter_editable: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gtk_text_iter_editable"
fun fun_c2ats_gtk_text_iter_can_insert: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gtk_text_iter_can_insert"
fun fun_c2ats_gtk_text_iter_starts_word: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_starts_word"
fun fun_c2ats_gtk_text_iter_ends_word: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_ends_word"
fun fun_c2ats_gtk_text_iter_inside_word: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_inside_word"
fun fun_c2ats_gtk_text_iter_starts_sentence: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_starts_sentence"
fun fun_c2ats_gtk_text_iter_ends_sentence: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_ends_sentence"
fun fun_c2ats_gtk_text_iter_inside_sentence: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_inside_sentence"
fun fun_c2ats_gtk_text_iter_starts_line: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_starts_line"
fun fun_c2ats_gtk_text_iter_ends_line: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_ends_line"
fun fun_c2ats_gtk_text_iter_is_cursor_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_is_cursor_position"
fun fun_c2ats_gtk_text_iter_get_chars_in_line: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_iter_get_chars_in_line"
fun fun_c2ats_gtk_text_iter_get_bytes_in_line: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_iter_get_bytes_in_line"
fun fun_c2ats_gtk_text_iter_get_attributes: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_GtkTextAttributes, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_text_iter_get_attributes"
fun fun_c2ats_gtk_text_iter_get_language: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLanguage, l2) | ptr l2) = "mac#gtk_text_iter_get_language"
fun fun_c2ats_gtk_text_iter_is_end: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_is_end"
fun fun_c2ats_gtk_text_iter_is_start: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_is_start"
fun fun_c2ats_gtk_text_iter_forward_char: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_char"
fun fun_c2ats_gtk_text_iter_backward_char: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_backward_char"
fun fun_c2ats_gtk_text_iter_forward_chars: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_chars"
fun fun_c2ats_gtk_text_iter_backward_chars: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_text_iter_backward_chars"
fun fun_c2ats_gtk_text_iter_forward_line: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_line"
fun fun_c2ats_gtk_text_iter_backward_line: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_backward_line"
fun fun_c2ats_gtk_text_iter_forward_lines: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_lines"
fun fun_c2ats_gtk_text_iter_backward_lines: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_text_iter_backward_lines"
fun fun_c2ats_gtk_text_iter_forward_word_end: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_word_end"
fun fun_c2ats_gtk_text_iter_backward_word_start: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_backward_word_start"
fun fun_c2ats_gtk_text_iter_forward_word_ends: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_word_ends"
fun fun_c2ats_gtk_text_iter_backward_word_starts: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_text_iter_backward_word_starts"
fun fun_c2ats_gtk_text_iter_forward_visible_line: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_visible_line"
fun fun_c2ats_gtk_text_iter_backward_visible_line: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_backward_visible_line"
fun fun_c2ats_gtk_text_iter_forward_visible_lines: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_visible_lines"
fun fun_c2ats_gtk_text_iter_backward_visible_lines: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_text_iter_backward_visible_lines"
fun fun_c2ats_gtk_text_iter_forward_visible_word_end: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_visible_word_end"
fun fun_c2ats_gtk_text_iter_backward_visible_word_start: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_backward_visible_word_start"
fun fun_c2ats_gtk_text_iter_forward_visible_word_ends: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_visible_word_ends"
fun fun_c2ats_gtk_text_iter_backward_visible_word_starts: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_text_iter_backward_visible_word_starts"
fun fun_c2ats_gtk_text_iter_forward_sentence_end: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_sentence_end"
fun fun_c2ats_gtk_text_iter_backward_sentence_start: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_backward_sentence_start"
fun fun_c2ats_gtk_text_iter_forward_sentence_ends: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_sentence_ends"
fun fun_c2ats_gtk_text_iter_backward_sentence_starts: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_text_iter_backward_sentence_starts"
fun fun_c2ats_gtk_text_iter_forward_cursor_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_cursor_position"
fun fun_c2ats_gtk_text_iter_backward_cursor_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_backward_cursor_position"
fun fun_c2ats_gtk_text_iter_forward_cursor_positions: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_cursor_positions"
fun fun_c2ats_gtk_text_iter_backward_cursor_positions: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_text_iter_backward_cursor_positions"
fun fun_c2ats_gtk_text_iter_forward_visible_cursor_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_visible_cursor_position"
fun fun_c2ats_gtk_text_iter_backward_visible_cursor_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_backward_visible_cursor_position"
fun fun_c2ats_gtk_text_iter_forward_visible_cursor_positions: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_visible_cursor_positions"
fun fun_c2ats_gtk_text_iter_backward_visible_cursor_positions: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_text_iter_backward_visible_cursor_positions"
fun fun_c2ats_gtk_text_iter_set_offset: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_text_iter_set_offset"
fun fun_c2ats_gtk_text_iter_set_line: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_text_iter_set_line"
fun fun_c2ats_gtk_text_iter_set_line_offset: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_text_iter_set_line_offset"
fun fun_c2ats_gtk_text_iter_set_line_index: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_text_iter_set_line_index"
fun fun_c2ats_gtk_text_iter_forward_to_end: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> void = "mac#gtk_text_iter_forward_to_end"
fun fun_c2ats_gtk_text_iter_forward_to_line_end: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_to_line_end"
fun fun_c2ats_gtk_text_iter_set_visible_line_offset: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_text_iter_set_visible_line_offset"
fun fun_c2ats_gtk_text_iter_set_visible_line_index: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_text_iter_set_visible_line_index"
fun fun_c2ats_gtk_text_iter_forward_to_tag_toggle: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_GtkTextTag, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_to_tag_toggle"
fun fun_c2ats_gtk_text_iter_backward_to_tag_toggle: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_GtkTextTag, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_text_iter_backward_to_tag_toggle"
typedef type_c2ats_GtkTextCharPredicate = (type_c2ats_gunichar, type_c2ats_gpointer) -> type_c2ats_gboolean
fun fun_c2ats_gtk_text_iter_forward_find_char: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, type_c2ats_GtkTextCharPredicate, type_c2ats_gpointer, ptr l2) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_find_char"
fun fun_c2ats_gtk_text_iter_backward_find_char: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, type_c2ats_GtkTextCharPredicate, type_c2ats_gpointer, ptr l2) -> type_c2ats_gboolean = "mac#gtk_text_iter_backward_find_char"
fun fun_c2ats_gtk_text_iter_forward_search: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3), !ptr_v_1(type_c2ats_GtkTextIter, l4), !ptr_v_1(type_c2ats_GtkTextIter, l5) | ptr l1, ptr l2, type_c2ats_GtkTextSearchFlags, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#gtk_text_iter_forward_search"
fun fun_c2ats_gtk_text_iter_backward_search: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3), !ptr_v_1(type_c2ats_GtkTextIter, l4), !ptr_v_1(type_c2ats_GtkTextIter, l5) | ptr l1, ptr l2, type_c2ats_GtkTextSearchFlags, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#gtk_text_iter_backward_search"
fun fun_c2ats_gtk_text_iter_equal: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_text_iter_equal"
fun fun_c2ats_gtk_text_iter_compare: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gtk_text_iter_compare"
fun fun_c2ats_gtk_text_iter_in_range: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_text_iter_in_range"
fun fun_c2ats_gtk_text_iter_order: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextIter, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_text_iter_order"
// File: /usr/include/gtk-3.0/gtk/gtkselection.h
abst@ype struct_c2ats__GtkTargetPair // FIXME! Forward declaration.
typedef type_c2ats_GtkTargetPair = struct_c2ats__GtkTargetPair
typedef struct_c2ats__GtkTargetPair = $extype_struct"struct _GtkTargetPair" of {
  target = type_c2ats_GdkAtom,
  flags = type_c2ats_guint,
  info = type_c2ats_guint
}
abst@ype struct_c2ats__GtkTargetList // FIXME! Forward declaration.
typedef type_c2ats_GtkTargetList = struct_c2ats__GtkTargetList
abst@ype struct_c2ats__GtkTargetEntry // FIXME! Forward declaration.
typedef type_c2ats_GtkTargetEntry = struct_c2ats__GtkTargetEntry
typedef type_c2ats_GtkTargetFlags = int
#define enum_c2ats_GTK_TARGET_SAME_APP 1 << 0
#define enum_c2ats_GTK_TARGET_SAME_WIDGET 1 << 1
#define enum_c2ats_GTK_TARGET_OTHER_APP 1 << 2
#define enum_c2ats_GTK_TARGET_OTHER_WIDGET 1 << 3
typedef struct_c2ats__GtkTargetEntry = $extype_struct"struct _GtkTargetEntry" of {
  target = ptr (* cPtr0(type_c2ats_gchar) *),
  flags = type_c2ats_guint,
  info = type_c2ats_guint
}
fun fun_c2ats_gtk_target_list_get_type: () -> type_c2ats_GType = "mac#gtk_target_list_get_type"
fun fun_c2ats_gtk_target_list_new: {l1:addr} (!ptr_v_1(type_c2ats_GtkTargetEntry, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTargetList, l2) | ptr l2) = "mac#gtk_target_list_new"
fun fun_c2ats_gtk_target_list_ref: {l1:addr} (!ptr_v_1(type_c2ats_GtkTargetList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTargetList, l2) | ptr l2) = "mac#gtk_target_list_ref"
fun fun_c2ats_gtk_target_list_unref: {l1:addr} (!ptr_v_1(type_c2ats_GtkTargetList, l1) | ptr l1) -> void = "mac#gtk_target_list_unref"
fun fun_c2ats_gtk_target_list_add: {l1:addr} (!ptr_v_1(type_c2ats_GtkTargetList, l1) | ptr l1, type_c2ats_GdkAtom, type_c2ats_guint, type_c2ats_guint) -> void = "mac#gtk_target_list_add"
fun fun_c2ats_gtk_target_list_add_text_targets: {l1:addr} (!ptr_v_1(type_c2ats_GtkTargetList, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_target_list_add_text_targets"
fun fun_c2ats_gtk_target_list_add_rich_text_targets: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTargetList, l1), !ptr_v_1(type_c2ats_GtkTextBuffer, l2) | ptr l1, type_c2ats_guint, type_c2ats_gboolean, ptr l2) -> void = "mac#gtk_target_list_add_rich_text_targets"
fun fun_c2ats_gtk_target_list_add_image_targets: {l1:addr} (!ptr_v_1(type_c2ats_GtkTargetList, l1) | ptr l1, type_c2ats_guint, type_c2ats_gboolean) -> void = "mac#gtk_target_list_add_image_targets"
fun fun_c2ats_gtk_target_list_add_uri_targets: {l1:addr} (!ptr_v_1(type_c2ats_GtkTargetList, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_target_list_add_uri_targets"
fun fun_c2ats_gtk_target_list_add_table: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTargetList, l1), !ptr_v_1(type_c2ats_GtkTargetEntry, l2) | ptr l1, ptr l2, type_c2ats_guint) -> void = "mac#gtk_target_list_add_table"
fun fun_c2ats_gtk_target_list_remove: {l1:addr} (!ptr_v_1(type_c2ats_GtkTargetList, l1) | ptr l1, type_c2ats_GdkAtom) -> void = "mac#gtk_target_list_remove"
fun fun_c2ats_gtk_target_list_find: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTargetList, l1), !ptr_v_1(type_c2ats_guint, l2) | ptr l1, type_c2ats_GdkAtom, ptr l2) -> type_c2ats_gboolean = "mac#gtk_target_list_find"
fun fun_c2ats_gtk_target_table_new_from_list: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTargetList, l1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkTargetEntry, l3) | ptr l3) = "mac#gtk_target_table_new_from_list"
fun fun_c2ats_gtk_target_table_free: {l1:addr} (!ptr_v_1(type_c2ats_GtkTargetEntry, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_target_table_free"
fun fun_c2ats_gtk_selection_owner_set: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GdkAtom, type_c2ats_guint32) -> type_c2ats_gboolean = "mac#gtk_selection_owner_set"
fun fun_c2ats_gtk_selection_owner_set_for_display: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_GdkAtom, type_c2ats_guint32) -> type_c2ats_gboolean = "mac#gtk_selection_owner_set_for_display"
fun fun_c2ats_gtk_selection_add_target: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GdkAtom, type_c2ats_GdkAtom, type_c2ats_guint) -> void = "mac#gtk_selection_add_target"
fun fun_c2ats_gtk_selection_add_targets: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkTargetEntry, l2) | ptr l1, type_c2ats_GdkAtom, ptr l2, type_c2ats_guint) -> void = "mac#gtk_selection_add_targets"
fun fun_c2ats_gtk_selection_clear_targets: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GdkAtom) -> void = "mac#gtk_selection_clear_targets"
fun fun_c2ats_gtk_selection_convert: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GdkAtom, type_c2ats_GdkAtom, type_c2ats_guint32) -> type_c2ats_gboolean = "mac#gtk_selection_convert"
fun fun_c2ats_gtk_selection_remove_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_selection_remove_all"
fun fun_c2ats_gtk_selection_data_get_selection: {l1:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1) | ptr l1) -> type_c2ats_GdkAtom = "mac#gtk_selection_data_get_selection"
fun fun_c2ats_gtk_selection_data_get_target: {l1:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1) | ptr l1) -> type_c2ats_GdkAtom = "mac#gtk_selection_data_get_target"
fun fun_c2ats_gtk_selection_data_get_data_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1) | ptr l1) -> type_c2ats_GdkAtom = "mac#gtk_selection_data_get_data_type"
fun fun_c2ats_gtk_selection_data_get_format: {l1:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_selection_data_get_format"
fun fun_c2ats_gtk_selection_data_get_data: {l1:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_guchar, l2) | ptr l2) = "mac#gtk_selection_data_get_data"
fun fun_c2ats_gtk_selection_data_get_length: {l1:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_selection_data_get_length"
fun fun_c2ats_gtk_selection_data_get_data_with_length: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_guchar, l3) | ptr l3) = "mac#gtk_selection_data_get_data_with_length"
fun fun_c2ats_gtk_selection_data_get_display: {l1:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDisplay, l2) | ptr l2) = "mac#gtk_selection_data_get_display"
fun fun_c2ats_gtk_selection_data_set: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1), !ptr_v_1(type_c2ats_guchar, l2) | ptr l1, type_c2ats_GdkAtom, type_c2ats_gint, ptr l2, type_c2ats_gint) -> void = "mac#gtk_selection_data_set"
fun fun_c2ats_gtk_selection_data_set_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_selection_data_set_text"
fun fun_c2ats_gtk_selection_data_get_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_guchar, l2) | ptr l2) = "mac#gtk_selection_data_get_text"
fun fun_c2ats_gtk_selection_data_set_pixbuf: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_selection_data_set_pixbuf"
fun fun_c2ats_gtk_selection_data_get_pixbuf: {l1:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gtk_selection_data_get_pixbuf"
fun fun_c2ats_gtk_selection_data_set_uris: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_selection_data_set_uris"
fun fun_c2ats_gtk_selection_data_get_uris: {l1:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#gtk_selection_data_get_uris"
fun fun_c2ats_gtk_selection_data_get_targets: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1), !ptr_v_2(type_c2ats_GdkAtom, l2, l2_1), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_selection_data_get_targets"
fun fun_c2ats_gtk_selection_data_targets_include_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_selection_data_targets_include_text"
fun fun_c2ats_gtk_selection_data_targets_include_rich_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1), !ptr_v_1(type_c2ats_GtkTextBuffer, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_selection_data_targets_include_rich_text"
fun fun_c2ats_gtk_selection_data_targets_include_image: {l1:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1) | ptr l1, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gtk_selection_data_targets_include_image"
fun fun_c2ats_gtk_selection_data_targets_include_uri: {l1:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_selection_data_targets_include_uri"
fun fun_c2ats_gtk_targets_include_text: {l1:addr} (!ptr_v_1(type_c2ats_GdkAtom, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_targets_include_text"
fun fun_c2ats_gtk_targets_include_rich_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkAtom, l1), !ptr_v_1(type_c2ats_GtkTextBuffer, l2) | ptr l1, type_c2ats_gint, ptr l2) -> type_c2ats_gboolean = "mac#gtk_targets_include_rich_text"
fun fun_c2ats_gtk_targets_include_image: {l1:addr} (!ptr_v_1(type_c2ats_GdkAtom, l1) | ptr l1, type_c2ats_gint, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gtk_targets_include_image"
fun fun_c2ats_gtk_targets_include_uri: {l1:addr} (!ptr_v_1(type_c2ats_GdkAtom, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_targets_include_uri"
fun fun_c2ats_gtk_selection_data_get_type: () -> type_c2ats_GType = "mac#gtk_selection_data_get_type"
fun fun_c2ats_gtk_selection_data_copy: {l1:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSelectionData, l2) | ptr l2) = "mac#gtk_selection_data_copy"
fun fun_c2ats_gtk_selection_data_free: {l1:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1) | ptr l1) -> void = "mac#gtk_selection_data_free"
fun fun_c2ats_gtk_target_entry_get_type: () -> type_c2ats_GType = "mac#gtk_target_entry_get_type"
fun fun_c2ats_gtk_target_entry_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTargetEntry, l2) | ptr l2) = "mac#gtk_target_entry_new"
fun fun_c2ats_gtk_target_entry_copy: {l1:addr} (!ptr_v_1(type_c2ats_GtkTargetEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTargetEntry, l2) | ptr l2) = "mac#gtk_target_entry_copy"
fun fun_c2ats_gtk_target_entry_free: {l1:addr} (!ptr_v_1(type_c2ats_GtkTargetEntry, l1) | ptr l1) -> void = "mac#gtk_target_entry_free"
// File: /usr/include/gtk-3.0/gtk/gtkdnd.h
fun fun_c2ats_gtk_drag_get_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkDragContext, l2) | ptr l1, ptr l2, type_c2ats_GdkAtom, type_c2ats_guint32) -> void = "mac#gtk_drag_get_data"
fun fun_c2ats_gtk_drag_finish: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1, type_c2ats_gboolean, type_c2ats_gboolean, type_c2ats_guint32) -> void = "mac#gtk_drag_finish"
fun fun_c2ats_gtk_drag_get_source_widget: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_drag_get_source_widget"
fun fun_c2ats_gtk_drag_highlight: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_drag_highlight"
fun fun_c2ats_gtk_drag_unhighlight: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_drag_unhighlight"
fun fun_c2ats_gtk_drag_begin_with_coordinates: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkTargetList, l2), !ptr_v_1(type_c2ats_GdkEvent, l3) | ptr l1, ptr l2, type_c2ats_GdkDragAction, type_c2ats_gint, ptr l3, type_c2ats_gint, type_c2ats_gint) -> [l4:addr] (ptr_v_1(type_c2ats_GdkDragContext, l4) | ptr l4) = "mac#gtk_drag_begin_with_coordinates"
fun fun_c2ats_gtk_drag_begin: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkTargetList, l2), !ptr_v_1(type_c2ats_GdkEvent, l3) | ptr l1, ptr l2, type_c2ats_GdkDragAction, type_c2ats_gint, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GdkDragContext, l4) | ptr l4) = "mac#gtk_drag_begin"
fun fun_c2ats_gtk_drag_cancel: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1) -> void = "mac#gtk_drag_cancel"
fun fun_c2ats_gtk_drag_set_icon_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_drag_set_icon_widget"
fun fun_c2ats_gtk_drag_set_icon_pixbuf: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_drag_set_icon_pixbuf"
fun fun_c2ats_gtk_drag_set_icon_stock: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_drag_set_icon_stock"
fun fun_c2ats_gtk_drag_set_icon_surface: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1), !ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l1, ptr l2) -> void = "mac#gtk_drag_set_icon_surface"
fun fun_c2ats_gtk_drag_set_icon_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_drag_set_icon_name"
fun fun_c2ats_gtk_drag_set_icon_gicon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1), !ptr_v_1(type_c2ats_GIcon, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_drag_set_icon_gicon"
fun fun_c2ats_gtk_drag_set_icon_default: {l1:addr} (!ptr_v_1(type_c2ats_GdkDragContext, l1) | ptr l1) -> void = "mac#gtk_drag_set_icon_default"
fun fun_c2ats_gtk_drag_check_threshold: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_drag_check_threshold"
// File: /usr/include/gtk-3.0/gtk/gtkeditable.h
abst@ype struct_c2ats__GtkEditable // FIXME! Forward declaration.
typedef type_c2ats_GtkEditable = struct_c2ats__GtkEditable
abst@ype struct_c2ats__GtkEditableInterface // FIXME! Forward declaration.
typedef type_c2ats_GtkEditableInterface = struct_c2ats__GtkEditableInterface
typedef struct_c2ats__GtkEditableInterface = $extype_struct"struct _GtkEditableInterface" of {
  base_iface = type_c2ats_GTypeInterface,
  insert_text = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, type_c2ats_gint, ptr l3) -> void,
  delete_text = {l1:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void,
  changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1) | ptr l1) -> void,
  do_insert_text = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, type_c2ats_gint, ptr l3) -> void,
  do_delete_text = {l1:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void,
  get_chars = {l1:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  set_selection_bounds = {l1:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void,
  get_selection_bounds = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  set_position = {l1:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1) | ptr l1, type_c2ats_gint) -> void,
  get_position = {l1:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1) | ptr l1) -> type_c2ats_gint
}
fun fun_c2ats_gtk_editable_get_type: () -> type_c2ats_GType = "mac#gtk_editable_get_type"
fun fun_c2ats_gtk_editable_select_region: {l1:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_editable_select_region"
fun fun_c2ats_gtk_editable_get_selection_bounds: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_editable_get_selection_bounds"
fun fun_c2ats_gtk_editable_insert_text: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, type_c2ats_gint, ptr l3) -> void = "mac#gtk_editable_insert_text"
fun fun_c2ats_gtk_editable_delete_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_editable_delete_text"
fun fun_c2ats_gtk_editable_get_chars: {l1:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_editable_get_chars"
fun fun_c2ats_gtk_editable_cut_clipboard: {l1:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1) | ptr l1) -> void = "mac#gtk_editable_cut_clipboard"
fun fun_c2ats_gtk_editable_copy_clipboard: {l1:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1) | ptr l1) -> void = "mac#gtk_editable_copy_clipboard"
fun fun_c2ats_gtk_editable_paste_clipboard: {l1:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1) | ptr l1) -> void = "mac#gtk_editable_paste_clipboard"
fun fun_c2ats_gtk_editable_delete_selection: {l1:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1) | ptr l1) -> void = "mac#gtk_editable_delete_selection"
fun fun_c2ats_gtk_editable_set_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_editable_set_position"
fun fun_c2ats_gtk_editable_get_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_editable_get_position"
fun fun_c2ats_gtk_editable_set_editable: {l1:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_editable_set_editable"
fun fun_c2ats_gtk_editable_get_editable: {l1:addr} (!ptr_v_1(type_c2ats_GtkEditable, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_editable_get_editable"
// File: /usr/include/gtk-3.0/gtk/gtkimcontext.h
abst@ype struct_c2ats__GtkIMContext // FIXME! Forward declaration.
typedef type_c2ats_GtkIMContext = struct_c2ats__GtkIMContext
abst@ype struct_c2ats__GtkIMContextClass // FIXME! Forward declaration.
typedef type_c2ats_GtkIMContextClass = struct_c2ats__GtkIMContextClass
typedef struct_c2ats__GtkIMContext = $extype_struct"struct _GtkIMContext" of {
  parent_instance = type_c2ats_GObject
}
typedef struct_c2ats__GtkIMContextClass = $extype_struct"struct _GtkIMContextClass" of {
  parent_class = type_c2ats_GObjectClass,
  preedit_start = {l1:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1) | ptr l1) -> void,
  preedit_end = {l1:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1) | ptr l1) -> void,
  preedit_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1) | ptr l1) -> void,
  commit = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  retrieve_surrounding = {l1:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1) | ptr l1) -> type_c2ats_gboolean,
  delete_surrounding = {l1:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gboolean,
  set_client_window = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2) -> void,
  get_preedit_string = {l1,l2,l2_1,l3,l3_1,l4:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_2(type_c2ats_PangoAttrList, l3, l3_1), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void,
  filter_keypress = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1), !ptr_v_1(type_c2ats_GdkEventKey, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  focus_in = {l1:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1) | ptr l1) -> void,
  focus_out = {l1:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1) | ptr l1) -> void,
  reset = {l1:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1) | ptr l1) -> void,
  set_cursor_location = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> void,
  set_use_preedit = {l1:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1) | ptr l1, type_c2ats_gboolean) -> void,
  set_surrounding = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void,
  get_surrounding = {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void,
  _gtk_reserved6 = () -> void
}
fun fun_c2ats_gtk_im_context_get_type: () -> type_c2ats_GType = "mac#gtk_im_context_get_type"
fun fun_c2ats_gtk_im_context_set_client_window: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2) -> void = "mac#gtk_im_context_set_client_window"
fun fun_c2ats_gtk_im_context_get_preedit_string: {l1,l2,l2_1,l3,l3_1,l4:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_2(type_c2ats_PangoAttrList, l3, l3_1), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_im_context_get_preedit_string"
fun fun_c2ats_gtk_im_context_filter_keypress: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1), !ptr_v_1(type_c2ats_GdkEventKey, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_im_context_filter_keypress"
fun fun_c2ats_gtk_im_context_focus_in: {l1:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1) | ptr l1) -> void = "mac#gtk_im_context_focus_in"
fun fun_c2ats_gtk_im_context_focus_out: {l1:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1) | ptr l1) -> void = "mac#gtk_im_context_focus_out"
fun fun_c2ats_gtk_im_context_reset: {l1:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1) | ptr l1) -> void = "mac#gtk_im_context_reset"
fun fun_c2ats_gtk_im_context_set_cursor_location: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> void = "mac#gtk_im_context_set_cursor_location"
fun fun_c2ats_gtk_im_context_set_use_preedit: {l1:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_im_context_set_use_preedit"
fun fun_c2ats_gtk_im_context_set_surrounding: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_im_context_set_surrounding"
fun fun_c2ats_gtk_im_context_get_surrounding: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_im_context_get_surrounding"
fun fun_c2ats_gtk_im_context_delete_surrounding: {l1:addr} (!ptr_v_1(type_c2ats_GtkIMContext, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_im_context_delete_surrounding"
// File: /usr/include/gtk-3.0/gtk/gtkentrybuffer.h
abst@ype struct_c2ats__GtkEntryBuffer // FIXME! Forward declaration.
typedef type_c2ats_GtkEntryBuffer = struct_c2ats__GtkEntryBuffer
abst@ype struct_c2ats__GtkEntryBufferClass // FIXME! Forward declaration.
typedef type_c2ats_GtkEntryBufferClass = struct_c2ats__GtkEntryBufferClass
abst@ype struct_c2ats__GtkEntryBufferPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkEntryBufferPrivate = struct_c2ats__GtkEntryBufferPrivate
typedef struct_c2ats__GtkEntryBuffer = $extype_struct"struct _GtkEntryBuffer" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkEntryBufferPrivate) *)
}
typedef struct_c2ats__GtkEntryBufferClass = $extype_struct"struct _GtkEntryBufferClass" of {
  parent_class = type_c2ats_GObjectClass,
  inserted_text = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntryBuffer, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_guint, ptr l2, type_c2ats_guint) -> void,
  deleted_text = {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryBuffer, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint) -> void,
  get_text = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntryBuffer, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3),
  get_length = {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryBuffer, l1) | ptr l1) -> type_c2ats_guint,
  insert_text = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntryBuffer, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_guint, ptr l2, type_c2ats_guint) -> type_c2ats_guint,
  delete_text = {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryBuffer, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint) -> type_c2ats_guint,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void,
  _gtk_reserved6 = () -> void,
  _gtk_reserved7 = () -> void,
  _gtk_reserved8 = () -> void
}
fun fun_c2ats_gtk_entry_buffer_get_type: () -> type_c2ats_GType = "mac#gtk_entry_buffer_get_type"
fun fun_c2ats_gtk_entry_buffer_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkEntryBuffer, l2) | ptr l2) = "mac#gtk_entry_buffer_new"
fun fun_c2ats_gtk_entry_buffer_get_bytes: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryBuffer, l1) | ptr l1) -> type_c2ats_gsize = "mac#gtk_entry_buffer_get_bytes"
fun fun_c2ats_gtk_entry_buffer_get_length: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryBuffer, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_entry_buffer_get_length"
fun fun_c2ats_gtk_entry_buffer_get_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryBuffer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_entry_buffer_get_text"
fun fun_c2ats_gtk_entry_buffer_set_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntryBuffer, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_entry_buffer_set_text"
fun fun_c2ats_gtk_entry_buffer_set_max_length: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryBuffer, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_entry_buffer_set_max_length"
fun fun_c2ats_gtk_entry_buffer_get_max_length: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryBuffer, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_entry_buffer_get_max_length"
fun fun_c2ats_gtk_entry_buffer_insert_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntryBuffer, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_guint, ptr l2, type_c2ats_gint) -> type_c2ats_guint = "mac#gtk_entry_buffer_insert_text"
fun fun_c2ats_gtk_entry_buffer_delete_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryBuffer, l1) | ptr l1, type_c2ats_guint, type_c2ats_gint) -> type_c2ats_guint = "mac#gtk_entry_buffer_delete_text"
fun fun_c2ats_gtk_entry_buffer_emit_inserted_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntryBuffer, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_guint, ptr l2, type_c2ats_guint) -> void = "mac#gtk_entry_buffer_emit_inserted_text"
fun fun_c2ats_gtk_entry_buffer_emit_deleted_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryBuffer, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint) -> void = "mac#gtk_entry_buffer_emit_deleted_text"
// File: /usr/include/gtk-3.0/gtk/gtkliststore.h
abst@ype struct_c2ats__GtkListStore // FIXME! Forward declaration.
typedef type_c2ats_GtkListStore = struct_c2ats__GtkListStore
abst@ype struct_c2ats__GtkListStorePrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkListStorePrivate = struct_c2ats__GtkListStorePrivate
abst@ype struct_c2ats__GtkListStoreClass // FIXME! Forward declaration.
typedef type_c2ats_GtkListStoreClass = struct_c2ats__GtkListStoreClass
typedef struct_c2ats__GtkListStore = $extype_struct"struct _GtkListStore" of {
  parent = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkListStorePrivate) *)
}
typedef struct_c2ats__GtkListStoreClass = $extype_struct"struct _GtkListStoreClass" of {
  parent_class = type_c2ats_GObjectClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_list_store_get_type: () -> type_c2ats_GType = "mac#gtk_list_store_get_type"
fun fun_c2ats_gtk_list_store_new: (type_c2ats_gint) -> [l1:addr] (ptr_v_1(type_c2ats_GtkListStore, l1) | ptr l1) = "mac#gtk_list_store_new"
fun fun_c2ats_gtk_list_store_newv: {l1:addr} (!ptr_v_1(type_c2ats_GType, l1) | type_c2ats_gint, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkListStore, l2) | ptr l2) = "mac#gtk_list_store_newv"
fun fun_c2ats_gtk_list_store_set_column_types: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListStore, l1), !ptr_v_1(type_c2ats_GType, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#gtk_list_store_set_column_types"
fun fun_c2ats_gtk_list_store_set_value: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkListStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_gint, ptr l3) -> void = "mac#gtk_list_store_set_value"
fun fun_c2ats_gtk_list_store_set: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_list_store_set"
fun fun_c2ats_gtk_list_store_set_valuesv: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkListStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_GValue, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gint) -> void = "mac#gtk_list_store_set_valuesv"
fun fun_c2ats_gtk_list_store_set_valist: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2, type_c2ats_va_list) -> void = "mac#gtk_list_store_set_valist"
fun fun_c2ats_gtk_list_store_remove: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_list_store_remove"
fun fun_c2ats_gtk_list_store_insert: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_list_store_insert"
fun fun_c2ats_gtk_list_store_insert_before: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkListStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_list_store_insert_before"
fun fun_c2ats_gtk_list_store_insert_after: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkListStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_list_store_insert_after"
fun fun_c2ats_gtk_list_store_insert_with_values: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_list_store_insert_with_values"
fun fun_c2ats_gtk_list_store_insert_with_valuesv: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkListStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_GValue, l4) | ptr l1, ptr l2, type_c2ats_gint, ptr l3, ptr l4, type_c2ats_gint) -> void = "mac#gtk_list_store_insert_with_valuesv"
fun fun_c2ats_gtk_list_store_prepend: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_list_store_prepend"
fun fun_c2ats_gtk_list_store_append: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_list_store_append"
fun fun_c2ats_gtk_list_store_clear: {l1:addr} (!ptr_v_1(type_c2ats_GtkListStore, l1) | ptr l1) -> void = "mac#gtk_list_store_clear"
fun fun_c2ats_gtk_list_store_iter_is_valid: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_list_store_iter_is_valid"
fun fun_c2ats_gtk_list_store_reorder: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListStore, l1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, ptr l2) -> void = "mac#gtk_list_store_reorder"
fun fun_c2ats_gtk_list_store_swap: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkListStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_list_store_swap"
fun fun_c2ats_gtk_list_store_move_after: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkListStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_list_store_move_after"
fun fun_c2ats_gtk_list_store_move_before: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkListStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_list_store_move_before"
// File: /usr/include/gtk-3.0/gtk/gtktreemodelfilter.h
typedef type_c2ats_GtkTreeModelFilterVisibleFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GtkTreeModelFilterModifyFunc = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint, type_c2ats_gpointer) -> void
abst@ype struct_c2ats__GtkTreeModelFilter // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeModelFilter = struct_c2ats__GtkTreeModelFilter
abst@ype struct_c2ats__GtkTreeModelFilterClass // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeModelFilterClass = struct_c2ats__GtkTreeModelFilterClass
abst@ype struct_c2ats__GtkTreeModelFilterPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeModelFilterPrivate = struct_c2ats__GtkTreeModelFilterPrivate
typedef struct_c2ats__GtkTreeModelFilter = $extype_struct"struct _GtkTreeModelFilter" of {
  parent = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkTreeModelFilterPrivate) *)
}
typedef struct_c2ats__GtkTreeModelFilterClass = $extype_struct"struct _GtkTreeModelFilterClass" of {
  parent_class = type_c2ats_GObjectClass,
  visible = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModelFilter, l1), !ptr_v_1(type_c2ats_GtkTreeModel, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  modify = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTreeModelFilter, l1), !ptr_v_1(type_c2ats_GtkTreeModel, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3), !ptr_v_1(type_c2ats_GValue, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gint) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_tree_model_filter_get_type: () -> type_c2ats_GType = "mac#gtk_tree_model_filter_get_type"
fun fun_c2ats_gtk_tree_model_filter_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkTreeModel, l3) | ptr l3) = "mac#gtk_tree_model_filter_new"
fun fun_c2ats_gtk_tree_model_filter_set_visible_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModelFilter, l1) | ptr l1, type_c2ats_GtkTreeModelFilterVisibleFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_tree_model_filter_set_visible_func"
fun fun_c2ats_gtk_tree_model_filter_set_modify_func: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModelFilter, l1), !ptr_v_1(type_c2ats_GType, l2) | ptr l1, type_c2ats_gint, ptr l2, type_c2ats_GtkTreeModelFilterModifyFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_tree_model_filter_set_modify_func"
fun fun_c2ats_gtk_tree_model_filter_set_visible_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModelFilter, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_tree_model_filter_set_visible_column"
fun fun_c2ats_gtk_tree_model_filter_get_model: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModelFilter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeModel, l2) | ptr l2) = "mac#gtk_tree_model_filter_get_model"
fun fun_c2ats_gtk_tree_model_filter_convert_child_iter_to_iter: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModelFilter, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_tree_model_filter_convert_child_iter_to_iter"
fun fun_c2ats_gtk_tree_model_filter_convert_iter_to_child_iter: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModelFilter, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_tree_model_filter_convert_iter_to_child_iter"
fun fun_c2ats_gtk_tree_model_filter_convert_child_path_to_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModelFilter, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkTreePath, l3) | ptr l3) = "mac#gtk_tree_model_filter_convert_child_path_to_path"
fun fun_c2ats_gtk_tree_model_filter_convert_path_to_child_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModelFilter, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkTreePath, l3) | ptr l3) = "mac#gtk_tree_model_filter_convert_path_to_child_path"
fun fun_c2ats_gtk_tree_model_filter_refilter: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModelFilter, l1) | ptr l1) -> void = "mac#gtk_tree_model_filter_refilter"
fun fun_c2ats_gtk_tree_model_filter_clear_cache: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModelFilter, l1) | ptr l1) -> void = "mac#gtk_tree_model_filter_clear_cache"
// File: /usr/include/gtk-3.0/gtk/gtkentrycompletion.h
abst@ype struct_c2ats__GtkEntryCompletion // FIXME! Forward declaration.
typedef type_c2ats_GtkEntryCompletion = struct_c2ats__GtkEntryCompletion
abst@ype struct_c2ats__GtkEntryCompletionClass // FIXME! Forward declaration.
typedef type_c2ats_GtkEntryCompletionClass = struct_c2ats__GtkEntryCompletionClass
abst@ype struct_c2ats__GtkEntryCompletionPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkEntryCompletionPrivate = struct_c2ats__GtkEntryCompletionPrivate
typedef type_c2ats_GtkEntryCompletionMatchFunc = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef struct_c2ats__GtkEntryCompletion = $extype_struct"struct _GtkEntryCompletion" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkEntryCompletionPrivate) *)
}
typedef struct_c2ats__GtkEntryCompletionClass = $extype_struct"struct _GtkEntryCompletionClass" of {
  parent_class = type_c2ats_GObjectClass,
  match_selected = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1), !ptr_v_1(type_c2ats_GtkTreeModel, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  action_activated = {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1, type_c2ats_gint) -> void,
  insert_prefix = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  cursor_on_match = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1), !ptr_v_1(type_c2ats_GtkTreeModel, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  no_matches = {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1) -> void,
  _gtk_reserved0 = () -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void
}
fun fun_c2ats_gtk_entry_completion_get_type: () -> type_c2ats_GType = "mac#gtk_entry_completion_get_type"
fun fun_c2ats_gtk_entry_completion_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1) = "mac#gtk_entry_completion_new"
fun fun_c2ats_gtk_entry_completion_new_with_area: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkEntryCompletion, l2) | ptr l2) = "mac#gtk_entry_completion_new_with_area"
fun fun_c2ats_gtk_entry_completion_get_entry: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_entry_completion_get_entry"
fun fun_c2ats_gtk_entry_completion_set_model: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1), !ptr_v_1(type_c2ats_GtkTreeModel, l2) | ptr l1, ptr l2) -> void = "mac#gtk_entry_completion_set_model"
fun fun_c2ats_gtk_entry_completion_get_model: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeModel, l2) | ptr l2) = "mac#gtk_entry_completion_get_model"
fun fun_c2ats_gtk_entry_completion_set_match_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1, type_c2ats_GtkEntryCompletionMatchFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_entry_completion_set_match_func"
fun fun_c2ats_gtk_entry_completion_set_minimum_key_length: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_entry_completion_set_minimum_key_length"
fun fun_c2ats_gtk_entry_completion_get_minimum_key_length: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_entry_completion_get_minimum_key_length"
fun fun_c2ats_gtk_entry_completion_compute_prefix: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#gtk_entry_completion_compute_prefix"
fun fun_c2ats_gtk_entry_completion_complete: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1) -> void = "mac#gtk_entry_completion_complete"
fun fun_c2ats_gtk_entry_completion_insert_prefix: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1) -> void = "mac#gtk_entry_completion_insert_prefix"
fun fun_c2ats_gtk_entry_completion_insert_action_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#gtk_entry_completion_insert_action_text"
fun fun_c2ats_gtk_entry_completion_insert_action_markup: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#gtk_entry_completion_insert_action_markup"
fun fun_c2ats_gtk_entry_completion_delete_action: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_entry_completion_delete_action"
fun fun_c2ats_gtk_entry_completion_set_inline_completion: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_entry_completion_set_inline_completion"
fun fun_c2ats_gtk_entry_completion_get_inline_completion: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_entry_completion_get_inline_completion"
fun fun_c2ats_gtk_entry_completion_set_inline_selection: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_entry_completion_set_inline_selection"
fun fun_c2ats_gtk_entry_completion_get_inline_selection: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_entry_completion_get_inline_selection"
fun fun_c2ats_gtk_entry_completion_set_popup_completion: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_entry_completion_set_popup_completion"
fun fun_c2ats_gtk_entry_completion_get_popup_completion: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_entry_completion_get_popup_completion"
fun fun_c2ats_gtk_entry_completion_set_popup_set_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_entry_completion_set_popup_set_width"
fun fun_c2ats_gtk_entry_completion_get_popup_set_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_entry_completion_get_popup_set_width"
fun fun_c2ats_gtk_entry_completion_set_popup_single_match: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_entry_completion_set_popup_single_match"
fun fun_c2ats_gtk_entry_completion_get_popup_single_match: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_entry_completion_get_popup_single_match"
fun fun_c2ats_gtk_entry_completion_get_completion_prefix: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_entry_completion_get_completion_prefix"
fun fun_c2ats_gtk_entry_completion_set_text_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_entry_completion_set_text_column"
fun fun_c2ats_gtk_entry_completion_get_text_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryCompletion, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_entry_completion_get_text_column"
// File: /usr/include/gtk-3.0/gtk/gtkimage.h
abst@ype struct_c2ats__GtkImage // FIXME! Forward declaration.
typedef type_c2ats_GtkImage = struct_c2ats__GtkImage
abst@ype struct_c2ats__GtkImagePrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkImagePrivate = struct_c2ats__GtkImagePrivate
abst@ype struct_c2ats__GtkImageClass // FIXME! Forward declaration.
typedef type_c2ats_GtkImageClass = struct_c2ats__GtkImageClass
typedef type_c2ats_GtkImageType = int
#define enum_c2ats_GTK_IMAGE_EMPTY 0
#define enum_c2ats_GTK_IMAGE_PIXBUF 1
#define enum_c2ats_GTK_IMAGE_STOCK 2
#define enum_c2ats_GTK_IMAGE_ICON_SET 3
#define enum_c2ats_GTK_IMAGE_ANIMATION 4
#define enum_c2ats_GTK_IMAGE_ICON_NAME 5
#define enum_c2ats_GTK_IMAGE_GICON 6
#define enum_c2ats_GTK_IMAGE_SURFACE 7
typedef struct_c2ats__GtkImage = $extype_struct"struct _GtkImage" of {
  misc = type_c2ats_GtkMisc,
  priv = ptr (* cPtr0(type_c2ats_GtkImagePrivate) *)
}
typedef struct_c2ats__GtkImageClass = $extype_struct"struct _GtkImageClass" of {
  parent_class = type_c2ats_GtkMiscClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_image_get_type: () -> type_c2ats_GType = "mac#gtk_image_get_type"
fun fun_c2ats_gtk_image_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_image_new"
fun fun_c2ats_gtk_image_new_from_file: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_image_new_from_file"
fun fun_c2ats_gtk_image_new_from_resource: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_image_new_from_resource"
fun fun_c2ats_gtk_image_new_from_pixbuf: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_image_new_from_pixbuf"
fun fun_c2ats_gtk_image_new_from_stock: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_GtkIconSize) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_image_new_from_stock"
fun fun_c2ats_gtk_image_new_from_icon_set: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSet, l1) | ptr l1, type_c2ats_GtkIconSize) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_image_new_from_icon_set"
fun fun_c2ats_gtk_image_new_from_animation: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbufAnimation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_image_new_from_animation"
fun fun_c2ats_gtk_image_new_from_icon_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_GtkIconSize) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_image_new_from_icon_name"
fun fun_c2ats_gtk_image_new_from_gicon: {l1:addr} (!ptr_v_1(type_c2ats_GIcon, l1) | ptr l1, type_c2ats_GtkIconSize) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_image_new_from_gicon"
fun fun_c2ats_gtk_image_new_from_surface: {l1:addr} (!ptr_v_1(type_c2ats_cairo_surface_t, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_image_new_from_surface"
fun fun_c2ats_gtk_image_clear: {l1:addr} (!ptr_v_1(type_c2ats_GtkImage, l1) | ptr l1) -> void = "mac#gtk_image_clear"
fun fun_c2ats_gtk_image_set_from_file: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkImage, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_image_set_from_file"
fun fun_c2ats_gtk_image_set_from_resource: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkImage, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_image_set_from_resource"
fun fun_c2ats_gtk_image_set_from_pixbuf: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkImage, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2) -> void = "mac#gtk_image_set_from_pixbuf"
fun fun_c2ats_gtk_image_set_from_stock: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkImage, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GtkIconSize) -> void = "mac#gtk_image_set_from_stock"
fun fun_c2ats_gtk_image_set_from_icon_set: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkImage, l1), !ptr_v_1(type_c2ats_GtkIconSet, l2) | ptr l1, ptr l2, type_c2ats_GtkIconSize) -> void = "mac#gtk_image_set_from_icon_set"
fun fun_c2ats_gtk_image_set_from_animation: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkImage, l1), !ptr_v_1(type_c2ats_GdkPixbufAnimation, l2) | ptr l1, ptr l2) -> void = "mac#gtk_image_set_from_animation"
fun fun_c2ats_gtk_image_set_from_icon_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkImage, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GtkIconSize) -> void = "mac#gtk_image_set_from_icon_name"
fun fun_c2ats_gtk_image_set_from_gicon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkImage, l1), !ptr_v_1(type_c2ats_GIcon, l2) | ptr l1, ptr l2, type_c2ats_GtkIconSize) -> void = "mac#gtk_image_set_from_gicon"
fun fun_c2ats_gtk_image_set_from_surface: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkImage, l1), !ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l1, ptr l2) -> void = "mac#gtk_image_set_from_surface"
fun fun_c2ats_gtk_image_set_pixel_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkImage, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_image_set_pixel_size"
fun fun_c2ats_gtk_image_get_storage_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkImage, l1) | ptr l1) -> type_c2ats_GtkImageType = "mac#gtk_image_get_storage_type"
fun fun_c2ats_gtk_image_get_pixbuf: {l1:addr} (!ptr_v_1(type_c2ats_GtkImage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gtk_image_get_pixbuf"
fun fun_c2ats_gtk_image_get_stock: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GtkImage, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_1(type_c2ats_GtkIconSize, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_image_get_stock"
fun fun_c2ats_gtk_image_get_icon_set: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GtkImage, l1), !ptr_v_2(type_c2ats_GtkIconSet, l2, l2_1), !ptr_v_1(type_c2ats_GtkIconSize, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_image_get_icon_set"
fun fun_c2ats_gtk_image_get_animation: {l1:addr} (!ptr_v_1(type_c2ats_GtkImage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbufAnimation, l2) | ptr l2) = "mac#gtk_image_get_animation"
fun fun_c2ats_gtk_image_get_icon_name: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GtkImage, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1), !ptr_v_1(type_c2ats_GtkIconSize, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_image_get_icon_name"
fun fun_c2ats_gtk_image_get_gicon: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GtkImage, l1), !ptr_v_2(type_c2ats_GIcon, l2, l2_1), !ptr_v_1(type_c2ats_GtkIconSize, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_image_get_gicon"
fun fun_c2ats_gtk_image_get_pixel_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkImage, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_image_get_pixel_size"
// File: /usr/include/gtk-3.0/gtk/gtkentry.h
typedef type_c2ats_GtkEntryIconPosition = int
#define enum_c2ats_GTK_ENTRY_ICON_PRIMARY 0
#define enum_c2ats_GTK_ENTRY_ICON_SECONDARY 1
abst@ype struct_c2ats__GtkEntry // FIXME! Forward declaration.
typedef type_c2ats_GtkEntry = struct_c2ats__GtkEntry
abst@ype struct_c2ats__GtkEntryPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkEntryPrivate = struct_c2ats__GtkEntryPrivate
abst@ype struct_c2ats__GtkEntryClass // FIXME! Forward declaration.
typedef type_c2ats_GtkEntryClass = struct_c2ats__GtkEntryClass
typedef struct_c2ats__GtkEntry = $extype_struct"struct _GtkEntry" of {
  parent_instance = type_c2ats_GtkWidget,
  priv = ptr (* cPtr0(type_c2ats_GtkEntryPrivate) *)
}
typedef struct_c2ats__GtkEntryClass = $extype_struct"struct _GtkEntryClass" of {
  parent_class = type_c2ats_GtkWidgetClass,
  populate_popup = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void,
  activate = {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> void,
  move_cursor = {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_GtkMovementStep, type_c2ats_gint, type_c2ats_gboolean) -> void,
  insert_at_cursor = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  delete_from_cursor = {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_GtkDeleteType, type_c2ats_gint) -> void,
  backspace = {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> void,
  cut_clipboard = {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> void,
  copy_clipboard = {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> void,
  paste_clipboard = {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> void,
  toggle_overwrite = {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> void,
  get_text_area_size = {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void,
  get_frame_size = {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void,
  _gtk_reserved6 = () -> void,
  _gtk_reserved7 = () -> void
}
fun fun_c2ats_gtk_entry_get_type: () -> type_c2ats_GType = "mac#gtk_entry_get_type"
fun fun_c2ats_gtk_entry_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_entry_new"
fun fun_c2ats_gtk_entry_new_with_buffer: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntryBuffer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_entry_new_with_buffer"
fun fun_c2ats_gtk_entry_get_buffer: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkEntryBuffer, l2) | ptr l2) = "mac#gtk_entry_get_buffer"
fun fun_c2ats_gtk_entry_set_buffer: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_GtkEntryBuffer, l2) | ptr l1, ptr l2) -> void = "mac#gtk_entry_set_buffer"
fun fun_c2ats_gtk_entry_get_text_area: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> void = "mac#gtk_entry_get_text_area"
fun fun_c2ats_gtk_entry_set_visibility: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_entry_set_visibility"
fun fun_c2ats_gtk_entry_get_visibility: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_entry_get_visibility"
fun fun_c2ats_gtk_entry_set_invisible_char: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_gunichar) -> void = "mac#gtk_entry_set_invisible_char"
fun fun_c2ats_gtk_entry_get_invisible_char: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> type_c2ats_gunichar = "mac#gtk_entry_get_invisible_char"
fun fun_c2ats_gtk_entry_unset_invisible_char: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> void = "mac#gtk_entry_unset_invisible_char"
fun fun_c2ats_gtk_entry_set_has_frame: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_entry_set_has_frame"
fun fun_c2ats_gtk_entry_get_has_frame: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_entry_get_has_frame"
fun fun_c2ats_gtk_entry_set_inner_border: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_GtkBorder, l2) | ptr l1, ptr l2) -> void = "mac#gtk_entry_set_inner_border"
fun fun_c2ats_gtk_entry_get_inner_border: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkBorder, l2) | ptr l2) = "mac#gtk_entry_get_inner_border"
fun fun_c2ats_gtk_entry_set_overwrite_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_entry_set_overwrite_mode"
fun fun_c2ats_gtk_entry_get_overwrite_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_entry_get_overwrite_mode"
fun fun_c2ats_gtk_entry_set_max_length: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_entry_set_max_length"
fun fun_c2ats_gtk_entry_get_max_length: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_entry_get_max_length"
fun fun_c2ats_gtk_entry_get_text_length: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> type_c2ats_guint16 = "mac#gtk_entry_get_text_length"
fun fun_c2ats_gtk_entry_set_activates_default: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_entry_set_activates_default"
fun fun_c2ats_gtk_entry_get_activates_default: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_entry_get_activates_default"
fun fun_c2ats_gtk_entry_set_width_chars: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_entry_set_width_chars"
fun fun_c2ats_gtk_entry_get_width_chars: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_entry_get_width_chars"
fun fun_c2ats_gtk_entry_set_max_width_chars: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_entry_set_max_width_chars"
fun fun_c2ats_gtk_entry_get_max_width_chars: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_entry_get_max_width_chars"
fun fun_c2ats_gtk_entry_set_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_entry_set_text"
fun fun_c2ats_gtk_entry_get_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_entry_get_text"
fun fun_c2ats_gtk_entry_get_layout: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayout, l2) | ptr l2) = "mac#gtk_entry_get_layout"
fun fun_c2ats_gtk_entry_get_layout_offsets: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_entry_get_layout_offsets"
fun fun_c2ats_gtk_entry_set_alignment: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_gfloat) -> void = "mac#gtk_entry_set_alignment"
fun fun_c2ats_gtk_entry_get_alignment: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> type_c2ats_gfloat = "mac#gtk_entry_get_alignment"
fun fun_c2ats_gtk_entry_set_completion: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_GtkEntryCompletion, l2) | ptr l1, ptr l2) -> void = "mac#gtk_entry_set_completion"
fun fun_c2ats_gtk_entry_get_completion: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkEntryCompletion, l2) | ptr l2) = "mac#gtk_entry_get_completion"
fun fun_c2ats_gtk_entry_layout_index_to_text_index: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gint = "mac#gtk_entry_layout_index_to_text_index"
fun fun_c2ats_gtk_entry_text_index_to_layout_index: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gint = "mac#gtk_entry_text_index_to_layout_index"
fun fun_c2ats_gtk_entry_set_cursor_hadjustment: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> void = "mac#gtk_entry_set_cursor_hadjustment"
fun fun_c2ats_gtk_entry_get_cursor_hadjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_entry_get_cursor_hadjustment"
fun fun_c2ats_gtk_entry_set_progress_fraction: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_entry_set_progress_fraction"
fun fun_c2ats_gtk_entry_get_progress_fraction: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_entry_get_progress_fraction"
fun fun_c2ats_gtk_entry_set_progress_pulse_step: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_entry_set_progress_pulse_step"
fun fun_c2ats_gtk_entry_get_progress_pulse_step: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_entry_get_progress_pulse_step"
fun fun_c2ats_gtk_entry_progress_pulse: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> void = "mac#gtk_entry_progress_pulse"
fun fun_c2ats_gtk_entry_get_placeholder_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_entry_get_placeholder_text"
fun fun_c2ats_gtk_entry_set_placeholder_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_entry_set_placeholder_text"
fun fun_c2ats_gtk_entry_set_icon_from_pixbuf: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, type_c2ats_GtkEntryIconPosition, ptr l2) -> void = "mac#gtk_entry_set_icon_from_pixbuf"
fun fun_c2ats_gtk_entry_set_icon_from_stock: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GtkEntryIconPosition, ptr l2) -> void = "mac#gtk_entry_set_icon_from_stock"
fun fun_c2ats_gtk_entry_set_icon_from_icon_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GtkEntryIconPosition, ptr l2) -> void = "mac#gtk_entry_set_icon_from_icon_name"
fun fun_c2ats_gtk_entry_set_icon_from_gicon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_GIcon, l2) | ptr l1, type_c2ats_GtkEntryIconPosition, ptr l2) -> void = "mac#gtk_entry_set_icon_from_gicon"
fun fun_c2ats_gtk_entry_get_icon_storage_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_GtkEntryIconPosition) -> type_c2ats_GtkImageType = "mac#gtk_entry_get_icon_storage_type"
fun fun_c2ats_gtk_entry_get_icon_pixbuf: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_GtkEntryIconPosition) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gtk_entry_get_icon_pixbuf"
fun fun_c2ats_gtk_entry_get_icon_stock: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_GtkEntryIconPosition) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_entry_get_icon_stock"
fun fun_c2ats_gtk_entry_get_icon_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_GtkEntryIconPosition) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_entry_get_icon_name"
fun fun_c2ats_gtk_entry_get_icon_gicon: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_GtkEntryIconPosition) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#gtk_entry_get_icon_gicon"
fun fun_c2ats_gtk_entry_set_icon_activatable: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_GtkEntryIconPosition, type_c2ats_gboolean) -> void = "mac#gtk_entry_set_icon_activatable"
fun fun_c2ats_gtk_entry_get_icon_activatable: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_GtkEntryIconPosition) -> type_c2ats_gboolean = "mac#gtk_entry_get_icon_activatable"
fun fun_c2ats_gtk_entry_set_icon_sensitive: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_GtkEntryIconPosition, type_c2ats_gboolean) -> void = "mac#gtk_entry_set_icon_sensitive"
fun fun_c2ats_gtk_entry_get_icon_sensitive: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_GtkEntryIconPosition) -> type_c2ats_gboolean = "mac#gtk_entry_get_icon_sensitive"
fun fun_c2ats_gtk_entry_get_icon_at_pos: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gint = "mac#gtk_entry_get_icon_at_pos"
fun fun_c2ats_gtk_entry_set_icon_tooltip_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GtkEntryIconPosition, ptr l2) -> void = "mac#gtk_entry_set_icon_tooltip_text"
fun fun_c2ats_gtk_entry_get_icon_tooltip_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_GtkEntryIconPosition) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_entry_get_icon_tooltip_text"
fun fun_c2ats_gtk_entry_set_icon_tooltip_markup: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GtkEntryIconPosition, ptr l2) -> void = "mac#gtk_entry_set_icon_tooltip_markup"
fun fun_c2ats_gtk_entry_get_icon_tooltip_markup: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_GtkEntryIconPosition) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_entry_get_icon_tooltip_markup"
fun fun_c2ats_gtk_entry_set_icon_drag_source: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_GtkTargetList, l2) | ptr l1, type_c2ats_GtkEntryIconPosition, ptr l2, type_c2ats_GdkDragAction) -> void = "mac#gtk_entry_set_icon_drag_source"
fun fun_c2ats_gtk_entry_get_current_icon_drag_source: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_entry_get_current_icon_drag_source"
fun fun_c2ats_gtk_entry_get_icon_area: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, type_c2ats_GtkEntryIconPosition, ptr l2) -> void = "mac#gtk_entry_get_icon_area"
fun fun_c2ats_gtk_entry_im_context_filter_keypress: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_GdkEventKey, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_entry_im_context_filter_keypress"
fun fun_c2ats_gtk_entry_reset_im_context: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> void = "mac#gtk_entry_reset_im_context"
fun fun_c2ats_gtk_entry_set_input_purpose: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_GtkInputPurpose) -> void = "mac#gtk_entry_set_input_purpose"
fun fun_c2ats_gtk_entry_get_input_purpose: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> type_c2ats_GtkInputPurpose = "mac#gtk_entry_get_input_purpose"
fun fun_c2ats_gtk_entry_set_input_hints: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1, type_c2ats_GtkInputHints) -> void = "mac#gtk_entry_set_input_hints"
fun fun_c2ats_gtk_entry_get_input_hints: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> type_c2ats_GtkInputHints = "mac#gtk_entry_get_input_hints"
fun fun_c2ats_gtk_entry_set_attributes: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_PangoAttrList, l2) | ptr l1, ptr l2) -> void = "mac#gtk_entry_set_attributes"
fun fun_c2ats_gtk_entry_get_attributes: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoAttrList, l2) | ptr l2) = "mac#gtk_entry_get_attributes"
fun fun_c2ats_gtk_entry_set_tabs: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1), !ptr_v_1(type_c2ats_PangoTabArray, l2) | ptr l1, ptr l2) -> void = "mac#gtk_entry_set_tabs"
fun fun_c2ats_gtk_entry_get_tabs: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoTabArray, l2) | ptr l2) = "mac#gtk_entry_get_tabs"
fun fun_c2ats_gtk_entry_grab_focus_without_selecting: {l1:addr} (!ptr_v_1(type_c2ats_GtkEntry, l1) | ptr l1) -> void = "mac#gtk_entry_grab_focus_without_selecting"
// File: /usr/include/gtk-3.0/gtk/gtktreeview.h
typedef type_c2ats_GtkTreeViewDropPosition = int
#define enum_c2ats_GTK_TREE_VIEW_DROP_BEFORE 0
#define enum_c2ats_GTK_TREE_VIEW_DROP_AFTER 1
#define enum_c2ats_GTK_TREE_VIEW_DROP_INTO_OR_BEFORE 2
#define enum_c2ats_GTK_TREE_VIEW_DROP_INTO_OR_AFTER 3
abst@ype struct_c2ats__GtkTreeView // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeView = struct_c2ats__GtkTreeView
abst@ype struct_c2ats__GtkTreeViewClass // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeViewClass = struct_c2ats__GtkTreeViewClass
abst@ype struct_c2ats__GtkTreeViewPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeViewPrivate = struct_c2ats__GtkTreeViewPrivate
abst@ype struct_c2ats__GtkTreeSelection // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeSelection = struct_c2ats__GtkTreeSelection
abst@ype struct_c2ats__GtkTreeSelectionClass // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeSelectionClass = struct_c2ats__GtkTreeSelectionClass
typedef struct_c2ats__GtkTreeView = $extype_struct"struct _GtkTreeView" of {
  parent = type_c2ats_GtkContainer,
  priv = ptr (* cPtr0(type_c2ats_GtkTreeViewPrivate) *)
}
typedef struct_c2ats__GtkTreeViewClass = $extype_struct"struct _GtkTreeViewClass" of {
  parent_class = type_c2ats_GtkContainerClass,
  row_activated = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreeViewColumn, l3) | ptr l1, ptr l2, ptr l3) -> void,
  test_expand_row = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreePath, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  test_collapse_row = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreePath, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  row_expanded = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreePath, l3) | ptr l1, ptr l2, ptr l3) -> void,
  row_collapsed = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreePath, l3) | ptr l1, ptr l2, ptr l3) -> void,
  columns_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> void,
  cursor_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> void,
  move_cursor = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_GtkMovementStep, type_c2ats_gint) -> type_c2ats_gboolean,
  select_all = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gboolean,
  unselect_all = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gboolean,
  select_cursor_row = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_gboolean) -> type_c2ats_gboolean,
  toggle_cursor_row = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gboolean,
  expand_collapse_cursor_row = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_gboolean, type_c2ats_gboolean, type_c2ats_gboolean) -> type_c2ats_gboolean,
  select_cursor_parent = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gboolean,
  start_interactive_search = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gboolean,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void,
  _gtk_reserved6 = () -> void,
  _gtk_reserved7 = () -> void,
  _gtk_reserved8 = () -> void
}
typedef type_c2ats_GtkTreeViewColumnDropFunc = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreeViewColumn, l2), !ptr_v_1(type_c2ats_GtkTreeViewColumn, l3), !ptr_v_1(type_c2ats_GtkTreeViewColumn, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GtkTreeViewMappingFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void
typedef type_c2ats_GtkTreeViewSearchEqualFunc = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GtkTreeViewRowSeparatorFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GtkTreeViewSearchPositionFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void
fun fun_c2ats_gtk_tree_view_get_type: () -> type_c2ats_GType = "mac#gtk_tree_view_get_type"
fun fun_c2ats_gtk_tree_view_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_tree_view_new"
fun fun_c2ats_gtk_tree_view_new_with_model: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_tree_view_new_with_model"
fun fun_c2ats_gtk_tree_view_get_model: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeModel, l2) | ptr l2) = "mac#gtk_tree_view_get_model"
fun fun_c2ats_gtk_tree_view_set_model: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreeModel, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_view_set_model"
fun fun_c2ats_gtk_tree_view_get_selection: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeSelection, l2) | ptr l2) = "mac#gtk_tree_view_get_selection"
fun fun_c2ats_gtk_tree_view_get_hadjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_tree_view_get_hadjustment"
fun fun_c2ats_gtk_tree_view_set_hadjustment: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_view_set_hadjustment"
fun fun_c2ats_gtk_tree_view_get_vadjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_tree_view_get_vadjustment"
fun fun_c2ats_gtk_tree_view_set_vadjustment: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_view_set_vadjustment"
fun fun_c2ats_gtk_tree_view_get_headers_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_get_headers_visible"
fun fun_c2ats_gtk_tree_view_set_headers_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_set_headers_visible"
fun fun_c2ats_gtk_tree_view_columns_autosize: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> void = "mac#gtk_tree_view_columns_autosize"
fun fun_c2ats_gtk_tree_view_get_headers_clickable: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_get_headers_clickable"
fun fun_c2ats_gtk_tree_view_set_headers_clickable: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_set_headers_clickable"
fun fun_c2ats_gtk_tree_view_set_rules_hint: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_set_rules_hint"
fun fun_c2ats_gtk_tree_view_get_rules_hint: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_get_rules_hint"
fun fun_c2ats_gtk_tree_view_get_activate_on_single_click: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_get_activate_on_single_click"
fun fun_c2ats_gtk_tree_view_set_activate_on_single_click: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_set_activate_on_single_click"
fun fun_c2ats_gtk_tree_view_append_column: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreeViewColumn, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gtk_tree_view_append_column"
fun fun_c2ats_gtk_tree_view_remove_column: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreeViewColumn, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gtk_tree_view_remove_column"
fun fun_c2ats_gtk_tree_view_insert_column: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreeViewColumn, l2) | ptr l1, ptr l2, type_c2ats_gint) -> type_c2ats_gint = "mac#gtk_tree_view_insert_column"
fun fun_c2ats_gtk_tree_view_insert_column_with_attributes: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkCellRenderer, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> type_c2ats_gint = "mac#gtk_tree_view_insert_column_with_attributes"
fun fun_c2ats_gtk_tree_view_insert_column_with_data_func: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkCellRenderer, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3, type_c2ats_GtkTreeCellDataFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_gint = "mac#gtk_tree_view_insert_column_with_data_func"
fun fun_c2ats_gtk_tree_view_get_n_columns: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_tree_view_get_n_columns"
fun fun_c2ats_gtk_tree_view_get_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeViewColumn, l2) | ptr l2) = "mac#gtk_tree_view_get_column"
fun fun_c2ats_gtk_tree_view_get_columns: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_tree_view_get_columns"
fun fun_c2ats_gtk_tree_view_move_column_after: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreeViewColumn, l2), !ptr_v_1(type_c2ats_GtkTreeViewColumn, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_tree_view_move_column_after"
fun fun_c2ats_gtk_tree_view_set_expander_column: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreeViewColumn, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_view_set_expander_column"
fun fun_c2ats_gtk_tree_view_get_expander_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeViewColumn, l2) | ptr l2) = "mac#gtk_tree_view_get_expander_column"
fun fun_c2ats_gtk_tree_view_set_column_drag_function: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_GtkTreeViewColumnDropFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_tree_view_set_column_drag_function"
fun fun_c2ats_gtk_tree_view_scroll_to_point: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_tree_view_scroll_to_point"
fun fun_c2ats_gtk_tree_view_scroll_to_cell: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreeViewColumn, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean, type_c2ats_gfloat, type_c2ats_gfloat) -> void = "mac#gtk_tree_view_scroll_to_cell"
fun fun_c2ats_gtk_tree_view_row_activated: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreeViewColumn, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_tree_view_row_activated"
fun fun_c2ats_gtk_tree_view_expand_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> void = "mac#gtk_tree_view_expand_all"
fun fun_c2ats_gtk_tree_view_collapse_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> void = "mac#gtk_tree_view_collapse_all"
fun fun_c2ats_gtk_tree_view_expand_to_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_view_expand_to_path"
fun fun_c2ats_gtk_tree_view_expand_row: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gtk_tree_view_expand_row"
fun fun_c2ats_gtk_tree_view_collapse_row: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_tree_view_collapse_row"
fun fun_c2ats_gtk_tree_view_map_expanded_rows: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_GtkTreeViewMappingFunc, type_c2ats_gpointer) -> void = "mac#gtk_tree_view_map_expanded_rows"
fun fun_c2ats_gtk_tree_view_row_expanded: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_tree_view_row_expanded"
fun fun_c2ats_gtk_tree_view_set_reorderable: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_set_reorderable"
fun fun_c2ats_gtk_tree_view_get_reorderable: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_get_reorderable"
fun fun_c2ats_gtk_tree_view_set_cursor: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreeViewColumn, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_set_cursor"
fun fun_c2ats_gtk_tree_view_set_cursor_on_cell: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreeViewColumn, l3), !ptr_v_1(type_c2ats_GtkCellRenderer, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_set_cursor_on_cell"
fun fun_c2ats_gtk_tree_view_get_cursor: {l1,l2,l2_1,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_2(type_c2ats_GtkTreePath, l2, l2_1), !ptr_v_2(type_c2ats_GtkTreeViewColumn, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_tree_view_get_cursor"
fun fun_c2ats_gtk_tree_view_get_bin_window: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gtk_tree_view_get_bin_window"
fun fun_c2ats_gtk_tree_view_get_path_at_pos: {l1,l2,l2_1,l3,l3_1,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_2(type_c2ats_GtkTreePath, l2, l2_1), !ptr_v_2(type_c2ats_GtkTreeViewColumn, l3, l3_1), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, type_c2ats_gint, type_c2ats_gint, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#gtk_tree_view_get_path_at_pos"
fun fun_c2ats_gtk_tree_view_get_cell_area: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreeViewColumn, l3), !ptr_v_1(type_c2ats_GdkRectangle, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_tree_view_get_cell_area"
fun fun_c2ats_gtk_tree_view_get_background_area: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreeViewColumn, l3), !ptr_v_1(type_c2ats_GdkRectangle, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_tree_view_get_background_area"
fun fun_c2ats_gtk_tree_view_get_visible_rect: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_view_get_visible_rect"
fun fun_c2ats_gtk_tree_view_get_visible_range: {l1,l2,l2_1,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_2(type_c2ats_GtkTreePath, l2, l2_1), !ptr_v_2(type_c2ats_GtkTreePath, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_tree_view_get_visible_range"
fun fun_c2ats_gtk_tree_view_is_blank_at_pos: {l1,l2,l2_1,l3,l3_1,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_2(type_c2ats_GtkTreePath, l2, l2_1), !ptr_v_2(type_c2ats_GtkTreeViewColumn, l3, l3_1), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_gint, l5) | ptr l1, type_c2ats_gint, type_c2ats_gint, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#gtk_tree_view_is_blank_at_pos"
fun fun_c2ats_gtk_tree_view_enable_model_drag_source: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTargetEntry, l2) | ptr l1, type_c2ats_GdkModifierType, ptr l2, type_c2ats_gint, type_c2ats_GdkDragAction) -> void = "mac#gtk_tree_view_enable_model_drag_source"
fun fun_c2ats_gtk_tree_view_enable_model_drag_dest: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTargetEntry, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_GdkDragAction) -> void = "mac#gtk_tree_view_enable_model_drag_dest"
fun fun_c2ats_gtk_tree_view_unset_rows_drag_source: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> void = "mac#gtk_tree_view_unset_rows_drag_source"
fun fun_c2ats_gtk_tree_view_unset_rows_drag_dest: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> void = "mac#gtk_tree_view_unset_rows_drag_dest"
fun fun_c2ats_gtk_tree_view_set_drag_dest_row: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2, type_c2ats_GtkTreeViewDropPosition) -> void = "mac#gtk_tree_view_set_drag_dest_row"
fun fun_c2ats_gtk_tree_view_get_drag_dest_row: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_2(type_c2ats_GtkTreePath, l2, l2_1), !ptr_v_1(type_c2ats_GtkTreeViewDropPosition, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_tree_view_get_drag_dest_row"
fun fun_c2ats_gtk_tree_view_get_dest_row_at_pos: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_2(type_c2ats_GtkTreePath, l2, l2_1), !ptr_v_1(type_c2ats_GtkTreeViewDropPosition, l3) | ptr l1, type_c2ats_gint, type_c2ats_gint, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_tree_view_get_dest_row_at_pos"
fun fun_c2ats_gtk_tree_view_create_row_drag_icon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l3) | ptr l3) = "mac#gtk_tree_view_create_row_drag_icon"
fun fun_c2ats_gtk_tree_view_set_enable_search: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_set_enable_search"
fun fun_c2ats_gtk_tree_view_get_enable_search: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_get_enable_search"
fun fun_c2ats_gtk_tree_view_get_search_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_tree_view_get_search_column"
fun fun_c2ats_gtk_tree_view_set_search_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_tree_view_set_search_column"
fun fun_c2ats_gtk_tree_view_get_search_equal_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_GtkTreeViewSearchEqualFunc = "mac#gtk_tree_view_get_search_equal_func"
fun fun_c2ats_gtk_tree_view_set_search_equal_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_GtkTreeViewSearchEqualFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_tree_view_set_search_equal_func"
fun fun_c2ats_gtk_tree_view_get_search_entry: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkEntry, l2) | ptr l2) = "mac#gtk_tree_view_get_search_entry"
fun fun_c2ats_gtk_tree_view_set_search_entry: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkEntry, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_view_set_search_entry"
fun fun_c2ats_gtk_tree_view_get_search_position_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_GtkTreeViewSearchPositionFunc = "mac#gtk_tree_view_get_search_position_func"
fun fun_c2ats_gtk_tree_view_set_search_position_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_GtkTreeViewSearchPositionFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_tree_view_set_search_position_func"
fun fun_c2ats_gtk_tree_view_convert_widget_to_tree_coords: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#gtk_tree_view_convert_widget_to_tree_coords"
fun fun_c2ats_gtk_tree_view_convert_tree_to_widget_coords: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#gtk_tree_view_convert_tree_to_widget_coords"
fun fun_c2ats_gtk_tree_view_convert_widget_to_bin_window_coords: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#gtk_tree_view_convert_widget_to_bin_window_coords"
fun fun_c2ats_gtk_tree_view_convert_bin_window_to_widget_coords: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#gtk_tree_view_convert_bin_window_to_widget_coords"
fun fun_c2ats_gtk_tree_view_convert_tree_to_bin_window_coords: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#gtk_tree_view_convert_tree_to_bin_window_coords"
fun fun_c2ats_gtk_tree_view_convert_bin_window_to_tree_coords: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#gtk_tree_view_convert_bin_window_to_tree_coords"
typedef type_c2ats_GtkTreeDestroyCountFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gpointer) -> void
fun fun_c2ats_gtk_tree_view_set_destroy_count_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_GtkTreeDestroyCountFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_tree_view_set_destroy_count_func"
fun fun_c2ats_gtk_tree_view_set_fixed_height_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_set_fixed_height_mode"
fun fun_c2ats_gtk_tree_view_get_fixed_height_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_get_fixed_height_mode"
fun fun_c2ats_gtk_tree_view_set_hover_selection: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_set_hover_selection"
fun fun_c2ats_gtk_tree_view_get_hover_selection: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_get_hover_selection"
fun fun_c2ats_gtk_tree_view_set_hover_expand: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_set_hover_expand"
fun fun_c2ats_gtk_tree_view_get_hover_expand: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_get_hover_expand"
fun fun_c2ats_gtk_tree_view_set_rubber_banding: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_set_rubber_banding"
fun fun_c2ats_gtk_tree_view_get_rubber_banding: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_get_rubber_banding"
fun fun_c2ats_gtk_tree_view_is_rubber_banding_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_is_rubber_banding_active"
fun fun_c2ats_gtk_tree_view_get_row_separator_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_GtkTreeViewRowSeparatorFunc = "mac#gtk_tree_view_get_row_separator_func"
fun fun_c2ats_gtk_tree_view_set_row_separator_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_GtkTreeViewRowSeparatorFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_tree_view_set_row_separator_func"
fun fun_c2ats_gtk_tree_view_get_grid_lines: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_GtkTreeViewGridLines = "mac#gtk_tree_view_get_grid_lines"
fun fun_c2ats_gtk_tree_view_set_grid_lines: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_GtkTreeViewGridLines) -> void = "mac#gtk_tree_view_set_grid_lines"
fun fun_c2ats_gtk_tree_view_get_enable_tree_lines: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_get_enable_tree_lines"
fun fun_c2ats_gtk_tree_view_set_enable_tree_lines: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_set_enable_tree_lines"
fun fun_c2ats_gtk_tree_view_set_show_expanders: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tree_view_set_show_expanders"
fun fun_c2ats_gtk_tree_view_get_show_expanders: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tree_view_get_show_expanders"
fun fun_c2ats_gtk_tree_view_set_level_indentation: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_tree_view_set_level_indentation"
fun fun_c2ats_gtk_tree_view_get_level_indentation: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_tree_view_get_level_indentation"
fun fun_c2ats_gtk_tree_view_set_tooltip_row: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTooltip, l2), !ptr_v_1(type_c2ats_GtkTreePath, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_tree_view_set_tooltip_row"
fun fun_c2ats_gtk_tree_view_set_tooltip_cell: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_GtkTooltip, l2), !ptr_v_1(type_c2ats_GtkTreePath, l3), !ptr_v_1(type_c2ats_GtkTreeViewColumn, l4), !ptr_v_1(type_c2ats_GtkCellRenderer, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void = "mac#gtk_tree_view_set_tooltip_cell"
fun fun_c2ats_gtk_tree_view_get_tooltip_context: {l1,l2,l3,l4,l4_1,l5,l5_1,l6:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_2(type_c2ats_GtkTreeModel, l4, l4_1), !ptr_v_2(type_c2ats_GtkTreePath, l5, l5_1), !ptr_v_1(type_c2ats_GtkTreeIter, l6) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean, ptr l4, ptr l5, ptr l6) -> type_c2ats_gboolean = "mac#gtk_tree_view_get_tooltip_context"
fun fun_c2ats_gtk_tree_view_set_tooltip_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_tree_view_set_tooltip_column"
fun fun_c2ats_gtk_tree_view_get_tooltip_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_tree_view_get_tooltip_column"
// File: /usr/include/gtk-3.0/gtk/gtkcombobox.h
abst@ype struct_c2ats__GtkComboBox // FIXME! Forward declaration.
typedef type_c2ats_GtkComboBox = struct_c2ats__GtkComboBox
abst@ype struct_c2ats__GtkComboBoxClass // FIXME! Forward declaration.
typedef type_c2ats_GtkComboBoxClass = struct_c2ats__GtkComboBoxClass
abst@ype struct_c2ats__GtkComboBoxPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkComboBoxPrivate = struct_c2ats__GtkComboBoxPrivate
typedef struct_c2ats__GtkComboBox = $extype_struct"struct _GtkComboBox" of {
  parent_instance = type_c2ats_GtkBin,
  priv = ptr (* cPtr0(type_c2ats_GtkComboBoxPrivate) *)
}
typedef struct_c2ats__GtkComboBoxClass = $extype_struct"struct _GtkComboBoxClass" of {
  parent_class = type_c2ats_GtkBinClass,
  changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1) -> void,
  format_entry_text = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3),
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void
}
fun fun_c2ats_gtk_combo_box_get_type: () -> type_c2ats_GType = "mac#gtk_combo_box_get_type"
fun fun_c2ats_gtk_combo_box_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_combo_box_new"
fun fun_c2ats_gtk_combo_box_new_with_area: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_combo_box_new_with_area"
fun fun_c2ats_gtk_combo_box_new_with_area_and_entry: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_combo_box_new_with_area_and_entry"
fun fun_c2ats_gtk_combo_box_new_with_entry: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_combo_box_new_with_entry"
fun fun_c2ats_gtk_combo_box_new_with_model: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_combo_box_new_with_model"
fun fun_c2ats_gtk_combo_box_new_with_model_and_entry: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_combo_box_new_with_model_and_entry"
fun fun_c2ats_gtk_combo_box_get_wrap_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_combo_box_get_wrap_width"
fun fun_c2ats_gtk_combo_box_set_wrap_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_combo_box_set_wrap_width"
fun fun_c2ats_gtk_combo_box_get_row_span_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_combo_box_get_row_span_column"
fun fun_c2ats_gtk_combo_box_set_row_span_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_combo_box_set_row_span_column"
fun fun_c2ats_gtk_combo_box_get_column_span_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_combo_box_get_column_span_column"
fun fun_c2ats_gtk_combo_box_set_column_span_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_combo_box_set_column_span_column"
fun fun_c2ats_gtk_combo_box_get_add_tearoffs: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_combo_box_get_add_tearoffs"
fun fun_c2ats_gtk_combo_box_set_add_tearoffs: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_combo_box_set_add_tearoffs"
fun fun_c2ats_gtk_combo_box_get_title: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_combo_box_get_title"
fun fun_c2ats_gtk_combo_box_set_title: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_combo_box_set_title"
fun fun_c2ats_gtk_combo_box_get_focus_on_click: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_combo_box_get_focus_on_click"
fun fun_c2ats_gtk_combo_box_set_focus_on_click: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_combo_box_set_focus_on_click"
fun fun_c2ats_gtk_combo_box_get_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_combo_box_get_active"
fun fun_c2ats_gtk_combo_box_set_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_combo_box_set_active"
fun fun_c2ats_gtk_combo_box_get_active_iter: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_combo_box_get_active_iter"
fun fun_c2ats_gtk_combo_box_set_active_iter: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_combo_box_set_active_iter"
fun fun_c2ats_gtk_combo_box_set_model: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1), !ptr_v_1(type_c2ats_GtkTreeModel, l2) | ptr l1, ptr l2) -> void = "mac#gtk_combo_box_set_model"
fun fun_c2ats_gtk_combo_box_get_model: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeModel, l2) | ptr l2) = "mac#gtk_combo_box_get_model"
fun fun_c2ats_gtk_combo_box_get_row_separator_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1) -> type_c2ats_GtkTreeViewRowSeparatorFunc = "mac#gtk_combo_box_get_row_separator_func"
fun fun_c2ats_gtk_combo_box_set_row_separator_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1, type_c2ats_GtkTreeViewRowSeparatorFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_combo_box_set_row_separator_func"
fun fun_c2ats_gtk_combo_box_set_button_sensitivity: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1, type_c2ats_GtkSensitivityType) -> void = "mac#gtk_combo_box_set_button_sensitivity"
fun fun_c2ats_gtk_combo_box_get_button_sensitivity: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1) -> type_c2ats_GtkSensitivityType = "mac#gtk_combo_box_get_button_sensitivity"
fun fun_c2ats_gtk_combo_box_get_has_entry: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_combo_box_get_has_entry"
fun fun_c2ats_gtk_combo_box_set_entry_text_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_combo_box_set_entry_text_column"
fun fun_c2ats_gtk_combo_box_get_entry_text_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_combo_box_get_entry_text_column"
fun fun_c2ats_gtk_combo_box_set_popup_fixed_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_combo_box_set_popup_fixed_width"
fun fun_c2ats_gtk_combo_box_get_popup_fixed_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_combo_box_get_popup_fixed_width"
fun fun_c2ats_gtk_combo_box_popup: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1) -> void = "mac#gtk_combo_box_popup"
fun fun_c2ats_gtk_combo_box_popup_for_device: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1), !ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l1, ptr l2) -> void = "mac#gtk_combo_box_popup_for_device"
fun fun_c2ats_gtk_combo_box_popdown: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1) -> void = "mac#gtk_combo_box_popdown"
fun fun_c2ats_gtk_combo_box_get_popup_accessible: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2) | ptr l2) = "mac#gtk_combo_box_get_popup_accessible"
fun fun_c2ats_gtk_combo_box_get_id_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_combo_box_get_id_column"
fun fun_c2ats_gtk_combo_box_set_id_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_combo_box_set_id_column"
fun fun_c2ats_gtk_combo_box_get_active_id: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_combo_box_get_active_id"
fun fun_c2ats_gtk_combo_box_set_active_id: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkComboBox, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_combo_box_set_active_id"
// File: /usr/include/gtk-3.0/gtk/gtkappchooserbutton.h
abst@ype struct_c2ats__GtkAppChooserButton // FIXME! Forward declaration.
typedef type_c2ats_GtkAppChooserButton = struct_c2ats__GtkAppChooserButton
abst@ype struct_c2ats__GtkAppChooserButtonClass // FIXME! Forward declaration.
typedef type_c2ats_GtkAppChooserButtonClass = struct_c2ats__GtkAppChooserButtonClass
abst@ype struct_c2ats__GtkAppChooserButtonPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkAppChooserButtonPrivate = struct_c2ats__GtkAppChooserButtonPrivate
typedef struct_c2ats__GtkAppChooserButton = $extype_struct"struct _GtkAppChooserButton" of {
  parent = type_c2ats_GtkComboBox,
  priv = ptr (* cPtr0(type_c2ats_GtkAppChooserButtonPrivate) *)
}
typedef struct_c2ats__GtkAppChooserButtonClass = $extype_struct"struct _GtkAppChooserButtonClass" of {
  parent_class = type_c2ats_GtkComboBoxClass,
  custom_item_activated = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAppChooserButton, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  padding = @[type_c2ats_gpointer][16]
}
fun fun_c2ats_gtk_app_chooser_button_get_type: () -> type_c2ats_GType = "mac#gtk_app_chooser_button_get_type"
fun fun_c2ats_gtk_app_chooser_button_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_app_chooser_button_new"
fun fun_c2ats_gtk_app_chooser_button_append_separator: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooserButton, l1) | ptr l1) -> void = "mac#gtk_app_chooser_button_append_separator"
fun fun_c2ats_gtk_app_chooser_button_append_custom_item: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkAppChooserButton, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GIcon, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_app_chooser_button_append_custom_item"
fun fun_c2ats_gtk_app_chooser_button_set_active_custom_item: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAppChooserButton, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_app_chooser_button_set_active_custom_item"
fun fun_c2ats_gtk_app_chooser_button_set_show_dialog_item: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooserButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_app_chooser_button_set_show_dialog_item"
fun fun_c2ats_gtk_app_chooser_button_get_show_dialog_item: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooserButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_app_chooser_button_get_show_dialog_item"
fun fun_c2ats_gtk_app_chooser_button_set_heading: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAppChooserButton, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_app_chooser_button_set_heading"
fun fun_c2ats_gtk_app_chooser_button_get_heading: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooserButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_app_chooser_button_get_heading"
fun fun_c2ats_gtk_app_chooser_button_set_show_default_item: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooserButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_app_chooser_button_set_show_default_item"
fun fun_c2ats_gtk_app_chooser_button_get_show_default_item: {l1:addr} (!ptr_v_1(type_c2ats_GtkAppChooserButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_app_chooser_button_get_show_default_item"
// File: /usr/include/gtk-3.0/gtk/gtkshortcutswindow.h
abst@ype struct_c2ats__GtkShortcutsWindow // FIXME! Forward declaration.
typedef type_c2ats_GtkShortcutsWindow = struct_c2ats__GtkShortcutsWindow
abst@ype struct_c2ats__GtkShortcutsWindowClass // FIXME! Forward declaration.
typedef type_c2ats_GtkShortcutsWindowClass = struct_c2ats__GtkShortcutsWindowClass
typedef struct_c2ats__GtkShortcutsWindow = $extype_struct"struct _GtkShortcutsWindow" of {
  window = type_c2ats_GtkWindow
}
typedef struct_c2ats__GtkShortcutsWindowClass = $extype_struct"struct _GtkShortcutsWindowClass" of {
  parent_class = type_c2ats_GtkWindowClass,
  close = {l1:addr} (!ptr_v_1(type_c2ats_GtkShortcutsWindow, l1) | ptr l1) -> void,
  search = {l1:addr} (!ptr_v_1(type_c2ats_GtkShortcutsWindow, l1) | ptr l1) -> void
}
fun fun_c2ats_gtk_shortcuts_window_get_type: () -> type_c2ats_GType = "mac#gtk_shortcuts_window_get_type"
typedef type_c2ats_GtkShortcutsWindow_autoptr = cPtr0(type_c2ats_GtkShortcutsWindow)
fun fun_c2ats_glib_autoptr_cleanup_GtkShortcutsWindow: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkShortcutsWindow, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkShortcutsWindow"
// File: /usr/include/gtk-3.0/gtk/gtkapplicationwindow.h
abst@ype struct_c2ats__GtkApplicationWindowPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkApplicationWindowPrivate = struct_c2ats__GtkApplicationWindowPrivate
abst@ype struct_c2ats__GtkApplicationWindowClass // FIXME! Forward declaration.
typedef type_c2ats_GtkApplicationWindowClass = struct_c2ats__GtkApplicationWindowClass
abst@ype struct_c2ats__GtkApplicationWindow // FIXME! Forward declaration.
typedef type_c2ats_GtkApplicationWindow = struct_c2ats__GtkApplicationWindow
typedef struct_c2ats__GtkApplicationWindow = $extype_struct"struct _GtkApplicationWindow" of {
  parent_instance = type_c2ats_GtkWindow,
  priv = ptr (* cPtr0(type_c2ats_GtkApplicationWindowPrivate) *)
}
typedef struct_c2ats__GtkApplicationWindowClass = $extype_struct"struct _GtkApplicationWindowClass" of {
  parent_class = type_c2ats_GtkWindowClass,
  padding = @[type_c2ats_gpointer][14]
}
fun fun_c2ats_gtk_application_window_get_type: () -> type_c2ats_GType = "mac#gtk_application_window_get_type"
fun fun_c2ats_gtk_application_window_new: {l1:addr} (!ptr_v_1(type_c2ats_GtkApplication, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_application_window_new"
fun fun_c2ats_gtk_application_window_set_show_menubar: {l1:addr} (!ptr_v_1(type_c2ats_GtkApplicationWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_application_window_set_show_menubar"
fun fun_c2ats_gtk_application_window_get_show_menubar: {l1:addr} (!ptr_v_1(type_c2ats_GtkApplicationWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_application_window_get_show_menubar"
fun fun_c2ats_gtk_application_window_get_id: {l1:addr} (!ptr_v_1(type_c2ats_GtkApplicationWindow, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_application_window_get_id"
fun fun_c2ats_gtk_application_window_set_help_overlay: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkApplicationWindow, l1), !ptr_v_1(type_c2ats_GtkShortcutsWindow, l2) | ptr l1, ptr l2) -> void = "mac#gtk_application_window_set_help_overlay"
fun fun_c2ats_gtk_application_window_get_help_overlay: {l1:addr} (!ptr_v_1(type_c2ats_GtkApplicationWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkShortcutsWindow, l2) | ptr l2) = "mac#gtk_application_window_get_help_overlay"
// File: /usr/include/gtk-3.0/gtk/gtkframe.h
abst@ype struct_c2ats__GtkFrame // FIXME! Forward declaration.
typedef type_c2ats_GtkFrame = struct_c2ats__GtkFrame
abst@ype struct_c2ats__GtkFramePrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkFramePrivate = struct_c2ats__GtkFramePrivate
abst@ype struct_c2ats__GtkFrameClass // FIXME! Forward declaration.
typedef type_c2ats_GtkFrameClass = struct_c2ats__GtkFrameClass
typedef struct_c2ats__GtkFrame = $extype_struct"struct _GtkFrame" of {
  bin = type_c2ats_GtkBin,
  priv = ptr (* cPtr0(type_c2ats_GtkFramePrivate) *)
}
typedef struct_c2ats__GtkFrameClass = $extype_struct"struct _GtkFrameClass" of {
  parent_class = type_c2ats_GtkBinClass,
  compute_child_allocation = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFrame, l1), !ptr_v_1(type_c2ats_GtkAllocation, l2) | ptr l1, ptr l2) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_frame_get_type: () -> type_c2ats_GType = "mac#gtk_frame_get_type"
fun fun_c2ats_gtk_frame_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_frame_new"
fun fun_c2ats_gtk_frame_set_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFrame, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_frame_set_label"
fun fun_c2ats_gtk_frame_get_label: {l1:addr} (!ptr_v_1(type_c2ats_GtkFrame, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_frame_get_label"
fun fun_c2ats_gtk_frame_set_label_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFrame, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_frame_set_label_widget"
fun fun_c2ats_gtk_frame_get_label_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkFrame, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_frame_get_label_widget"
fun fun_c2ats_gtk_frame_set_label_align: {l1:addr} (!ptr_v_1(type_c2ats_GtkFrame, l1) | ptr l1, type_c2ats_gfloat, type_c2ats_gfloat) -> void = "mac#gtk_frame_set_label_align"
fun fun_c2ats_gtk_frame_get_label_align: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkFrame, l1), !ptr_v_1(type_c2ats_gfloat, l2), !ptr_v_1(type_c2ats_gfloat, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_frame_get_label_align"
fun fun_c2ats_gtk_frame_set_shadow_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkFrame, l1) | ptr l1, type_c2ats_GtkShadowType) -> void = "mac#gtk_frame_set_shadow_type"
fun fun_c2ats_gtk_frame_get_shadow_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkFrame, l1) | ptr l1) -> type_c2ats_GtkShadowType = "mac#gtk_frame_get_shadow_type"
// File: /usr/include/gtk-3.0/gtk/gtkaspectframe.h
abst@ype struct_c2ats__GtkAspectFrame // FIXME! Forward declaration.
typedef type_c2ats_GtkAspectFrame = struct_c2ats__GtkAspectFrame
abst@ype struct_c2ats__GtkAspectFramePrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkAspectFramePrivate = struct_c2ats__GtkAspectFramePrivate
abst@ype struct_c2ats__GtkAspectFrameClass // FIXME! Forward declaration.
typedef type_c2ats_GtkAspectFrameClass = struct_c2ats__GtkAspectFrameClass
typedef struct_c2ats__GtkAspectFrame = $extype_struct"struct _GtkAspectFrame" of {
  frame = type_c2ats_GtkFrame,
  priv = ptr (* cPtr0(type_c2ats_GtkAspectFramePrivate) *)
}
typedef struct_c2ats__GtkAspectFrameClass = $extype_struct"struct _GtkAspectFrameClass" of {
  parent_class = type_c2ats_GtkFrameClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_aspect_frame_get_type: () -> type_c2ats_GType = "mac#gtk_aspect_frame_get_type"
fun fun_c2ats_gtk_aspect_frame_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gfloat, type_c2ats_gfloat, type_c2ats_gfloat, type_c2ats_gboolean) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_aspect_frame_new"
fun fun_c2ats_gtk_aspect_frame_set: {l1:addr} (!ptr_v_1(type_c2ats_GtkAspectFrame, l1) | ptr l1, type_c2ats_gfloat, type_c2ats_gfloat, type_c2ats_gfloat, type_c2ats_gboolean) -> void = "mac#gtk_aspect_frame_set"
// File: /usr/include/gtk-3.0/gtk/gtkassistant.h
typedef type_c2ats_GtkAssistantPageType = int
#define enum_c2ats_GTK_ASSISTANT_PAGE_CONTENT 0
#define enum_c2ats_GTK_ASSISTANT_PAGE_INTRO 1
#define enum_c2ats_GTK_ASSISTANT_PAGE_CONFIRM 2
#define enum_c2ats_GTK_ASSISTANT_PAGE_SUMMARY 3
#define enum_c2ats_GTK_ASSISTANT_PAGE_PROGRESS 4
#define enum_c2ats_GTK_ASSISTANT_PAGE_CUSTOM 5
abst@ype struct_c2ats__GtkAssistant // FIXME! Forward declaration.
typedef type_c2ats_GtkAssistant = struct_c2ats__GtkAssistant
abst@ype struct_c2ats__GtkAssistantPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkAssistantPrivate = struct_c2ats__GtkAssistantPrivate
abst@ype struct_c2ats__GtkAssistantClass // FIXME! Forward declaration.
typedef type_c2ats_GtkAssistantClass = struct_c2ats__GtkAssistantClass
typedef struct_c2ats__GtkAssistant = $extype_struct"struct _GtkAssistant" of {
  parent = type_c2ats_GtkWindow,
  priv = ptr (* cPtr0(type_c2ats_GtkAssistantPrivate) *)
}
typedef struct_c2ats__GtkAssistantClass = $extype_struct"struct _GtkAssistantClass" of {
  parent_class = type_c2ats_GtkWindowClass,
  prepare = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void,
  apply = {l1:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1) | ptr l1) -> void,
  close = {l1:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1) | ptr l1) -> void,
  cancel = {l1:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void
}
typedef type_c2ats_GtkAssistantPageFunc = (type_c2ats_gint, type_c2ats_gpointer) -> type_c2ats_gint
fun fun_c2ats_gtk_assistant_get_type: () -> type_c2ats_GType = "mac#gtk_assistant_get_type"
fun fun_c2ats_gtk_assistant_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_assistant_new"
fun fun_c2ats_gtk_assistant_next_page: {l1:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1) | ptr l1) -> void = "mac#gtk_assistant_next_page"
fun fun_c2ats_gtk_assistant_previous_page: {l1:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1) | ptr l1) -> void = "mac#gtk_assistant_previous_page"
fun fun_c2ats_gtk_assistant_get_current_page: {l1:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_assistant_get_current_page"
fun fun_c2ats_gtk_assistant_set_current_page: {l1:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_assistant_set_current_page"
fun fun_c2ats_gtk_assistant_get_n_pages: {l1:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_assistant_get_n_pages"
fun fun_c2ats_gtk_assistant_get_nth_page: {l1:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_assistant_get_nth_page"
fun fun_c2ats_gtk_assistant_prepend_page: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gtk_assistant_prepend_page"
fun fun_c2ats_gtk_assistant_append_page: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gtk_assistant_append_page"
fun fun_c2ats_gtk_assistant_insert_page: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gint) -> type_c2ats_gint = "mac#gtk_assistant_insert_page"
fun fun_c2ats_gtk_assistant_remove_page: {l1:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_assistant_remove_page"
fun fun_c2ats_gtk_assistant_set_forward_page_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1) | ptr l1, type_c2ats_GtkAssistantPageFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_assistant_set_forward_page_func"
fun fun_c2ats_gtk_assistant_set_page_type: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_GtkAssistantPageType) -> void = "mac#gtk_assistant_set_page_type"
fun fun_c2ats_gtk_assistant_get_page_type: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> type_c2ats_GtkAssistantPageType = "mac#gtk_assistant_get_page_type"
fun fun_c2ats_gtk_assistant_set_page_title: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_assistant_set_page_title"
fun fun_c2ats_gtk_assistant_get_page_title: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#gtk_assistant_get_page_title"
fun fun_c2ats_gtk_assistant_set_page_header_image: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_assistant_set_page_header_image"
fun fun_c2ats_gtk_assistant_get_page_header_image: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l3) = "mac#gtk_assistant_get_page_header_image"
fun fun_c2ats_gtk_assistant_set_page_side_image: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_assistant_set_page_side_image"
fun fun_c2ats_gtk_assistant_get_page_side_image: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l3) = "mac#gtk_assistant_get_page_side_image"
fun fun_c2ats_gtk_assistant_set_page_complete: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gtk_assistant_set_page_complete"
fun fun_c2ats_gtk_assistant_get_page_complete: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_assistant_get_page_complete"
fun fun_c2ats_gtk_assistant_add_action_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_assistant_add_action_widget"
fun fun_c2ats_gtk_assistant_remove_action_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_assistant_remove_action_widget"
fun fun_c2ats_gtk_assistant_update_buttons_state: {l1:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1) | ptr l1) -> void = "mac#gtk_assistant_update_buttons_state"
fun fun_c2ats_gtk_assistant_commit: {l1:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1) | ptr l1) -> void = "mac#gtk_assistant_commit"
fun fun_c2ats_gtk_assistant_set_page_has_padding: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gtk_assistant_set_page_has_padding"
fun fun_c2ats_gtk_assistant_get_page_has_padding: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAssistant, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_assistant_get_page_has_padding"
// File: /usr/include/gtk-3.0/gtk/gtkbbox.h
abst@ype struct_c2ats__GtkButtonBox // FIXME! Forward declaration.
typedef type_c2ats_GtkButtonBox = struct_c2ats__GtkButtonBox
abst@ype struct_c2ats__GtkButtonBoxPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkButtonBoxPrivate = struct_c2ats__GtkButtonBoxPrivate
abst@ype struct_c2ats__GtkButtonBoxClass // FIXME! Forward declaration.
typedef type_c2ats_GtkButtonBoxClass = struct_c2ats__GtkButtonBoxClass
typedef struct_c2ats__GtkButtonBox = $extype_struct"struct _GtkButtonBox" of {
  box = type_c2ats_GtkBox,
  priv = ptr (* cPtr0(type_c2ats_GtkButtonBoxPrivate) *)
}
typedef struct_c2ats__GtkButtonBoxClass = $extype_struct"struct _GtkButtonBoxClass" of {
  parent_class = type_c2ats_GtkBoxClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
typedef type_c2ats_GtkButtonBoxStyle = int
#define enum_c2ats_GTK_BUTTONBOX_SPREAD 1
#define enum_c2ats_GTK_BUTTONBOX_EDGE 1 + 1
#define enum_c2ats_GTK_BUTTONBOX_START 1 + 2
#define enum_c2ats_GTK_BUTTONBOX_END 1 + 3
#define enum_c2ats_GTK_BUTTONBOX_CENTER 1 + 4
#define enum_c2ats_GTK_BUTTONBOX_EXPAND 1 + 5
fun fun_c2ats_gtk_button_box_get_type: () -> type_c2ats_GType = "mac#gtk_button_box_get_type"
fun fun_c2ats_gtk_button_box_new: (type_c2ats_GtkOrientation) -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_button_box_new"
fun fun_c2ats_gtk_button_box_get_layout: {l1:addr} (!ptr_v_1(type_c2ats_GtkButtonBox, l1) | ptr l1) -> type_c2ats_GtkButtonBoxStyle = "mac#gtk_button_box_get_layout"
fun fun_c2ats_gtk_button_box_set_layout: {l1:addr} (!ptr_v_1(type_c2ats_GtkButtonBox, l1) | ptr l1, type_c2ats_GtkButtonBoxStyle) -> void = "mac#gtk_button_box_set_layout"
fun fun_c2ats_gtk_button_box_get_child_secondary: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkButtonBox, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_button_box_get_child_secondary"
fun fun_c2ats_gtk_button_box_set_child_secondary: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkButtonBox, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gtk_button_box_set_child_secondary"
fun fun_c2ats_gtk_button_box_get_child_non_homogeneous: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkButtonBox, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_button_box_get_child_non_homogeneous"
fun fun_c2ats_gtk_button_box_set_child_non_homogeneous: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkButtonBox, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gtk_button_box_set_child_non_homogeneous"
// File: /usr/include/gtk-3.0/gtk/gtkbindings.h
abst@ype struct_c2ats__GtkBindingSet // FIXME! Forward declaration.
typedef type_c2ats_GtkBindingSet = struct_c2ats__GtkBindingSet
abst@ype struct_c2ats__GtkBindingEntry // FIXME! Forward declaration.
typedef type_c2ats_GtkBindingEntry = struct_c2ats__GtkBindingEntry
abst@ype struct_c2ats__GtkBindingSignal // FIXME! Forward declaration.
typedef type_c2ats_GtkBindingSignal = struct_c2ats__GtkBindingSignal
abst@ype struct_c2ats__GtkBindingArg // FIXME! Forward declaration.
typedef type_c2ats_GtkBindingArg = struct_c2ats__GtkBindingArg
typedef struct_c2ats__GtkBindingSet = $extype_struct"struct _GtkBindingSet" of {
  set_name = ptr (* cPtr0(type_c2ats_gchar) *),
  priority = type_c2ats_gint,
  widget_path_pspecs = ptr (* cPtr0(type_c2ats_GSList) *),
  widget_class_pspecs = ptr (* cPtr0(type_c2ats_GSList) *),
  class_branch_pspecs = ptr (* cPtr0(type_c2ats_GSList) *),
  entries = ptr (* cPtr0(type_c2ats_GtkBindingEntry) *),
  current = ptr (* cPtr0(type_c2ats_GtkBindingEntry) *),
  parsed = type_c2ats_guint
}
typedef struct_c2ats__GtkBindingEntry = $extype_struct"struct _GtkBindingEntry" of {
  keyval = type_c2ats_guint,
  modifiers = type_c2ats_GdkModifierType,
  binding_set = ptr (* cPtr0(type_c2ats_GtkBindingSet) *),
  destroyed = type_c2ats_guint,
  in_emission = type_c2ats_guint,
  marks_unbound = type_c2ats_guint,
  set_next = ptr (* cPtr0(type_c2ats_GtkBindingEntry) *),
  hash_next = ptr (* cPtr0(type_c2ats_GtkBindingEntry) *),
  signals = ptr (* cPtr0(type_c2ats_GtkBindingSignal) *)
}
typedef union_c2ats_anon_206151 = $extype_struct"union { glong long_data; gdouble double_data; gchar* string_data; }" of {
  long_data = type_c2ats_glong,
  double_data = type_c2ats_gdouble,
  string_data = ptr (* cPtr0(type_c2ats_gchar) *)
}
typedef struct_c2ats__GtkBindingArg = $extype_struct"struct _GtkBindingArg" of {
  arg_type = type_c2ats_GType,
  d = union_c2ats_anon_206151
}
typedef struct_c2ats__GtkBindingSignal = $extype_struct"struct _GtkBindingSignal" of {
  next = ptr (* cPtr0(type_c2ats_GtkBindingSignal) *),
  signal_name = ptr (* cPtr0(type_c2ats_gchar) *),
  n_args = type_c2ats_guint,
  args = ptr (* cPtr0(type_c2ats_GtkBindingArg) *)
}
fun fun_c2ats_gtk_binding_set_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkBindingSet, l2) | ptr l2) = "mac#gtk_binding_set_new"
fun fun_c2ats_gtk_binding_set_by_class: (type_c2ats_gpointer) -> [l1:addr] (ptr_v_1(type_c2ats_GtkBindingSet, l1) | ptr l1) = "mac#gtk_binding_set_by_class"
fun fun_c2ats_gtk_binding_set_find: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkBindingSet, l2) | ptr l2) = "mac#gtk_binding_set_find"
fun fun_c2ats_gtk_bindings_activate: {l1:addr} (!ptr_v_1(type_c2ats_GObject, l1) | ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType) -> type_c2ats_gboolean = "mac#gtk_bindings_activate"
fun fun_c2ats_gtk_bindings_activate_event: {l1,l2:addr} (!ptr_v_1(type_c2ats_GObject, l1), !ptr_v_1(type_c2ats_GdkEventKey, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_bindings_activate_event"
fun fun_c2ats_gtk_binding_set_activate: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBindingSet, l1), !ptr_v_1(type_c2ats_GObject, l2) | ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType, ptr l2) -> type_c2ats_gboolean = "mac#gtk_binding_set_activate"
fun fun_c2ats_gtk_binding_entry_skip: {l1:addr} (!ptr_v_1(type_c2ats_GtkBindingSet, l1) | ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType) -> void = "mac#gtk_binding_entry_skip"
fun fun_c2ats_gtk_binding_entry_add_signal: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBindingSet, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType, ptr l2, type_c2ats_guint) -> void = "mac#gtk_binding_entry_add_signal"
fun fun_c2ats_gtk_binding_entry_add_signall: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkBindingSet, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GSList, l3) | ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType, ptr l2, ptr l3) -> void = "mac#gtk_binding_entry_add_signall"
fun fun_c2ats_gtk_binding_entry_add_signal_from_string: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBindingSet, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_GTokenType = "mac#gtk_binding_entry_add_signal_from_string"
fun fun_c2ats_gtk_binding_entry_remove: {l1:addr} (!ptr_v_1(type_c2ats_GtkBindingSet, l1) | ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType) -> void = "mac#gtk_binding_entry_remove"
// File: /usr/include/gtk-3.0/gtk/gtkbuilder.h
abst@ype struct_c2ats__GtkBuilderClass // FIXME! Forward declaration.
typedef type_c2ats_GtkBuilderClass = struct_c2ats__GtkBuilderClass
abst@ype struct_c2ats__GtkBuilderPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkBuilderPrivate = struct_c2ats__GtkBuilderPrivate
typedef type_c2ats_GtkBuilderError = int
#define enum_c2ats_GTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION 0
#define enum_c2ats_GTK_BUILDER_ERROR_UNHANDLED_TAG 1
#define enum_c2ats_GTK_BUILDER_ERROR_MISSING_ATTRIBUTE 2
#define enum_c2ats_GTK_BUILDER_ERROR_INVALID_ATTRIBUTE 3
#define enum_c2ats_GTK_BUILDER_ERROR_INVALID_TAG 4
#define enum_c2ats_GTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE 5
#define enum_c2ats_GTK_BUILDER_ERROR_INVALID_VALUE 6
#define enum_c2ats_GTK_BUILDER_ERROR_VERSION_MISMATCH 7
#define enum_c2ats_GTK_BUILDER_ERROR_DUPLICATE_ID 8
#define enum_c2ats_GTK_BUILDER_ERROR_OBJECT_TYPE_REFUSED 9
#define enum_c2ats_GTK_BUILDER_ERROR_TEMPLATE_MISMATCH 10
#define enum_c2ats_GTK_BUILDER_ERROR_INVALID_PROPERTY 11
#define enum_c2ats_GTK_BUILDER_ERROR_INVALID_SIGNAL 12
#define enum_c2ats_GTK_BUILDER_ERROR_INVALID_ID 13
fun fun_c2ats_gtk_builder_error_quark: () -> type_c2ats_GQuark = "mac#gtk_builder_error_quark"
typedef struct_c2ats__GtkBuilder = $extype_struct"struct _GtkBuilder" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkBuilderPrivate) *)
}
typedef struct_c2ats__GtkBuilderClass = $extype_struct"struct _GtkBuilderClass" of {
  parent_class = type_c2ats_GObjectClass,
  get_type_from_name = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_GType,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void,
  _gtk_reserved6 = () -> void,
  _gtk_reserved7 = () -> void,
  _gtk_reserved8 = () -> void
}
fun fun_c2ats_gtk_builder_get_type: () -> type_c2ats_GType = "mac#gtk_builder_get_type"
fun fun_c2ats_gtk_builder_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkBuilder, l1) | ptr l1) = "mac#gtk_builder_new"
fun fun_c2ats_gtk_builder_add_from_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_guint = "mac#gtk_builder_add_from_file"
fun fun_c2ats_gtk_builder_add_from_resource: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_guint = "mac#gtk_builder_add_from_resource"
fun fun_c2ats_gtk_builder_add_from_string: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gsize, ptr l3) -> type_c2ats_guint = "mac#gtk_builder_add_from_string"
fun fun_c2ats_gtk_builder_add_objects_from_file: {l1,l2,l3,l3_1,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_guint = "mac#gtk_builder_add_objects_from_file"
fun fun_c2ats_gtk_builder_add_objects_from_resource: {l1,l2,l3,l3_1,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_guint = "mac#gtk_builder_add_objects_from_resource"
fun fun_c2ats_gtk_builder_add_objects_from_string: {l1,l2,l3,l3_1,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gsize, ptr l3, ptr l4) -> type_c2ats_guint = "mac#gtk_builder_add_objects_from_string"
fun fun_c2ats_gtk_builder_get_object: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GObject, l3) | ptr l3) = "mac#gtk_builder_get_object"
fun fun_c2ats_gtk_builder_get_objects: {l1:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_builder_get_objects"
fun fun_c2ats_gtk_builder_expose_object: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GObject, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_builder_expose_object"
fun fun_c2ats_gtk_builder_connect_signals: {l1:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#gtk_builder_connect_signals"
fun fun_c2ats_gtk_builder_connect_signals_full: {l1:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1) | ptr l1, type_c2ats_GtkBuilderConnectFunc, type_c2ats_gpointer) -> void = "mac#gtk_builder_connect_signals_full"
fun fun_c2ats_gtk_builder_set_translation_domain: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_builder_set_translation_domain"
fun fun_c2ats_gtk_builder_get_translation_domain: {l1:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_builder_get_translation_domain"
fun fun_c2ats_gtk_builder_get_type_from_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_GType = "mac#gtk_builder_get_type_from_name"
fun fun_c2ats_gtk_builder_value_from_string: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1), !ptr_v_1(type_c2ats_GParamSpec, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GValue, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#gtk_builder_value_from_string"
fun fun_c2ats_gtk_builder_value_from_string_type: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GValue, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, type_c2ats_GType, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#gtk_builder_value_from_string_type"
fun fun_c2ats_gtk_builder_new_from_file: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkBuilder, l2) | ptr l2) = "mac#gtk_builder_new_from_file"
fun fun_c2ats_gtk_builder_new_from_resource: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkBuilder, l2) | ptr l2) = "mac#gtk_builder_new_from_resource"
fun fun_c2ats_gtk_builder_new_from_string: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gssize) -> [l2:addr] (ptr_v_1(type_c2ats_GtkBuilder, l2) | ptr l2) = "mac#gtk_builder_new_from_string"
fun fun_c2ats_gtk_builder_add_callback_symbol: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GCallback) -> void = "mac#gtk_builder_add_callback_symbol"
fun fun_c2ats_gtk_builder_add_callback_symbols: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GCallback) -> void = "mac#gtk_builder_add_callback_symbols"
fun fun_c2ats_gtk_builder_lookup_callback_symbol: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_GCallback = "mac#gtk_builder_lookup_callback_symbol"
fun fun_c2ats_gtk_builder_set_application: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1), !ptr_v_1(type_c2ats_GtkApplication, l2) | ptr l1, ptr l2) -> void = "mac#gtk_builder_set_application"
fun fun_c2ats_gtk_builder_get_application: {l1:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkApplication, l2) | ptr l2) = "mac#gtk_builder_get_application"
fun fun_c2ats_gtk_builder_extend_with_template: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GtkBuilder, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GType, ptr l3, type_c2ats_gsize, ptr l4) -> type_c2ats_guint = "mac#gtk_builder_extend_with_template"
// File: /usr/include/gtk-3.0/gtk/gtkbuildable.h
abst@ype struct_c2ats__GtkBuildable // FIXME! Forward declaration.
typedef type_c2ats_GtkBuildable = struct_c2ats__GtkBuildable
abst@ype struct_c2ats__GtkBuildableIface // FIXME! Forward declaration.
typedef type_c2ats_GtkBuildableIface = struct_c2ats__GtkBuildableIface
typedef struct_c2ats__GtkBuildableIface = $extype_struct"struct _GtkBuildableIface" of {
  g_iface = type_c2ats_GTypeInterface,
  set_name = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  get_name = {l1:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  add_child = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_GtkBuilder, l2), !ptr_v_1(type_c2ats_GObject, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void,
  set_buildable_property = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_GtkBuilder, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GValue, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void,
  construct_child = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_GtkBuilder, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GObject, l4) | ptr l4),
  custom_tag_start = {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_GtkBuilder, l2), !ptr_v_1(type_c2ats_GObject, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_GMarkupParser, l5), !ptr_v_1(type_c2ats_gpointer, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> type_c2ats_gboolean,
  custom_tag_end = {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_GtkBuilder, l2), !ptr_v_1(type_c2ats_GObject, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gpointer, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void,
  custom_finished = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_GtkBuilder, l2), !ptr_v_1(type_c2ats_GObject, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gpointer) -> void,
  parser_finished = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_GtkBuilder, l2) | ptr l1, ptr l2) -> void,
  get_internal_child = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_GtkBuilder, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GObject, l4) | ptr l4)
}
fun fun_c2ats_gtk_buildable_get_type: () -> type_c2ats_GType = "mac#gtk_buildable_get_type"
fun fun_c2ats_gtk_buildable_set_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_buildable_set_name"
fun fun_c2ats_gtk_buildable_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_buildable_get_name"
fun fun_c2ats_gtk_buildable_add_child: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_GtkBuilder, l2), !ptr_v_1(type_c2ats_GObject, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_buildable_add_child"
fun fun_c2ats_gtk_buildable_set_buildable_property: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_GtkBuilder, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GValue, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_buildable_set_buildable_property"
fun fun_c2ats_gtk_buildable_construct_child: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_GtkBuilder, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GObject, l4) | ptr l4) = "mac#gtk_buildable_construct_child"
fun fun_c2ats_gtk_buildable_custom_tag_start: {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_GtkBuilder, l2), !ptr_v_1(type_c2ats_GObject, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_GMarkupParser, l5), !ptr_v_1(type_c2ats_gpointer, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> type_c2ats_gboolean = "mac#gtk_buildable_custom_tag_start"
fun fun_c2ats_gtk_buildable_custom_tag_end: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_GtkBuilder, l2), !ptr_v_1(type_c2ats_GObject, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gpointer, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void = "mac#gtk_buildable_custom_tag_end"
fun fun_c2ats_gtk_buildable_custom_finished: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_GtkBuilder, l2), !ptr_v_1(type_c2ats_GObject, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gpointer) -> void = "mac#gtk_buildable_custom_finished"
fun fun_c2ats_gtk_buildable_parser_finished: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_GtkBuilder, l2) | ptr l1, ptr l2) -> void = "mac#gtk_buildable_parser_finished"
fun fun_c2ats_gtk_buildable_get_internal_child: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_GtkBuilder, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GObject, l4) | ptr l4) = "mac#gtk_buildable_get_internal_child"
// File: /usr/include/gtk-3.0/gtk/gtkbutton.h
abst@ype struct_c2ats__GtkButton // FIXME! Forward declaration.
typedef type_c2ats_GtkButton = struct_c2ats__GtkButton
abst@ype struct_c2ats__GtkButtonPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkButtonPrivate = struct_c2ats__GtkButtonPrivate
abst@ype struct_c2ats__GtkButtonClass // FIXME! Forward declaration.
typedef type_c2ats_GtkButtonClass = struct_c2ats__GtkButtonClass
typedef struct_c2ats__GtkButton = $extype_struct"struct _GtkButton" of {
  bin = type_c2ats_GtkBin,
  priv = ptr (* cPtr0(type_c2ats_GtkButtonPrivate) *)
}
typedef struct_c2ats__GtkButtonClass = $extype_struct"struct _GtkButtonClass" of {
  parent_class = type_c2ats_GtkBinClass,
  pressed = {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> void,
  released = {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> void,
  clicked = {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> void,
  enter = {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> void,
  leave = {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> void,
  activate = {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_button_get_type: () -> type_c2ats_GType = "mac#gtk_button_get_type"
fun fun_c2ats_gtk_button_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_button_new"
fun fun_c2ats_gtk_button_new_with_label: (string) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_button_new_with_label"
fun fun_c2ats_gtk_button_new_from_icon_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_GtkIconSize) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_button_new_from_icon_name"
fun fun_c2ats_gtk_button_new_from_stock: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_button_new_from_stock"
fun fun_c2ats_gtk_button_new_with_mnemonic: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_button_new_with_mnemonic"
fun fun_c2ats_gtk_button_clicked: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> void = "mac#gtk_button_clicked"
fun fun_c2ats_gtk_button_pressed: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> void = "mac#gtk_button_pressed"
fun fun_c2ats_gtk_button_released: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> void = "mac#gtk_button_released"
fun fun_c2ats_gtk_button_enter: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> void = "mac#gtk_button_enter"
fun fun_c2ats_gtk_button_leave: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> void = "mac#gtk_button_leave"
fun fun_c2ats_gtk_button_set_relief: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1, type_c2ats_GtkReliefStyle) -> void = "mac#gtk_button_set_relief"
fun fun_c2ats_gtk_button_get_relief: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> type_c2ats_GtkReliefStyle = "mac#gtk_button_get_relief"
fun fun_c2ats_gtk_button_set_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkButton, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_button_set_label"
fun fun_c2ats_gtk_button_get_label: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_button_get_label"
fun fun_c2ats_gtk_button_set_use_underline: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_button_set_use_underline"
fun fun_c2ats_gtk_button_get_use_underline: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_button_get_use_underline"
fun fun_c2ats_gtk_button_set_use_stock: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_button_set_use_stock"
fun fun_c2ats_gtk_button_get_use_stock: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_button_get_use_stock"
fun fun_c2ats_gtk_button_set_focus_on_click: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_button_set_focus_on_click"
fun fun_c2ats_gtk_button_get_focus_on_click: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_button_get_focus_on_click"
fun fun_c2ats_gtk_button_set_alignment: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1, type_c2ats_gfloat, type_c2ats_gfloat) -> void = "mac#gtk_button_set_alignment"
fun fun_c2ats_gtk_button_get_alignment: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkButton, l1), !ptr_v_1(type_c2ats_gfloat, l2), !ptr_v_1(type_c2ats_gfloat, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_button_get_alignment"
fun fun_c2ats_gtk_button_set_image: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkButton, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_button_set_image"
fun fun_c2ats_gtk_button_get_image: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_button_get_image"
fun fun_c2ats_gtk_button_set_image_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1, type_c2ats_GtkPositionType) -> void = "mac#gtk_button_set_image_position"
fun fun_c2ats_gtk_button_get_image_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> type_c2ats_GtkPositionType = "mac#gtk_button_get_image_position"
fun fun_c2ats_gtk_button_set_always_show_image: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_button_set_always_show_image"
fun fun_c2ats_gtk_button_get_always_show_image: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_button_get_always_show_image"
fun fun_c2ats_gtk_button_get_event_window: {l1:addr} (!ptr_v_1(type_c2ats_GtkButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gtk_button_get_event_window"
// File: /usr/include/gtk-3.0/gtk/gtkcalendar.h
abst@ype struct_c2ats__GtkCalendar // FIXME! Forward declaration.
typedef type_c2ats_GtkCalendar = struct_c2ats__GtkCalendar
abst@ype struct_c2ats__GtkCalendarClass // FIXME! Forward declaration.
typedef type_c2ats_GtkCalendarClass = struct_c2ats__GtkCalendarClass
abst@ype struct_c2ats__GtkCalendarPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkCalendarPrivate = struct_c2ats__GtkCalendarPrivate
typedef type_c2ats_GtkCalendarDisplayOptions = int
#define enum_c2ats_GTK_CALENDAR_SHOW_HEADING 1 << 0
#define enum_c2ats_GTK_CALENDAR_SHOW_DAY_NAMES 1 << 1
#define enum_c2ats_GTK_CALENDAR_NO_MONTH_CHANGE 1 << 2
#define enum_c2ats_GTK_CALENDAR_SHOW_WEEK_NUMBERS 1 << 3
#define enum_c2ats_GTK_CALENDAR_SHOW_DETAILS 1 << 5
typedef type_c2ats_GtkCalendarDetailFunc = {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint, type_c2ats_guint, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2)
typedef struct_c2ats__GtkCalendar = $extype_struct"struct _GtkCalendar" of {
  widget = type_c2ats_GtkWidget,
  priv = ptr (* cPtr0(type_c2ats_GtkCalendarPrivate) *)
}
typedef struct_c2ats__GtkCalendarClass = $extype_struct"struct _GtkCalendarClass" of {
  parent_class = type_c2ats_GtkWidgetClass,
  month_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1) -> void,
  day_selected = {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1) -> void,
  day_selected_double_click = {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1) -> void,
  prev_month = {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1) -> void,
  next_month = {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1) -> void,
  prev_year = {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1) -> void,
  next_year = {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_calendar_get_type: () -> type_c2ats_GType = "mac#gtk_calendar_get_type"
fun fun_c2ats_gtk_calendar_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_calendar_new"
fun fun_c2ats_gtk_calendar_select_month: {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint) -> void = "mac#gtk_calendar_select_month"
fun fun_c2ats_gtk_calendar_select_day: {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_calendar_select_day"
fun fun_c2ats_gtk_calendar_mark_day: {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_calendar_mark_day"
fun fun_c2ats_gtk_calendar_unmark_day: {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_calendar_unmark_day"
fun fun_c2ats_gtk_calendar_clear_marks: {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1) -> void = "mac#gtk_calendar_clear_marks"
fun fun_c2ats_gtk_calendar_set_display_options: {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1, type_c2ats_GtkCalendarDisplayOptions) -> void = "mac#gtk_calendar_set_display_options"
fun fun_c2ats_gtk_calendar_get_display_options: {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1) -> type_c2ats_GtkCalendarDisplayOptions = "mac#gtk_calendar_get_display_options"
fun fun_c2ats_gtk_calendar_get_date: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1), !ptr_v_1(type_c2ats_guint, l2), !ptr_v_1(type_c2ats_guint, l3), !ptr_v_1(type_c2ats_guint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_calendar_get_date"
fun fun_c2ats_gtk_calendar_set_detail_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1, type_c2ats_GtkCalendarDetailFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_calendar_set_detail_func"
fun fun_c2ats_gtk_calendar_set_detail_width_chars: {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_calendar_set_detail_width_chars"
fun fun_c2ats_gtk_calendar_set_detail_height_rows: {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_calendar_set_detail_height_rows"
fun fun_c2ats_gtk_calendar_get_detail_width_chars: {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_calendar_get_detail_width_chars"
fun fun_c2ats_gtk_calendar_get_detail_height_rows: {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_calendar_get_detail_height_rows"
fun fun_c2ats_gtk_calendar_get_day_is_marked: {l1:addr} (!ptr_v_1(type_c2ats_GtkCalendar, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_gboolean = "mac#gtk_calendar_get_day_is_marked"
// File: /usr/include/gtk-3.0/gtk/gtkcellareabox.h
abst@ype struct_c2ats__GtkCellAreaBox // FIXME! Forward declaration.
typedef type_c2ats_GtkCellAreaBox = struct_c2ats__GtkCellAreaBox
abst@ype struct_c2ats__GtkCellAreaBoxClass // FIXME! Forward declaration.
typedef type_c2ats_GtkCellAreaBoxClass = struct_c2ats__GtkCellAreaBoxClass
abst@ype struct_c2ats__GtkCellAreaBoxPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkCellAreaBoxPrivate = struct_c2ats__GtkCellAreaBoxPrivate
typedef struct_c2ats__GtkCellAreaBox = $extype_struct"struct _GtkCellAreaBox" of {
  parent_instance = type_c2ats_GtkCellArea,
  priv = ptr (* cPtr0(type_c2ats_GtkCellAreaBoxPrivate) *)
}
typedef struct_c2ats__GtkCellAreaBoxClass = $extype_struct"struct _GtkCellAreaBoxClass" of {
  parent_class = type_c2ats_GtkCellAreaClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_cell_area_box_get_type: () -> type_c2ats_GType = "mac#gtk_cell_area_box_get_type"
fun fun_c2ats_gtk_cell_area_box_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1) = "mac#gtk_cell_area_box_new"
fun fun_c2ats_gtk_cell_area_box_pack_start: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellAreaBox, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_gboolean, type_c2ats_gboolean) -> void = "mac#gtk_cell_area_box_pack_start"
fun fun_c2ats_gtk_cell_area_box_pack_end: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellAreaBox, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_gboolean, type_c2ats_gboolean) -> void = "mac#gtk_cell_area_box_pack_end"
fun fun_c2ats_gtk_cell_area_box_get_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellAreaBox, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_cell_area_box_get_spacing"
fun fun_c2ats_gtk_cell_area_box_set_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellAreaBox, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_cell_area_box_set_spacing"
fun fun_c2ats__gtk_cell_area_box_group_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellAreaBox, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#_gtk_cell_area_box_group_visible"
// File: /usr/include/gtk-3.0/gtk/gtkcellareacontext.h
abst@ype struct_c2ats__GtkCellAreaContextPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkCellAreaContextPrivate = struct_c2ats__GtkCellAreaContextPrivate
abst@ype struct_c2ats__GtkCellAreaContextClass // FIXME! Forward declaration.
typedef type_c2ats_GtkCellAreaContextClass = struct_c2ats__GtkCellAreaContextClass
typedef struct_c2ats__GtkCellAreaContext = $extype_struct"struct _GtkCellAreaContext" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkCellAreaContextPrivate) *)
}
typedef struct_c2ats__GtkCellAreaContextClass = $extype_struct"struct _GtkCellAreaContextClass" of {
  parent_class = type_c2ats_GObjectClass,
  allocate = {l1:addr} (!ptr_v_1(type_c2ats_GtkCellAreaContext, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void,
  reset = {l1:addr} (!ptr_v_1(type_c2ats_GtkCellAreaContext, l1) | ptr l1) -> void,
  get_preferred_height_for_width = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellAreaContext, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> void,
  get_preferred_width_for_height = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellAreaContext, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void,
  _gtk_reserved6 = () -> void
}
fun fun_c2ats_gtk_cell_area_context_get_type: () -> type_c2ats_GType = "mac#gtk_cell_area_context_get_type"
fun fun_c2ats_gtk_cell_area_context_get_area: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellAreaContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellArea, l2) | ptr l2) = "mac#gtk_cell_area_context_get_area"
fun fun_c2ats_gtk_cell_area_context_allocate: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellAreaContext, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_cell_area_context_allocate"
fun fun_c2ats_gtk_cell_area_context_reset: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellAreaContext, l1) | ptr l1) -> void = "mac#gtk_cell_area_context_reset"
fun fun_c2ats_gtk_cell_area_context_get_preferred_width: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellAreaContext, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_cell_area_context_get_preferred_width"
fun fun_c2ats_gtk_cell_area_context_get_preferred_height: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellAreaContext, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_cell_area_context_get_preferred_height"
fun fun_c2ats_gtk_cell_area_context_get_preferred_height_for_width: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellAreaContext, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#gtk_cell_area_context_get_preferred_height_for_width"
fun fun_c2ats_gtk_cell_area_context_get_preferred_width_for_height: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellAreaContext, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#gtk_cell_area_context_get_preferred_width_for_height"
fun fun_c2ats_gtk_cell_area_context_get_allocation: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellAreaContext, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_cell_area_context_get_allocation"
fun fun_c2ats_gtk_cell_area_context_push_preferred_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellAreaContext, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_cell_area_context_push_preferred_width"
fun fun_c2ats_gtk_cell_area_context_push_preferred_height: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellAreaContext, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_cell_area_context_push_preferred_height"
// File: /usr/include/gtk-3.0/gtk/gtkcelllayout.h
abst@ype struct_c2ats__GtkCellLayout // FIXME! Forward declaration.
typedef type_c2ats_GtkCellLayout = struct_c2ats__GtkCellLayout
abst@ype struct_c2ats__GtkCellLayoutIface // FIXME! Forward declaration.
typedef type_c2ats_GtkCellLayoutIface = struct_c2ats__GtkCellLayoutIface
typedef type_c2ats_GtkCellLayoutDataFunc = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_GtkTreeModel, l3), !ptr_v_1(type_c2ats_GtkTreeIter, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gpointer) -> void
typedef struct_c2ats__GtkCellLayoutIface = $extype_struct"struct _GtkCellLayoutIface" of {
  g_iface = type_c2ats_GTypeInterface,
  pack_start = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void,
  pack_end = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void,
  clear = {l1:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1) | ptr l1) -> void,
  add_attribute = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint) -> void,
  set_cell_data_func = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2, type_c2ats_GtkCellLayoutDataFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void,
  clear_attributes = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2) -> void,
  reorder = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void,
  get_cells = {l1:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2),
  get_area = {l1:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellArea, l2) | ptr l2)
}
fun fun_c2ats_gtk_cell_layout_get_type: () -> type_c2ats_GType = "mac#gtk_cell_layout_get_type"
fun fun_c2ats_gtk_cell_layout_pack_start: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gtk_cell_layout_pack_start"
fun fun_c2ats_gtk_cell_layout_pack_end: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gtk_cell_layout_pack_end"
fun fun_c2ats_gtk_cell_layout_get_cells: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_cell_layout_get_cells"
fun fun_c2ats_gtk_cell_layout_clear: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1) | ptr l1) -> void = "mac#gtk_cell_layout_clear"
fun fun_c2ats_gtk_cell_layout_set_attributes: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2) -> void = "mac#gtk_cell_layout_set_attributes"
fun fun_c2ats_gtk_cell_layout_add_attribute: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint) -> void = "mac#gtk_cell_layout_add_attribute"
fun fun_c2ats_gtk_cell_layout_set_cell_data_func: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2, type_c2ats_GtkCellLayoutDataFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_cell_layout_set_cell_data_func"
fun fun_c2ats_gtk_cell_layout_clear_attributes: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2) -> void = "mac#gtk_cell_layout_clear_attributes"
fun fun_c2ats_gtk_cell_layout_reorder: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1), !ptr_v_1(type_c2ats_GtkCellRenderer, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_cell_layout_reorder"
fun fun_c2ats_gtk_cell_layout_get_area: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellLayout, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellArea, l2) | ptr l2) = "mac#gtk_cell_layout_get_area"
fun fun_c2ats__gtk_cell_layout_buildable_custom_tag_start: {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_GtkBuilder, l2), !ptr_v_1(type_c2ats_GObject, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_GMarkupParser, l5), !ptr_v_1(type_c2ats_gpointer, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> type_c2ats_gboolean = "mac#_gtk_cell_layout_buildable_custom_tag_start"
fun fun_c2ats__gtk_cell_layout_buildable_custom_tag_end: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_GtkBuilder, l2), !ptr_v_1(type_c2ats_GObject, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_gpointer, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#_gtk_cell_layout_buildable_custom_tag_end"
fun fun_c2ats__gtk_cell_layout_buildable_add_child: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkBuildable, l1), !ptr_v_1(type_c2ats_GtkBuilder, l2), !ptr_v_1(type_c2ats_GObject, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#_gtk_cell_layout_buildable_add_child"
// File: /usr/include/gtk-3.0/gtk/gtkcellrenderertext.h
abst@ype struct_c2ats__GtkCellRendererText // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererText = struct_c2ats__GtkCellRendererText
abst@ype struct_c2ats__GtkCellRendererTextPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererTextPrivate = struct_c2ats__GtkCellRendererTextPrivate
abst@ype struct_c2ats__GtkCellRendererTextClass // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererTextClass = struct_c2ats__GtkCellRendererTextClass
typedef struct_c2ats__GtkCellRendererText = $extype_struct"struct _GtkCellRendererText" of {
  parent = type_c2ats_GtkCellRenderer,
  priv = ptr (* cPtr0(type_c2ats_GtkCellRendererTextPrivate) *)
}
typedef struct_c2ats__GtkCellRendererTextClass = $extype_struct"struct _GtkCellRendererTextClass" of {
  parent_class = type_c2ats_GtkCellRendererClass,
  edited = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellRendererText, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_cell_renderer_text_get_type: () -> type_c2ats_GType = "mac#gtk_cell_renderer_text_get_type"
fun fun_c2ats_gtk_cell_renderer_text_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1) = "mac#gtk_cell_renderer_text_new"
fun fun_c2ats_gtk_cell_renderer_text_set_fixed_height_from_font: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRendererText, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_cell_renderer_text_set_fixed_height_from_font"
// File: /usr/include/gtk-3.0/gtk/gtkcellrendereraccel.h
abst@ype struct_c2ats__GtkCellRendererAccel // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererAccel = struct_c2ats__GtkCellRendererAccel
abst@ype struct_c2ats__GtkCellRendererAccelPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererAccelPrivate = struct_c2ats__GtkCellRendererAccelPrivate
abst@ype struct_c2ats__GtkCellRendererAccelClass // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererAccelClass = struct_c2ats__GtkCellRendererAccelClass
typedef type_c2ats_GtkCellRendererAccelMode = int
#define enum_c2ats_GTK_CELL_RENDERER_ACCEL_MODE_GTK 0
#define enum_c2ats_GTK_CELL_RENDERER_ACCEL_MODE_OTHER 1
typedef struct_c2ats__GtkCellRendererAccel = $extype_struct"struct _GtkCellRendererAccel" of {
  parent = type_c2ats_GtkCellRendererText,
  priv = ptr (* cPtr0(type_c2ats_GtkCellRendererAccelPrivate) *)
}
typedef struct_c2ats__GtkCellRendererAccelClass = $extype_struct"struct _GtkCellRendererAccelClass" of {
  parent_class = type_c2ats_GtkCellRendererTextClass,
  accel_edited = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellRendererAccel, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_GdkModifierType, type_c2ats_guint) -> void,
  accel_cleared = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellRendererAccel, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  _gtk_reserved0 = () -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_cell_renderer_accel_get_type: () -> type_c2ats_GType = "mac#gtk_cell_renderer_accel_get_type"
fun fun_c2ats_gtk_cell_renderer_accel_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1) = "mac#gtk_cell_renderer_accel_new"
// File: /usr/include/gtk-3.0/gtk/gtkcellrenderercombo.h
abst@ype struct_c2ats__GtkCellRendererCombo // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererCombo = struct_c2ats__GtkCellRendererCombo
abst@ype struct_c2ats__GtkCellRendererComboPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererComboPrivate = struct_c2ats__GtkCellRendererComboPrivate
abst@ype struct_c2ats__GtkCellRendererComboClass // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererComboClass = struct_c2ats__GtkCellRendererComboClass
typedef struct_c2ats__GtkCellRendererCombo = $extype_struct"struct _GtkCellRendererCombo" of {
  parent = type_c2ats_GtkCellRendererText,
  priv = ptr (* cPtr0(type_c2ats_GtkCellRendererComboPrivate) *)
}
typedef struct_c2ats__GtkCellRendererComboClass = $extype_struct"struct _GtkCellRendererComboClass" of {
  parent = type_c2ats_GtkCellRendererTextClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_cell_renderer_combo_get_type: () -> type_c2ats_GType = "mac#gtk_cell_renderer_combo_get_type"
fun fun_c2ats_gtk_cell_renderer_combo_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1) = "mac#gtk_cell_renderer_combo_new"
// File: /usr/include/gtk-3.0/gtk/gtkcellrendererpixbuf.h
abst@ype struct_c2ats__GtkCellRendererPixbuf // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererPixbuf = struct_c2ats__GtkCellRendererPixbuf
abst@ype struct_c2ats__GtkCellRendererPixbufPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererPixbufPrivate = struct_c2ats__GtkCellRendererPixbufPrivate
abst@ype struct_c2ats__GtkCellRendererPixbufClass // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererPixbufClass = struct_c2ats__GtkCellRendererPixbufClass
typedef struct_c2ats__GtkCellRendererPixbuf = $extype_struct"struct _GtkCellRendererPixbuf" of {
  parent = type_c2ats_GtkCellRenderer,
  priv = ptr (* cPtr0(type_c2ats_GtkCellRendererPixbufPrivate) *)
}
typedef struct_c2ats__GtkCellRendererPixbufClass = $extype_struct"struct _GtkCellRendererPixbufClass" of {
  parent_class = type_c2ats_GtkCellRendererClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_cell_renderer_pixbuf_get_type: () -> type_c2ats_GType = "mac#gtk_cell_renderer_pixbuf_get_type"
fun fun_c2ats_gtk_cell_renderer_pixbuf_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1) = "mac#gtk_cell_renderer_pixbuf_new"
// File: /usr/include/gtk-3.0/gtk/gtkcellrendererprogress.h
abst@ype struct_c2ats__GtkCellRendererProgress // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererProgress = struct_c2ats__GtkCellRendererProgress
abst@ype struct_c2ats__GtkCellRendererProgressClass // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererProgressClass = struct_c2ats__GtkCellRendererProgressClass
abst@ype struct_c2ats__GtkCellRendererProgressPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererProgressPrivate = struct_c2ats__GtkCellRendererProgressPrivate
typedef struct_c2ats__GtkCellRendererProgress = $extype_struct"struct _GtkCellRendererProgress" of {
  parent_instance = type_c2ats_GtkCellRenderer,
  priv = ptr (* cPtr0(type_c2ats_GtkCellRendererProgressPrivate) *)
}
typedef struct_c2ats__GtkCellRendererProgressClass = $extype_struct"struct _GtkCellRendererProgressClass" of {
  parent_class = type_c2ats_GtkCellRendererClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_cell_renderer_progress_get_type: () -> type_c2ats_GType = "mac#gtk_cell_renderer_progress_get_type"
fun fun_c2ats_gtk_cell_renderer_progress_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1) = "mac#gtk_cell_renderer_progress_new"
// File: /usr/include/gtk-3.0/gtk/gtkcellrendererspin.h
abst@ype struct_c2ats__GtkCellRendererSpin // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererSpin = struct_c2ats__GtkCellRendererSpin
abst@ype struct_c2ats__GtkCellRendererSpinClass // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererSpinClass = struct_c2ats__GtkCellRendererSpinClass
abst@ype struct_c2ats__GtkCellRendererSpinPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererSpinPrivate = struct_c2ats__GtkCellRendererSpinPrivate
typedef struct_c2ats__GtkCellRendererSpin = $extype_struct"struct _GtkCellRendererSpin" of {
  parent = type_c2ats_GtkCellRendererText,
  priv = ptr (* cPtr0(type_c2ats_GtkCellRendererSpinPrivate) *)
}
typedef struct_c2ats__GtkCellRendererSpinClass = $extype_struct"struct _GtkCellRendererSpinClass" of {
  parent = type_c2ats_GtkCellRendererTextClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_cell_renderer_spin_get_type: () -> type_c2ats_GType = "mac#gtk_cell_renderer_spin_get_type"
fun fun_c2ats_gtk_cell_renderer_spin_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1) = "mac#gtk_cell_renderer_spin_new"
// File: /usr/include/gtk-3.0/gtk/gtkcellrendererspinner.h
abst@ype struct_c2ats__GtkCellRendererSpinner // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererSpinner = struct_c2ats__GtkCellRendererSpinner
abst@ype struct_c2ats__GtkCellRendererSpinnerClass // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererSpinnerClass = struct_c2ats__GtkCellRendererSpinnerClass
abst@ype struct_c2ats__GtkCellRendererSpinnerPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererSpinnerPrivate = struct_c2ats__GtkCellRendererSpinnerPrivate
typedef struct_c2ats__GtkCellRendererSpinner = $extype_struct"struct _GtkCellRendererSpinner" of {
  parent = type_c2ats_GtkCellRenderer,
  priv = ptr (* cPtr0(type_c2ats_GtkCellRendererSpinnerPrivate) *)
}
typedef struct_c2ats__GtkCellRendererSpinnerClass = $extype_struct"struct _GtkCellRendererSpinnerClass" of {
  parent_class = type_c2ats_GtkCellRendererClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_cell_renderer_spinner_get_type: () -> type_c2ats_GType = "mac#gtk_cell_renderer_spinner_get_type"
fun fun_c2ats_gtk_cell_renderer_spinner_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1) = "mac#gtk_cell_renderer_spinner_new"
// File: /usr/include/gtk-3.0/gtk/gtkcellrenderertoggle.h
abst@ype struct_c2ats__GtkCellRendererToggle // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererToggle = struct_c2ats__GtkCellRendererToggle
abst@ype struct_c2ats__GtkCellRendererTogglePrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererTogglePrivate = struct_c2ats__GtkCellRendererTogglePrivate
abst@ype struct_c2ats__GtkCellRendererToggleClass // FIXME! Forward declaration.
typedef type_c2ats_GtkCellRendererToggleClass = struct_c2ats__GtkCellRendererToggleClass
typedef struct_c2ats__GtkCellRendererToggle = $extype_struct"struct _GtkCellRendererToggle" of {
  parent = type_c2ats_GtkCellRenderer,
  priv = ptr (* cPtr0(type_c2ats_GtkCellRendererTogglePrivate) *)
}
typedef struct_c2ats__GtkCellRendererToggleClass = $extype_struct"struct _GtkCellRendererToggleClass" of {
  parent_class = type_c2ats_GtkCellRendererClass,
  toggled = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellRendererToggle, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_cell_renderer_toggle_get_type: () -> type_c2ats_GType = "mac#gtk_cell_renderer_toggle_get_type"
fun fun_c2ats_gtk_cell_renderer_toggle_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkCellRenderer, l1) | ptr l1) = "mac#gtk_cell_renderer_toggle_new"
fun fun_c2ats_gtk_cell_renderer_toggle_get_radio: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRendererToggle, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_cell_renderer_toggle_get_radio"
fun fun_c2ats_gtk_cell_renderer_toggle_set_radio: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRendererToggle, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_cell_renderer_toggle_set_radio"
fun fun_c2ats_gtk_cell_renderer_toggle_get_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRendererToggle, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_cell_renderer_toggle_get_active"
fun fun_c2ats_gtk_cell_renderer_toggle_set_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRendererToggle, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_cell_renderer_toggle_set_active"
fun fun_c2ats_gtk_cell_renderer_toggle_get_activatable: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRendererToggle, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_cell_renderer_toggle_get_activatable"
fun fun_c2ats_gtk_cell_renderer_toggle_set_activatable: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellRendererToggle, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_cell_renderer_toggle_set_activatable"
// File: /usr/include/gtk-3.0/gtk/gtkcellview.h
abst@ype struct_c2ats__GtkCellView // FIXME! Forward declaration.
typedef type_c2ats_GtkCellView = struct_c2ats__GtkCellView
abst@ype struct_c2ats__GtkCellViewClass // FIXME! Forward declaration.
typedef type_c2ats_GtkCellViewClass = struct_c2ats__GtkCellViewClass
abst@ype struct_c2ats__GtkCellViewPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkCellViewPrivate = struct_c2ats__GtkCellViewPrivate
typedef struct_c2ats__GtkCellView = $extype_struct"struct _GtkCellView" of {
  parent_instance = type_c2ats_GtkWidget,
  priv = ptr (* cPtr0(type_c2ats_GtkCellViewPrivate) *)
}
typedef struct_c2ats__GtkCellViewClass = $extype_struct"struct _GtkCellViewClass" of {
  parent_class = type_c2ats_GtkWidgetClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_cell_view_get_type: () -> type_c2ats_GType = "mac#gtk_cell_view_get_type"
fun fun_c2ats_gtk_cell_view_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_cell_view_new"
fun fun_c2ats_gtk_cell_view_new_with_context: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1), !ptr_v_1(type_c2ats_GtkCellAreaContext, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_cell_view_new_with_context"
fun fun_c2ats_gtk_cell_view_new_with_text: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_cell_view_new_with_text"
fun fun_c2ats_gtk_cell_view_new_with_markup: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_cell_view_new_with_markup"
fun fun_c2ats_gtk_cell_view_new_with_pixbuf: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_cell_view_new_with_pixbuf"
fun fun_c2ats_gtk_cell_view_set_model: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellView, l1), !ptr_v_1(type_c2ats_GtkTreeModel, l2) | ptr l1, ptr l2) -> void = "mac#gtk_cell_view_set_model"
fun fun_c2ats_gtk_cell_view_get_model: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeModel, l2) | ptr l2) = "mac#gtk_cell_view_get_model"
fun fun_c2ats_gtk_cell_view_set_displayed_row: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> void = "mac#gtk_cell_view_set_displayed_row"
fun fun_c2ats_gtk_cell_view_get_displayed_row: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l2) = "mac#gtk_cell_view_get_displayed_row"
fun fun_c2ats_gtk_cell_view_set_background_rgba: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellView, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, ptr l2) -> void = "mac#gtk_cell_view_set_background_rgba"
fun fun_c2ats_gtk_cell_view_get_draw_sensitive: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_cell_view_get_draw_sensitive"
fun fun_c2ats_gtk_cell_view_set_draw_sensitive: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_cell_view_set_draw_sensitive"
fun fun_c2ats_gtk_cell_view_get_fit_model: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_cell_view_get_fit_model"
fun fun_c2ats_gtk_cell_view_set_fit_model: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_cell_view_set_fit_model"
fun fun_c2ats_gtk_cell_view_get_size_of_row: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCellView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkRequisition, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_cell_view_get_size_of_row"
fun fun_c2ats_gtk_cell_view_set_background_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCellView, l1), !ptr_v_1(type_c2ats_GdkColor, l2) | ptr l1, ptr l2) -> void = "mac#gtk_cell_view_set_background_color"
// File: /usr/include/gtk-3.0/gtk/gtktogglebutton.h
abst@ype struct_c2ats__GtkToggleButton // FIXME! Forward declaration.
typedef type_c2ats_GtkToggleButton = struct_c2ats__GtkToggleButton
abst@ype struct_c2ats__GtkToggleButtonPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkToggleButtonPrivate = struct_c2ats__GtkToggleButtonPrivate
abst@ype struct_c2ats__GtkToggleButtonClass // FIXME! Forward declaration.
typedef type_c2ats_GtkToggleButtonClass = struct_c2ats__GtkToggleButtonClass
typedef struct_c2ats__GtkToggleButton = $extype_struct"struct _GtkToggleButton" of {
  button = type_c2ats_GtkButton,
  priv = ptr (* cPtr0(type_c2ats_GtkToggleButtonPrivate) *)
}
typedef struct_c2ats__GtkToggleButtonClass = $extype_struct"struct _GtkToggleButtonClass" of {
  parent_class = type_c2ats_GtkButtonClass,
  toggled = {l1:addr} (!ptr_v_1(type_c2ats_GtkToggleButton, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_toggle_button_get_type: () -> type_c2ats_GType = "mac#gtk_toggle_button_get_type"
fun fun_c2ats_gtk_toggle_button_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_toggle_button_new"
fun fun_c2ats_gtk_toggle_button_new_with_label: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_toggle_button_new_with_label"
fun fun_c2ats_gtk_toggle_button_new_with_mnemonic: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_toggle_button_new_with_mnemonic"
fun fun_c2ats_gtk_toggle_button_set_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkToggleButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_toggle_button_set_mode"
fun fun_c2ats_gtk_toggle_button_get_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkToggleButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_toggle_button_get_mode"
fun fun_c2ats_gtk_toggle_button_set_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkToggleButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_toggle_button_set_active"
fun fun_c2ats_gtk_toggle_button_get_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkToggleButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_toggle_button_get_active"
fun fun_c2ats_gtk_toggle_button_toggled: {l1:addr} (!ptr_v_1(type_c2ats_GtkToggleButton, l1) | ptr l1) -> void = "mac#gtk_toggle_button_toggled"
fun fun_c2ats_gtk_toggle_button_set_inconsistent: {l1:addr} (!ptr_v_1(type_c2ats_GtkToggleButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_toggle_button_set_inconsistent"
fun fun_c2ats_gtk_toggle_button_get_inconsistent: {l1:addr} (!ptr_v_1(type_c2ats_GtkToggleButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_toggle_button_get_inconsistent"
// File: /usr/include/gtk-3.0/gtk/gtkcheckbutton.h
abst@ype struct_c2ats__GtkCheckButton // FIXME! Forward declaration.
typedef type_c2ats_GtkCheckButton = struct_c2ats__GtkCheckButton
abst@ype struct_c2ats__GtkCheckButtonClass // FIXME! Forward declaration.
typedef type_c2ats_GtkCheckButtonClass = struct_c2ats__GtkCheckButtonClass
typedef struct_c2ats__GtkCheckButton = $extype_struct"struct _GtkCheckButton" of {
  toggle_button = type_c2ats_GtkToggleButton
}
typedef struct_c2ats__GtkCheckButtonClass = $extype_struct"struct _GtkCheckButtonClass" of {
  parent_class = type_c2ats_GtkToggleButtonClass,
  draw_indicator = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCheckButton, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_check_button_get_type: () -> type_c2ats_GType = "mac#gtk_check_button_get_type"
fun fun_c2ats_gtk_check_button_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_check_button_new"
fun fun_c2ats_gtk_check_button_new_with_label: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_check_button_new_with_label"
fun fun_c2ats_gtk_check_button_new_with_mnemonic: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_check_button_new_with_mnemonic"
fun fun_c2ats__gtk_check_button_get_props: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCheckButton, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#_gtk_check_button_get_props"
// File: /usr/include/gtk-3.0/gtk/gtkmenuitem.h
abst@ype struct_c2ats__GtkMenuItem // FIXME! Forward declaration.
typedef type_c2ats_GtkMenuItem = struct_c2ats__GtkMenuItem
abst@ype struct_c2ats__GtkMenuItemClass // FIXME! Forward declaration.
typedef type_c2ats_GtkMenuItemClass = struct_c2ats__GtkMenuItemClass
abst@ype struct_c2ats__GtkMenuItemPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkMenuItemPrivate = struct_c2ats__GtkMenuItemPrivate
typedef struct_c2ats__GtkMenuItem = $extype_struct"struct _GtkMenuItem" of {
  bin = type_c2ats_GtkBin,
  priv = ptr (* cPtr0(type_c2ats_GtkMenuItemPrivate) *)
}
typedef struct_c2ats__GtkMenuItemClass = $extype_struct"struct _GtkMenuItemClass" of {
  parent_class = type_c2ats_GtkBinClass,
  hide_on_activate = type_c2ats_guint,
  activate = {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1) | ptr l1) -> void,
  activate_item = {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1) | ptr l1) -> void,
  toggle_size_request = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, ptr l2) -> void,
  toggle_size_allocate = {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1) | ptr l1, type_c2ats_gint) -> void,
  set_label = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  get_label = {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  select = {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1) | ptr l1) -> void,
  deselect = {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_menu_item_get_type: () -> type_c2ats_GType = "mac#gtk_menu_item_get_type"
fun fun_c2ats_gtk_menu_item_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_menu_item_new"
fun fun_c2ats_gtk_menu_item_new_with_label: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_menu_item_new_with_label"
fun fun_c2ats_gtk_menu_item_new_with_mnemonic: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_menu_item_new_with_mnemonic"
fun fun_c2ats_gtk_menu_item_set_submenu: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_item_set_submenu"
fun fun_c2ats_gtk_menu_item_get_submenu: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_menu_item_get_submenu"
fun fun_c2ats_gtk_menu_item_select: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1) | ptr l1) -> void = "mac#gtk_menu_item_select"
fun fun_c2ats_gtk_menu_item_deselect: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1) | ptr l1) -> void = "mac#gtk_menu_item_deselect"
fun fun_c2ats_gtk_menu_item_activate: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1) | ptr l1) -> void = "mac#gtk_menu_item_activate"
fun fun_c2ats_gtk_menu_item_toggle_size_request: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_item_toggle_size_request"
fun fun_c2ats_gtk_menu_item_toggle_size_allocate: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_menu_item_toggle_size_allocate"
fun fun_c2ats_gtk_menu_item_set_right_justified: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_menu_item_set_right_justified"
fun fun_c2ats_gtk_menu_item_get_right_justified: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_menu_item_get_right_justified"
fun fun_c2ats_gtk_menu_item_set_accel_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_item_set_accel_path"
fun fun_c2ats_gtk_menu_item_get_accel_path: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_menu_item_get_accel_path"
fun fun_c2ats_gtk_menu_item_set_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_item_set_label"
fun fun_c2ats_gtk_menu_item_get_label: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_menu_item_get_label"
fun fun_c2ats_gtk_menu_item_set_use_underline: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_menu_item_set_use_underline"
fun fun_c2ats_gtk_menu_item_get_use_underline: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_menu_item_get_use_underline"
fun fun_c2ats_gtk_menu_item_set_reserve_indicator: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_menu_item_set_reserve_indicator"
fun fun_c2ats_gtk_menu_item_get_reserve_indicator: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuItem, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_menu_item_get_reserve_indicator"
// File: /usr/include/gtk-3.0/gtk/gtkcheckmenuitem.h
abst@ype struct_c2ats__GtkCheckMenuItem // FIXME! Forward declaration.
typedef type_c2ats_GtkCheckMenuItem = struct_c2ats__GtkCheckMenuItem
abst@ype struct_c2ats__GtkCheckMenuItemPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkCheckMenuItemPrivate = struct_c2ats__GtkCheckMenuItemPrivate
abst@ype struct_c2ats__GtkCheckMenuItemClass // FIXME! Forward declaration.
typedef type_c2ats_GtkCheckMenuItemClass = struct_c2ats__GtkCheckMenuItemClass
typedef struct_c2ats__GtkCheckMenuItem = $extype_struct"struct _GtkCheckMenuItem" of {
  menu_item = type_c2ats_GtkMenuItem,
  priv = ptr (* cPtr0(type_c2ats_GtkCheckMenuItemPrivate) *)
}
typedef struct_c2ats__GtkCheckMenuItemClass = $extype_struct"struct _GtkCheckMenuItemClass" of {
  parent_class = type_c2ats_GtkMenuItemClass,
  toggled = {l1:addr} (!ptr_v_1(type_c2ats_GtkCheckMenuItem, l1) | ptr l1) -> void,
  draw_indicator = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCheckMenuItem, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_check_menu_item_get_type: () -> type_c2ats_GType = "mac#gtk_check_menu_item_get_type"
fun fun_c2ats_gtk_check_menu_item_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_check_menu_item_new"
fun fun_c2ats_gtk_check_menu_item_new_with_label: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_check_menu_item_new_with_label"
fun fun_c2ats_gtk_check_menu_item_new_with_mnemonic: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_check_menu_item_new_with_mnemonic"
fun fun_c2ats_gtk_check_menu_item_set_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkCheckMenuItem, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_check_menu_item_set_active"
fun fun_c2ats_gtk_check_menu_item_get_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkCheckMenuItem, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_check_menu_item_get_active"
fun fun_c2ats_gtk_check_menu_item_toggled: {l1:addr} (!ptr_v_1(type_c2ats_GtkCheckMenuItem, l1) | ptr l1) -> void = "mac#gtk_check_menu_item_toggled"
fun fun_c2ats_gtk_check_menu_item_set_inconsistent: {l1:addr} (!ptr_v_1(type_c2ats_GtkCheckMenuItem, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_check_menu_item_set_inconsistent"
fun fun_c2ats_gtk_check_menu_item_get_inconsistent: {l1:addr} (!ptr_v_1(type_c2ats_GtkCheckMenuItem, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_check_menu_item_get_inconsistent"
fun fun_c2ats_gtk_check_menu_item_set_draw_as_radio: {l1:addr} (!ptr_v_1(type_c2ats_GtkCheckMenuItem, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_check_menu_item_set_draw_as_radio"
fun fun_c2ats_gtk_check_menu_item_get_draw_as_radio: {l1:addr} (!ptr_v_1(type_c2ats_GtkCheckMenuItem, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_check_menu_item_get_draw_as_radio"
// File: /usr/include/gtk-3.0/gtk/gtkclipboard.h
typedef type_c2ats_GtkClipboardReceivedFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1), !ptr_v_1(type_c2ats_GtkSelectionData, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void
typedef type_c2ats_GtkClipboardTextReceivedFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void
typedef type_c2ats_GtkClipboardRichTextReceivedFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1), !ptr_v_1(type_c2ats_guint8, l2) | ptr l1, type_c2ats_GdkAtom, ptr l2, type_c2ats_gsize, type_c2ats_gpointer) -> void
typedef type_c2ats_GtkClipboardImageReceivedFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void
typedef type_c2ats_GtkClipboardURIReceivedFunc = {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l1, ptr l2, type_c2ats_gpointer) -> void
typedef type_c2ats_GtkClipboardTargetsReceivedFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1), !ptr_v_1(type_c2ats_GdkAtom, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gpointer) -> void
typedef type_c2ats_GtkClipboardGetFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1), !ptr_v_1(type_c2ats_GtkSelectionData, l2) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_gpointer) -> void
typedef type_c2ats_GtkClipboardClearFunc = {l1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1, type_c2ats_gpointer) -> void
fun fun_c2ats_gtk_clipboard_get_type: () -> type_c2ats_GType = "mac#gtk_clipboard_get_type"
fun fun_c2ats_gtk_clipboard_get_for_display: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1, type_c2ats_GdkAtom) -> [l2:addr] (ptr_v_1(type_c2ats_GtkClipboard, l2) | ptr l2) = "mac#gtk_clipboard_get_for_display"
fun fun_c2ats_gtk_clipboard_get: (type_c2ats_GdkAtom) -> [l1:addr] (ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1) = "mac#gtk_clipboard_get"
fun fun_c2ats_gtk_clipboard_get_default: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkClipboard, l2) | ptr l2) = "mac#gtk_clipboard_get_default"
fun fun_c2ats_gtk_clipboard_get_display: {l1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDisplay, l2) | ptr l2) = "mac#gtk_clipboard_get_display"
fun fun_c2ats_gtk_clipboard_set_with_data: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1), !ptr_v_1(type_c2ats_GtkTargetEntry, l2) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_GtkClipboardGetFunc, type_c2ats_GtkClipboardClearFunc, type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#gtk_clipboard_set_with_data"
fun fun_c2ats_gtk_clipboard_set_with_owner: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1), !ptr_v_1(type_c2ats_GtkTargetEntry, l2), !ptr_v_1(type_c2ats_GObject, l3) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_GtkClipboardGetFunc, type_c2ats_GtkClipboardClearFunc, ptr l3) -> type_c2ats_gboolean = "mac#gtk_clipboard_set_with_owner"
fun fun_c2ats_gtk_clipboard_get_owner: {l1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GObject, l2) | ptr l2) = "mac#gtk_clipboard_get_owner"
fun fun_c2ats_gtk_clipboard_clear: {l1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1) -> void = "mac#gtk_clipboard_clear"
fun fun_c2ats_gtk_clipboard_set_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_clipboard_set_text"
fun fun_c2ats_gtk_clipboard_set_image: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2) -> void = "mac#gtk_clipboard_set_image"
fun fun_c2ats_gtk_clipboard_request_contents: {l1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1, type_c2ats_GdkAtom, type_c2ats_GtkClipboardReceivedFunc, type_c2ats_gpointer) -> void = "mac#gtk_clipboard_request_contents"
fun fun_c2ats_gtk_clipboard_request_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1, type_c2ats_GtkClipboardTextReceivedFunc, type_c2ats_gpointer) -> void = "mac#gtk_clipboard_request_text"
fun fun_c2ats_gtk_clipboard_request_rich_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1), !ptr_v_1(type_c2ats_GtkTextBuffer, l2) | ptr l1, ptr l2, type_c2ats_GtkClipboardRichTextReceivedFunc, type_c2ats_gpointer) -> void = "mac#gtk_clipboard_request_rich_text"
fun fun_c2ats_gtk_clipboard_request_image: {l1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1, type_c2ats_GtkClipboardImageReceivedFunc, type_c2ats_gpointer) -> void = "mac#gtk_clipboard_request_image"
fun fun_c2ats_gtk_clipboard_request_uris: {l1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1, type_c2ats_GtkClipboardURIReceivedFunc, type_c2ats_gpointer) -> void = "mac#gtk_clipboard_request_uris"
fun fun_c2ats_gtk_clipboard_request_targets: {l1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1, type_c2ats_GtkClipboardTargetsReceivedFunc, type_c2ats_gpointer) -> void = "mac#gtk_clipboard_request_targets"
fun fun_c2ats_gtk_clipboard_wait_for_contents: {l1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1, type_c2ats_GdkAtom) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSelectionData, l2) | ptr l2) = "mac#gtk_clipboard_wait_for_contents"
fun fun_c2ats_gtk_clipboard_wait_for_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_clipboard_wait_for_text"
fun fun_c2ats_gtk_clipboard_wait_for_rich_text: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1), !ptr_v_1(type_c2ats_GtkTextBuffer, l2), !ptr_v_1(type_c2ats_GdkAtom, l3), !ptr_v_1(type_c2ats_gsize, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_guint8, l5) | ptr l5) = "mac#gtk_clipboard_wait_for_rich_text"
fun fun_c2ats_gtk_clipboard_wait_for_image: {l1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gtk_clipboard_wait_for_image"
fun fun_c2ats_gtk_clipboard_wait_for_uris: {l1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l2) = "mac#gtk_clipboard_wait_for_uris"
fun fun_c2ats_gtk_clipboard_wait_for_targets: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1), !ptr_v_2(type_c2ats_GdkAtom, l2, l2_1), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_clipboard_wait_for_targets"
fun fun_c2ats_gtk_clipboard_wait_is_text_available: {l1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_clipboard_wait_is_text_available"
fun fun_c2ats_gtk_clipboard_wait_is_rich_text_available: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1), !ptr_v_1(type_c2ats_GtkTextBuffer, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_clipboard_wait_is_rich_text_available"
fun fun_c2ats_gtk_clipboard_wait_is_image_available: {l1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_clipboard_wait_is_image_available"
fun fun_c2ats_gtk_clipboard_wait_is_uris_available: {l1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_clipboard_wait_is_uris_available"
fun fun_c2ats_gtk_clipboard_wait_is_target_available: {l1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1, type_c2ats_GdkAtom) -> type_c2ats_gboolean = "mac#gtk_clipboard_wait_is_target_available"
fun fun_c2ats_gtk_clipboard_set_can_store: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1), !ptr_v_1(type_c2ats_GtkTargetEntry, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_clipboard_set_can_store"
fun fun_c2ats_gtk_clipboard_store: {l1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1) -> void = "mac#gtk_clipboard_store"
fun fun_c2ats_gtk_clipboard_get_selection: {l1:addr} (!ptr_v_1(type_c2ats_GtkClipboard, l1) | ptr l1) -> type_c2ats_GdkAtom = "mac#gtk_clipboard_get_selection"
// File: /usr/include/gtk-3.0/gtk/gtkcolorbutton.h
abst@ype struct_c2ats__GtkColorButton // FIXME! Forward declaration.
typedef type_c2ats_GtkColorButton = struct_c2ats__GtkColorButton
abst@ype struct_c2ats__GtkColorButtonClass // FIXME! Forward declaration.
typedef type_c2ats_GtkColorButtonClass = struct_c2ats__GtkColorButtonClass
abst@ype struct_c2ats__GtkColorButtonPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkColorButtonPrivate = struct_c2ats__GtkColorButtonPrivate
typedef struct_c2ats__GtkColorButton = $extype_struct"struct _GtkColorButton" of {
  button = type_c2ats_GtkButton,
  priv = ptr (* cPtr0(type_c2ats_GtkColorButtonPrivate) *)
}
typedef struct_c2ats__GtkColorButtonClass = $extype_struct"struct _GtkColorButtonClass" of {
  parent_class = type_c2ats_GtkButtonClass,
  color_set = {l1:addr} (!ptr_v_1(type_c2ats_GtkColorButton, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_color_button_get_type: () -> type_c2ats_GType = "mac#gtk_color_button_get_type"
fun fun_c2ats_gtk_color_button_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_color_button_new"
fun fun_c2ats_gtk_color_button_new_with_rgba: {l1:addr} (!ptr_v_1(type_c2ats_GdkRGBA, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_color_button_new_with_rgba"
fun fun_c2ats_gtk_color_button_set_title: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorButton, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_color_button_set_title"
fun fun_c2ats_gtk_color_button_get_title: {l1:addr} (!ptr_v_1(type_c2ats_GtkColorButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_color_button_get_title"
fun fun_c2ats_gtk_color_button_new_with_color: {l1:addr} (!ptr_v_1(type_c2ats_GdkColor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_color_button_new_with_color"
fun fun_c2ats_gtk_color_button_set_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorButton, l1), !ptr_v_1(type_c2ats_GdkColor, l2) | ptr l1, ptr l2) -> void = "mac#gtk_color_button_set_color"
fun fun_c2ats_gtk_color_button_get_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorButton, l1), !ptr_v_1(type_c2ats_GdkColor, l2) | ptr l1, ptr l2) -> void = "mac#gtk_color_button_get_color"
fun fun_c2ats_gtk_color_button_set_alpha: {l1:addr} (!ptr_v_1(type_c2ats_GtkColorButton, l1) | ptr l1, type_c2ats_guint16) -> void = "mac#gtk_color_button_set_alpha"
fun fun_c2ats_gtk_color_button_get_alpha: {l1:addr} (!ptr_v_1(type_c2ats_GtkColorButton, l1) | ptr l1) -> type_c2ats_guint16 = "mac#gtk_color_button_get_alpha"
fun fun_c2ats_gtk_color_button_set_use_alpha: {l1:addr} (!ptr_v_1(type_c2ats_GtkColorButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_color_button_set_use_alpha"
fun fun_c2ats_gtk_color_button_get_use_alpha: {l1:addr} (!ptr_v_1(type_c2ats_GtkColorButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_color_button_get_use_alpha"
fun fun_c2ats_gtk_color_button_set_rgba: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorButton, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, ptr l2) -> void = "mac#gtk_color_button_set_rgba"
fun fun_c2ats_gtk_color_button_get_rgba: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorButton, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, ptr l2) -> void = "mac#gtk_color_button_get_rgba"
// File: /usr/include/gtk-3.0/gtk/gtkcolorchooser.h
abst@ype struct_c2ats__GtkColorChooser // FIXME! Forward declaration.
typedef type_c2ats_GtkColorChooser = struct_c2ats__GtkColorChooser
abst@ype struct_c2ats__GtkColorChooserInterface // FIXME! Forward declaration.
typedef type_c2ats_GtkColorChooserInterface = struct_c2ats__GtkColorChooserInterface
typedef struct_c2ats__GtkColorChooserInterface = $extype_struct"struct _GtkColorChooserInterface" of {
  base_interface = type_c2ats_GTypeInterface,
  get_rgba = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorChooser, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, ptr l2) -> void,
  set_rgba = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorChooser, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, ptr l2) -> void,
  add_palette = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorChooser, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, type_c2ats_GtkOrientation, type_c2ats_gint, type_c2ats_gint, ptr l2) -> void,
  color_activated = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorChooser, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, ptr l2) -> void,
  padding = @[type_c2ats_gpointer][12]
}
fun fun_c2ats_gtk_color_chooser_get_type: () -> type_c2ats_GType = "mac#gtk_color_chooser_get_type"
fun fun_c2ats_gtk_color_chooser_get_rgba: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorChooser, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, ptr l2) -> void = "mac#gtk_color_chooser_get_rgba"
fun fun_c2ats_gtk_color_chooser_set_rgba: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorChooser, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, ptr l2) -> void = "mac#gtk_color_chooser_set_rgba"
fun fun_c2ats_gtk_color_chooser_get_use_alpha: {l1:addr} (!ptr_v_1(type_c2ats_GtkColorChooser, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_color_chooser_get_use_alpha"
fun fun_c2ats_gtk_color_chooser_set_use_alpha: {l1:addr} (!ptr_v_1(type_c2ats_GtkColorChooser, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_color_chooser_set_use_alpha"
fun fun_c2ats_gtk_color_chooser_add_palette: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorChooser, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, type_c2ats_GtkOrientation, type_c2ats_gint, type_c2ats_gint, ptr l2) -> void = "mac#gtk_color_chooser_add_palette"
// File: /usr/include/gtk-3.0/gtk/gtkcolorchooserdialog.h
abst@ype struct_c2ats__GtkColorChooserDialog // FIXME! Forward declaration.
typedef type_c2ats_GtkColorChooserDialog = struct_c2ats__GtkColorChooserDialog
abst@ype struct_c2ats__GtkColorChooserDialogPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkColorChooserDialogPrivate = struct_c2ats__GtkColorChooserDialogPrivate
abst@ype struct_c2ats__GtkColorChooserDialogClass // FIXME! Forward declaration.
typedef type_c2ats_GtkColorChooserDialogClass = struct_c2ats__GtkColorChooserDialogClass
typedef struct_c2ats__GtkColorChooserDialog = $extype_struct"struct _GtkColorChooserDialog" of {
  parent_instance = type_c2ats_GtkDialog,
  priv = ptr (* cPtr0(type_c2ats_GtkColorChooserDialogPrivate) *)
}
typedef struct_c2ats__GtkColorChooserDialogClass = $extype_struct"struct _GtkColorChooserDialogClass" of {
  parent_class = type_c2ats_GtkDialogClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_color_chooser_dialog_get_type: () -> type_c2ats_GType = "mac#gtk_color_chooser_dialog_get_type"
fun fun_c2ats_gtk_color_chooser_dialog_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GtkWindow, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_color_chooser_dialog_new"
// File: /usr/include/gtk-3.0/gtk/gtkcolorchooserwidget.h
abst@ype struct_c2ats__GtkColorChooserWidget // FIXME! Forward declaration.
typedef type_c2ats_GtkColorChooserWidget = struct_c2ats__GtkColorChooserWidget
abst@ype struct_c2ats__GtkColorChooserWidgetPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkColorChooserWidgetPrivate = struct_c2ats__GtkColorChooserWidgetPrivate
abst@ype struct_c2ats__GtkColorChooserWidgetClass // FIXME! Forward declaration.
typedef type_c2ats_GtkColorChooserWidgetClass = struct_c2ats__GtkColorChooserWidgetClass
typedef struct_c2ats__GtkColorChooserWidget = $extype_struct"struct _GtkColorChooserWidget" of {
  parent_instance = type_c2ats_GtkBox,
  priv = ptr (* cPtr0(type_c2ats_GtkColorChooserWidgetPrivate) *)
}
typedef struct_c2ats__GtkColorChooserWidgetClass = $extype_struct"struct _GtkColorChooserWidgetClass" of {
  parent_class = type_c2ats_GtkBoxClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void,
  _gtk_reserved6 = () -> void,
  _gtk_reserved7 = () -> void,
  _gtk_reserved8 = () -> void
}
fun fun_c2ats_gtk_color_chooser_widget_get_type: () -> type_c2ats_GType = "mac#gtk_color_chooser_widget_get_type"
fun fun_c2ats_gtk_color_chooser_widget_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_color_chooser_widget_new"
// File: /usr/include/gtk-3.0/gtk/gtkcolorutils.h
fun fun_c2ats_gtk_hsv_to_rgb: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gdouble, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3) | type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_hsv_to_rgb"
fun fun_c2ats_gtk_rgb_to_hsv: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gdouble, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3) | type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_rgb_to_hsv"
// File: /usr/include/gtk-3.0/gtk/gtkcomboboxtext.h
abst@ype struct_c2ats__GtkComboBoxText // FIXME! Forward declaration.
typedef type_c2ats_GtkComboBoxText = struct_c2ats__GtkComboBoxText
abst@ype struct_c2ats__GtkComboBoxTextPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkComboBoxTextPrivate = struct_c2ats__GtkComboBoxTextPrivate
abst@ype struct_c2ats__GtkComboBoxTextClass // FIXME! Forward declaration.
typedef type_c2ats_GtkComboBoxTextClass = struct_c2ats__GtkComboBoxTextClass
typedef struct_c2ats__GtkComboBoxText = $extype_struct"struct _GtkComboBoxText" of {
  parent_instance = type_c2ats_GtkComboBox,
  priv = ptr (* cPtr0(type_c2ats_GtkComboBoxTextPrivate) *)
}
typedef struct_c2ats__GtkComboBoxTextClass = $extype_struct"struct _GtkComboBoxTextClass" of {
  parent_class = type_c2ats_GtkComboBoxClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_combo_box_text_get_type: () -> type_c2ats_GType = "mac#gtk_combo_box_text_get_type"
fun fun_c2ats_gtk_combo_box_text_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_combo_box_text_new"
fun fun_c2ats_gtk_combo_box_text_new_with_entry: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_combo_box_text_new_with_entry"
fun fun_c2ats_gtk_combo_box_text_append_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkComboBoxText, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_combo_box_text_append_text"
fun fun_c2ats_gtk_combo_box_text_insert_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkComboBoxText, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#gtk_combo_box_text_insert_text"
fun fun_c2ats_gtk_combo_box_text_prepend_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkComboBoxText, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_combo_box_text_prepend_text"
fun fun_c2ats_gtk_combo_box_text_remove: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBoxText, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_combo_box_text_remove"
fun fun_c2ats_gtk_combo_box_text_remove_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBoxText, l1) | ptr l1) -> void = "mac#gtk_combo_box_text_remove_all"
fun fun_c2ats_gtk_combo_box_text_get_active_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkComboBoxText, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_combo_box_text_get_active_text"
fun fun_c2ats_gtk_combo_box_text_insert: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkComboBoxText, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#gtk_combo_box_text_insert"
fun fun_c2ats_gtk_combo_box_text_append: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkComboBoxText, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_combo_box_text_append"
fun fun_c2ats_gtk_combo_box_text_prepend: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkComboBoxText, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_combo_box_text_prepend"
// File: /usr/include/gtk-3.0/gtk/gtkcsssection.h
typedef type_c2ats_GtkCssSectionType = int
#define enum_c2ats_GTK_CSS_SECTION_DOCUMENT 0
#define enum_c2ats_GTK_CSS_SECTION_IMPORT 1
#define enum_c2ats_GTK_CSS_SECTION_COLOR_DEFINITION 2
#define enum_c2ats_GTK_CSS_SECTION_BINDING_SET 3
#define enum_c2ats_GTK_CSS_SECTION_RULESET 4
#define enum_c2ats_GTK_CSS_SECTION_SELECTOR 5
#define enum_c2ats_GTK_CSS_SECTION_DECLARATION 6
#define enum_c2ats_GTK_CSS_SECTION_VALUE 7
#define enum_c2ats_GTK_CSS_SECTION_KEYFRAMES 8
abst@ype struct_c2ats__GtkCssSection // FIXME! Forward declaration.
typedef type_c2ats_GtkCssSection = struct_c2ats__GtkCssSection
fun fun_c2ats_gtk_css_section_get_type: () -> type_c2ats_GType = "mac#gtk_css_section_get_type"
fun fun_c2ats_gtk_css_section_ref: {l1:addr} (!ptr_v_1(type_c2ats_GtkCssSection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCssSection, l2) | ptr l2) = "mac#gtk_css_section_ref"
fun fun_c2ats_gtk_css_section_unref: {l1:addr} (!ptr_v_1(type_c2ats_GtkCssSection, l1) | ptr l1) -> void = "mac#gtk_css_section_unref"
fun fun_c2ats_gtk_css_section_get_section_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkCssSection, l1) | ptr l1) -> type_c2ats_GtkCssSectionType = "mac#gtk_css_section_get_section_type"
fun fun_c2ats_gtk_css_section_get_parent: {l1:addr} (!ptr_v_1(type_c2ats_GtkCssSection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCssSection, l2) | ptr l2) = "mac#gtk_css_section_get_parent"
fun fun_c2ats_gtk_css_section_get_file: {l1:addr} (!ptr_v_1(type_c2ats_GtkCssSection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2) = "mac#gtk_css_section_get_file"
fun fun_c2ats_gtk_css_section_get_start_line: {l1:addr} (!ptr_v_1(type_c2ats_GtkCssSection, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_css_section_get_start_line"
fun fun_c2ats_gtk_css_section_get_start_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkCssSection, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_css_section_get_start_position"
fun fun_c2ats_gtk_css_section_get_end_line: {l1:addr} (!ptr_v_1(type_c2ats_GtkCssSection, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_css_section_get_end_line"
fun fun_c2ats_gtk_css_section_get_end_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkCssSection, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_css_section_get_end_position"
// File: /usr/include/gtk-3.0/gtk/gtkcssprovider.h
typedef type_c2ats_GtkCssProviderError = int
#define enum_c2ats_GTK_CSS_PROVIDER_ERROR_FAILED 0
#define enum_c2ats_GTK_CSS_PROVIDER_ERROR_SYNTAX 1
#define enum_c2ats_GTK_CSS_PROVIDER_ERROR_IMPORT 2
#define enum_c2ats_GTK_CSS_PROVIDER_ERROR_NAME 3
#define enum_c2ats_GTK_CSS_PROVIDER_ERROR_DEPRECATED 4
#define enum_c2ats_GTK_CSS_PROVIDER_ERROR_UNKNOWN_VALUE 5
fun fun_c2ats_gtk_css_provider_error_quark: () -> type_c2ats_GQuark = "mac#gtk_css_provider_error_quark"
abst@ype struct_c2ats__GtkCssProvider // FIXME! Forward declaration.
typedef type_c2ats_GtkCssProvider = struct_c2ats__GtkCssProvider
abst@ype struct_c2ats__GtkCssProviderClass // FIXME! Forward declaration.
typedef type_c2ats_GtkCssProviderClass = struct_c2ats__GtkCssProviderClass
abst@ype struct_c2ats__GtkCssProviderPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkCssProviderPrivate = struct_c2ats__GtkCssProviderPrivate
typedef struct_c2ats__GtkCssProvider = $extype_struct"struct _GtkCssProvider" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkCssProviderPrivate) *)
}
typedef struct_c2ats__GtkCssProviderClass = $extype_struct"struct _GtkCssProviderClass" of {
  parent_class = type_c2ats_GObjectClass,
  parsing_error = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkCssProvider, l1), !ptr_v_1(type_c2ats_GtkCssSection, l2), !ptr_v_1(type_c2ats_GError, l3) | ptr l1, ptr l2, ptr l3) -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_css_provider_get_type: () -> type_c2ats_GType = "mac#gtk_css_provider_get_type"
fun fun_c2ats_gtk_css_provider_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkCssProvider, l1) | ptr l1) = "mac#gtk_css_provider_new"
fun fun_c2ats_gtk_css_provider_to_string: {l1:addr} (!ptr_v_1(type_c2ats_GtkCssProvider, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#gtk_css_provider_to_string"
fun fun_c2ats_gtk_css_provider_load_from_data: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkCssProvider, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gssize, ptr l3) -> type_c2ats_gboolean = "mac#gtk_css_provider_load_from_data"
fun fun_c2ats_gtk_css_provider_load_from_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkCssProvider, l1), !ptr_v_1(type_c2ats_GFile, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_css_provider_load_from_file"
fun fun_c2ats_gtk_css_provider_load_from_path: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkCssProvider, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_css_provider_load_from_path"
fun fun_c2ats_gtk_css_provider_load_from_resource: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkCssProvider, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_css_provider_load_from_resource"
fun fun_c2ats_gtk_css_provider_get_default: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkCssProvider, l1) | ptr l1) = "mac#gtk_css_provider_get_default"
fun fun_c2ats_gtk_css_provider_get_named: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkCssProvider, l3) | ptr l3) = "mac#gtk_css_provider_get_named"
// File: /usr/include/gtk-3.0/gtk/gtkdebug.h
typedef type_c2ats_GtkDebugFlag = int
#define enum_c2ats_GTK_DEBUG_MISC 1 << 0
#define enum_c2ats_GTK_DEBUG_PLUGSOCKET 1 << 1
#define enum_c2ats_GTK_DEBUG_TEXT 1 << 2
#define enum_c2ats_GTK_DEBUG_TREE 1 << 3
#define enum_c2ats_GTK_DEBUG_UPDATES 1 << 4
#define enum_c2ats_GTK_DEBUG_KEYBINDINGS 1 << 5
#define enum_c2ats_GTK_DEBUG_MULTIHEAD 1 << 6
#define enum_c2ats_GTK_DEBUG_MODULES 1 << 7
#define enum_c2ats_GTK_DEBUG_GEOMETRY 1 << 8
#define enum_c2ats_GTK_DEBUG_ICONTHEME 1 << 9
#define enum_c2ats_GTK_DEBUG_PRINTING 1 << 10
#define enum_c2ats_GTK_DEBUG_BUILDER 1 << 11
#define enum_c2ats_GTK_DEBUG_SIZE_REQUEST 1 << 12
#define enum_c2ats_GTK_DEBUG_NO_CSS_CACHE 1 << 13
#define enum_c2ats_GTK_DEBUG_BASELINES 1 << 14
#define enum_c2ats_GTK_DEBUG_PIXEL_CACHE 1 << 15
#define enum_c2ats_GTK_DEBUG_NO_PIXEL_CACHE 1 << 16
#define enum_c2ats_GTK_DEBUG_INTERACTIVE 1 << 17
#define enum_c2ats_GTK_DEBUG_TOUCHSCREEN 1 << 18
#define enum_c2ats_GTK_DEBUG_ACTIONS 1 << 19
#define enum_c2ats_GTK_DEBUG_RESIZE 1 << 20
#define enum_c2ats_GTK_DEBUG_LAYOUT 1 << 21
fun fun_c2ats_gtk_get_debug_flags: () -> type_c2ats_guint = "mac#gtk_get_debug_flags"
fun fun_c2ats_gtk_set_debug_flags: (type_c2ats_guint) -> void = "mac#gtk_set_debug_flags"
// File: /usr/include/gtk-3.0/gtk/gtkdragdest.h
typedef type_c2ats_GtkDestDefaults = int
#define enum_c2ats_GTK_DEST_DEFAULT_MOTION 1 << 0
#define enum_c2ats_GTK_DEST_DEFAULT_HIGHLIGHT 1 << 1
#define enum_c2ats_GTK_DEST_DEFAULT_DROP 1 << 2
#define enum_c2ats_GTK_DEST_DEFAULT_ALL 0x7
fun fun_c2ats_gtk_drag_dest_set: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkTargetEntry, l2) | ptr l1, type_c2ats_GtkDestDefaults, ptr l2, type_c2ats_gint, type_c2ats_GdkDragAction) -> void = "mac#gtk_drag_dest_set"
fun fun_c2ats_gtk_drag_dest_set_proxy: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2, type_c2ats_GdkDragProtocol, type_c2ats_gboolean) -> void = "mac#gtk_drag_dest_set_proxy"
fun fun_c2ats_gtk_drag_dest_unset: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_drag_dest_unset"
fun fun_c2ats_gtk_drag_dest_find_target: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkDragContext, l2), !ptr_v_1(type_c2ats_GtkTargetList, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_GdkAtom = "mac#gtk_drag_dest_find_target"
fun fun_c2ats_gtk_drag_dest_get_target_list: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTargetList, l2) | ptr l2) = "mac#gtk_drag_dest_get_target_list"
fun fun_c2ats_gtk_drag_dest_set_target_list: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkTargetList, l2) | ptr l1, ptr l2) -> void = "mac#gtk_drag_dest_set_target_list"
fun fun_c2ats_gtk_drag_dest_add_text_targets: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_drag_dest_add_text_targets"
fun fun_c2ats_gtk_drag_dest_add_image_targets: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_drag_dest_add_image_targets"
fun fun_c2ats_gtk_drag_dest_add_uri_targets: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_drag_dest_add_uri_targets"
fun fun_c2ats_gtk_drag_dest_set_track_motion: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_drag_dest_set_track_motion"
fun fun_c2ats_gtk_drag_dest_get_track_motion: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_drag_dest_get_track_motion"
// File: /usr/include/gtk-3.0/gtk/gtkdragsource.h
fun fun_c2ats_gtk_drag_source_set: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkTargetEntry, l2) | ptr l1, type_c2ats_GdkModifierType, ptr l2, type_c2ats_gint, type_c2ats_GdkDragAction) -> void = "mac#gtk_drag_source_set"
fun fun_c2ats_gtk_drag_source_unset: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_drag_source_unset"
fun fun_c2ats_gtk_drag_source_get_target_list: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTargetList, l2) | ptr l2) = "mac#gtk_drag_source_get_target_list"
fun fun_c2ats_gtk_drag_source_set_target_list: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkTargetList, l2) | ptr l1, ptr l2) -> void = "mac#gtk_drag_source_set_target_list"
fun fun_c2ats_gtk_drag_source_add_text_targets: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_drag_source_add_text_targets"
fun fun_c2ats_gtk_drag_source_add_image_targets: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_drag_source_add_image_targets"
fun fun_c2ats_gtk_drag_source_add_uri_targets: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_drag_source_add_uri_targets"
fun fun_c2ats_gtk_drag_source_set_icon_pixbuf: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2) -> void = "mac#gtk_drag_source_set_icon_pixbuf"
fun fun_c2ats_gtk_drag_source_set_icon_stock: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_drag_source_set_icon_stock"
fun fun_c2ats_gtk_drag_source_set_icon_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_drag_source_set_icon_name"
fun fun_c2ats_gtk_drag_source_set_icon_gicon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GIcon, l2) | ptr l1, ptr l2) -> void = "mac#gtk_drag_source_set_icon_gicon"
// File: /usr/include/gtk-3.0/gtk/gtkdrawingarea.h
abst@ype struct_c2ats__GtkDrawingArea // FIXME! Forward declaration.
typedef type_c2ats_GtkDrawingArea = struct_c2ats__GtkDrawingArea
abst@ype struct_c2ats__GtkDrawingAreaClass // FIXME! Forward declaration.
typedef type_c2ats_GtkDrawingAreaClass = struct_c2ats__GtkDrawingAreaClass
typedef struct_c2ats__GtkDrawingArea = $extype_struct"struct _GtkDrawingArea" of {
  widget = type_c2ats_GtkWidget,
  dummy = type_c2ats_gpointer
}
typedef struct_c2ats__GtkDrawingAreaClass = $extype_struct"struct _GtkDrawingAreaClass" of {
  parent_class = type_c2ats_GtkWidgetClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_drawing_area_get_type: () -> type_c2ats_GType = "mac#gtk_drawing_area_get_type"
fun fun_c2ats_gtk_drawing_area_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_drawing_area_new"
// File: /usr/include/gtk-3.0/gtk/gtkeventbox.h
abst@ype struct_c2ats__GtkEventBox // FIXME! Forward declaration.
typedef type_c2ats_GtkEventBox = struct_c2ats__GtkEventBox
abst@ype struct_c2ats__GtkEventBoxClass // FIXME! Forward declaration.
typedef type_c2ats_GtkEventBoxClass = struct_c2ats__GtkEventBoxClass
abst@ype struct_c2ats__GtkEventBoxPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkEventBoxPrivate = struct_c2ats__GtkEventBoxPrivate
typedef struct_c2ats__GtkEventBox = $extype_struct"struct _GtkEventBox" of {
  bin = type_c2ats_GtkBin,
  priv = ptr (* cPtr0(type_c2ats_GtkEventBoxPrivate) *)
}
typedef struct_c2ats__GtkEventBoxClass = $extype_struct"struct _GtkEventBoxClass" of {
  parent_class = type_c2ats_GtkBinClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_event_box_get_type: () -> type_c2ats_GType = "mac#gtk_event_box_get_type"
fun fun_c2ats_gtk_event_box_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_event_box_new"
fun fun_c2ats_gtk_event_box_get_visible_window: {l1:addr} (!ptr_v_1(type_c2ats_GtkEventBox, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_event_box_get_visible_window"
fun fun_c2ats_gtk_event_box_set_visible_window: {l1:addr} (!ptr_v_1(type_c2ats_GtkEventBox, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_event_box_set_visible_window"
fun fun_c2ats_gtk_event_box_get_above_child: {l1:addr} (!ptr_v_1(type_c2ats_GtkEventBox, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_event_box_get_above_child"
fun fun_c2ats_gtk_event_box_set_above_child: {l1:addr} (!ptr_v_1(type_c2ats_GtkEventBox, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_event_box_set_above_child"
// File: /usr/include/gtk-3.0/gtk/gtkeventcontroller.h
abst@ype struct_c2ats__GtkEventController // FIXME! Forward declaration.
typedef type_c2ats_GtkEventController = struct_c2ats__GtkEventController
abst@ype struct_c2ats__GtkEventControllerClass // FIXME! Forward declaration.
typedef type_c2ats_GtkEventControllerClass = struct_c2ats__GtkEventControllerClass
fun fun_c2ats_gtk_event_controller_get_type: () -> type_c2ats_GType = "mac#gtk_event_controller_get_type"
fun fun_c2ats_gtk_event_controller_get_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkEventController, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_event_controller_get_widget"
fun fun_c2ats_gtk_event_controller_handle_event: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkEventController, l1), !ptr_v_1(type_c2ats_GdkEvent, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_event_controller_handle_event"
fun fun_c2ats_gtk_event_controller_reset: {l1:addr} (!ptr_v_1(type_c2ats_GtkEventController, l1) | ptr l1) -> void = "mac#gtk_event_controller_reset"
fun fun_c2ats_gtk_event_controller_get_propagation_phase: {l1:addr} (!ptr_v_1(type_c2ats_GtkEventController, l1) | ptr l1) -> type_c2ats_GtkPropagationPhase = "mac#gtk_event_controller_get_propagation_phase"
fun fun_c2ats_gtk_event_controller_set_propagation_phase: {l1:addr} (!ptr_v_1(type_c2ats_GtkEventController, l1) | ptr l1, type_c2ats_GtkPropagationPhase) -> void = "mac#gtk_event_controller_set_propagation_phase"
// File: /usr/include/gtk-3.0/gtk/gtkexpander.h
abst@ype struct_c2ats__GtkExpander // FIXME! Forward declaration.
typedef type_c2ats_GtkExpander = struct_c2ats__GtkExpander
abst@ype struct_c2ats__GtkExpanderClass // FIXME! Forward declaration.
typedef type_c2ats_GtkExpanderClass = struct_c2ats__GtkExpanderClass
abst@ype struct_c2ats__GtkExpanderPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkExpanderPrivate = struct_c2ats__GtkExpanderPrivate
typedef struct_c2ats__GtkExpander = $extype_struct"struct _GtkExpander" of {
  bin = type_c2ats_GtkBin,
  priv = ptr (* cPtr0(type_c2ats_GtkExpanderPrivate) *)
}
typedef struct_c2ats__GtkExpanderClass = $extype_struct"struct _GtkExpanderClass" of {
  parent_class = type_c2ats_GtkBinClass,
  activate = {l1:addr} (!ptr_v_1(type_c2ats_GtkExpander, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_expander_get_type: () -> type_c2ats_GType = "mac#gtk_expander_get_type"
fun fun_c2ats_gtk_expander_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_expander_new"
fun fun_c2ats_gtk_expander_new_with_mnemonic: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_expander_new_with_mnemonic"
fun fun_c2ats_gtk_expander_set_expanded: {l1:addr} (!ptr_v_1(type_c2ats_GtkExpander, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_expander_set_expanded"
fun fun_c2ats_gtk_expander_get_expanded: {l1:addr} (!ptr_v_1(type_c2ats_GtkExpander, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_expander_get_expanded"
fun fun_c2ats_gtk_expander_set_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkExpander, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_expander_set_spacing"
fun fun_c2ats_gtk_expander_get_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkExpander, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_expander_get_spacing"
fun fun_c2ats_gtk_expander_set_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkExpander, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_expander_set_label"
fun fun_c2ats_gtk_expander_get_label: {l1:addr} (!ptr_v_1(type_c2ats_GtkExpander, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_expander_get_label"
fun fun_c2ats_gtk_expander_set_use_underline: {l1:addr} (!ptr_v_1(type_c2ats_GtkExpander, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_expander_set_use_underline"
fun fun_c2ats_gtk_expander_get_use_underline: {l1:addr} (!ptr_v_1(type_c2ats_GtkExpander, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_expander_get_use_underline"
fun fun_c2ats_gtk_expander_set_use_markup: {l1:addr} (!ptr_v_1(type_c2ats_GtkExpander, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_expander_set_use_markup"
fun fun_c2ats_gtk_expander_get_use_markup: {l1:addr} (!ptr_v_1(type_c2ats_GtkExpander, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_expander_get_use_markup"
fun fun_c2ats_gtk_expander_set_label_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkExpander, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_expander_set_label_widget"
fun fun_c2ats_gtk_expander_get_label_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkExpander, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_expander_get_label_widget"
fun fun_c2ats_gtk_expander_set_label_fill: {l1:addr} (!ptr_v_1(type_c2ats_GtkExpander, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_expander_set_label_fill"
fun fun_c2ats_gtk_expander_get_label_fill: {l1:addr} (!ptr_v_1(type_c2ats_GtkExpander, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_expander_get_label_fill"
fun fun_c2ats_gtk_expander_set_resize_toplevel: {l1:addr} (!ptr_v_1(type_c2ats_GtkExpander, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_expander_set_resize_toplevel"
fun fun_c2ats_gtk_expander_get_resize_toplevel: {l1:addr} (!ptr_v_1(type_c2ats_GtkExpander, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_expander_get_resize_toplevel"
// File: /usr/include/gtk-3.0/gtk/gtkfixed.h
abst@ype struct_c2ats__GtkFixed // FIXME! Forward declaration.
typedef type_c2ats_GtkFixed = struct_c2ats__GtkFixed
abst@ype struct_c2ats__GtkFixedPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkFixedPrivate = struct_c2ats__GtkFixedPrivate
abst@ype struct_c2ats__GtkFixedClass // FIXME! Forward declaration.
typedef type_c2ats_GtkFixedClass = struct_c2ats__GtkFixedClass
abst@ype struct_c2ats__GtkFixedChild // FIXME! Forward declaration.
typedef type_c2ats_GtkFixedChild = struct_c2ats__GtkFixedChild
typedef struct_c2ats__GtkFixed = $extype_struct"struct _GtkFixed" of {
  container = type_c2ats_GtkContainer,
  priv = ptr (* cPtr0(type_c2ats_GtkFixedPrivate) *)
}
typedef struct_c2ats__GtkFixedClass = $extype_struct"struct _GtkFixedClass" of {
  parent_class = type_c2ats_GtkContainerClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
typedef struct_c2ats__GtkFixedChild = $extype_struct"struct _GtkFixedChild" of {
  widget = ptr (* cPtr0(type_c2ats_GtkWidget) *),
  x = type_c2ats_gint,
  y = type_c2ats_gint
}
fun fun_c2ats_gtk_fixed_get_type: () -> type_c2ats_GType = "mac#gtk_fixed_get_type"
fun fun_c2ats_gtk_fixed_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_fixed_new"
fun fun_c2ats_gtk_fixed_put: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFixed, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_fixed_put"
fun fun_c2ats_gtk_fixed_move: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFixed, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_fixed_move"
// File: /usr/include/gtk-3.0/gtk/gtkfilefilter.h
abst@ype struct_c2ats__GtkFileFilter // FIXME! Forward declaration.
typedef type_c2ats_GtkFileFilter = struct_c2ats__GtkFileFilter
abst@ype struct_c2ats__GtkFileFilterInfo // FIXME! Forward declaration.
typedef type_c2ats_GtkFileFilterInfo = struct_c2ats__GtkFileFilterInfo
typedef type_c2ats_GtkFileFilterFlags = int
#define enum_c2ats_GTK_FILE_FILTER_FILENAME 1 << 0
#define enum_c2ats_GTK_FILE_FILTER_URI 1 << 1
#define enum_c2ats_GTK_FILE_FILTER_DISPLAY_NAME 1 << 2
#define enum_c2ats_GTK_FILE_FILTER_MIME_TYPE 1 << 3
typedef type_c2ats_GtkFileFilterFunc = {l1:addr} (!ptr_v_1(type_c2ats_GtkFileFilterInfo, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef struct_c2ats__GtkFileFilterInfo = $extype_struct"struct _GtkFileFilterInfo" of {
  contains = type_c2ats_GtkFileFilterFlags,
  filename = ptr (* cPtr0(type_c2ats_gchar) *),
  uri = ptr (* cPtr0(type_c2ats_gchar) *),
  display_name = ptr (* cPtr0(type_c2ats_gchar) *),
  mime_type = ptr (* cPtr0(type_c2ats_gchar) *)
}
fun fun_c2ats_gtk_file_filter_get_type: () -> type_c2ats_GType = "mac#gtk_file_filter_get_type"
fun fun_c2ats_gtk_file_filter_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkFileFilter, l1) | ptr l1) = "mac#gtk_file_filter_new"
fun fun_c2ats_gtk_file_filter_set_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileFilter, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_file_filter_set_name"
fun fun_c2ats_gtk_file_filter_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileFilter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_file_filter_get_name"
fun fun_c2ats_gtk_file_filter_add_mime_type: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileFilter, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_file_filter_add_mime_type"
fun fun_c2ats_gtk_file_filter_add_pattern: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileFilter, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_file_filter_add_pattern"
fun fun_c2ats_gtk_file_filter_add_pixbuf_formats: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileFilter, l1) | ptr l1) -> void = "mac#gtk_file_filter_add_pixbuf_formats"
fun fun_c2ats_gtk_file_filter_add_custom: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileFilter, l1) | ptr l1, type_c2ats_GtkFileFilterFlags, type_c2ats_GtkFileFilterFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_file_filter_add_custom"
fun fun_c2ats_gtk_file_filter_get_needed: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileFilter, l1) | ptr l1) -> type_c2ats_GtkFileFilterFlags = "mac#gtk_file_filter_get_needed"
fun fun_c2ats_gtk_file_filter_filter: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileFilter, l1), !ptr_v_1(type_c2ats_GtkFileFilterInfo, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_file_filter_filter"
fun fun_c2ats_gtk_file_filter_to_gvariant: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileFilter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#gtk_file_filter_to_gvariant"
fun fun_c2ats_gtk_file_filter_new_from_gvariant: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkFileFilter, l2) | ptr l2) = "mac#gtk_file_filter_new_from_gvariant"
// File: /usr/include/gtk-3.0/gtk/gtkfilechooser.h
abst@ype struct_c2ats__GtkFileChooser // FIXME! Forward declaration.
typedef type_c2ats_GtkFileChooser = struct_c2ats__GtkFileChooser
typedef type_c2ats_GtkFileChooserAction = int
#define enum_c2ats_GTK_FILE_CHOOSER_ACTION_OPEN 0
#define enum_c2ats_GTK_FILE_CHOOSER_ACTION_SAVE 1
#define enum_c2ats_GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER 2
#define enum_c2ats_GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER 3
typedef type_c2ats_GtkFileChooserConfirmation = int
#define enum_c2ats_GTK_FILE_CHOOSER_CONFIRMATION_CONFIRM 0
#define enum_c2ats_GTK_FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME 1
#define enum_c2ats_GTK_FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN 2
fun fun_c2ats_gtk_file_chooser_get_type: () -> type_c2ats_GType = "mac#gtk_file_chooser_get_type"
typedef type_c2ats_GtkFileChooserError = int
#define enum_c2ats_GTK_FILE_CHOOSER_ERROR_NONEXISTENT 0
#define enum_c2ats_GTK_FILE_CHOOSER_ERROR_BAD_FILENAME 1
#define enum_c2ats_GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS 2
#define enum_c2ats_GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME 3
fun fun_c2ats_gtk_file_chooser_error_quark: () -> type_c2ats_GQuark = "mac#gtk_file_chooser_error_quark"
fun fun_c2ats_gtk_file_chooser_set_action: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1, type_c2ats_GtkFileChooserAction) -> void = "mac#gtk_file_chooser_set_action"
fun fun_c2ats_gtk_file_chooser_get_action: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> type_c2ats_GtkFileChooserAction = "mac#gtk_file_chooser_get_action"
fun fun_c2ats_gtk_file_chooser_set_local_only: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_file_chooser_set_local_only"
fun fun_c2ats_gtk_file_chooser_get_local_only: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_file_chooser_get_local_only"
fun fun_c2ats_gtk_file_chooser_set_select_multiple: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_file_chooser_set_select_multiple"
fun fun_c2ats_gtk_file_chooser_get_select_multiple: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_file_chooser_get_select_multiple"
fun fun_c2ats_gtk_file_chooser_set_show_hidden: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_file_chooser_set_show_hidden"
fun fun_c2ats_gtk_file_chooser_get_show_hidden: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_file_chooser_get_show_hidden"
fun fun_c2ats_gtk_file_chooser_set_do_overwrite_confirmation: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_file_chooser_set_do_overwrite_confirmation"
fun fun_c2ats_gtk_file_chooser_get_do_overwrite_confirmation: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_file_chooser_get_do_overwrite_confirmation"
fun fun_c2ats_gtk_file_chooser_set_create_folders: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_file_chooser_set_create_folders"
fun fun_c2ats_gtk_file_chooser_get_create_folders: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_file_chooser_get_create_folders"
fun fun_c2ats_gtk_file_chooser_set_current_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_file_chooser_set_current_name"
fun fun_c2ats_gtk_file_chooser_get_current_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_file_chooser_get_current_name"
fun fun_c2ats_gtk_file_chooser_get_filename: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_file_chooser_get_filename"
fun fun_c2ats_gtk_file_chooser_set_filename: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_file_chooser_set_filename"
fun fun_c2ats_gtk_file_chooser_select_filename: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_file_chooser_select_filename"
fun fun_c2ats_gtk_file_chooser_unselect_filename: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#gtk_file_chooser_unselect_filename"
fun fun_c2ats_gtk_file_chooser_select_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> void = "mac#gtk_file_chooser_select_all"
fun fun_c2ats_gtk_file_chooser_unselect_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> void = "mac#gtk_file_chooser_unselect_all"
fun fun_c2ats_gtk_file_chooser_get_filenames: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_file_chooser_get_filenames"
fun fun_c2ats_gtk_file_chooser_set_current_folder: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_file_chooser_set_current_folder"
fun fun_c2ats_gtk_file_chooser_get_current_folder: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_file_chooser_get_current_folder"
fun fun_c2ats_gtk_file_chooser_get_uri: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_file_chooser_get_uri"
fun fun_c2ats_gtk_file_chooser_set_uri: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_file_chooser_set_uri"
fun fun_c2ats_gtk_file_chooser_select_uri: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_file_chooser_select_uri"
fun fun_c2ats_gtk_file_chooser_unselect_uri: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#gtk_file_chooser_unselect_uri"
fun fun_c2ats_gtk_file_chooser_get_uris: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_file_chooser_get_uris"
fun fun_c2ats_gtk_file_chooser_set_current_folder_uri: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_file_chooser_set_current_folder_uri"
fun fun_c2ats_gtk_file_chooser_get_current_folder_uri: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_file_chooser_get_current_folder_uri"
fun fun_c2ats_gtk_file_chooser_get_file: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2) = "mac#gtk_file_chooser_get_file"
fun fun_c2ats_gtk_file_chooser_set_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(type_c2ats_GFile, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_file_chooser_set_file"
fun fun_c2ats_gtk_file_chooser_select_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(type_c2ats_GFile, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_file_chooser_select_file"
fun fun_c2ats_gtk_file_chooser_unselect_file: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(type_c2ats_GFile, l2) | ptr l1, ptr l2) -> void = "mac#gtk_file_chooser_unselect_file"
fun fun_c2ats_gtk_file_chooser_get_files: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_file_chooser_get_files"
fun fun_c2ats_gtk_file_chooser_set_current_folder_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(type_c2ats_GFile, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_file_chooser_set_current_folder_file"
fun fun_c2ats_gtk_file_chooser_get_current_folder_file: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2) = "mac#gtk_file_chooser_get_current_folder_file"
fun fun_c2ats_gtk_file_chooser_set_preview_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_file_chooser_set_preview_widget"
fun fun_c2ats_gtk_file_chooser_get_preview_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_file_chooser_get_preview_widget"
fun fun_c2ats_gtk_file_chooser_set_preview_widget_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_file_chooser_set_preview_widget_active"
fun fun_c2ats_gtk_file_chooser_get_preview_widget_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_file_chooser_get_preview_widget_active"
fun fun_c2ats_gtk_file_chooser_set_use_preview_label: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_file_chooser_set_use_preview_label"
fun fun_c2ats_gtk_file_chooser_get_use_preview_label: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_file_chooser_get_use_preview_label"
fun fun_c2ats_gtk_file_chooser_get_preview_filename: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#gtk_file_chooser_get_preview_filename"
fun fun_c2ats_gtk_file_chooser_get_preview_uri: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#gtk_file_chooser_get_preview_uri"
fun fun_c2ats_gtk_file_chooser_get_preview_file: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2) = "mac#gtk_file_chooser_get_preview_file"
fun fun_c2ats_gtk_file_chooser_set_extra_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_file_chooser_set_extra_widget"
fun fun_c2ats_gtk_file_chooser_get_extra_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_file_chooser_get_extra_widget"
fun fun_c2ats_gtk_file_chooser_add_filter: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(type_c2ats_GtkFileFilter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_file_chooser_add_filter"
fun fun_c2ats_gtk_file_chooser_remove_filter: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(type_c2ats_GtkFileFilter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_file_chooser_remove_filter"
fun fun_c2ats_gtk_file_chooser_list_filters: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_file_chooser_list_filters"
fun fun_c2ats_gtk_file_chooser_set_filter: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(type_c2ats_GtkFileFilter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_file_chooser_set_filter"
fun fun_c2ats_gtk_file_chooser_get_filter: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkFileFilter, l2) | ptr l2) = "mac#gtk_file_chooser_get_filter"
fun fun_c2ats_gtk_file_chooser_add_shortcut_folder: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_file_chooser_add_shortcut_folder"
fun fun_c2ats_gtk_file_chooser_remove_shortcut_folder: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_file_chooser_remove_shortcut_folder"
fun fun_c2ats_gtk_file_chooser_list_shortcut_folders: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_file_chooser_list_shortcut_folders"
fun fun_c2ats_gtk_file_chooser_add_shortcut_folder_uri: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_file_chooser_add_shortcut_folder_uri"
fun fun_c2ats_gtk_file_chooser_remove_shortcut_folder_uri: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_file_chooser_remove_shortcut_folder_uri"
fun fun_c2ats_gtk_file_chooser_list_shortcut_folder_uris: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_file_chooser_list_shortcut_folder_uris"
fun fun_c2ats_gtk_file_chooser_add_choice: {l1,l2,l3,l4,l4_1,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3), !ptr_v_2(char, l4, l4_1), !ptr_v_2(char, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void = "mac#gtk_file_chooser_add_choice"
fun fun_c2ats_gtk_file_chooser_remove_choice: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#gtk_file_chooser_remove_choice"
fun fun_c2ats_gtk_file_chooser_set_choice: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_file_chooser_set_choice"
fun fun_c2ats_gtk_file_chooser_get_choice: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooser, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(char, l3) | ptr l3) = "mac#gtk_file_chooser_get_choice"
// File: /usr/include/gtk-3.0/gtk/gtkfilechooserbutton.h
abst@ype struct_c2ats__GtkFileChooserButton // FIXME! Forward declaration.
typedef type_c2ats_GtkFileChooserButton = struct_c2ats__GtkFileChooserButton
abst@ype struct_c2ats__GtkFileChooserButtonPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkFileChooserButtonPrivate = struct_c2ats__GtkFileChooserButtonPrivate
abst@ype struct_c2ats__GtkFileChooserButtonClass // FIXME! Forward declaration.
typedef type_c2ats_GtkFileChooserButtonClass = struct_c2ats__GtkFileChooserButtonClass
typedef struct_c2ats__GtkFileChooserButton = $extype_struct"struct _GtkFileChooserButton" of {
  parent = type_c2ats_GtkBox,
  priv = ptr (* cPtr0(type_c2ats_GtkFileChooserButtonPrivate) *)
}
typedef struct_c2ats__GtkFileChooserButtonClass = $extype_struct"struct _GtkFileChooserButtonClass" of {
  parent_class = type_c2ats_GtkBoxClass,
  file_set = {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooserButton, l1) | ptr l1) -> void,
  __gtk_reserved1 = ptr (* cPtr0(void) *),
  __gtk_reserved2 = ptr (* cPtr0(void) *),
  __gtk_reserved3 = ptr (* cPtr0(void) *),
  __gtk_reserved4 = ptr (* cPtr0(void) *)
}
fun fun_c2ats_gtk_file_chooser_button_get_type: () -> type_c2ats_GType = "mac#gtk_file_chooser_button_get_type"
fun fun_c2ats_gtk_file_chooser_button_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_GtkFileChooserAction) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_file_chooser_button_new"
fun fun_c2ats_gtk_file_chooser_button_new_with_dialog: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_file_chooser_button_new_with_dialog"
fun fun_c2ats_gtk_file_chooser_button_get_title: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooserButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_file_chooser_button_get_title"
fun fun_c2ats_gtk_file_chooser_button_set_title: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooserButton, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_file_chooser_button_set_title"
fun fun_c2ats_gtk_file_chooser_button_get_width_chars: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooserButton, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_file_chooser_button_get_width_chars"
fun fun_c2ats_gtk_file_chooser_button_set_width_chars: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooserButton, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_file_chooser_button_set_width_chars"
fun fun_c2ats_gtk_file_chooser_button_get_focus_on_click: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooserButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_file_chooser_button_get_focus_on_click"
fun fun_c2ats_gtk_file_chooser_button_set_focus_on_click: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooserButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_file_chooser_button_set_focus_on_click"
// File: /usr/include/gtk-3.0/gtk/gtkfilechooserdialog.h
abst@ype struct_c2ats__GtkFileChooserDialog // FIXME! Forward declaration.
typedef type_c2ats_GtkFileChooserDialog = struct_c2ats__GtkFileChooserDialog
abst@ype struct_c2ats__GtkFileChooserDialogPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkFileChooserDialogPrivate = struct_c2ats__GtkFileChooserDialogPrivate
abst@ype struct_c2ats__GtkFileChooserDialogClass // FIXME! Forward declaration.
typedef type_c2ats_GtkFileChooserDialogClass = struct_c2ats__GtkFileChooserDialogClass
typedef struct_c2ats__GtkFileChooserDialog = $extype_struct"struct _GtkFileChooserDialog" of {
  parent_instance = type_c2ats_GtkDialog,
  priv = ptr (* cPtr0(type_c2ats_GtkFileChooserDialogPrivate) *)
}
typedef struct_c2ats__GtkFileChooserDialogClass = $extype_struct"struct _GtkFileChooserDialogClass" of {
  parent_class = type_c2ats_GtkDialogClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_file_chooser_dialog_get_type: () -> type_c2ats_GType = "mac#gtk_file_chooser_dialog_get_type"
fun fun_c2ats_gtk_file_chooser_dialog_new: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GtkWindow, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, type_c2ats_GtkFileChooserAction, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GtkWidget, l4) | ptr l4) = "mac#gtk_file_chooser_dialog_new"
// File: /usr/include/gtk-3.0/gtk/gtknativedialog.h
fun fun_c2ats_gtk_native_dialog_get_type: () -> type_c2ats_GType = "mac#gtk_native_dialog_get_type"
abst@ype struct_c2ats__GtkNativeDialog // FIXME! Forward declaration.
typedef type_c2ats_GtkNativeDialog = struct_c2ats__GtkNativeDialog
abst@ype struct_c2ats__GtkNativeDialogClass // FIXME! Forward declaration.
typedef type_c2ats_GtkNativeDialogClass = struct_c2ats__GtkNativeDialogClass
typedef struct_c2ats__GtkNativeDialog = $extype_struct"struct _GtkNativeDialog" of {
  parent_instance = type_c2ats_GObject
}
typedef type_c2ats_GtkNativeDialog_autoptr = cPtr0(type_c2ats_GtkNativeDialog)
fun fun_c2ats_glib_autoptr_cleanup_GtkNativeDialog: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkNativeDialog, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkNativeDialog"
fun fun_c2ats_GTK_NATIVE_DIALOG: (type_c2ats_gpointer) -> [l1:addr] (ptr_v_1(type_c2ats_GtkNativeDialog, l1) | ptr l1) = "mac#GTK_NATIVE_DIALOG"
fun fun_c2ats_GTK_NATIVE_DIALOG_CLASS: (type_c2ats_gpointer) -> [l1:addr] (ptr_v_1(type_c2ats_GtkNativeDialogClass, l1) | ptr l1) = "mac#GTK_NATIVE_DIALOG_CLASS"
fun fun_c2ats_GTK_IS_NATIVE_DIALOG: (type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#GTK_IS_NATIVE_DIALOG"
fun fun_c2ats_GTK_IS_NATIVE_DIALOG_CLASS: (type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#GTK_IS_NATIVE_DIALOG_CLASS"
fun fun_c2ats_GTK_NATIVE_DIALOG_GET_CLASS: (type_c2ats_gpointer) -> [l1:addr] (ptr_v_1(type_c2ats_GtkNativeDialogClass, l1) | ptr l1) = "mac#GTK_NATIVE_DIALOG_GET_CLASS"
typedef struct_c2ats__GtkNativeDialogClass = $extype_struct"struct _GtkNativeDialogClass" of {
  parent_class = type_c2ats_GObjectClass,
  response = {l1:addr} (!ptr_v_1(type_c2ats_GtkNativeDialog, l1) | ptr l1, type_c2ats_gint) -> void,
  show = {l1:addr} (!ptr_v_1(type_c2ats_GtkNativeDialog, l1) | ptr l1) -> void,
  hide = {l1:addr} (!ptr_v_1(type_c2ats_GtkNativeDialog, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_native_dialog_show: {l1:addr} (!ptr_v_1(type_c2ats_GtkNativeDialog, l1) | ptr l1) -> void = "mac#gtk_native_dialog_show"
fun fun_c2ats_gtk_native_dialog_hide: {l1:addr} (!ptr_v_1(type_c2ats_GtkNativeDialog, l1) | ptr l1) -> void = "mac#gtk_native_dialog_hide"
fun fun_c2ats_gtk_native_dialog_destroy: {l1:addr} (!ptr_v_1(type_c2ats_GtkNativeDialog, l1) | ptr l1) -> void = "mac#gtk_native_dialog_destroy"
fun fun_c2ats_gtk_native_dialog_get_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkNativeDialog, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_native_dialog_get_visible"
fun fun_c2ats_gtk_native_dialog_set_modal: {l1:addr} (!ptr_v_1(type_c2ats_GtkNativeDialog, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_native_dialog_set_modal"
fun fun_c2ats_gtk_native_dialog_get_modal: {l1:addr} (!ptr_v_1(type_c2ats_GtkNativeDialog, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_native_dialog_get_modal"
fun fun_c2ats_gtk_native_dialog_set_title: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNativeDialog, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#gtk_native_dialog_set_title"
fun fun_c2ats_gtk_native_dialog_get_title: {l1:addr} (!ptr_v_1(type_c2ats_GtkNativeDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#gtk_native_dialog_get_title"
fun fun_c2ats_gtk_native_dialog_set_transient_for: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNativeDialog, l1), !ptr_v_1(type_c2ats_GtkWindow, l2) | ptr l1, ptr l2) -> void = "mac#gtk_native_dialog_set_transient_for"
fun fun_c2ats_gtk_native_dialog_get_transient_for: {l1:addr} (!ptr_v_1(type_c2ats_GtkNativeDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWindow, l2) | ptr l2) = "mac#gtk_native_dialog_get_transient_for"
fun fun_c2ats_gtk_native_dialog_run: {l1:addr} (!ptr_v_1(type_c2ats_GtkNativeDialog, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_native_dialog_run"
// File: /usr/include/gtk-3.0/gtk/gtkfilechoosernative.h
fun fun_c2ats_gtk_file_chooser_native_get_type: () -> type_c2ats_GType = "mac#gtk_file_chooser_native_get_type"
abst@ype struct_c2ats__GtkFileChooserNative // FIXME! Forward declaration.
typedef type_c2ats_GtkFileChooserNative = struct_c2ats__GtkFileChooserNative
typedef struct_c2ats_anon_218889 = $extype_struct"struct { GtkNativeDialogClass parent_class; }" of {
  parent_class = type_c2ats_GtkNativeDialogClass
}
typedef type_c2ats_GtkFileChooserNativeClass = struct_c2ats_anon_218889
typedef type_c2ats_GtkFileChooserNative_autoptr = cPtr0(type_c2ats_GtkFileChooserNative)
fun fun_c2ats_glib_autoptr_cleanup_GtkFileChooserNative: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkFileChooserNative, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkFileChooserNative"
fun fun_c2ats_GTK_FILE_CHOOSER_NATIVE: (type_c2ats_gpointer) -> [l1:addr] (ptr_v_1(type_c2ats_GtkFileChooserNative, l1) | ptr l1) = "mac#GTK_FILE_CHOOSER_NATIVE"
fun fun_c2ats_GTK_IS_FILE_CHOOSER_NATIVE: (type_c2ats_gpointer) -> type_c2ats_gboolean = "mac#GTK_IS_FILE_CHOOSER_NATIVE"
fun fun_c2ats_gtk_file_chooser_native_new: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GtkWindow, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkFileChooserAction, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GtkFileChooserNative, l5) | ptr l5) = "mac#gtk_file_chooser_native_new"
fun fun_c2ats_gtk_file_chooser_native_get_accept_label: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooserNative, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#gtk_file_chooser_native_get_accept_label"
fun fun_c2ats_gtk_file_chooser_native_set_accept_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooserNative, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#gtk_file_chooser_native_set_accept_label"
fun fun_c2ats_gtk_file_chooser_native_get_cancel_label: {l1:addr} (!ptr_v_1(type_c2ats_GtkFileChooserNative, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#gtk_file_chooser_native_get_cancel_label"
fun fun_c2ats_gtk_file_chooser_native_set_cancel_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFileChooserNative, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#gtk_file_chooser_native_set_cancel_label"
// File: /usr/include/gtk-3.0/gtk/gtkfilechooserwidget.h
abst@ype struct_c2ats__GtkFileChooserWidget // FIXME! Forward declaration.
typedef type_c2ats_GtkFileChooserWidget = struct_c2ats__GtkFileChooserWidget
abst@ype struct_c2ats__GtkFileChooserWidgetPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkFileChooserWidgetPrivate = struct_c2ats__GtkFileChooserWidgetPrivate
abst@ype struct_c2ats__GtkFileChooserWidgetClass // FIXME! Forward declaration.
typedef type_c2ats_GtkFileChooserWidgetClass = struct_c2ats__GtkFileChooserWidgetClass
typedef struct_c2ats__GtkFileChooserWidget = $extype_struct"struct _GtkFileChooserWidget" of {
  parent_instance = type_c2ats_GtkBox,
  priv = ptr (* cPtr0(type_c2ats_GtkFileChooserWidgetPrivate) *)
}
typedef struct_c2ats__GtkFileChooserWidgetClass = $extype_struct"struct _GtkFileChooserWidgetClass" of {
  parent_class = type_c2ats_GtkBoxClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_file_chooser_widget_get_type: () -> type_c2ats_GType = "mac#gtk_file_chooser_widget_get_type"
fun fun_c2ats_gtk_file_chooser_widget_new: (type_c2ats_GtkFileChooserAction) -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_file_chooser_widget_new"
// File: /usr/include/gtk-3.0/gtk/gtkflowbox.h
abst@ype struct_c2ats__GtkFlowBox // FIXME! Forward declaration.
typedef type_c2ats_GtkFlowBox = struct_c2ats__GtkFlowBox
abst@ype struct_c2ats__GtkFlowBoxClass // FIXME! Forward declaration.
typedef type_c2ats_GtkFlowBoxClass = struct_c2ats__GtkFlowBoxClass
abst@ype struct_c2ats__GtkFlowBoxChild // FIXME! Forward declaration.
typedef type_c2ats_GtkFlowBoxChild = struct_c2ats__GtkFlowBoxChild
abst@ype struct_c2ats__GtkFlowBoxChildClass // FIXME! Forward declaration.
typedef type_c2ats_GtkFlowBoxChildClass = struct_c2ats__GtkFlowBoxChildClass
typedef struct_c2ats__GtkFlowBox = $extype_struct"struct _GtkFlowBox" of {
  container = type_c2ats_GtkContainer
}
typedef struct_c2ats__GtkFlowBoxClass = $extype_struct"struct _GtkFlowBoxClass" of {
  parent_class = type_c2ats_GtkContainerClass,
  child_activated = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1), !ptr_v_1(type_c2ats_GtkFlowBoxChild, l2) | ptr l1, ptr l2) -> void,
  selected_children_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1) -> void,
  activate_cursor_child = {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1) -> void,
  toggle_cursor_child = {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1) -> void,
  move_cursor = {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1, type_c2ats_GtkMovementStep, type_c2ats_gint) -> type_c2ats_gboolean,
  select_all = {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1) -> void,
  unselect_all = {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void,
  _gtk_reserved6 = () -> void
}
typedef struct_c2ats__GtkFlowBoxChild = $extype_struct"struct _GtkFlowBoxChild" of {
  parent_instance = type_c2ats_GtkBin
}
typedef struct_c2ats__GtkFlowBoxChildClass = $extype_struct"struct _GtkFlowBoxChildClass" of {
  parent_class = type_c2ats_GtkBinClass,
  activate = {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBoxChild, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void
}
typedef type_c2ats_GtkFlowBoxCreateWidgetFunc = (type_c2ats_gpointer, type_c2ats_gpointer) -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1)
fun fun_c2ats_gtk_flow_box_child_get_type: () -> type_c2ats_GType = "mac#gtk_flow_box_child_get_type"
fun fun_c2ats_gtk_flow_box_child_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_flow_box_child_new"
fun fun_c2ats_gtk_flow_box_child_get_index: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBoxChild, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_flow_box_child_get_index"
fun fun_c2ats_gtk_flow_box_child_is_selected: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBoxChild, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_flow_box_child_is_selected"
fun fun_c2ats_gtk_flow_box_child_changed: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBoxChild, l1) | ptr l1) -> void = "mac#gtk_flow_box_child_changed"
fun fun_c2ats_gtk_flow_box_get_type: () -> type_c2ats_GType = "mac#gtk_flow_box_get_type"
fun fun_c2ats_gtk_flow_box_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_flow_box_new"
fun fun_c2ats_gtk_flow_box_bind_model: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1), !ptr_v_1(type_c2ats_GListModel, l2) | ptr l1, ptr l2, type_c2ats_GtkFlowBoxCreateWidgetFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_flow_box_bind_model"
fun fun_c2ats_gtk_flow_box_set_homogeneous: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_flow_box_set_homogeneous"
fun fun_c2ats_gtk_flow_box_get_homogeneous: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_flow_box_get_homogeneous"
fun fun_c2ats_gtk_flow_box_set_row_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_flow_box_set_row_spacing"
fun fun_c2ats_gtk_flow_box_get_row_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_flow_box_get_row_spacing"
fun fun_c2ats_gtk_flow_box_set_column_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_flow_box_set_column_spacing"
fun fun_c2ats_gtk_flow_box_get_column_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_flow_box_get_column_spacing"
fun fun_c2ats_gtk_flow_box_set_min_children_per_line: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_flow_box_set_min_children_per_line"
fun fun_c2ats_gtk_flow_box_get_min_children_per_line: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_flow_box_get_min_children_per_line"
fun fun_c2ats_gtk_flow_box_set_max_children_per_line: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_flow_box_set_max_children_per_line"
fun fun_c2ats_gtk_flow_box_get_max_children_per_line: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_flow_box_get_max_children_per_line"
fun fun_c2ats_gtk_flow_box_set_activate_on_single_click: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_flow_box_set_activate_on_single_click"
fun fun_c2ats_gtk_flow_box_get_activate_on_single_click: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_flow_box_get_activate_on_single_click"
fun fun_c2ats_gtk_flow_box_insert: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_flow_box_insert"
fun fun_c2ats_gtk_flow_box_get_child_at_index: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkFlowBoxChild, l2) | ptr l2) = "mac#gtk_flow_box_get_child_at_index"
typedef type_c2ats_GtkFlowBoxForeachFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1), !ptr_v_1(type_c2ats_GtkFlowBoxChild, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void
fun fun_c2ats_gtk_flow_box_selected_foreach: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1, type_c2ats_GtkFlowBoxForeachFunc, type_c2ats_gpointer) -> void = "mac#gtk_flow_box_selected_foreach"
fun fun_c2ats_gtk_flow_box_get_selected_children: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_flow_box_get_selected_children"
fun fun_c2ats_gtk_flow_box_select_child: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1), !ptr_v_1(type_c2ats_GtkFlowBoxChild, l2) | ptr l1, ptr l2) -> void = "mac#gtk_flow_box_select_child"
fun fun_c2ats_gtk_flow_box_unselect_child: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1), !ptr_v_1(type_c2ats_GtkFlowBoxChild, l2) | ptr l1, ptr l2) -> void = "mac#gtk_flow_box_unselect_child"
fun fun_c2ats_gtk_flow_box_select_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1) -> void = "mac#gtk_flow_box_select_all"
fun fun_c2ats_gtk_flow_box_unselect_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1) -> void = "mac#gtk_flow_box_unselect_all"
fun fun_c2ats_gtk_flow_box_set_selection_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1, type_c2ats_GtkSelectionMode) -> void = "mac#gtk_flow_box_set_selection_mode"
fun fun_c2ats_gtk_flow_box_get_selection_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1) -> type_c2ats_GtkSelectionMode = "mac#gtk_flow_box_get_selection_mode"
fun fun_c2ats_gtk_flow_box_set_hadjustment: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> void = "mac#gtk_flow_box_set_hadjustment"
fun fun_c2ats_gtk_flow_box_set_vadjustment: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> void = "mac#gtk_flow_box_set_vadjustment"
typedef type_c2ats_GtkFlowBoxFilterFunc = {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBoxChild, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean
fun fun_c2ats_gtk_flow_box_set_filter_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1, type_c2ats_GtkFlowBoxFilterFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_flow_box_set_filter_func"
fun fun_c2ats_gtk_flow_box_invalidate_filter: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1) -> void = "mac#gtk_flow_box_invalidate_filter"
typedef type_c2ats_GtkFlowBoxSortFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFlowBoxChild, l1), !ptr_v_1(type_c2ats_GtkFlowBoxChild, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> type_c2ats_gint
fun fun_c2ats_gtk_flow_box_set_sort_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1, type_c2ats_GtkFlowBoxSortFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_flow_box_set_sort_func"
fun fun_c2ats_gtk_flow_box_invalidate_sort: {l1:addr} (!ptr_v_1(type_c2ats_GtkFlowBox, l1) | ptr l1) -> void = "mac#gtk_flow_box_invalidate_sort"
// File: /usr/include/gtk-3.0/gtk/gtkfontbutton.h
abst@ype struct_c2ats__GtkFontButton // FIXME! Forward declaration.
typedef type_c2ats_GtkFontButton = struct_c2ats__GtkFontButton
abst@ype struct_c2ats__GtkFontButtonClass // FIXME! Forward declaration.
typedef type_c2ats_GtkFontButtonClass = struct_c2ats__GtkFontButtonClass
abst@ype struct_c2ats__GtkFontButtonPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkFontButtonPrivate = struct_c2ats__GtkFontButtonPrivate
typedef struct_c2ats__GtkFontButton = $extype_struct"struct _GtkFontButton" of {
  button = type_c2ats_GtkButton,
  priv = ptr (* cPtr0(type_c2ats_GtkFontButtonPrivate) *)
}
typedef struct_c2ats__GtkFontButtonClass = $extype_struct"struct _GtkFontButtonClass" of {
  parent_class = type_c2ats_GtkButtonClass,
  font_set = {l1:addr} (!ptr_v_1(type_c2ats_GtkFontButton, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_font_button_get_type: () -> type_c2ats_GType = "mac#gtk_font_button_get_type"
fun fun_c2ats_gtk_font_button_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_font_button_new"
fun fun_c2ats_gtk_font_button_new_with_font: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_font_button_new_with_font"
fun fun_c2ats_gtk_font_button_get_title: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_font_button_get_title"
fun fun_c2ats_gtk_font_button_set_title: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFontButton, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_font_button_set_title"
fun fun_c2ats_gtk_font_button_get_use_font: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_font_button_get_use_font"
fun fun_c2ats_gtk_font_button_set_use_font: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_font_button_set_use_font"
fun fun_c2ats_gtk_font_button_get_use_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_font_button_get_use_size"
fun fun_c2ats_gtk_font_button_set_use_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_font_button_set_use_size"
fun fun_c2ats_gtk_font_button_get_font_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_font_button_get_font_name"
fun fun_c2ats_gtk_font_button_set_font_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFontButton, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_font_button_set_font_name"
fun fun_c2ats_gtk_font_button_get_show_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_font_button_get_show_style"
fun fun_c2ats_gtk_font_button_set_show_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_font_button_set_show_style"
fun fun_c2ats_gtk_font_button_get_show_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_font_button_get_show_size"
fun fun_c2ats_gtk_font_button_set_show_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_font_button_set_show_size"
// File: /usr/include/gtk-3.0/gtk/gtkfontchooser.h
typedef type_c2ats_GtkFontFilterFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_PangoFontFamily, l1), !ptr_v_1(type_c2ats_PangoFontFace, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> type_c2ats_gboolean
abst@ype struct_c2ats__GtkFontChooser // FIXME! Forward declaration.
typedef type_c2ats_GtkFontChooser = struct_c2ats__GtkFontChooser
abst@ype struct_c2ats__GtkFontChooserIface // FIXME! Forward declaration.
typedef type_c2ats_GtkFontChooserIface = struct_c2ats__GtkFontChooserIface
typedef struct_c2ats__GtkFontChooserIface = $extype_struct"struct _GtkFontChooserIface" of {
  base_iface = type_c2ats_GTypeInterface,
  get_font_family = {l1:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontFamily, l2) | ptr l2),
  get_font_face = {l1:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontFace, l2) | ptr l2),
  get_font_size = {l1:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1) | ptr l1) -> type_c2ats_gint,
  set_filter_func = {l1:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1) | ptr l1, type_c2ats_GtkFontFilterFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void,
  font_activated = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  set_font_map = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1), !ptr_v_1(type_c2ats_PangoFontMap, l2) | ptr l1, ptr l2) -> void,
  get_font_map = {l1:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontMap, l2) | ptr l2),
  padding = @[type_c2ats_gpointer][10]
}
fun fun_c2ats_gtk_font_chooser_get_type: () -> type_c2ats_GType = "mac#gtk_font_chooser_get_type"
fun fun_c2ats_gtk_font_chooser_get_font_family: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontFamily, l2) | ptr l2) = "mac#gtk_font_chooser_get_font_family"
fun fun_c2ats_gtk_font_chooser_get_font_face: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontFace, l2) | ptr l2) = "mac#gtk_font_chooser_get_font_face"
fun fun_c2ats_gtk_font_chooser_get_font_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_font_chooser_get_font_size"
fun fun_c2ats_gtk_font_chooser_get_font_desc: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l2) = "mac#gtk_font_chooser_get_font_desc"
fun fun_c2ats_gtk_font_chooser_set_font_desc: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1), !ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l1, ptr l2) -> void = "mac#gtk_font_chooser_set_font_desc"
fun fun_c2ats_gtk_font_chooser_get_font: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_font_chooser_get_font"
fun fun_c2ats_gtk_font_chooser_set_font: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_font_chooser_set_font"
fun fun_c2ats_gtk_font_chooser_get_preview_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_font_chooser_get_preview_text"
fun fun_c2ats_gtk_font_chooser_set_preview_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_font_chooser_set_preview_text"
fun fun_c2ats_gtk_font_chooser_get_show_preview_entry: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_font_chooser_get_show_preview_entry"
fun fun_c2ats_gtk_font_chooser_set_show_preview_entry: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_font_chooser_set_show_preview_entry"
fun fun_c2ats_gtk_font_chooser_set_filter_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1) | ptr l1, type_c2ats_GtkFontFilterFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_font_chooser_set_filter_func"
fun fun_c2ats_gtk_font_chooser_set_font_map: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1), !ptr_v_1(type_c2ats_PangoFontMap, l2) | ptr l1, ptr l2) -> void = "mac#gtk_font_chooser_set_font_map"
fun fun_c2ats_gtk_font_chooser_get_font_map: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontMap, l2) | ptr l2) = "mac#gtk_font_chooser_get_font_map"
// File: /usr/include/gtk-3.0/gtk/gtkfontchooserdialog.h
abst@ype struct_c2ats__GtkFontChooserDialog // FIXME! Forward declaration.
typedef type_c2ats_GtkFontChooserDialog = struct_c2ats__GtkFontChooserDialog
abst@ype struct_c2ats__GtkFontChooserDialogPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkFontChooserDialogPrivate = struct_c2ats__GtkFontChooserDialogPrivate
abst@ype struct_c2ats__GtkFontChooserDialogClass // FIXME! Forward declaration.
typedef type_c2ats_GtkFontChooserDialogClass = struct_c2ats__GtkFontChooserDialogClass
typedef struct_c2ats__GtkFontChooserDialog = $extype_struct"struct _GtkFontChooserDialog" of {
  parent_instance = type_c2ats_GtkDialog,
  priv = ptr (* cPtr0(type_c2ats_GtkFontChooserDialogPrivate) *)
}
typedef struct_c2ats__GtkFontChooserDialogClass = $extype_struct"struct _GtkFontChooserDialogClass" of {
  parent_class = type_c2ats_GtkDialogClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_font_chooser_dialog_get_type: () -> type_c2ats_GType = "mac#gtk_font_chooser_dialog_get_type"
fun fun_c2ats_gtk_font_chooser_dialog_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GtkWindow, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_font_chooser_dialog_new"
// File: /usr/include/gtk-3.0/gtk/gtkfontchooserwidget.h
abst@ype struct_c2ats__GtkFontChooserWidget // FIXME! Forward declaration.
typedef type_c2ats_GtkFontChooserWidget = struct_c2ats__GtkFontChooserWidget
abst@ype struct_c2ats__GtkFontChooserWidgetPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkFontChooserWidgetPrivate = struct_c2ats__GtkFontChooserWidgetPrivate
abst@ype struct_c2ats__GtkFontChooserWidgetClass // FIXME! Forward declaration.
typedef type_c2ats_GtkFontChooserWidgetClass = struct_c2ats__GtkFontChooserWidgetClass
typedef struct_c2ats__GtkFontChooserWidget = $extype_struct"struct _GtkFontChooserWidget" of {
  parent_instance = type_c2ats_GtkBox,
  priv = ptr (* cPtr0(type_c2ats_GtkFontChooserWidgetPrivate) *)
}
typedef struct_c2ats__GtkFontChooserWidgetClass = $extype_struct"struct _GtkFontChooserWidgetClass" of {
  parent_class = type_c2ats_GtkBoxClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void,
  _gtk_reserved6 = () -> void,
  _gtk_reserved7 = () -> void,
  _gtk_reserved8 = () -> void
}
fun fun_c2ats_gtk_font_chooser_widget_get_type: () -> type_c2ats_GType = "mac#gtk_font_chooser_widget_get_type"
fun fun_c2ats_gtk_font_chooser_widget_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_font_chooser_widget_new"
// File: /usr/include/gtk-3.0/gtk/gtkgesture.h
abst@ype struct_c2ats__GtkGesture // FIXME! Forward declaration.
typedef type_c2ats_GtkGesture = struct_c2ats__GtkGesture
abst@ype struct_c2ats__GtkGestureClass // FIXME! Forward declaration.
typedef type_c2ats_GtkGestureClass = struct_c2ats__GtkGestureClass
fun fun_c2ats_gtk_gesture_get_type: () -> type_c2ats_GType = "mac#gtk_gesture_get_type"
fun fun_c2ats_gtk_gesture_get_device: {l1:addr} (!ptr_v_1(type_c2ats_GtkGesture, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l2) = "mac#gtk_gesture_get_device"
fun fun_c2ats_gtk_gesture_set_state: {l1:addr} (!ptr_v_1(type_c2ats_GtkGesture, l1) | ptr l1, type_c2ats_GtkEventSequenceState) -> type_c2ats_gboolean = "mac#gtk_gesture_set_state"
fun fun_c2ats_gtk_gesture_get_sequence_state: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkGesture, l1), !ptr_v_1(type_c2ats_GdkEventSequence, l2) | ptr l1, ptr l2) -> type_c2ats_GtkEventSequenceState = "mac#gtk_gesture_get_sequence_state"
fun fun_c2ats_gtk_gesture_set_sequence_state: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkGesture, l1), !ptr_v_1(type_c2ats_GdkEventSequence, l2) | ptr l1, ptr l2, type_c2ats_GtkEventSequenceState) -> type_c2ats_gboolean = "mac#gtk_gesture_set_sequence_state"
fun fun_c2ats_gtk_gesture_get_sequences: {l1:addr} (!ptr_v_1(type_c2ats_GtkGesture, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_gesture_get_sequences"
fun fun_c2ats_gtk_gesture_get_last_updated_sequence: {l1:addr} (!ptr_v_1(type_c2ats_GtkGesture, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkEventSequence, l2) | ptr l2) = "mac#gtk_gesture_get_last_updated_sequence"
fun fun_c2ats_gtk_gesture_handles_sequence: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkGesture, l1), !ptr_v_1(type_c2ats_GdkEventSequence, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_gesture_handles_sequence"
fun fun_c2ats_gtk_gesture_get_last_event: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkGesture, l1), !ptr_v_1(type_c2ats_GdkEventSequence, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkEvent, l3) | ptr l3) = "mac#gtk_gesture_get_last_event"
fun fun_c2ats_gtk_gesture_get_point: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkGesture, l1), !ptr_v_1(type_c2ats_GdkEventSequence, l2), !ptr_v_1(type_c2ats_gdouble, l3), !ptr_v_1(type_c2ats_gdouble, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#gtk_gesture_get_point"
fun fun_c2ats_gtk_gesture_get_bounding_box: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkGesture, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_gesture_get_bounding_box"
fun fun_c2ats_gtk_gesture_get_bounding_box_center: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkGesture, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_gesture_get_bounding_box_center"
fun fun_c2ats_gtk_gesture_is_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkGesture, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_gesture_is_active"
fun fun_c2ats_gtk_gesture_is_recognized: {l1:addr} (!ptr_v_1(type_c2ats_GtkGesture, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_gesture_is_recognized"
fun fun_c2ats_gtk_gesture_get_window: {l1:addr} (!ptr_v_1(type_c2ats_GtkGesture, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gtk_gesture_get_window"
fun fun_c2ats_gtk_gesture_set_window: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkGesture, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2) -> void = "mac#gtk_gesture_set_window"
fun fun_c2ats_gtk_gesture_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkGesture, l1), !ptr_v_1(type_c2ats_GtkGesture, l2) | ptr l1, ptr l2) -> void = "mac#gtk_gesture_group"
fun fun_c2ats_gtk_gesture_ungroup: {l1:addr} (!ptr_v_1(type_c2ats_GtkGesture, l1) | ptr l1) -> void = "mac#gtk_gesture_ungroup"
fun fun_c2ats_gtk_gesture_get_group: {l1:addr} (!ptr_v_1(type_c2ats_GtkGesture, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_gesture_get_group"
fun fun_c2ats_gtk_gesture_is_grouped_with: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkGesture, l1), !ptr_v_1(type_c2ats_GtkGesture, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_gesture_is_grouped_with"
// File: /usr/include/gtk-3.0/gtk/gtkgesturesingle.h
abst@ype struct_c2ats__GtkGestureSingle // FIXME! Forward declaration.
typedef type_c2ats_GtkGestureSingle = struct_c2ats__GtkGestureSingle
abst@ype struct_c2ats__GtkGestureSingleClass // FIXME! Forward declaration.
typedef type_c2ats_GtkGestureSingleClass = struct_c2ats__GtkGestureSingleClass
fun fun_c2ats_gtk_gesture_single_get_type: () -> type_c2ats_GType = "mac#gtk_gesture_single_get_type"
fun fun_c2ats_gtk_gesture_single_get_touch_only: {l1:addr} (!ptr_v_1(type_c2ats_GtkGestureSingle, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_gesture_single_get_touch_only"
fun fun_c2ats_gtk_gesture_single_set_touch_only: {l1:addr} (!ptr_v_1(type_c2ats_GtkGestureSingle, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_gesture_single_set_touch_only"
fun fun_c2ats_gtk_gesture_single_get_exclusive: {l1:addr} (!ptr_v_1(type_c2ats_GtkGestureSingle, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_gesture_single_get_exclusive"
fun fun_c2ats_gtk_gesture_single_set_exclusive: {l1:addr} (!ptr_v_1(type_c2ats_GtkGestureSingle, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_gesture_single_set_exclusive"
fun fun_c2ats_gtk_gesture_single_get_button: {l1:addr} (!ptr_v_1(type_c2ats_GtkGestureSingle, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_gesture_single_get_button"
fun fun_c2ats_gtk_gesture_single_set_button: {l1:addr} (!ptr_v_1(type_c2ats_GtkGestureSingle, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_gesture_single_set_button"
fun fun_c2ats_gtk_gesture_single_get_current_button: {l1:addr} (!ptr_v_1(type_c2ats_GtkGestureSingle, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_gesture_single_get_current_button"
fun fun_c2ats_gtk_gesture_single_get_current_sequence: {l1:addr} (!ptr_v_1(type_c2ats_GtkGestureSingle, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkEventSequence, l2) | ptr l2) = "mac#gtk_gesture_single_get_current_sequence"
// File: /usr/include/gtk-3.0/gtk/gtkgesturedrag.h
abst@ype struct_c2ats__GtkGestureDrag // FIXME! Forward declaration.
typedef type_c2ats_GtkGestureDrag = struct_c2ats__GtkGestureDrag
abst@ype struct_c2ats__GtkGestureDragClass // FIXME! Forward declaration.
typedef type_c2ats_GtkGestureDragClass = struct_c2ats__GtkGestureDragClass
fun fun_c2ats_gtk_gesture_drag_get_type: () -> type_c2ats_GType = "mac#gtk_gesture_drag_get_type"
fun fun_c2ats_gtk_gesture_drag_new: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkGesture, l2) | ptr l2) = "mac#gtk_gesture_drag_new"
fun fun_c2ats_gtk_gesture_drag_get_start_point: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkGestureDrag, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_gesture_drag_get_start_point"
fun fun_c2ats_gtk_gesture_drag_get_offset: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkGestureDrag, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_gesture_drag_get_offset"
// File: /usr/include/gtk-3.0/gtk/gtkgesturelongpress.h
abst@ype struct_c2ats__GtkGestureLongPress // FIXME! Forward declaration.
typedef type_c2ats_GtkGestureLongPress = struct_c2ats__GtkGestureLongPress
abst@ype struct_c2ats__GtkGestureLongPressClass // FIXME! Forward declaration.
typedef type_c2ats_GtkGestureLongPressClass = struct_c2ats__GtkGestureLongPressClass
fun fun_c2ats_gtk_gesture_long_press_get_type: () -> type_c2ats_GType = "mac#gtk_gesture_long_press_get_type"
fun fun_c2ats_gtk_gesture_long_press_new: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkGesture, l2) | ptr l2) = "mac#gtk_gesture_long_press_new"
// File: /usr/include/gtk-3.0/gtk/gtkgesturemultipress.h
abst@ype struct_c2ats__GtkGestureMultiPress // FIXME! Forward declaration.
typedef type_c2ats_GtkGestureMultiPress = struct_c2ats__GtkGestureMultiPress
abst@ype struct_c2ats__GtkGestureMultiPressClass // FIXME! Forward declaration.
typedef type_c2ats_GtkGestureMultiPressClass = struct_c2ats__GtkGestureMultiPressClass
fun fun_c2ats_gtk_gesture_multi_press_get_type: () -> type_c2ats_GType = "mac#gtk_gesture_multi_press_get_type"
fun fun_c2ats_gtk_gesture_multi_press_new: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkGesture, l2) | ptr l2) = "mac#gtk_gesture_multi_press_new"
fun fun_c2ats_gtk_gesture_multi_press_set_area: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkGestureMultiPress, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> void = "mac#gtk_gesture_multi_press_set_area"
fun fun_c2ats_gtk_gesture_multi_press_get_area: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkGestureMultiPress, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_gesture_multi_press_get_area"
// File: /usr/include/gtk-3.0/gtk/gtkgesturepan.h
abst@ype struct_c2ats__GtkGesturePan // FIXME! Forward declaration.
typedef type_c2ats_GtkGesturePan = struct_c2ats__GtkGesturePan
abst@ype struct_c2ats__GtkGesturePanClass // FIXME! Forward declaration.
typedef type_c2ats_GtkGesturePanClass = struct_c2ats__GtkGesturePanClass
fun fun_c2ats_gtk_gesture_pan_get_type: () -> type_c2ats_GType = "mac#gtk_gesture_pan_get_type"
fun fun_c2ats_gtk_gesture_pan_new: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GtkOrientation) -> [l2:addr] (ptr_v_1(type_c2ats_GtkGesture, l2) | ptr l2) = "mac#gtk_gesture_pan_new"
fun fun_c2ats_gtk_gesture_pan_get_orientation: {l1:addr} (!ptr_v_1(type_c2ats_GtkGesturePan, l1) | ptr l1) -> type_c2ats_GtkOrientation = "mac#gtk_gesture_pan_get_orientation"
fun fun_c2ats_gtk_gesture_pan_set_orientation: {l1:addr} (!ptr_v_1(type_c2ats_GtkGesturePan, l1) | ptr l1, type_c2ats_GtkOrientation) -> void = "mac#gtk_gesture_pan_set_orientation"
// File: /usr/include/gtk-3.0/gtk/gtkgesturerotate.h
abst@ype struct_c2ats__GtkGestureRotate // FIXME! Forward declaration.
typedef type_c2ats_GtkGestureRotate = struct_c2ats__GtkGestureRotate
abst@ype struct_c2ats__GtkGestureRotateClass // FIXME! Forward declaration.
typedef type_c2ats_GtkGestureRotateClass = struct_c2ats__GtkGestureRotateClass
fun fun_c2ats_gtk_gesture_rotate_get_type: () -> type_c2ats_GType = "mac#gtk_gesture_rotate_get_type"
fun fun_c2ats_gtk_gesture_rotate_new: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkGesture, l2) | ptr l2) = "mac#gtk_gesture_rotate_new"
fun fun_c2ats_gtk_gesture_rotate_get_angle_delta: {l1:addr} (!ptr_v_1(type_c2ats_GtkGestureRotate, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_gesture_rotate_get_angle_delta"
// File: /usr/include/gtk-3.0/gtk/gtkgestureswipe.h
abst@ype struct_c2ats__GtkGestureSwipe // FIXME! Forward declaration.
typedef type_c2ats_GtkGestureSwipe = struct_c2ats__GtkGestureSwipe
abst@ype struct_c2ats__GtkGestureSwipeClass // FIXME! Forward declaration.
typedef type_c2ats_GtkGestureSwipeClass = struct_c2ats__GtkGestureSwipeClass
fun fun_c2ats_gtk_gesture_swipe_get_type: () -> type_c2ats_GType = "mac#gtk_gesture_swipe_get_type"
fun fun_c2ats_gtk_gesture_swipe_new: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkGesture, l2) | ptr l2) = "mac#gtk_gesture_swipe_new"
fun fun_c2ats_gtk_gesture_swipe_get_velocity: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkGestureSwipe, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_gesture_swipe_get_velocity"
// File: /usr/include/gtk-3.0/gtk/gtkgesturezoom.h
abst@ype struct_c2ats__GtkGestureZoom // FIXME! Forward declaration.
typedef type_c2ats_GtkGestureZoom = struct_c2ats__GtkGestureZoom
abst@ype struct_c2ats__GtkGestureZoomClass // FIXME! Forward declaration.
typedef type_c2ats_GtkGestureZoomClass = struct_c2ats__GtkGestureZoomClass
fun fun_c2ats_gtk_gesture_zoom_get_type: () -> type_c2ats_GType = "mac#gtk_gesture_zoom_get_type"
fun fun_c2ats_gtk_gesture_zoom_new: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkGesture, l2) | ptr l2) = "mac#gtk_gesture_zoom_new"
fun fun_c2ats_gtk_gesture_zoom_get_scale_delta: {l1:addr} (!ptr_v_1(type_c2ats_GtkGestureZoom, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_gesture_zoom_get_scale_delta"
// File: /usr/include/gtk-3.0/gtk/gtkglarea.h
abst@ype struct_c2ats__GtkGLArea // FIXME! Forward declaration.
typedef type_c2ats_GtkGLArea = struct_c2ats__GtkGLArea
abst@ype struct_c2ats__GtkGLAreaClass // FIXME! Forward declaration.
typedef type_c2ats_GtkGLAreaClass = struct_c2ats__GtkGLAreaClass
typedef struct_c2ats__GtkGLArea = $extype_struct"struct _GtkGLArea" of {
  parent_instance = type_c2ats_GtkWidget
}
typedef struct_c2ats__GtkGLAreaClass = $extype_struct"struct _GtkGLAreaClass" of {
  parent_class = type_c2ats_GtkWidgetClass,
  render = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1), !ptr_v_1(type_c2ats_GdkGLContext, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  resize = {l1:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1) | ptr l1, int, int) -> void,
  create_context = {l1:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkGLContext, l2) | ptr l2),
  _padding = @[type_c2ats_gpointer][6]
}
fun fun_c2ats_gtk_gl_area_get_type: () -> type_c2ats_GType = "mac#gtk_gl_area_get_type"
fun fun_c2ats_gtk_gl_area_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_gl_area_new"
fun fun_c2ats_gtk_gl_area_set_use_es: {l1:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_gl_area_set_use_es"
fun fun_c2ats_gtk_gl_area_get_use_es: {l1:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_gl_area_get_use_es"
fun fun_c2ats_gtk_gl_area_set_required_version: {l1:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_gl_area_set_required_version"
fun fun_c2ats_gtk_gl_area_get_required_version: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_gl_area_get_required_version"
fun fun_c2ats_gtk_gl_area_get_has_alpha: {l1:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_gl_area_get_has_alpha"
fun fun_c2ats_gtk_gl_area_set_has_alpha: {l1:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_gl_area_set_has_alpha"
fun fun_c2ats_gtk_gl_area_get_has_depth_buffer: {l1:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_gl_area_get_has_depth_buffer"
fun fun_c2ats_gtk_gl_area_set_has_depth_buffer: {l1:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_gl_area_set_has_depth_buffer"
fun fun_c2ats_gtk_gl_area_get_has_stencil_buffer: {l1:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_gl_area_get_has_stencil_buffer"
fun fun_c2ats_gtk_gl_area_set_has_stencil_buffer: {l1:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_gl_area_set_has_stencil_buffer"
fun fun_c2ats_gtk_gl_area_get_auto_render: {l1:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_gl_area_get_auto_render"
fun fun_c2ats_gtk_gl_area_set_auto_render: {l1:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_gl_area_set_auto_render"
fun fun_c2ats_gtk_gl_area_queue_render: {l1:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1) | ptr l1) -> void = "mac#gtk_gl_area_queue_render"
fun fun_c2ats_gtk_gl_area_get_context: {l1:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkGLContext, l2) | ptr l2) = "mac#gtk_gl_area_get_context"
fun fun_c2ats_gtk_gl_area_make_current: {l1:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1) | ptr l1) -> void = "mac#gtk_gl_area_make_current"
fun fun_c2ats_gtk_gl_area_attach_buffers: {l1:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1) | ptr l1) -> void = "mac#gtk_gl_area_attach_buffers"
fun fun_c2ats_gtk_gl_area_set_error: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1), !ptr_v_1(type_c2ats_GError, l2) | ptr l1, ptr l2) -> void = "mac#gtk_gl_area_set_error"
fun fun_c2ats_gtk_gl_area_get_error: {l1:addr} (!ptr_v_1(type_c2ats_GtkGLArea, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GError, l2) | ptr l2) = "mac#gtk_gl_area_get_error"
// File: /usr/include/gtk-3.0/gtk/gtkgrid.h
abst@ype struct_c2ats__GtkGrid // FIXME! Forward declaration.
typedef type_c2ats_GtkGrid = struct_c2ats__GtkGrid
abst@ype struct_c2ats__GtkGridPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkGridPrivate = struct_c2ats__GtkGridPrivate
abst@ype struct_c2ats__GtkGridClass // FIXME! Forward declaration.
typedef type_c2ats_GtkGridClass = struct_c2ats__GtkGridClass
typedef struct_c2ats__GtkGrid = $extype_struct"struct _GtkGrid" of {
  container = type_c2ats_GtkContainer,
  priv = ptr (* cPtr0(type_c2ats_GtkGridPrivate) *)
}
typedef struct_c2ats__GtkGridClass = $extype_struct"struct _GtkGridClass" of {
  parent_class = type_c2ats_GtkContainerClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void,
  _gtk_reserved6 = () -> void,
  _gtk_reserved7 = () -> void,
  _gtk_reserved8 = () -> void
}
fun fun_c2ats_gtk_grid_get_type: () -> type_c2ats_GType = "mac#gtk_grid_get_type"
fun fun_c2ats_gtk_grid_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_grid_new"
fun fun_c2ats_gtk_grid_attach: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_grid_attach"
fun fun_c2ats_gtk_grid_attach_next_to: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GtkPositionType, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_grid_attach_next_to"
fun fun_c2ats_gtk_grid_get_child_at: {l1:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_grid_get_child_at"
fun fun_c2ats_gtk_grid_insert_row: {l1:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_grid_insert_row"
fun fun_c2ats_gtk_grid_insert_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_grid_insert_column"
fun fun_c2ats_gtk_grid_remove_row: {l1:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_grid_remove_row"
fun fun_c2ats_gtk_grid_remove_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_grid_remove_column"
fun fun_c2ats_gtk_grid_insert_next_to: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_GtkPositionType) -> void = "mac#gtk_grid_insert_next_to"
fun fun_c2ats_gtk_grid_set_row_homogeneous: {l1:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_grid_set_row_homogeneous"
fun fun_c2ats_gtk_grid_get_row_homogeneous: {l1:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_grid_get_row_homogeneous"
fun fun_c2ats_gtk_grid_set_row_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_grid_set_row_spacing"
fun fun_c2ats_gtk_grid_get_row_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_grid_get_row_spacing"
fun fun_c2ats_gtk_grid_set_column_homogeneous: {l1:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_grid_set_column_homogeneous"
fun fun_c2ats_gtk_grid_get_column_homogeneous: {l1:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_grid_get_column_homogeneous"
fun fun_c2ats_gtk_grid_set_column_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_grid_set_column_spacing"
fun fun_c2ats_gtk_grid_get_column_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_grid_get_column_spacing"
fun fun_c2ats_gtk_grid_set_row_baseline_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1) | ptr l1, type_c2ats_gint, type_c2ats_GtkBaselinePosition) -> void = "mac#gtk_grid_set_row_baseline_position"
fun fun_c2ats_gtk_grid_get_row_baseline_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_GtkBaselinePosition = "mac#gtk_grid_get_row_baseline_position"
fun fun_c2ats_gtk_grid_set_baseline_row: {l1:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_grid_set_baseline_row"
fun fun_c2ats_gtk_grid_get_baseline_row: {l1:addr} (!ptr_v_1(type_c2ats_GtkGrid, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_grid_get_baseline_row"
// File: /usr/include/gtk-3.0/gtk/gtkheaderbar.h
abst@ype struct_c2ats__GtkHeaderBar // FIXME! Forward declaration.
typedef type_c2ats_GtkHeaderBar = struct_c2ats__GtkHeaderBar
abst@ype struct_c2ats__GtkHeaderBarPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkHeaderBarPrivate = struct_c2ats__GtkHeaderBarPrivate
abst@ype struct_c2ats__GtkHeaderBarClass // FIXME! Forward declaration.
typedef type_c2ats_GtkHeaderBarClass = struct_c2ats__GtkHeaderBarClass
typedef struct_c2ats__GtkHeaderBar = $extype_struct"struct _GtkHeaderBar" of {
  container = type_c2ats_GtkContainer
}
typedef struct_c2ats__GtkHeaderBarClass = $extype_struct"struct _GtkHeaderBarClass" of {
  parent_class = type_c2ats_GtkContainerClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_header_bar_get_type: () -> type_c2ats_GType = "mac#gtk_header_bar_get_type"
fun fun_c2ats_gtk_header_bar_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_header_bar_new"
fun fun_c2ats_gtk_header_bar_set_title: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkHeaderBar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_header_bar_set_title"
fun fun_c2ats_gtk_header_bar_get_title: {l1:addr} (!ptr_v_1(type_c2ats_GtkHeaderBar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_header_bar_get_title"
fun fun_c2ats_gtk_header_bar_set_subtitle: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkHeaderBar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_header_bar_set_subtitle"
fun fun_c2ats_gtk_header_bar_get_subtitle: {l1:addr} (!ptr_v_1(type_c2ats_GtkHeaderBar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_header_bar_get_subtitle"
fun fun_c2ats_gtk_header_bar_set_custom_title: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkHeaderBar, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_header_bar_set_custom_title"
fun fun_c2ats_gtk_header_bar_get_custom_title: {l1:addr} (!ptr_v_1(type_c2ats_GtkHeaderBar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_header_bar_get_custom_title"
fun fun_c2ats_gtk_header_bar_pack_start: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkHeaderBar, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_header_bar_pack_start"
fun fun_c2ats_gtk_header_bar_pack_end: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkHeaderBar, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_header_bar_pack_end"
fun fun_c2ats_gtk_header_bar_get_show_close_button: {l1:addr} (!ptr_v_1(type_c2ats_GtkHeaderBar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_header_bar_get_show_close_button"
fun fun_c2ats_gtk_header_bar_set_show_close_button: {l1:addr} (!ptr_v_1(type_c2ats_GtkHeaderBar, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_header_bar_set_show_close_button"
fun fun_c2ats_gtk_header_bar_set_has_subtitle: {l1:addr} (!ptr_v_1(type_c2ats_GtkHeaderBar, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_header_bar_set_has_subtitle"
fun fun_c2ats_gtk_header_bar_get_has_subtitle: {l1:addr} (!ptr_v_1(type_c2ats_GtkHeaderBar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_header_bar_get_has_subtitle"
fun fun_c2ats_gtk_header_bar_set_decoration_layout: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkHeaderBar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_header_bar_set_decoration_layout"
fun fun_c2ats_gtk_header_bar_get_decoration_layout: {l1:addr} (!ptr_v_1(type_c2ats_GtkHeaderBar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_header_bar_get_decoration_layout"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkiconfactory.h
abst@ype struct_c2ats__GtkIconFactory // FIXME! Forward declaration.
typedef type_c2ats_GtkIconFactory = struct_c2ats__GtkIconFactory
abst@ype struct_c2ats__GtkIconFactoryPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkIconFactoryPrivate = struct_c2ats__GtkIconFactoryPrivate
abst@ype struct_c2ats__GtkIconFactoryClass // FIXME! Forward declaration.
typedef type_c2ats_GtkIconFactoryClass = struct_c2ats__GtkIconFactoryClass
typedef struct_c2ats__GtkIconFactory = $extype_struct"struct _GtkIconFactory" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkIconFactoryPrivate) *)
}
typedef struct_c2ats__GtkIconFactoryClass = $extype_struct"struct _GtkIconFactoryClass" of {
  parent_class = type_c2ats_GObjectClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_icon_factory_get_type: () -> type_c2ats_GType = "mac#gtk_icon_factory_get_type"
fun fun_c2ats_gtk_icon_factory_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkIconFactory, l1) | ptr l1) = "mac#gtk_icon_factory_new"
fun fun_c2ats_gtk_icon_factory_add: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkIconFactory, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkIconSet, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_icon_factory_add"
fun fun_c2ats_gtk_icon_factory_lookup: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconFactory, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkIconSet, l3) | ptr l3) = "mac#gtk_icon_factory_lookup"
fun fun_c2ats_gtk_icon_factory_add_default: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconFactory, l1) | ptr l1) -> void = "mac#gtk_icon_factory_add_default"
fun fun_c2ats_gtk_icon_factory_remove_default: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconFactory, l1) | ptr l1) -> void = "mac#gtk_icon_factory_remove_default"
fun fun_c2ats_gtk_icon_factory_lookup_default: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkIconSet, l2) | ptr l2) = "mac#gtk_icon_factory_lookup_default"
fun fun_c2ats_gtk_icon_size_lookup: {l1,l2:addr} (!ptr_v_1(type_c2ats_gint, l1), !ptr_v_1(type_c2ats_gint, l2) | type_c2ats_GtkIconSize, ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_icon_size_lookup"
fun fun_c2ats_gtk_icon_size_lookup_for_settings: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkSettings, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_GtkIconSize, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_icon_size_lookup_for_settings"
fun fun_c2ats_gtk_icon_size_register: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_GtkIconSize = "mac#gtk_icon_size_register"
fun fun_c2ats_gtk_icon_size_register_alias: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_GtkIconSize) -> void = "mac#gtk_icon_size_register_alias"
fun fun_c2ats_gtk_icon_size_from_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> type_c2ats_GtkIconSize = "mac#gtk_icon_size_from_name"
fun fun_c2ats_gtk_icon_size_get_name: (type_c2ats_GtkIconSize) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#gtk_icon_size_get_name"
fun fun_c2ats_gtk_icon_set_get_type: () -> type_c2ats_GType = "mac#gtk_icon_set_get_type"
fun fun_c2ats_gtk_icon_set_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkIconSet, l1) | ptr l1) = "mac#gtk_icon_set_new"
fun fun_c2ats_gtk_icon_set_new_from_pixbuf: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkIconSet, l2) | ptr l2) = "mac#gtk_icon_set_new_from_pixbuf"
fun fun_c2ats_gtk_icon_set_ref: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSet, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkIconSet, l2) | ptr l2) = "mac#gtk_icon_set_ref"
fun fun_c2ats_gtk_icon_set_unref: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSet, l1) | ptr l1) -> void = "mac#gtk_icon_set_unref"
fun fun_c2ats_gtk_icon_set_copy: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSet, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkIconSet, l2) | ptr l2) = "mac#gtk_icon_set_copy"
fun fun_c2ats_gtk_icon_set_render_icon: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkIconSet, l1), !ptr_v_1(type_c2ats_GtkStyle, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkTextDirection, type_c2ats_GtkStateType, type_c2ats_GtkIconSize, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l5) | ptr l5) = "mac#gtk_icon_set_render_icon"
fun fun_c2ats_gtk_icon_set_add_source: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconSet, l1), !ptr_v_1(type_c2ats_GtkIconSource, l2) | ptr l1, ptr l2) -> void = "mac#gtk_icon_set_add_source"
fun fun_c2ats_gtk_icon_set_get_sizes: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GtkIconSet, l1), !ptr_v_2(type_c2ats_GtkIconSize, l2, l2_1), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_icon_set_get_sizes"
fun fun_c2ats_gtk_icon_source_get_type: () -> type_c2ats_GType = "mac#gtk_icon_source_get_type"
fun fun_c2ats_gtk_icon_source_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkIconSource, l1) | ptr l1) = "mac#gtk_icon_source_new"
fun fun_c2ats_gtk_icon_source_copy: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkIconSource, l2) | ptr l2) = "mac#gtk_icon_source_copy"
fun fun_c2ats_gtk_icon_source_free: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1) | ptr l1) -> void = "mac#gtk_icon_source_free"
fun fun_c2ats_gtk_icon_source_set_filename: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_icon_source_set_filename"
fun fun_c2ats_gtk_icon_source_set_icon_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_icon_source_set_icon_name"
fun fun_c2ats_gtk_icon_source_set_pixbuf: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2) -> void = "mac#gtk_icon_source_set_pixbuf"
fun fun_c2ats_gtk_icon_source_get_filename: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_icon_source_get_filename"
fun fun_c2ats_gtk_icon_source_get_icon_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_icon_source_get_icon_name"
fun fun_c2ats_gtk_icon_source_get_pixbuf: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gtk_icon_source_get_pixbuf"
fun fun_c2ats_gtk_icon_source_set_direction_wildcarded: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_icon_source_set_direction_wildcarded"
fun fun_c2ats_gtk_icon_source_set_state_wildcarded: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_icon_source_set_state_wildcarded"
fun fun_c2ats_gtk_icon_source_set_size_wildcarded: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_icon_source_set_size_wildcarded"
fun fun_c2ats_gtk_icon_source_get_size_wildcarded: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_icon_source_get_size_wildcarded"
fun fun_c2ats_gtk_icon_source_get_state_wildcarded: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_icon_source_get_state_wildcarded"
fun fun_c2ats_gtk_icon_source_get_direction_wildcarded: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_icon_source_get_direction_wildcarded"
fun fun_c2ats_gtk_icon_source_set_direction: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1) | ptr l1, type_c2ats_GtkTextDirection) -> void = "mac#gtk_icon_source_set_direction"
fun fun_c2ats_gtk_icon_source_set_state: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1) | ptr l1, type_c2ats_GtkStateType) -> void = "mac#gtk_icon_source_set_state"
fun fun_c2ats_gtk_icon_source_set_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1) | ptr l1, type_c2ats_GtkIconSize) -> void = "mac#gtk_icon_source_set_size"
fun fun_c2ats_gtk_icon_source_get_direction: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1) | ptr l1) -> type_c2ats_GtkTextDirection = "mac#gtk_icon_source_get_direction"
fun fun_c2ats_gtk_icon_source_get_state: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1) | ptr l1) -> type_c2ats_GtkStateType = "mac#gtk_icon_source_get_state"
fun fun_c2ats_gtk_icon_source_get_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconSource, l1) | ptr l1) -> type_c2ats_GtkIconSize = "mac#gtk_icon_source_get_size"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkstyleproperties.h
abst@ype struct_c2ats__GtkStyleProperties // FIXME! Forward declaration.
typedef type_c2ats_GtkStyleProperties = struct_c2ats__GtkStyleProperties
abst@ype struct_c2ats__GtkStylePropertiesClass // FIXME! Forward declaration.
typedef type_c2ats_GtkStylePropertiesClass = struct_c2ats__GtkStylePropertiesClass
abst@ype struct_c2ats__GtkStylePropertiesPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkStylePropertiesPrivate = struct_c2ats__GtkStylePropertiesPrivate
abst@ype struct_c2ats__GtkSymbolicColor // FIXME! Forward declaration.
typedef type_c2ats_GtkSymbolicColor = struct_c2ats__GtkSymbolicColor
abst@ype struct_c2ats__GtkGradient // FIXME! Forward declaration.
typedef type_c2ats_GtkGradient = struct_c2ats__GtkGradient
typedef struct_c2ats__GtkStyleProperties = $extype_struct"struct _GtkStyleProperties" of {
  parent_object = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkStylePropertiesPrivate) *)
}
typedef struct_c2ats__GtkStylePropertiesClass = $extype_struct"struct _GtkStylePropertiesClass" of {
  parent_class = type_c2ats_GObjectClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
typedef type_c2ats_GtkStylePropertyParser = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GValue, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean
fun fun_c2ats_gtk_style_properties_get_type: () -> type_c2ats_GType = "mac#gtk_style_properties_get_type"
fun fun_c2ats_gtk_style_properties_register_property: {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | type_c2ats_GtkStylePropertyParser, ptr l1) -> void = "mac#gtk_style_properties_register_property"
fun fun_c2ats_gtk_style_properties_lookup_property: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GtkStylePropertyParser, l2), !ptr_v_2(type_c2ats_GParamSpec, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_style_properties_lookup_property"
fun fun_c2ats_gtk_style_properties_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkStyleProperties, l1) | ptr l1) = "mac#gtk_style_properties_new"
fun fun_c2ats_gtk_style_properties_map_color: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkStyleProperties, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkSymbolicColor, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_style_properties_map_color"
fun fun_c2ats_gtk_style_properties_lookup_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleProperties, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkSymbolicColor, l3) | ptr l3) = "mac#gtk_style_properties_lookup_color"
fun fun_c2ats_gtk_style_properties_set_property: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkStyleProperties, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_GtkStateFlags, ptr l3) -> void = "mac#gtk_style_properties_set_property"
fun fun_c2ats_gtk_style_properties_set_valist: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleProperties, l1) | ptr l1, type_c2ats_GtkStateFlags, type_c2ats_va_list) -> void = "mac#gtk_style_properties_set_valist"
fun fun_c2ats_gtk_style_properties_set: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleProperties, l1) | ptr l1, type_c2ats_GtkStateFlags) -> void = "mac#gtk_style_properties_set"
fun fun_c2ats_gtk_style_properties_get_property: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkStyleProperties, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_GtkStateFlags, ptr l3) -> type_c2ats_gboolean = "mac#gtk_style_properties_get_property"
fun fun_c2ats_gtk_style_properties_get_valist: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleProperties, l1) | ptr l1, type_c2ats_GtkStateFlags, type_c2ats_va_list) -> void = "mac#gtk_style_properties_get_valist"
fun fun_c2ats_gtk_style_properties_get: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleProperties, l1) | ptr l1, type_c2ats_GtkStateFlags) -> void = "mac#gtk_style_properties_get"
fun fun_c2ats_gtk_style_properties_unset_property: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleProperties, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GtkStateFlags) -> void = "mac#gtk_style_properties_unset_property"
fun fun_c2ats_gtk_style_properties_clear: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleProperties, l1) | ptr l1) -> void = "mac#gtk_style_properties_clear"
fun fun_c2ats_gtk_style_properties_merge: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleProperties, l1), !ptr_v_1(type_c2ats_GtkStyleProperties, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gtk_style_properties_merge"
// File: /usr/include/gtk-3.0/gtk/gtkstyleprovider.h
abst@ype struct_c2ats__GtkStyleProviderIface // FIXME! Forward declaration.
typedef type_c2ats_GtkStyleProviderIface = struct_c2ats__GtkStyleProviderIface
abst@ype struct_c2ats__GtkStyleProvider // FIXME! Forward declaration.
typedef type_c2ats_GtkStyleProvider = struct_c2ats__GtkStyleProvider
typedef struct_c2ats__GtkStyleProviderIface = $extype_struct"struct _GtkStyleProviderIface" of {
  g_iface = type_c2ats_GTypeInterface,
  get_style = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleProvider, l1), !ptr_v_1(type_c2ats_GtkWidgetPath, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkStyleProperties, l3) | ptr l3),
  get_style_property = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyleProvider, l1), !ptr_v_1(type_c2ats_GtkWidgetPath, l2), !ptr_v_1(type_c2ats_GParamSpec, l3), !ptr_v_1(type_c2ats_GValue, l4) | ptr l1, ptr l2, type_c2ats_GtkStateFlags, ptr l3, ptr l4) -> type_c2ats_gboolean,
  get_icon_factory = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleProvider, l1), !ptr_v_1(type_c2ats_GtkWidgetPath, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkIconFactory, l3) | ptr l3)
}
fun fun_c2ats_gtk_style_provider_get_type: () -> type_c2ats_GType = "mac#gtk_style_provider_get_type"
fun fun_c2ats_gtk_style_provider_get_style: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleProvider, l1), !ptr_v_1(type_c2ats_GtkWidgetPath, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkStyleProperties, l3) | ptr l3) = "mac#gtk_style_provider_get_style"
fun fun_c2ats_gtk_style_provider_get_style_property: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyleProvider, l1), !ptr_v_1(type_c2ats_GtkWidgetPath, l2), !ptr_v_1(type_c2ats_GParamSpec, l3), !ptr_v_1(type_c2ats_GValue, l4) | ptr l1, ptr l2, type_c2ats_GtkStateFlags, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#gtk_style_provider_get_style_property"
fun fun_c2ats_gtk_style_provider_get_icon_factory: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleProvider, l1), !ptr_v_1(type_c2ats_GtkWidgetPath, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkIconFactory, l3) | ptr l3) = "mac#gtk_style_provider_get_icon_factory"
// File: /usr/include/gtk-3.0/gtk/gtkstylecontext.h
abst@ype struct_c2ats__GtkStyleContextClass // FIXME! Forward declaration.
typedef type_c2ats_GtkStyleContextClass = struct_c2ats__GtkStyleContextClass
abst@ype struct_c2ats__GtkStyleContextPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkStyleContextPrivate = struct_c2ats__GtkStyleContextPrivate
typedef struct_c2ats__GtkStyleContext = $extype_struct"struct _GtkStyleContext" of {
  parent_object = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkStyleContextPrivate) *)
}
typedef struct_c2ats__GtkStyleContextClass = $extype_struct"struct _GtkStyleContextClass" of {
  parent_class = type_c2ats_GObjectClass,
  changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_style_context_get_type: () -> type_c2ats_GType = "mac#gtk_style_context_get_type"
fun fun_c2ats_gtk_style_context_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1) = "mac#gtk_style_context_new"
fun fun_c2ats_gtk_style_context_add_provider_for_screen: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1), !ptr_v_1(type_c2ats_GtkStyleProvider, l2) | ptr l1, ptr l2, type_c2ats_guint) -> void = "mac#gtk_style_context_add_provider_for_screen"
fun fun_c2ats_gtk_style_context_remove_provider_for_screen: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1), !ptr_v_1(type_c2ats_GtkStyleProvider, l2) | ptr l1, ptr l2) -> void = "mac#gtk_style_context_remove_provider_for_screen"
fun fun_c2ats_gtk_style_context_add_provider: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_GtkStyleProvider, l2) | ptr l1, ptr l2, type_c2ats_guint) -> void = "mac#gtk_style_context_add_provider"
fun fun_c2ats_gtk_style_context_remove_provider: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_GtkStyleProvider, l2) | ptr l1, ptr l2) -> void = "mac#gtk_style_context_remove_provider"
fun fun_c2ats_gtk_style_context_save: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1) -> void = "mac#gtk_style_context_save"
fun fun_c2ats_gtk_style_context_restore: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1) -> void = "mac#gtk_style_context_restore"
fun fun_c2ats_gtk_style_context_get_section: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkCssSection, l3) | ptr l3) = "mac#gtk_style_context_get_section"
fun fun_c2ats_gtk_style_context_get_property: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_GtkStateFlags, ptr l3) -> void = "mac#gtk_style_context_get_property"
fun fun_c2ats_gtk_style_context_get_valist: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1, type_c2ats_GtkStateFlags, type_c2ats_va_list) -> void = "mac#gtk_style_context_get_valist"
fun fun_c2ats_gtk_style_context_get: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1, type_c2ats_GtkStateFlags) -> void = "mac#gtk_style_context_get"
fun fun_c2ats_gtk_style_context_set_state: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1, type_c2ats_GtkStateFlags) -> void = "mac#gtk_style_context_set_state"
fun fun_c2ats_gtk_style_context_get_state: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1) -> type_c2ats_GtkStateFlags = "mac#gtk_style_context_get_state"
fun fun_c2ats_gtk_style_context_set_scale: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_style_context_set_scale"
fun fun_c2ats_gtk_style_context_get_scale: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_style_context_get_scale"
fun fun_c2ats_gtk_style_context_state_is_running: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_gdouble, l2) | ptr l1, type_c2ats_GtkStateType, ptr l2) -> type_c2ats_gboolean = "mac#gtk_style_context_state_is_running"
fun fun_c2ats_gtk_style_context_set_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_GtkWidgetPath, l2) | ptr l1, ptr l2) -> void = "mac#gtk_style_context_set_path"
fun fun_c2ats_gtk_style_context_get_path: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidgetPath, l2) | ptr l2) = "mac#gtk_style_context_get_path"
fun fun_c2ats_gtk_style_context_set_parent: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_GtkStyleContext, l2) | ptr l1, ptr l2) -> void = "mac#gtk_style_context_set_parent"
fun fun_c2ats_gtk_style_context_get_parent: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStyleContext, l2) | ptr l2) = "mac#gtk_style_context_get_parent"
fun fun_c2ats_gtk_style_context_list_classes: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_style_context_list_classes"
fun fun_c2ats_gtk_style_context_add_class: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_style_context_add_class"
fun fun_c2ats_gtk_style_context_remove_class: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_style_context_remove_class"
fun fun_c2ats_gtk_style_context_has_class: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_style_context_has_class"
fun fun_c2ats_gtk_style_context_list_regions: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_style_context_list_regions"
fun fun_c2ats_gtk_style_context_add_region: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GtkRegionFlags) -> void = "mac#gtk_style_context_add_region"
fun fun_c2ats_gtk_style_context_remove_region: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_style_context_remove_region"
fun fun_c2ats_gtk_style_context_has_region: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkRegionFlags, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_style_context_has_region"
fun fun_c2ats_gtk_style_context_get_style_property: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_style_context_get_style_property"
fun fun_c2ats_gtk_style_context_get_style_valist: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1, type_c2ats_va_list) -> void = "mac#gtk_style_context_get_style_valist"
fun fun_c2ats_gtk_style_context_get_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1) -> void = "mac#gtk_style_context_get_style"
fun fun_c2ats_gtk_style_context_lookup_icon_set: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkIconSet, l3) | ptr l3) = "mac#gtk_style_context_lookup_icon_set"
fun fun_c2ats_gtk_icon_set_render_icon_pixbuf: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconSet, l1), !ptr_v_1(type_c2ats_GtkStyleContext, l2) | ptr l1, ptr l2, type_c2ats_GtkIconSize) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l3) = "mac#gtk_icon_set_render_icon_pixbuf"
fun fun_c2ats_gtk_icon_set_render_icon_surface: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkIconSet, l1), !ptr_v_1(type_c2ats_GtkStyleContext, l2), !ptr_v_1(type_c2ats_GdkWindow, l3) | ptr l1, ptr l2, type_c2ats_GtkIconSize, int, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l4) | ptr l4) = "mac#gtk_icon_set_render_icon_surface"
fun fun_c2ats_gtk_style_context_set_screen: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l1, ptr l2) -> void = "mac#gtk_style_context_set_screen"
fun fun_c2ats_gtk_style_context_get_screen: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l2) = "mac#gtk_style_context_get_screen"
fun fun_c2ats_gtk_style_context_set_frame_clock: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_GdkFrameClock, l2) | ptr l1, ptr l2) -> void = "mac#gtk_style_context_set_frame_clock"
fun fun_c2ats_gtk_style_context_get_frame_clock: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkFrameClock, l2) | ptr l2) = "mac#gtk_style_context_get_frame_clock"
fun fun_c2ats_gtk_style_context_set_direction: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1, type_c2ats_GtkTextDirection) -> void = "mac#gtk_style_context_set_direction"
fun fun_c2ats_gtk_style_context_get_direction: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1) -> type_c2ats_GtkTextDirection = "mac#gtk_style_context_get_direction"
fun fun_c2ats_gtk_style_context_set_junction_sides: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1, type_c2ats_GtkJunctionSides) -> void = "mac#gtk_style_context_set_junction_sides"
fun fun_c2ats_gtk_style_context_get_junction_sides: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1) -> type_c2ats_GtkJunctionSides = "mac#gtk_style_context_get_junction_sides"
fun fun_c2ats_gtk_style_context_lookup_color: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GdkRGBA, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_style_context_lookup_color"
fun fun_c2ats_gtk_style_context_notify_state_change: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2, type_c2ats_gpointer, type_c2ats_GtkStateType, type_c2ats_gboolean) -> void = "mac#gtk_style_context_notify_state_change"
fun fun_c2ats_gtk_style_context_cancel_animations: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#gtk_style_context_cancel_animations"
fun fun_c2ats_gtk_style_context_scroll_animations: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_style_context_scroll_animations"
fun fun_c2ats_gtk_style_context_push_animatable_region: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#gtk_style_context_push_animatable_region"
fun fun_c2ats_gtk_style_context_pop_animatable_region: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1) -> void = "mac#gtk_style_context_pop_animatable_region"
fun fun_c2ats_gtk_style_context_get_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, type_c2ats_GtkStateFlags, ptr l2) -> void = "mac#gtk_style_context_get_color"
fun fun_c2ats_gtk_style_context_get_background_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, type_c2ats_GtkStateFlags, ptr l2) -> void = "mac#gtk_style_context_get_background_color"
fun fun_c2ats_gtk_style_context_get_border_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, type_c2ats_GtkStateFlags, ptr l2) -> void = "mac#gtk_style_context_get_border_color"
fun fun_c2ats_gtk_style_context_get_font: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1, type_c2ats_GtkStateFlags) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l2) = "mac#gtk_style_context_get_font"
fun fun_c2ats_gtk_style_context_get_border: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_GtkBorder, l2) | ptr l1, type_c2ats_GtkStateFlags, ptr l2) -> void = "mac#gtk_style_context_get_border"
fun fun_c2ats_gtk_style_context_get_padding: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_GtkBorder, l2) | ptr l1, type_c2ats_GtkStateFlags, ptr l2) -> void = "mac#gtk_style_context_get_padding"
fun fun_c2ats_gtk_style_context_get_margin: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_GtkBorder, l2) | ptr l1, type_c2ats_GtkStateFlags, ptr l2) -> void = "mac#gtk_style_context_get_margin"
fun fun_c2ats_gtk_style_context_invalidate: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1) -> void = "mac#gtk_style_context_invalidate"
fun fun_c2ats_gtk_style_context_reset_widgets: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> void = "mac#gtk_style_context_reset_widgets"
fun fun_c2ats_gtk_style_context_set_background: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2) -> void = "mac#gtk_style_context_set_background"
fun fun_c2ats_gtk_render_insertion_cursor: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_PangoLayout, l3) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, ptr l3, int, type_c2ats_PangoDirection) -> void = "mac#gtk_render_insertion_cursor"
fun fun_c2ats_gtk_draw_insertion_cursor: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GdkRectangle, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean, type_c2ats_GtkTextDirection, type_c2ats_gboolean) -> void = "mac#gtk_draw_insertion_cursor"
typedef type_c2ats_GtkStyleContextPrintFlags = int
#define enum_c2ats_GTK_STYLE_CONTEXT_PRINT_NONE 0
#define enum_c2ats_GTK_STYLE_CONTEXT_PRINT_RECURSE 1 << 0
#define enum_c2ats_GTK_STYLE_CONTEXT_PRINT_SHOW_STYLE 1 << 1
fun fun_c2ats_gtk_style_context_to_string: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1) | ptr l1, type_c2ats_GtkStyleContextPrintFlags) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#gtk_style_context_to_string"
// File: /usr/include/gtk-3.0/gtk/gtkicontheme.h
abst@ype struct_c2ats__GtkIconInfo // FIXME! Forward declaration.
typedef type_c2ats_GtkIconInfo = struct_c2ats__GtkIconInfo
abst@ype struct_c2ats__GtkIconInfoClass // FIXME! Forward declaration.
typedef type_c2ats_GtkIconInfoClass = struct_c2ats__GtkIconInfoClass
abst@ype struct_c2ats__GtkIconTheme // FIXME! Forward declaration.
typedef type_c2ats_GtkIconTheme = struct_c2ats__GtkIconTheme
abst@ype struct_c2ats__GtkIconThemeClass // FIXME! Forward declaration.
typedef type_c2ats_GtkIconThemeClass = struct_c2ats__GtkIconThemeClass
abst@ype struct_c2ats__GtkIconThemePrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkIconThemePrivate = struct_c2ats__GtkIconThemePrivate
typedef struct_c2ats__GtkIconTheme = $extype_struct"struct _GtkIconTheme" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkIconThemePrivate) *)
}
typedef struct_c2ats__GtkIconThemeClass = $extype_struct"struct _GtkIconThemeClass" of {
  parent_class = type_c2ats_GObjectClass,
  changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
typedef type_c2ats_GtkIconLookupFlags = int
#define enum_c2ats_GTK_ICON_LOOKUP_NO_SVG 1 << 0
#define enum_c2ats_GTK_ICON_LOOKUP_FORCE_SVG 1 << 1
#define enum_c2ats_GTK_ICON_LOOKUP_USE_BUILTIN 1 << 2
#define enum_c2ats_GTK_ICON_LOOKUP_GENERIC_FALLBACK 1 << 3
#define enum_c2ats_GTK_ICON_LOOKUP_FORCE_SIZE 1 << 4
#define enum_c2ats_GTK_ICON_LOOKUP_FORCE_REGULAR 1 << 5
#define enum_c2ats_GTK_ICON_LOOKUP_FORCE_SYMBOLIC 1 << 6
#define enum_c2ats_GTK_ICON_LOOKUP_DIR_LTR 1 << 7
#define enum_c2ats_GTK_ICON_LOOKUP_DIR_RTL 1 << 8
typedef type_c2ats_GtkIconThemeError = int
#define enum_c2ats_GTK_ICON_THEME_NOT_FOUND 0
#define enum_c2ats_GTK_ICON_THEME_FAILED 1
fun fun_c2ats_gtk_icon_theme_error_quark: () -> type_c2ats_GQuark = "mac#gtk_icon_theme_error_quark"
fun fun_c2ats_gtk_icon_theme_get_type: () -> type_c2ats_GType = "mac#gtk_icon_theme_get_type"
fun fun_c2ats_gtk_icon_theme_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkIconTheme, l1) | ptr l1) = "mac#gtk_icon_theme_new"
fun fun_c2ats_gtk_icon_theme_get_default: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkIconTheme, l1) | ptr l1) = "mac#gtk_icon_theme_get_default"
fun fun_c2ats_gtk_icon_theme_get_for_screen: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkIconTheme, l2) | ptr l2) = "mac#gtk_icon_theme_get_for_screen"
fun fun_c2ats_gtk_icon_theme_set_screen: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1), !ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l1, ptr l2) -> void = "mac#gtk_icon_theme_set_screen"
fun fun_c2ats_gtk_icon_theme_set_search_path: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1) | ptr l1, @[cPtr0(type_c2ats_gchar)][0], type_c2ats_gint) -> void = "mac#gtk_icon_theme_set_search_path"
fun fun_c2ats_gtk_icon_theme_get_search_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, @[cPtr0(cPtr0(type_c2ats_gchar))][0], ptr l2) -> void = "mac#gtk_icon_theme_get_search_path"
fun fun_c2ats_gtk_icon_theme_append_search_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_icon_theme_append_search_path"
fun fun_c2ats_gtk_icon_theme_prepend_search_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_icon_theme_prepend_search_path"
fun fun_c2ats_gtk_icon_theme_add_resource_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_icon_theme_add_resource_path"
fun fun_c2ats_gtk_icon_theme_set_custom_theme: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_icon_theme_set_custom_theme"
fun fun_c2ats_gtk_icon_theme_has_icon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_icon_theme_has_icon"
fun fun_c2ats_gtk_icon_theme_get_icon_sizes: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gint, l3) | ptr l3) = "mac#gtk_icon_theme_get_icon_sizes"
fun fun_c2ats_gtk_icon_theme_lookup_icon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_GtkIconLookupFlags) -> [l3:addr] (ptr_v_1(type_c2ats_GtkIconInfo, l3) | ptr l3) = "mac#gtk_icon_theme_lookup_icon"
fun fun_c2ats_gtk_icon_theme_lookup_icon_for_scale: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint, type_c2ats_GtkIconLookupFlags) -> [l3:addr] (ptr_v_1(type_c2ats_GtkIconInfo, l3) | ptr l3) = "mac#gtk_icon_theme_lookup_icon_for_scale"
fun fun_c2ats_gtk_icon_theme_choose_icon: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1) | ptr l1, @[cPtr0(type_c2ats_gchar)][0], type_c2ats_gint, type_c2ats_GtkIconLookupFlags) -> [l2:addr] (ptr_v_1(type_c2ats_GtkIconInfo, l2) | ptr l2) = "mac#gtk_icon_theme_choose_icon"
fun fun_c2ats_gtk_icon_theme_choose_icon_for_scale: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1) | ptr l1, @[cPtr0(type_c2ats_gchar)][0], type_c2ats_gint, type_c2ats_gint, type_c2ats_GtkIconLookupFlags) -> [l2:addr] (ptr_v_1(type_c2ats_GtkIconInfo, l2) | ptr l2) = "mac#gtk_icon_theme_choose_icon_for_scale"
fun fun_c2ats_gtk_icon_theme_load_icon: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_GtkIconLookupFlags, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l4) | ptr l4) = "mac#gtk_icon_theme_load_icon"
fun fun_c2ats_gtk_icon_theme_load_icon_for_scale: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint, type_c2ats_GtkIconLookupFlags, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l4) | ptr l4) = "mac#gtk_icon_theme_load_icon_for_scale"
fun fun_c2ats_gtk_icon_theme_load_surface: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GdkWindow, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint, ptr l3, type_c2ats_GtkIconLookupFlags, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l5) | ptr l5) = "mac#gtk_icon_theme_load_surface"
fun fun_c2ats_gtk_icon_theme_lookup_by_gicon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1), !ptr_v_1(type_c2ats_GIcon, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_GtkIconLookupFlags) -> [l3:addr] (ptr_v_1(type_c2ats_GtkIconInfo, l3) | ptr l3) = "mac#gtk_icon_theme_lookup_by_gicon"
fun fun_c2ats_gtk_icon_theme_lookup_by_gicon_for_scale: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1), !ptr_v_1(type_c2ats_GIcon, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint, type_c2ats_GtkIconLookupFlags) -> [l3:addr] (ptr_v_1(type_c2ats_GtkIconInfo, l3) | ptr l3) = "mac#gtk_icon_theme_lookup_by_gicon_for_scale"
fun fun_c2ats_gtk_icon_theme_list_icons: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GList, l3) | ptr l3) = "mac#gtk_icon_theme_list_icons"
fun fun_c2ats_gtk_icon_theme_list_contexts: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_icon_theme_list_contexts"
fun fun_c2ats_gtk_icon_theme_get_example_icon_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#gtk_icon_theme_get_example_icon_name"
fun fun_c2ats_gtk_icon_theme_rescan_if_needed: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_icon_theme_rescan_if_needed"
fun fun_c2ats_gtk_icon_theme_add_builtin_icon: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#gtk_icon_theme_add_builtin_icon"
fun fun_c2ats_gtk_icon_info_get_type: () -> type_c2ats_GType = "mac#gtk_icon_info_get_type"
fun fun_c2ats_gtk_icon_info_copy: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkIconInfo, l2) | ptr l2) = "mac#gtk_icon_info_copy"
fun fun_c2ats_gtk_icon_info_free: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1) | ptr l1) -> void = "mac#gtk_icon_info_free"
fun fun_c2ats_gtk_icon_info_new_for_pixbuf: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconTheme, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkIconInfo, l3) | ptr l3) = "mac#gtk_icon_info_new_for_pixbuf"
fun fun_c2ats_gtk_icon_info_get_base_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_icon_info_get_base_size"
fun fun_c2ats_gtk_icon_info_get_base_scale: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_icon_info_get_base_scale"
fun fun_c2ats_gtk_icon_info_get_filename: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_icon_info_get_filename"
fun fun_c2ats_gtk_icon_info_get_builtin_pixbuf: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gtk_icon_info_get_builtin_pixbuf"
fun fun_c2ats_gtk_icon_info_is_symbolic: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_icon_info_is_symbolic"
fun fun_c2ats_gtk_icon_info_load_icon: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l3) = "mac#gtk_icon_info_load_icon"
fun fun_c2ats_gtk_icon_info_load_surface: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1), !ptr_v_1(type_c2ats_GdkWindow, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l4) | ptr l4) = "mac#gtk_icon_info_load_surface"
fun fun_c2ats_gtk_icon_info_load_icon_async: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1), !ptr_v_1(type_c2ats_GCancellable, l2) | ptr l1, ptr l2, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#gtk_icon_info_load_icon_async"
fun fun_c2ats_gtk_icon_info_load_icon_finish: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l4) | ptr l4) = "mac#gtk_icon_info_load_icon_finish"
fun fun_c2ats_gtk_icon_info_load_symbolic: {l1,l2,l3,l4,l5,l6,l7,l7_1:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2), !ptr_v_1(type_c2ats_GdkRGBA, l3), !ptr_v_1(type_c2ats_GdkRGBA, l4), !ptr_v_1(type_c2ats_GdkRGBA, l5), !ptr_v_1(type_c2ats_gboolean, l6), !ptr_v_2(type_c2ats_GError, l7, l7_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, ptr l7) -> [l8:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l8) | ptr l8) = "mac#gtk_icon_info_load_symbolic"
fun fun_c2ats_gtk_icon_info_load_symbolic_async: {l1,l2,l3,l4,l5,l6:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2), !ptr_v_1(type_c2ats_GdkRGBA, l3), !ptr_v_1(type_c2ats_GdkRGBA, l4), !ptr_v_1(type_c2ats_GdkRGBA, l5), !ptr_v_1(type_c2ats_GCancellable, l6) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#gtk_icon_info_load_symbolic_async"
fun fun_c2ats_gtk_icon_info_load_symbolic_finish: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_1(type_c2ats_gboolean, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l5) | ptr l5) = "mac#gtk_icon_info_load_symbolic_finish"
fun fun_c2ats_gtk_icon_info_load_symbolic_for_context: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1), !ptr_v_1(type_c2ats_GtkStyleContext, l2), !ptr_v_1(type_c2ats_gboolean, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l5) | ptr l5) = "mac#gtk_icon_info_load_symbolic_for_context"
fun fun_c2ats_gtk_icon_info_load_symbolic_for_context_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1), !ptr_v_1(type_c2ats_GtkStyleContext, l2), !ptr_v_1(type_c2ats_GCancellable, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GAsyncReadyCallback, type_c2ats_gpointer) -> void = "mac#gtk_icon_info_load_symbolic_for_context_async"
fun fun_c2ats_gtk_icon_info_load_symbolic_for_context_finish: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1), !ptr_v_1(type_c2ats_GAsyncResult, l2), !ptr_v_1(type_c2ats_gboolean, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l5) | ptr l5) = "mac#gtk_icon_info_load_symbolic_for_context_finish"
fun fun_c2ats_gtk_icon_info_load_symbolic_for_style: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1), !ptr_v_1(type_c2ats_GtkStyle, l2), !ptr_v_1(type_c2ats_gboolean, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, type_c2ats_GtkStateType, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l5) | ptr l5) = "mac#gtk_icon_info_load_symbolic_for_style"
fun fun_c2ats_gtk_icon_info_set_raw_coordinates: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_icon_info_set_raw_coordinates"
fun fun_c2ats_gtk_icon_info_get_embedded_rect: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_icon_info_get_embedded_rect"
fun fun_c2ats_gtk_icon_info_get_attach_points: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1), !ptr_v_2(type_c2ats_GdkPoint, l2, l2_1), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_icon_info_get_attach_points"
fun fun_c2ats_gtk_icon_info_get_display_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_icon_info_get_display_name"
// File: /usr/include/gtk-3.0/gtk/gtktooltip.h
fun fun_c2ats_gtk_tooltip_get_type: () -> type_c2ats_GType = "mac#gtk_tooltip_get_type"
fun fun_c2ats_gtk_tooltip_set_markup: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTooltip, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tooltip_set_markup"
fun fun_c2ats_gtk_tooltip_set_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTooltip, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tooltip_set_text"
fun fun_c2ats_gtk_tooltip_set_icon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTooltip, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tooltip_set_icon"
fun fun_c2ats_gtk_tooltip_set_icon_from_stock: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTooltip, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GtkIconSize) -> void = "mac#gtk_tooltip_set_icon_from_stock"
fun fun_c2ats_gtk_tooltip_set_icon_from_icon_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTooltip, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GtkIconSize) -> void = "mac#gtk_tooltip_set_icon_from_icon_name"
fun fun_c2ats_gtk_tooltip_set_icon_from_gicon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTooltip, l1), !ptr_v_1(type_c2ats_GIcon, l2) | ptr l1, ptr l2, type_c2ats_GtkIconSize) -> void = "mac#gtk_tooltip_set_icon_from_gicon"
fun fun_c2ats_gtk_tooltip_set_custom: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTooltip, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tooltip_set_custom"
fun fun_c2ats_gtk_tooltip_set_tip_area: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTooltip, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tooltip_set_tip_area"
fun fun_c2ats_gtk_tooltip_trigger_tooltip_query: {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> void = "mac#gtk_tooltip_trigger_tooltip_query"
// File: /usr/include/gtk-3.0/gtk/gtkiconview.h
abst@ype struct_c2ats__GtkIconView // FIXME! Forward declaration.
typedef type_c2ats_GtkIconView = struct_c2ats__GtkIconView
abst@ype struct_c2ats__GtkIconViewClass // FIXME! Forward declaration.
typedef type_c2ats_GtkIconViewClass = struct_c2ats__GtkIconViewClass
abst@ype struct_c2ats__GtkIconViewPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkIconViewPrivate = struct_c2ats__GtkIconViewPrivate
typedef type_c2ats_GtkIconViewForeachFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void
typedef type_c2ats_GtkIconViewDropPosition = int
#define enum_c2ats_GTK_ICON_VIEW_NO_DROP 0
#define enum_c2ats_GTK_ICON_VIEW_DROP_INTO 1
#define enum_c2ats_GTK_ICON_VIEW_DROP_LEFT 2
#define enum_c2ats_GTK_ICON_VIEW_DROP_RIGHT 3
#define enum_c2ats_GTK_ICON_VIEW_DROP_ABOVE 4
#define enum_c2ats_GTK_ICON_VIEW_DROP_BELOW 5
typedef struct_c2ats__GtkIconView = $extype_struct"struct _GtkIconView" of {
  parent = type_c2ats_GtkContainer,
  priv = ptr (* cPtr0(type_c2ats_GtkIconViewPrivate) *)
}
typedef struct_c2ats__GtkIconViewClass = $extype_struct"struct _GtkIconViewClass" of {
  parent_class = type_c2ats_GtkContainerClass,
  item_activated = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> void,
  selection_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> void,
  select_all = {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> void,
  unselect_all = {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> void,
  select_cursor_item = {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> void,
  toggle_cursor_item = {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> void,
  move_cursor = {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1, type_c2ats_GtkMovementStep, type_c2ats_gint) -> type_c2ats_gboolean,
  activate_cursor_item = {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> type_c2ats_gboolean,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_icon_view_get_type: () -> type_c2ats_GType = "mac#gtk_icon_view_get_type"
fun fun_c2ats_gtk_icon_view_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_icon_view_new"
fun fun_c2ats_gtk_icon_view_new_with_area: {l1:addr} (!ptr_v_1(type_c2ats_GtkCellArea, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_icon_view_new_with_area"
fun fun_c2ats_gtk_icon_view_new_with_model: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_icon_view_new_with_model"
fun fun_c2ats_gtk_icon_view_set_model: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_GtkTreeModel, l2) | ptr l1, ptr l2) -> void = "mac#gtk_icon_view_set_model"
fun fun_c2ats_gtk_icon_view_get_model: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeModel, l2) | ptr l2) = "mac#gtk_icon_view_get_model"
fun fun_c2ats_gtk_icon_view_set_text_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_icon_view_set_text_column"
fun fun_c2ats_gtk_icon_view_get_text_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_icon_view_get_text_column"
fun fun_c2ats_gtk_icon_view_set_markup_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_icon_view_set_markup_column"
fun fun_c2ats_gtk_icon_view_get_markup_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_icon_view_get_markup_column"
fun fun_c2ats_gtk_icon_view_set_pixbuf_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_icon_view_set_pixbuf_column"
fun fun_c2ats_gtk_icon_view_get_pixbuf_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_icon_view_get_pixbuf_column"
fun fun_c2ats_gtk_icon_view_set_item_orientation: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1, type_c2ats_GtkOrientation) -> void = "mac#gtk_icon_view_set_item_orientation"
fun fun_c2ats_gtk_icon_view_get_item_orientation: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> type_c2ats_GtkOrientation = "mac#gtk_icon_view_get_item_orientation"
fun fun_c2ats_gtk_icon_view_set_columns: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_icon_view_set_columns"
fun fun_c2ats_gtk_icon_view_get_columns: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_icon_view_get_columns"
fun fun_c2ats_gtk_icon_view_set_item_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_icon_view_set_item_width"
fun fun_c2ats_gtk_icon_view_get_item_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_icon_view_get_item_width"
fun fun_c2ats_gtk_icon_view_set_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_icon_view_set_spacing"
fun fun_c2ats_gtk_icon_view_get_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_icon_view_get_spacing"
fun fun_c2ats_gtk_icon_view_set_row_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_icon_view_set_row_spacing"
fun fun_c2ats_gtk_icon_view_get_row_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_icon_view_get_row_spacing"
fun fun_c2ats_gtk_icon_view_set_column_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_icon_view_set_column_spacing"
fun fun_c2ats_gtk_icon_view_get_column_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_icon_view_get_column_spacing"
fun fun_c2ats_gtk_icon_view_set_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_icon_view_set_margin"
fun fun_c2ats_gtk_icon_view_get_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_icon_view_get_margin"
fun fun_c2ats_gtk_icon_view_set_item_padding: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_icon_view_set_item_padding"
fun fun_c2ats_gtk_icon_view_get_item_padding: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_icon_view_get_item_padding"
fun fun_c2ats_gtk_icon_view_get_path_at_pos: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l2) = "mac#gtk_icon_view_get_path_at_pos"
fun fun_c2ats_gtk_icon_view_get_item_at_pos: {l1,l2,l2_1,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_2(type_c2ats_GtkTreePath, l2, l2_1), !ptr_v_2(type_c2ats_GtkCellRenderer, l3, l3_1) | ptr l1, type_c2ats_gint, type_c2ats_gint, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_icon_view_get_item_at_pos"
fun fun_c2ats_gtk_icon_view_get_visible_range: {l1,l2,l2_1,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_2(type_c2ats_GtkTreePath, l2, l2_1), !ptr_v_2(type_c2ats_GtkTreePath, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_icon_view_get_visible_range"
fun fun_c2ats_gtk_icon_view_set_activate_on_single_click: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_icon_view_set_activate_on_single_click"
fun fun_c2ats_gtk_icon_view_get_activate_on_single_click: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_icon_view_get_activate_on_single_click"
fun fun_c2ats_gtk_icon_view_selected_foreach: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1, type_c2ats_GtkIconViewForeachFunc, type_c2ats_gpointer) -> void = "mac#gtk_icon_view_selected_foreach"
fun fun_c2ats_gtk_icon_view_set_selection_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1, type_c2ats_GtkSelectionMode) -> void = "mac#gtk_icon_view_set_selection_mode"
fun fun_c2ats_gtk_icon_view_get_selection_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> type_c2ats_GtkSelectionMode = "mac#gtk_icon_view_get_selection_mode"
fun fun_c2ats_gtk_icon_view_select_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> void = "mac#gtk_icon_view_select_path"
fun fun_c2ats_gtk_icon_view_unselect_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> void = "mac#gtk_icon_view_unselect_path"
fun fun_c2ats_gtk_icon_view_path_is_selected: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_icon_view_path_is_selected"
fun fun_c2ats_gtk_icon_view_get_item_row: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gtk_icon_view_get_item_row"
fun fun_c2ats_gtk_icon_view_get_item_column: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gtk_icon_view_get_item_column"
fun fun_c2ats_gtk_icon_view_get_selected_items: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_icon_view_get_selected_items"
fun fun_c2ats_gtk_icon_view_select_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> void = "mac#gtk_icon_view_select_all"
fun fun_c2ats_gtk_icon_view_unselect_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> void = "mac#gtk_icon_view_unselect_all"
fun fun_c2ats_gtk_icon_view_item_activated: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> void = "mac#gtk_icon_view_item_activated"
fun fun_c2ats_gtk_icon_view_set_cursor: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkCellRenderer, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean) -> void = "mac#gtk_icon_view_set_cursor"
fun fun_c2ats_gtk_icon_view_get_cursor: {l1,l2,l2_1,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_2(type_c2ats_GtkTreePath, l2, l2_1), !ptr_v_2(type_c2ats_GtkCellRenderer, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_icon_view_get_cursor"
fun fun_c2ats_gtk_icon_view_scroll_to_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_gfloat, type_c2ats_gfloat) -> void = "mac#gtk_icon_view_scroll_to_path"
fun fun_c2ats_gtk_icon_view_enable_model_drag_source: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_GtkTargetEntry, l2) | ptr l1, type_c2ats_GdkModifierType, ptr l2, type_c2ats_gint, type_c2ats_GdkDragAction) -> void = "mac#gtk_icon_view_enable_model_drag_source"
fun fun_c2ats_gtk_icon_view_enable_model_drag_dest: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_GtkTargetEntry, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_GdkDragAction) -> void = "mac#gtk_icon_view_enable_model_drag_dest"
fun fun_c2ats_gtk_icon_view_unset_model_drag_source: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> void = "mac#gtk_icon_view_unset_model_drag_source"
fun fun_c2ats_gtk_icon_view_unset_model_drag_dest: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> void = "mac#gtk_icon_view_unset_model_drag_dest"
fun fun_c2ats_gtk_icon_view_set_reorderable: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_icon_view_set_reorderable"
fun fun_c2ats_gtk_icon_view_get_reorderable: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_icon_view_get_reorderable"
fun fun_c2ats_gtk_icon_view_set_drag_dest_item: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2, type_c2ats_GtkIconViewDropPosition) -> void = "mac#gtk_icon_view_set_drag_dest_item"
fun fun_c2ats_gtk_icon_view_get_drag_dest_item: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_2(type_c2ats_GtkTreePath, l2, l2_1), !ptr_v_1(type_c2ats_GtkIconViewDropPosition, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_icon_view_get_drag_dest_item"
fun fun_c2ats_gtk_icon_view_get_dest_item_at_pos: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_2(type_c2ats_GtkTreePath, l2, l2_1), !ptr_v_1(type_c2ats_GtkIconViewDropPosition, l3) | ptr l1, type_c2ats_gint, type_c2ats_gint, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_icon_view_get_dest_item_at_pos"
fun fun_c2ats_gtk_icon_view_create_drag_icon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l3) | ptr l3) = "mac#gtk_icon_view_create_drag_icon"
fun fun_c2ats_gtk_icon_view_convert_widget_to_bin_window_coords: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_gint, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#gtk_icon_view_convert_widget_to_bin_window_coords"
fun fun_c2ats_gtk_icon_view_get_cell_rect: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkCellRenderer, l3), !ptr_v_1(type_c2ats_GdkRectangle, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#gtk_icon_view_get_cell_rect"
fun fun_c2ats_gtk_icon_view_set_tooltip_item: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_GtkTooltip, l2), !ptr_v_1(type_c2ats_GtkTreePath, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_icon_view_set_tooltip_item"
fun fun_c2ats_gtk_icon_view_set_tooltip_cell: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_GtkTooltip, l2), !ptr_v_1(type_c2ats_GtkTreePath, l3), !ptr_v_1(type_c2ats_GtkCellRenderer, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_icon_view_set_tooltip_cell"
fun fun_c2ats_gtk_icon_view_get_tooltip_context: {l1,l2,l3,l4,l4_1,l5,l5_1,l6:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_2(type_c2ats_GtkTreeModel, l4, l4_1), !ptr_v_2(type_c2ats_GtkTreePath, l5, l5_1), !ptr_v_1(type_c2ats_GtkTreeIter, l6) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean, ptr l4, ptr l5, ptr l6) -> type_c2ats_gboolean = "mac#gtk_icon_view_get_tooltip_context"
fun fun_c2ats_gtk_icon_view_set_tooltip_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_icon_view_set_tooltip_column"
fun fun_c2ats_gtk_icon_view_get_tooltip_column: {l1:addr} (!ptr_v_1(type_c2ats_GtkIconView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_icon_view_get_tooltip_column"
// File: /usr/include/gtk-3.0/gtk/gtkimcontextinfo.h
abst@ype struct_c2ats__GtkIMContextInfo // FIXME! Forward declaration.
typedef type_c2ats_GtkIMContextInfo = struct_c2ats__GtkIMContextInfo
typedef struct_c2ats__GtkIMContextInfo = $extype_struct"struct _GtkIMContextInfo" of {
  context_id = ptr (* cPtr0(type_c2ats_gchar) *),
  context_name = ptr (* cPtr0(type_c2ats_gchar) *),
  domain = ptr (* cPtr0(type_c2ats_gchar) *),
  domain_dirname = ptr (* cPtr0(type_c2ats_gchar) *),
  default_locales = ptr (* cPtr0(type_c2ats_gchar) *)
}
// File: /usr/include/gtk-3.0/gtk/gtkimcontextsimple.h
abst@ype struct_c2ats__GtkIMContextSimple // FIXME! Forward declaration.
typedef type_c2ats_GtkIMContextSimple = struct_c2ats__GtkIMContextSimple
abst@ype struct_c2ats__GtkIMContextSimplePrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkIMContextSimplePrivate = struct_c2ats__GtkIMContextSimplePrivate
abst@ype struct_c2ats__GtkIMContextSimpleClass // FIXME! Forward declaration.
typedef type_c2ats_GtkIMContextSimpleClass = struct_c2ats__GtkIMContextSimpleClass
typedef struct_c2ats__GtkIMContextSimple = $extype_struct"struct _GtkIMContextSimple" of {
  object = type_c2ats_GtkIMContext,
  priv = ptr (* cPtr0(type_c2ats_GtkIMContextSimplePrivate) *)
}
typedef struct_c2ats__GtkIMContextSimpleClass = $extype_struct"struct _GtkIMContextSimpleClass" of {
  parent_class = type_c2ats_GtkIMContextClass
}
fun fun_c2ats_gtk_im_context_simple_get_type: () -> type_c2ats_GType = "mac#gtk_im_context_simple_get_type"
fun fun_c2ats_gtk_im_context_simple_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkIMContext, l1) | ptr l1) = "mac#gtk_im_context_simple_new"
fun fun_c2ats_gtk_im_context_simple_add_table: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIMContextSimple, l1), !ptr_v_1(type_c2ats_guint16, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_im_context_simple_add_table"
fun fun_c2ats_gtk_im_context_simple_add_compose_file: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIMContextSimple, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_im_context_simple_add_compose_file"
// File: /usr/include/gtk-3.0/gtk/gtkimmulticontext.h
abst@ype struct_c2ats__GtkIMMulticontext // FIXME! Forward declaration.
typedef type_c2ats_GtkIMMulticontext = struct_c2ats__GtkIMMulticontext
abst@ype struct_c2ats__GtkIMMulticontextClass // FIXME! Forward declaration.
typedef type_c2ats_GtkIMMulticontextClass = struct_c2ats__GtkIMMulticontextClass
abst@ype struct_c2ats__GtkIMMulticontextPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkIMMulticontextPrivate = struct_c2ats__GtkIMMulticontextPrivate
typedef struct_c2ats__GtkIMMulticontext = $extype_struct"struct _GtkIMMulticontext" of {
  object = type_c2ats_GtkIMContext,
  priv = ptr (* cPtr0(type_c2ats_GtkIMMulticontextPrivate) *)
}
typedef struct_c2ats__GtkIMMulticontextClass = $extype_struct"struct _GtkIMMulticontextClass" of {
  parent_class = type_c2ats_GtkIMContextClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_im_multicontext_get_type: () -> type_c2ats_GType = "mac#gtk_im_multicontext_get_type"
fun fun_c2ats_gtk_im_multicontext_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkIMContext, l1) | ptr l1) = "mac#gtk_im_multicontext_new"
fun fun_c2ats_gtk_im_multicontext_append_menuitems: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIMMulticontext, l1), !ptr_v_1(type_c2ats_GtkMenuShell, l2) | ptr l1, ptr l2) -> void = "mac#gtk_im_multicontext_append_menuitems"
fun fun_c2ats_gtk_im_multicontext_get_context_id: {l1:addr} (!ptr_v_1(type_c2ats_GtkIMMulticontext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#gtk_im_multicontext_get_context_id"
fun fun_c2ats_gtk_im_multicontext_set_context_id: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkIMMulticontext, l1), !ptr_v_1(char, l2) | ptr l1, ptr l2) -> void = "mac#gtk_im_multicontext_set_context_id"
// File: /usr/include/gtk-3.0/gtk/gtkinfobar.h
abst@ype struct_c2ats__GtkInfoBarPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkInfoBarPrivate = struct_c2ats__GtkInfoBarPrivate
abst@ype struct_c2ats__GtkInfoBarClass // FIXME! Forward declaration.
typedef type_c2ats_GtkInfoBarClass = struct_c2ats__GtkInfoBarClass
abst@ype struct_c2ats__GtkInfoBar // FIXME! Forward declaration.
typedef type_c2ats_GtkInfoBar = struct_c2ats__GtkInfoBar
typedef struct_c2ats__GtkInfoBar = $extype_struct"struct _GtkInfoBar" of {
  parent = type_c2ats_GtkBox,
  priv = ptr (* cPtr0(type_c2ats_GtkInfoBarPrivate) *)
}
typedef struct_c2ats__GtkInfoBarClass = $extype_struct"struct _GtkInfoBarClass" of {
  parent_class = type_c2ats_GtkBoxClass,
  response = {l1:addr} (!ptr_v_1(type_c2ats_GtkInfoBar, l1) | ptr l1, type_c2ats_gint) -> void,
  close = {l1:addr} (!ptr_v_1(type_c2ats_GtkInfoBar, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_info_bar_get_type: () -> type_c2ats_GType = "mac#gtk_info_bar_get_type"
fun fun_c2ats_gtk_info_bar_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_info_bar_new"
fun fun_c2ats_gtk_info_bar_new_with_buttons: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_info_bar_new_with_buttons"
fun fun_c2ats_gtk_info_bar_get_action_area: {l1:addr} (!ptr_v_1(type_c2ats_GtkInfoBar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_info_bar_get_action_area"
fun fun_c2ats_gtk_info_bar_get_content_area: {l1:addr} (!ptr_v_1(type_c2ats_GtkInfoBar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_info_bar_get_content_area"
fun fun_c2ats_gtk_info_bar_add_action_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkInfoBar, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_info_bar_add_action_widget"
fun fun_c2ats_gtk_info_bar_add_button: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkInfoBar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_info_bar_add_button"
fun fun_c2ats_gtk_info_bar_add_buttons: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkInfoBar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_info_bar_add_buttons"
fun fun_c2ats_gtk_info_bar_set_response_sensitive: {l1:addr} (!ptr_v_1(type_c2ats_GtkInfoBar, l1) | ptr l1, type_c2ats_gint, type_c2ats_gboolean) -> void = "mac#gtk_info_bar_set_response_sensitive"
fun fun_c2ats_gtk_info_bar_set_default_response: {l1:addr} (!ptr_v_1(type_c2ats_GtkInfoBar, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_info_bar_set_default_response"
fun fun_c2ats_gtk_info_bar_response: {l1:addr} (!ptr_v_1(type_c2ats_GtkInfoBar, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_info_bar_response"
fun fun_c2ats_gtk_info_bar_set_message_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkInfoBar, l1) | ptr l1, type_c2ats_GtkMessageType) -> void = "mac#gtk_info_bar_set_message_type"
fun fun_c2ats_gtk_info_bar_get_message_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkInfoBar, l1) | ptr l1) -> type_c2ats_GtkMessageType = "mac#gtk_info_bar_get_message_type"
fun fun_c2ats_gtk_info_bar_set_show_close_button: {l1:addr} (!ptr_v_1(type_c2ats_GtkInfoBar, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_info_bar_set_show_close_button"
fun fun_c2ats_gtk_info_bar_get_show_close_button: {l1:addr} (!ptr_v_1(type_c2ats_GtkInfoBar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_info_bar_get_show_close_button"
// File: /usr/include/gtk-3.0/gtk/gtkinvisible.h
abst@ype struct_c2ats__GtkInvisible // FIXME! Forward declaration.
typedef type_c2ats_GtkInvisible = struct_c2ats__GtkInvisible
abst@ype struct_c2ats__GtkInvisiblePrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkInvisiblePrivate = struct_c2ats__GtkInvisiblePrivate
abst@ype struct_c2ats__GtkInvisibleClass // FIXME! Forward declaration.
typedef type_c2ats_GtkInvisibleClass = struct_c2ats__GtkInvisibleClass
typedef struct_c2ats__GtkInvisible = $extype_struct"struct _GtkInvisible" of {
  widget = type_c2ats_GtkWidget,
  priv = ptr (* cPtr0(type_c2ats_GtkInvisiblePrivate) *)
}
typedef struct_c2ats__GtkInvisibleClass = $extype_struct"struct _GtkInvisibleClass" of {
  parent_class = type_c2ats_GtkWidgetClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_invisible_get_type: () -> type_c2ats_GType = "mac#gtk_invisible_get_type"
fun fun_c2ats_gtk_invisible_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_invisible_new"
fun fun_c2ats_gtk_invisible_new_for_screen: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_invisible_new_for_screen"
fun fun_c2ats_gtk_invisible_set_screen: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkInvisible, l1), !ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l1, ptr l2) -> void = "mac#gtk_invisible_set_screen"
fun fun_c2ats_gtk_invisible_get_screen: {l1:addr} (!ptr_v_1(type_c2ats_GtkInvisible, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l2) = "mac#gtk_invisible_get_screen"
// File: /usr/include/gtk-3.0/gtk/gtklayout.h
abst@ype struct_c2ats__GtkLayout // FIXME! Forward declaration.
typedef type_c2ats_GtkLayout = struct_c2ats__GtkLayout
abst@ype struct_c2ats__GtkLayoutPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkLayoutPrivate = struct_c2ats__GtkLayoutPrivate
abst@ype struct_c2ats__GtkLayoutClass // FIXME! Forward declaration.
typedef type_c2ats_GtkLayoutClass = struct_c2ats__GtkLayoutClass
typedef struct_c2ats__GtkLayout = $extype_struct"struct _GtkLayout" of {
  container = type_c2ats_GtkContainer,
  priv = ptr (* cPtr0(type_c2ats_GtkLayoutPrivate) *)
}
typedef struct_c2ats__GtkLayoutClass = $extype_struct"struct _GtkLayoutClass" of {
  parent_class = type_c2ats_GtkContainerClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_layout_get_type: () -> type_c2ats_GType = "mac#gtk_layout_get_type"
fun fun_c2ats_gtk_layout_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_layout_new"
fun fun_c2ats_gtk_layout_get_bin_window: {l1:addr} (!ptr_v_1(type_c2ats_GtkLayout, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gtk_layout_get_bin_window"
fun fun_c2ats_gtk_layout_put: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkLayout, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_layout_put"
fun fun_c2ats_gtk_layout_move: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkLayout, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_layout_move"
fun fun_c2ats_gtk_layout_set_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkLayout, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint) -> void = "mac#gtk_layout_set_size"
fun fun_c2ats_gtk_layout_get_size: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkLayout, l1), !ptr_v_1(type_c2ats_guint, l2), !ptr_v_1(type_c2ats_guint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_layout_get_size"
fun fun_c2ats_gtk_layout_get_hadjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkLayout, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_layout_get_hadjustment"
fun fun_c2ats_gtk_layout_get_vadjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkLayout, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_layout_get_vadjustment"
fun fun_c2ats_gtk_layout_set_hadjustment: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkLayout, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> void = "mac#gtk_layout_set_hadjustment"
fun fun_c2ats_gtk_layout_set_vadjustment: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkLayout, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> void = "mac#gtk_layout_set_vadjustment"
// File: /usr/include/gtk-3.0/gtk/gtklevelbar.h
abst@ype struct_c2ats__GtkLevelBarClass // FIXME! Forward declaration.
typedef type_c2ats_GtkLevelBarClass = struct_c2ats__GtkLevelBarClass
abst@ype struct_c2ats__GtkLevelBar // FIXME! Forward declaration.
typedef type_c2ats_GtkLevelBar = struct_c2ats__GtkLevelBar
abst@ype struct_c2ats__GtkLevelBarPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkLevelBarPrivate = struct_c2ats__GtkLevelBarPrivate
typedef struct_c2ats__GtkLevelBar = $extype_struct"struct _GtkLevelBar" of {
  parent = type_c2ats_GtkWidget,
  priv = ptr (* cPtr0(type_c2ats_GtkLevelBarPrivate) *)
}
typedef struct_c2ats__GtkLevelBarClass = $extype_struct"struct _GtkLevelBarClass" of {
  parent_class = type_c2ats_GtkWidgetClass,
  offset_changed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkLevelBar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  padding = @[type_c2ats_gpointer][16]
}
fun fun_c2ats_gtk_level_bar_get_type: () -> type_c2ats_GType = "mac#gtk_level_bar_get_type"
fun fun_c2ats_gtk_level_bar_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_level_bar_new"
fun fun_c2ats_gtk_level_bar_new_for_interval: (type_c2ats_gdouble, type_c2ats_gdouble) -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_level_bar_new_for_interval"
fun fun_c2ats_gtk_level_bar_set_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkLevelBar, l1) | ptr l1, type_c2ats_GtkLevelBarMode) -> void = "mac#gtk_level_bar_set_mode"
fun fun_c2ats_gtk_level_bar_get_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkLevelBar, l1) | ptr l1) -> type_c2ats_GtkLevelBarMode = "mac#gtk_level_bar_get_mode"
fun fun_c2ats_gtk_level_bar_set_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkLevelBar, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_level_bar_set_value"
fun fun_c2ats_gtk_level_bar_get_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkLevelBar, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_level_bar_get_value"
fun fun_c2ats_gtk_level_bar_set_min_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkLevelBar, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_level_bar_set_min_value"
fun fun_c2ats_gtk_level_bar_get_min_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkLevelBar, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_level_bar_get_min_value"
fun fun_c2ats_gtk_level_bar_set_max_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkLevelBar, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_level_bar_set_max_value"
fun fun_c2ats_gtk_level_bar_get_max_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkLevelBar, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_level_bar_get_max_value"
fun fun_c2ats_gtk_level_bar_set_inverted: {l1:addr} (!ptr_v_1(type_c2ats_GtkLevelBar, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_level_bar_set_inverted"
fun fun_c2ats_gtk_level_bar_get_inverted: {l1:addr} (!ptr_v_1(type_c2ats_GtkLevelBar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_level_bar_get_inverted"
fun fun_c2ats_gtk_level_bar_add_offset_value: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkLevelBar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gdouble) -> void = "mac#gtk_level_bar_add_offset_value"
fun fun_c2ats_gtk_level_bar_remove_offset_value: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkLevelBar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_level_bar_remove_offset_value"
fun fun_c2ats_gtk_level_bar_get_offset_value: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkLevelBar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_level_bar_get_offset_value"
// File: /usr/include/gtk-3.0/gtk/gtklinkbutton.h
abst@ype struct_c2ats__GtkLinkButton // FIXME! Forward declaration.
typedef type_c2ats_GtkLinkButton = struct_c2ats__GtkLinkButton
abst@ype struct_c2ats__GtkLinkButtonClass // FIXME! Forward declaration.
typedef type_c2ats_GtkLinkButtonClass = struct_c2ats__GtkLinkButtonClass
abst@ype struct_c2ats__GtkLinkButtonPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkLinkButtonPrivate = struct_c2ats__GtkLinkButtonPrivate
typedef struct_c2ats__GtkLinkButton = $extype_struct"struct _GtkLinkButton" of {
  parent_instance = type_c2ats_GtkButton,
  priv = ptr (* cPtr0(type_c2ats_GtkLinkButtonPrivate) *)
}
typedef struct_c2ats__GtkLinkButtonClass = $extype_struct"struct _GtkLinkButtonClass" of {
  parent_class = type_c2ats_GtkButtonClass,
  activate_link = {l1:addr} (!ptr_v_1(type_c2ats_GtkLinkButton, l1) | ptr l1) -> type_c2ats_gboolean,
  _gtk_padding1 = () -> void,
  _gtk_padding2 = () -> void,
  _gtk_padding3 = () -> void,
  _gtk_padding4 = () -> void
}
fun fun_c2ats_gtk_link_button_get_type: () -> type_c2ats_GType = "mac#gtk_link_button_get_type"
fun fun_c2ats_gtk_link_button_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_link_button_new"
fun fun_c2ats_gtk_link_button_new_with_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_link_button_new_with_label"
fun fun_c2ats_gtk_link_button_get_uri: {l1:addr} (!ptr_v_1(type_c2ats_GtkLinkButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_link_button_get_uri"
fun fun_c2ats_gtk_link_button_set_uri: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkLinkButton, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_link_button_set_uri"
fun fun_c2ats_gtk_link_button_get_visited: {l1:addr} (!ptr_v_1(type_c2ats_GtkLinkButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_link_button_get_visited"
fun fun_c2ats_gtk_link_button_set_visited: {l1:addr} (!ptr_v_1(type_c2ats_GtkLinkButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_link_button_set_visited"
// File: /usr/include/gtk-3.0/gtk/gtklistbox.h
abst@ype struct_c2ats__GtkListBox // FIXME! Forward declaration.
typedef type_c2ats_GtkListBox = struct_c2ats__GtkListBox
abst@ype struct_c2ats__GtkListBoxClass // FIXME! Forward declaration.
typedef type_c2ats_GtkListBoxClass = struct_c2ats__GtkListBoxClass
abst@ype struct_c2ats__GtkListBoxRow // FIXME! Forward declaration.
typedef type_c2ats_GtkListBoxRow = struct_c2ats__GtkListBoxRow
abst@ype struct_c2ats__GtkListBoxRowClass // FIXME! Forward declaration.
typedef type_c2ats_GtkListBoxRowClass = struct_c2ats__GtkListBoxRowClass
typedef struct_c2ats__GtkListBox = $extype_struct"struct _GtkListBox" of {
  parent_instance = type_c2ats_GtkContainer
}
typedef struct_c2ats__GtkListBoxClass = $extype_struct"struct _GtkListBoxClass" of {
  parent_class = type_c2ats_GtkContainerClass,
  row_selected = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1), !ptr_v_1(type_c2ats_GtkListBoxRow, l2) | ptr l1, ptr l2) -> void,
  row_activated = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1), !ptr_v_1(type_c2ats_GtkListBoxRow, l2) | ptr l1, ptr l2) -> void,
  activate_cursor_row = {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1) -> void,
  toggle_cursor_row = {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1) -> void,
  move_cursor = {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1, type_c2ats_GtkMovementStep, type_c2ats_gint) -> void,
  selected_rows_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1) -> void,
  select_all = {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1) -> void,
  unselect_all = {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void
}
typedef struct_c2ats__GtkListBoxRow = $extype_struct"struct _GtkListBoxRow" of {
  parent_instance = type_c2ats_GtkBin
}
typedef struct_c2ats__GtkListBoxRowClass = $extype_struct"struct _GtkListBoxRowClass" of {
  parent_class = type_c2ats_GtkBinClass,
  activate = {l1:addr} (!ptr_v_1(type_c2ats_GtkListBoxRow, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void
}
typedef type_c2ats_GtkListBoxFilterFunc = {l1:addr} (!ptr_v_1(type_c2ats_GtkListBoxRow, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GtkListBoxSortFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListBoxRow, l1), !ptr_v_1(type_c2ats_GtkListBoxRow, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> type_c2ats_gint
typedef type_c2ats_GtkListBoxUpdateHeaderFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListBoxRow, l1), !ptr_v_1(type_c2ats_GtkListBoxRow, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void
typedef type_c2ats_GtkListBoxCreateWidgetFunc = (type_c2ats_gpointer, type_c2ats_gpointer) -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1)
fun fun_c2ats_gtk_list_box_row_get_type: () -> type_c2ats_GType = "mac#gtk_list_box_row_get_type"
fun fun_c2ats_gtk_list_box_row_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_list_box_row_new"
fun fun_c2ats_gtk_list_box_row_get_header: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBoxRow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_list_box_row_get_header"
fun fun_c2ats_gtk_list_box_row_set_header: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListBoxRow, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_list_box_row_set_header"
fun fun_c2ats_gtk_list_box_row_get_index: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBoxRow, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_list_box_row_get_index"
fun fun_c2ats_gtk_list_box_row_changed: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBoxRow, l1) | ptr l1) -> void = "mac#gtk_list_box_row_changed"
fun fun_c2ats_gtk_list_box_row_is_selected: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBoxRow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_list_box_row_is_selected"
fun fun_c2ats_gtk_list_box_row_set_selectable: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBoxRow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_list_box_row_set_selectable"
fun fun_c2ats_gtk_list_box_row_get_selectable: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBoxRow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_list_box_row_get_selectable"
fun fun_c2ats_gtk_list_box_row_set_activatable: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBoxRow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_list_box_row_set_activatable"
fun fun_c2ats_gtk_list_box_row_get_activatable: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBoxRow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_list_box_row_get_activatable"
fun fun_c2ats_gtk_list_box_get_type: () -> type_c2ats_GType = "mac#gtk_list_box_get_type"
fun fun_c2ats_gtk_list_box_prepend: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_list_box_prepend"
fun fun_c2ats_gtk_list_box_insert: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_list_box_insert"
fun fun_c2ats_gtk_list_box_get_selected_row: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkListBoxRow, l2) | ptr l2) = "mac#gtk_list_box_get_selected_row"
fun fun_c2ats_gtk_list_box_get_row_at_index: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkListBoxRow, l2) | ptr l2) = "mac#gtk_list_box_get_row_at_index"
fun fun_c2ats_gtk_list_box_get_row_at_y: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkListBoxRow, l2) | ptr l2) = "mac#gtk_list_box_get_row_at_y"
fun fun_c2ats_gtk_list_box_select_row: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1), !ptr_v_1(type_c2ats_GtkListBoxRow, l2) | ptr l1, ptr l2) -> void = "mac#gtk_list_box_select_row"
fun fun_c2ats_gtk_list_box_set_placeholder: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_list_box_set_placeholder"
fun fun_c2ats_gtk_list_box_set_adjustment: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> void = "mac#gtk_list_box_set_adjustment"
fun fun_c2ats_gtk_list_box_get_adjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_list_box_get_adjustment"
typedef type_c2ats_GtkListBoxForeachFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1), !ptr_v_1(type_c2ats_GtkListBoxRow, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void
fun fun_c2ats_gtk_list_box_selected_foreach: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1, type_c2ats_GtkListBoxForeachFunc, type_c2ats_gpointer) -> void = "mac#gtk_list_box_selected_foreach"
fun fun_c2ats_gtk_list_box_get_selected_rows: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_list_box_get_selected_rows"
fun fun_c2ats_gtk_list_box_unselect_row: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1), !ptr_v_1(type_c2ats_GtkListBoxRow, l2) | ptr l1, ptr l2) -> void = "mac#gtk_list_box_unselect_row"
fun fun_c2ats_gtk_list_box_select_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1) -> void = "mac#gtk_list_box_select_all"
fun fun_c2ats_gtk_list_box_unselect_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1) -> void = "mac#gtk_list_box_unselect_all"
fun fun_c2ats_gtk_list_box_set_selection_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1, type_c2ats_GtkSelectionMode) -> void = "mac#gtk_list_box_set_selection_mode"
fun fun_c2ats_gtk_list_box_get_selection_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1) -> type_c2ats_GtkSelectionMode = "mac#gtk_list_box_get_selection_mode"
fun fun_c2ats_gtk_list_box_set_filter_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1, type_c2ats_GtkListBoxFilterFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_list_box_set_filter_func"
fun fun_c2ats_gtk_list_box_set_header_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1, type_c2ats_GtkListBoxUpdateHeaderFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_list_box_set_header_func"
fun fun_c2ats_gtk_list_box_invalidate_filter: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1) -> void = "mac#gtk_list_box_invalidate_filter"
fun fun_c2ats_gtk_list_box_invalidate_sort: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1) -> void = "mac#gtk_list_box_invalidate_sort"
fun fun_c2ats_gtk_list_box_invalidate_headers: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1) -> void = "mac#gtk_list_box_invalidate_headers"
fun fun_c2ats_gtk_list_box_set_sort_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1, type_c2ats_GtkListBoxSortFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_list_box_set_sort_func"
fun fun_c2ats_gtk_list_box_set_activate_on_single_click: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_list_box_set_activate_on_single_click"
fun fun_c2ats_gtk_list_box_get_activate_on_single_click: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_list_box_get_activate_on_single_click"
fun fun_c2ats_gtk_list_box_drag_unhighlight_row: {l1:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1) | ptr l1) -> void = "mac#gtk_list_box_drag_unhighlight_row"
fun fun_c2ats_gtk_list_box_drag_highlight_row: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1), !ptr_v_1(type_c2ats_GtkListBoxRow, l2) | ptr l1, ptr l2) -> void = "mac#gtk_list_box_drag_highlight_row"
fun fun_c2ats_gtk_list_box_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_list_box_new"
fun fun_c2ats_gtk_list_box_bind_model: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkListBox, l1), !ptr_v_1(type_c2ats_GListModel, l2) | ptr l1, ptr l2, type_c2ats_GtkListBoxCreateWidgetFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_list_box_bind_model"
typedef type_c2ats_GtkListBox_autoptr = cPtr0(type_c2ats_GtkListBox)
fun fun_c2ats_glib_autoptr_cleanup_GtkListBox: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkListBox, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkListBox"
typedef type_c2ats_GtkListBoxRow_autoptr = cPtr0(type_c2ats_GtkListBoxRow)
fun fun_c2ats_glib_autoptr_cleanup_GtkListBoxRow: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkListBoxRow, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkListBoxRow"
// File: /usr/include/gtk-3.0/gtk/gtklockbutton.h
abst@ype struct_c2ats__GtkLockButton // FIXME! Forward declaration.
typedef type_c2ats_GtkLockButton = struct_c2ats__GtkLockButton
abst@ype struct_c2ats__GtkLockButtonClass // FIXME! Forward declaration.
typedef type_c2ats_GtkLockButtonClass = struct_c2ats__GtkLockButtonClass
abst@ype struct_c2ats__GtkLockButtonPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkLockButtonPrivate = struct_c2ats__GtkLockButtonPrivate
typedef struct_c2ats__GtkLockButton = $extype_struct"struct _GtkLockButton" of {
  parent = type_c2ats_GtkButton,
  priv = ptr (* cPtr0(type_c2ats_GtkLockButtonPrivate) *)
}
typedef struct_c2ats__GtkLockButtonClass = $extype_struct"struct _GtkLockButtonClass" of {
  parent_class = type_c2ats_GtkButtonClass,
  reserved0 = () -> void,
  reserved1 = () -> void,
  reserved2 = () -> void,
  reserved3 = () -> void,
  reserved4 = () -> void,
  reserved5 = () -> void,
  reserved6 = () -> void,
  reserved7 = () -> void
}
fun fun_c2ats_gtk_lock_button_get_type: () -> type_c2ats_GType = "mac#gtk_lock_button_get_type"
fun fun_c2ats_gtk_lock_button_new: {l1:addr} (!ptr_v_1(type_c2ats_GPermission, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_lock_button_new"
fun fun_c2ats_gtk_lock_button_get_permission: {l1:addr} (!ptr_v_1(type_c2ats_GtkLockButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GPermission, l2) | ptr l2) = "mac#gtk_lock_button_get_permission"
fun fun_c2ats_gtk_lock_button_set_permission: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkLockButton, l1), !ptr_v_1(type_c2ats_GPermission, l2) | ptr l1, ptr l2) -> void = "mac#gtk_lock_button_set_permission"
// File: /usr/include/gtk-3.0/gtk/gtkmain.h
typedef type_c2ats_GtkKeySnoopFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEventKey, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> type_c2ats_gint
fun fun_c2ats_gtk_get_major_version: () -> type_c2ats_guint = "mac#gtk_get_major_version"
fun fun_c2ats_gtk_get_minor_version: () -> type_c2ats_guint = "mac#gtk_get_minor_version"
fun fun_c2ats_gtk_get_micro_version: () -> type_c2ats_guint = "mac#gtk_get_micro_version"
fun fun_c2ats_gtk_get_binary_age: () -> type_c2ats_guint = "mac#gtk_get_binary_age"
fun fun_c2ats_gtk_get_interface_age: () -> type_c2ats_guint = "mac#gtk_get_interface_age"
fun fun_c2ats_gtk_check_version: (type_c2ats_guint, type_c2ats_guint, type_c2ats_guint) -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#gtk_check_version"
fun fun_c2ats_gtk_parse_args: {l1,l2,l2_1,l2_2:addr} (!ptr_v_1(int, l1), !ptr_v_3(char, l2, l2_1, l2_2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_parse_args"
fun fun_c2ats_gtk_init: {l1,l2,l2_1,l2_2:addr} (!ptr_v_1(int, l1), !ptr_v_3(char, l2, l2_1, l2_2) | ptr l1, ptr l2) -> void = "mac#gtk_init"
fun fun_c2ats_gtk_init_check: {l1,l2,l2_1,l2_2:addr} (!ptr_v_1(int, l1), !ptr_v_3(char, l2, l2_1, l2_2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_init_check"
fun fun_c2ats_gtk_init_with_args: {l1,l2,l2_1,l2_2,l3,l4,l5,l6,l6_1:addr} (!ptr_v_1(type_c2ats_gint, l1), !ptr_v_3(type_c2ats_gchar, l2, l2_1, l2_2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GOptionEntry, l4), !ptr_v_1(type_c2ats_gchar, l5), !ptr_v_2(type_c2ats_GError, l6, l6_1) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, ptr l6) -> type_c2ats_gboolean = "mac#gtk_init_with_args"
fun fun_c2ats_gtk_get_option_group: (type_c2ats_gboolean) -> [l1:addr] (ptr_v_1(type_c2ats_GOptionGroup, l1) | ptr l1) = "mac#gtk_get_option_group"
fun fun_c2ats_gtk_disable_setlocale: () -> void = "mac#gtk_disable_setlocale"
fun fun_c2ats_gtk_get_default_language: () -> [l1:addr] (ptr_v_1(type_c2ats_PangoLanguage, l1) | ptr l1) = "mac#gtk_get_default_language"
fun fun_c2ats_gtk_get_locale_direction: () -> type_c2ats_GtkTextDirection = "mac#gtk_get_locale_direction"
fun fun_c2ats_gtk_events_pending: () -> type_c2ats_gboolean = "mac#gtk_events_pending"
fun fun_c2ats_gtk_main_do_event: {l1:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) -> void = "mac#gtk_main_do_event"
fun fun_c2ats_gtk_main: () -> void = "mac#gtk_main"
fun fun_c2ats_gtk_main_level: () -> type_c2ats_guint = "mac#gtk_main_level"
fun fun_c2ats_gtk_main_quit: () -> void = "mac#gtk_main_quit"
fun fun_c2ats_gtk_main_iteration: () -> type_c2ats_gboolean = "mac#gtk_main_iteration"
fun fun_c2ats_gtk_main_iteration_do: (type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gtk_main_iteration_do"
fun fun_c2ats_gtk_true: () -> type_c2ats_gboolean = "mac#gtk_true"
fun fun_c2ats_gtk_false: () -> type_c2ats_gboolean = "mac#gtk_false"
fun fun_c2ats_gtk_grab_add: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_grab_add"
fun fun_c2ats_gtk_grab_get_current: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_grab_get_current"
fun fun_c2ats_gtk_grab_remove: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_grab_remove"
fun fun_c2ats_gtk_device_grab_add: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gtk_device_grab_add"
fun fun_c2ats_gtk_device_grab_remove: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l1, ptr l2) -> void = "mac#gtk_device_grab_remove"
fun fun_c2ats_gtk_key_snooper_install: (type_c2ats_GtkKeySnoopFunc, type_c2ats_gpointer) -> type_c2ats_guint = "mac#gtk_key_snooper_install"
fun fun_c2ats_gtk_key_snooper_remove: (type_c2ats_guint) -> void = "mac#gtk_key_snooper_remove"
fun fun_c2ats_gtk_get_current_event: () -> [l1:addr] (ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) = "mac#gtk_get_current_event"
fun fun_c2ats_gtk_get_current_event_time: () -> type_c2ats_guint32 = "mac#gtk_get_current_event_time"
fun fun_c2ats_gtk_get_current_event_state: {l1:addr} (!ptr_v_1(type_c2ats_GdkModifierType, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_get_current_event_state"
fun fun_c2ats_gtk_get_current_event_device: () -> [l1:addr] (ptr_v_1(type_c2ats_GdkDevice, l1) | ptr l1) = "mac#gtk_get_current_event_device"
fun fun_c2ats_gtk_get_event_widget: {l1:addr} (!ptr_v_1(type_c2ats_GdkEvent, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_get_event_widget"
fun fun_c2ats_gtk_propagate_event: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkEvent, l2) | ptr l1, ptr l2) -> void = "mac#gtk_propagate_event"
// File: /usr/include/gtk-3.0/gtk/gtkmenubar.h
abst@ype struct_c2ats__GtkMenuBar // FIXME! Forward declaration.
typedef type_c2ats_GtkMenuBar = struct_c2ats__GtkMenuBar
abst@ype struct_c2ats__GtkMenuBarPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkMenuBarPrivate = struct_c2ats__GtkMenuBarPrivate
abst@ype struct_c2ats__GtkMenuBarClass // FIXME! Forward declaration.
typedef type_c2ats_GtkMenuBarClass = struct_c2ats__GtkMenuBarClass
typedef struct_c2ats__GtkMenuBar = $extype_struct"struct _GtkMenuBar" of {
  menu_shell = type_c2ats_GtkMenuShell,
  priv = ptr (* cPtr0(type_c2ats_GtkMenuBarPrivate) *)
}
typedef struct_c2ats__GtkMenuBarClass = $extype_struct"struct _GtkMenuBarClass" of {
  parent_class = type_c2ats_GtkMenuShellClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_menu_bar_get_type: () -> type_c2ats_GType = "mac#gtk_menu_bar_get_type"
fun fun_c2ats_gtk_menu_bar_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_menu_bar_new"
fun fun_c2ats_gtk_menu_bar_new_from_model: {l1:addr} (!ptr_v_1(type_c2ats_GMenuModel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_menu_bar_new_from_model"
fun fun_c2ats_gtk_menu_bar_get_pack_direction: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuBar, l1) | ptr l1) -> type_c2ats_GtkPackDirection = "mac#gtk_menu_bar_get_pack_direction"
fun fun_c2ats_gtk_menu_bar_set_pack_direction: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuBar, l1) | ptr l1, type_c2ats_GtkPackDirection) -> void = "mac#gtk_menu_bar_set_pack_direction"
fun fun_c2ats_gtk_menu_bar_get_child_pack_direction: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuBar, l1) | ptr l1) -> type_c2ats_GtkPackDirection = "mac#gtk_menu_bar_get_child_pack_direction"
fun fun_c2ats_gtk_menu_bar_set_child_pack_direction: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuBar, l1) | ptr l1, type_c2ats_GtkPackDirection) -> void = "mac#gtk_menu_bar_set_child_pack_direction"
fun fun_c2ats__gtk_menu_bar_cycle_focus: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuBar, l1) | ptr l1, type_c2ats_GtkDirectionType) -> void = "mac#_gtk_menu_bar_cycle_focus"
fun fun_c2ats__gtk_menu_bar_get_viewable_menu_bars: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#_gtk_menu_bar_get_viewable_menu_bars"
// File: /usr/include/gtk-3.0/gtk/gtkpopover.h
abst@ype struct_c2ats__GtkPopover // FIXME! Forward declaration.
typedef type_c2ats_GtkPopover = struct_c2ats__GtkPopover
abst@ype struct_c2ats__GtkPopoverClass // FIXME! Forward declaration.
typedef type_c2ats_GtkPopoverClass = struct_c2ats__GtkPopoverClass
abst@ype struct_c2ats__GtkPopoverPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkPopoverPrivate = struct_c2ats__GtkPopoverPrivate
typedef struct_c2ats__GtkPopover = $extype_struct"struct _GtkPopover" of {
  parent_instance = type_c2ats_GtkBin,
  priv = ptr (* cPtr0(type_c2ats_GtkPopoverPrivate) *)
}
typedef struct_c2ats__GtkPopoverClass = $extype_struct"struct _GtkPopoverClass" of {
  parent_class = type_c2ats_GtkBinClass,
  closed = {l1:addr} (!ptr_v_1(type_c2ats_GtkPopover, l1) | ptr l1) -> void,
  reserved = @[type_c2ats_gpointer][10]
}
fun fun_c2ats_gtk_popover_get_type: () -> type_c2ats_GType = "mac#gtk_popover_get_type"
fun fun_c2ats_gtk_popover_new: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_popover_new"
fun fun_c2ats_gtk_popover_new_from_model: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GMenuModel, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_popover_new_from_model"
fun fun_c2ats_gtk_popover_set_relative_to: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPopover, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_popover_set_relative_to"
fun fun_c2ats_gtk_popover_get_relative_to: {l1:addr} (!ptr_v_1(type_c2ats_GtkPopover, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_popover_get_relative_to"
fun fun_c2ats_gtk_popover_set_pointing_to: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPopover, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> void = "mac#gtk_popover_set_pointing_to"
fun fun_c2ats_gtk_popover_get_pointing_to: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPopover, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_popover_get_pointing_to"
fun fun_c2ats_gtk_popover_set_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkPopover, l1) | ptr l1, type_c2ats_GtkPositionType) -> void = "mac#gtk_popover_set_position"
fun fun_c2ats_gtk_popover_get_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkPopover, l1) | ptr l1) -> type_c2ats_GtkPositionType = "mac#gtk_popover_get_position"
fun fun_c2ats_gtk_popover_set_modal: {l1:addr} (!ptr_v_1(type_c2ats_GtkPopover, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_popover_set_modal"
fun fun_c2ats_gtk_popover_get_modal: {l1:addr} (!ptr_v_1(type_c2ats_GtkPopover, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_popover_get_modal"
fun fun_c2ats_gtk_popover_bind_model: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkPopover, l1), !ptr_v_1(type_c2ats_GMenuModel, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_popover_bind_model"
fun fun_c2ats_gtk_popover_set_transitions_enabled: {l1:addr} (!ptr_v_1(type_c2ats_GtkPopover, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_popover_set_transitions_enabled"
fun fun_c2ats_gtk_popover_get_transitions_enabled: {l1:addr} (!ptr_v_1(type_c2ats_GtkPopover, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_popover_get_transitions_enabled"
fun fun_c2ats_gtk_popover_set_default_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPopover, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_popover_set_default_widget"
fun fun_c2ats_gtk_popover_get_default_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkPopover, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_popover_get_default_widget"
fun fun_c2ats_gtk_popover_set_constrain_to: {l1:addr} (!ptr_v_1(type_c2ats_GtkPopover, l1) | ptr l1, type_c2ats_GtkPopoverConstraint) -> void = "mac#gtk_popover_set_constrain_to"
fun fun_c2ats_gtk_popover_get_constrain_to: {l1:addr} (!ptr_v_1(type_c2ats_GtkPopover, l1) | ptr l1) -> type_c2ats_GtkPopoverConstraint = "mac#gtk_popover_get_constrain_to"
fun fun_c2ats_gtk_popover_popup: {l1:addr} (!ptr_v_1(type_c2ats_GtkPopover, l1) | ptr l1) -> void = "mac#gtk_popover_popup"
fun fun_c2ats_gtk_popover_popdown: {l1:addr} (!ptr_v_1(type_c2ats_GtkPopover, l1) | ptr l1) -> void = "mac#gtk_popover_popdown"
// File: /usr/include/gtk-3.0/gtk/gtkmenubutton.h
abst@ype struct_c2ats__GtkMenuButton // FIXME! Forward declaration.
typedef type_c2ats_GtkMenuButton = struct_c2ats__GtkMenuButton
abst@ype struct_c2ats__GtkMenuButtonClass // FIXME! Forward declaration.
typedef type_c2ats_GtkMenuButtonClass = struct_c2ats__GtkMenuButtonClass
abst@ype struct_c2ats__GtkMenuButtonPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkMenuButtonPrivate = struct_c2ats__GtkMenuButtonPrivate
typedef struct_c2ats__GtkMenuButton = $extype_struct"struct _GtkMenuButton" of {
  parent = type_c2ats_GtkToggleButton,
  priv = ptr (* cPtr0(type_c2ats_GtkMenuButtonPrivate) *)
}
typedef struct_c2ats__GtkMenuButtonClass = $extype_struct"struct _GtkMenuButtonClass" of {
  parent_class = type_c2ats_GtkToggleButtonClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_menu_button_get_type: () -> type_c2ats_GType = "mac#gtk_menu_button_get_type"
fun fun_c2ats_gtk_menu_button_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_menu_button_new"
fun fun_c2ats_gtk_menu_button_set_popup: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuButton, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_button_set_popup"
fun fun_c2ats_gtk_menu_button_get_popup: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkMenu, l2) | ptr l2) = "mac#gtk_menu_button_get_popup"
fun fun_c2ats_gtk_menu_button_set_popover: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuButton, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_button_set_popover"
fun fun_c2ats_gtk_menu_button_get_popover: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkPopover, l2) | ptr l2) = "mac#gtk_menu_button_get_popover"
fun fun_c2ats_gtk_menu_button_set_direction: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuButton, l1) | ptr l1, type_c2ats_GtkArrowType) -> void = "mac#gtk_menu_button_set_direction"
fun fun_c2ats_gtk_menu_button_get_direction: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuButton, l1) | ptr l1) -> type_c2ats_GtkArrowType = "mac#gtk_menu_button_get_direction"
fun fun_c2ats_gtk_menu_button_set_menu_model: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuButton, l1), !ptr_v_1(type_c2ats_GMenuModel, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_button_set_menu_model"
fun fun_c2ats_gtk_menu_button_get_menu_model: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMenuModel, l2) | ptr l2) = "mac#gtk_menu_button_get_menu_model"
fun fun_c2ats_gtk_menu_button_set_align_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuButton, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_button_set_align_widget"
fun fun_c2ats_gtk_menu_button_get_align_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_menu_button_get_align_widget"
fun fun_c2ats_gtk_menu_button_set_use_popover: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_menu_button_set_use_popover"
fun fun_c2ats_gtk_menu_button_get_use_popover: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_menu_button_get_use_popover"
// File: /usr/include/gtk-3.0/gtk/gtksizegroup.h
abst@ype struct_c2ats__GtkSizeGroup // FIXME! Forward declaration.
typedef type_c2ats_GtkSizeGroup = struct_c2ats__GtkSizeGroup
abst@ype struct_c2ats__GtkSizeGroupPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkSizeGroupPrivate = struct_c2ats__GtkSizeGroupPrivate
abst@ype struct_c2ats__GtkSizeGroupClass // FIXME! Forward declaration.
typedef type_c2ats_GtkSizeGroupClass = struct_c2ats__GtkSizeGroupClass
typedef struct_c2ats__GtkSizeGroup = $extype_struct"struct _GtkSizeGroup" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkSizeGroupPrivate) *)
}
typedef struct_c2ats__GtkSizeGroupClass = $extype_struct"struct _GtkSizeGroupClass" of {
  parent_class = type_c2ats_GObjectClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_size_group_get_type: () -> type_c2ats_GType = "mac#gtk_size_group_get_type"
fun fun_c2ats_gtk_size_group_new: (type_c2ats_GtkSizeGroupMode) -> [l1:addr] (ptr_v_1(type_c2ats_GtkSizeGroup, l1) | ptr l1) = "mac#gtk_size_group_new"
fun fun_c2ats_gtk_size_group_set_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkSizeGroup, l1) | ptr l1, type_c2ats_GtkSizeGroupMode) -> void = "mac#gtk_size_group_set_mode"
fun fun_c2ats_gtk_size_group_get_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkSizeGroup, l1) | ptr l1) -> type_c2ats_GtkSizeGroupMode = "mac#gtk_size_group_get_mode"
fun fun_c2ats_gtk_size_group_set_ignore_hidden: {l1:addr} (!ptr_v_1(type_c2ats_GtkSizeGroup, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_size_group_set_ignore_hidden"
fun fun_c2ats_gtk_size_group_get_ignore_hidden: {l1:addr} (!ptr_v_1(type_c2ats_GtkSizeGroup, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_size_group_get_ignore_hidden"
fun fun_c2ats_gtk_size_group_add_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkSizeGroup, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_size_group_add_widget"
fun fun_c2ats_gtk_size_group_remove_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkSizeGroup, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_size_group_remove_widget"
fun fun_c2ats_gtk_size_group_get_widgets: {l1:addr} (!ptr_v_1(type_c2ats_GtkSizeGroup, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_size_group_get_widgets"
// File: /usr/include/gtk-3.0/gtk/gtktoolitem.h
abst@ype struct_c2ats__GtkToolItem // FIXME! Forward declaration.
typedef type_c2ats_GtkToolItem = struct_c2ats__GtkToolItem
abst@ype struct_c2ats__GtkToolItemClass // FIXME! Forward declaration.
typedef type_c2ats_GtkToolItemClass = struct_c2ats__GtkToolItemClass
abst@ype struct_c2ats__GtkToolItemPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkToolItemPrivate = struct_c2ats__GtkToolItemPrivate
typedef struct_c2ats__GtkToolItem = $extype_struct"struct _GtkToolItem" of {
  parent = type_c2ats_GtkBin,
  priv = ptr (* cPtr0(type_c2ats_GtkToolItemPrivate) *)
}
typedef struct_c2ats__GtkToolItemClass = $extype_struct"struct _GtkToolItemClass" of {
  parent_class = type_c2ats_GtkBinClass,
  create_menu_proxy = {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> type_c2ats_gboolean,
  toolbar_reconfigured = {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_tool_item_get_type: () -> type_c2ats_GType = "mac#gtk_tool_item_get_type"
fun fun_c2ats_gtk_tool_item_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) = "mac#gtk_tool_item_new"
fun fun_c2ats_gtk_tool_item_set_homogeneous: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tool_item_set_homogeneous"
fun fun_c2ats_gtk_tool_item_get_homogeneous: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tool_item_get_homogeneous"
fun fun_c2ats_gtk_tool_item_set_expand: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tool_item_set_expand"
fun fun_c2ats_gtk_tool_item_get_expand: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tool_item_get_expand"
fun fun_c2ats_gtk_tool_item_set_tooltip_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tool_item_set_tooltip_text"
fun fun_c2ats_gtk_tool_item_set_tooltip_markup: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tool_item_set_tooltip_markup"
fun fun_c2ats_gtk_tool_item_set_use_drag_window: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tool_item_set_use_drag_window"
fun fun_c2ats_gtk_tool_item_get_use_drag_window: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tool_item_get_use_drag_window"
fun fun_c2ats_gtk_tool_item_set_visible_horizontal: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tool_item_set_visible_horizontal"
fun fun_c2ats_gtk_tool_item_get_visible_horizontal: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tool_item_get_visible_horizontal"
fun fun_c2ats_gtk_tool_item_set_visible_vertical: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tool_item_set_visible_vertical"
fun fun_c2ats_gtk_tool_item_get_visible_vertical: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tool_item_get_visible_vertical"
fun fun_c2ats_gtk_tool_item_get_is_important: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tool_item_get_is_important"
fun fun_c2ats_gtk_tool_item_set_is_important: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tool_item_set_is_important"
fun fun_c2ats_gtk_tool_item_get_ellipsize_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> type_c2ats_PangoEllipsizeMode = "mac#gtk_tool_item_get_ellipsize_mode"
fun fun_c2ats_gtk_tool_item_get_icon_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> type_c2ats_GtkIconSize = "mac#gtk_tool_item_get_icon_size"
fun fun_c2ats_gtk_tool_item_get_orientation: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> type_c2ats_GtkOrientation = "mac#gtk_tool_item_get_orientation"
fun fun_c2ats_gtk_tool_item_get_toolbar_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> type_c2ats_GtkToolbarStyle = "mac#gtk_tool_item_get_toolbar_style"
fun fun_c2ats_gtk_tool_item_get_relief_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> type_c2ats_GtkReliefStyle = "mac#gtk_tool_item_get_relief_style"
fun fun_c2ats_gtk_tool_item_get_text_alignment: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> type_c2ats_gfloat = "mac#gtk_tool_item_get_text_alignment"
fun fun_c2ats_gtk_tool_item_get_text_orientation: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> type_c2ats_GtkOrientation = "mac#gtk_tool_item_get_text_orientation"
fun fun_c2ats_gtk_tool_item_get_text_size_group: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSizeGroup, l2) | ptr l2) = "mac#gtk_tool_item_get_text_size_group"
fun fun_c2ats_gtk_tool_item_retrieve_proxy_menu_item: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_tool_item_retrieve_proxy_menu_item"
fun fun_c2ats_gtk_tool_item_get_proxy_menu_item: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_tool_item_get_proxy_menu_item"
fun fun_c2ats_gtk_tool_item_set_proxy_menu_item: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_tool_item_set_proxy_menu_item"
fun fun_c2ats_gtk_tool_item_rebuild_menu: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> void = "mac#gtk_tool_item_rebuild_menu"
fun fun_c2ats_gtk_tool_item_toolbar_reconfigured: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> void = "mac#gtk_tool_item_toolbar_reconfigured"
fun fun_c2ats__gtk_tool_item_create_menu_proxy: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) -> type_c2ats_gboolean = "mac#_gtk_tool_item_create_menu_proxy"
// File: /usr/include/gtk-3.0/gtk/gtktoolbutton.h
abst@ype struct_c2ats__GtkToolButton // FIXME! Forward declaration.
typedef type_c2ats_GtkToolButton = struct_c2ats__GtkToolButton
abst@ype struct_c2ats__GtkToolButtonClass // FIXME! Forward declaration.
typedef type_c2ats_GtkToolButtonClass = struct_c2ats__GtkToolButtonClass
abst@ype struct_c2ats__GtkToolButtonPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkToolButtonPrivate = struct_c2ats__GtkToolButtonPrivate
typedef struct_c2ats__GtkToolButton = $extype_struct"struct _GtkToolButton" of {
  parent = type_c2ats_GtkToolItem,
  priv = ptr (* cPtr0(type_c2ats_GtkToolButtonPrivate) *)
}
typedef struct_c2ats__GtkToolButtonClass = $extype_struct"struct _GtkToolButtonClass" of {
  parent_class = type_c2ats_GtkToolItemClass,
  button_type = type_c2ats_GType,
  clicked = {l1:addr} (!ptr_v_1(type_c2ats_GtkToolButton, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_tool_button_get_type: () -> type_c2ats_GType = "mac#gtk_tool_button_get_type"
fun fun_c2ats_gtk_tool_button_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkToolItem, l3) | ptr l3) = "mac#gtk_tool_button_new"
fun fun_c2ats_gtk_tool_button_new_from_stock: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkToolItem, l2) | ptr l2) = "mac#gtk_tool_button_new_from_stock"
fun fun_c2ats_gtk_tool_button_set_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolButton, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tool_button_set_label"
fun fun_c2ats_gtk_tool_button_get_label: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_tool_button_get_label"
fun fun_c2ats_gtk_tool_button_set_use_underline: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tool_button_set_use_underline"
fun fun_c2ats_gtk_tool_button_get_use_underline: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tool_button_get_use_underline"
fun fun_c2ats_gtk_tool_button_set_stock_id: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolButton, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tool_button_set_stock_id"
fun fun_c2ats_gtk_tool_button_get_stock_id: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_tool_button_get_stock_id"
fun fun_c2ats_gtk_tool_button_set_icon_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolButton, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tool_button_set_icon_name"
fun fun_c2ats_gtk_tool_button_get_icon_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_tool_button_get_icon_name"
fun fun_c2ats_gtk_tool_button_set_icon_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolButton, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tool_button_set_icon_widget"
fun fun_c2ats_gtk_tool_button_get_icon_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_tool_button_get_icon_widget"
fun fun_c2ats_gtk_tool_button_set_label_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolButton, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tool_button_set_label_widget"
fun fun_c2ats_gtk_tool_button_get_label_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_tool_button_get_label_widget"
fun fun_c2ats__gtk_tool_button_get_button: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#_gtk_tool_button_get_button"
// File: /usr/include/gtk-3.0/gtk/gtkmenutoolbutton.h
abst@ype struct_c2ats__GtkMenuToolButtonClass // FIXME! Forward declaration.
typedef type_c2ats_GtkMenuToolButtonClass = struct_c2ats__GtkMenuToolButtonClass
abst@ype struct_c2ats__GtkMenuToolButton // FIXME! Forward declaration.
typedef type_c2ats_GtkMenuToolButton = struct_c2ats__GtkMenuToolButton
abst@ype struct_c2ats__GtkMenuToolButtonPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkMenuToolButtonPrivate = struct_c2ats__GtkMenuToolButtonPrivate
typedef struct_c2ats__GtkMenuToolButton = $extype_struct"struct _GtkMenuToolButton" of {
  parent = type_c2ats_GtkToolButton,
  priv = ptr (* cPtr0(type_c2ats_GtkMenuToolButtonPrivate) *)
}
typedef struct_c2ats__GtkMenuToolButtonClass = $extype_struct"struct _GtkMenuToolButtonClass" of {
  parent_class = type_c2ats_GtkToolButtonClass,
  show_menu = {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuToolButton, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_menu_tool_button_get_type: () -> type_c2ats_GType = "mac#gtk_menu_tool_button_get_type"
fun fun_c2ats_gtk_menu_tool_button_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkToolItem, l3) | ptr l3) = "mac#gtk_menu_tool_button_new"
fun fun_c2ats_gtk_menu_tool_button_new_from_stock: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkToolItem, l2) | ptr l2) = "mac#gtk_menu_tool_button_new_from_stock"
fun fun_c2ats_gtk_menu_tool_button_set_menu: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuToolButton, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_tool_button_set_menu"
fun fun_c2ats_gtk_menu_tool_button_get_menu: {l1:addr} (!ptr_v_1(type_c2ats_GtkMenuToolButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_menu_tool_button_get_menu"
fun fun_c2ats_gtk_menu_tool_button_set_arrow_tooltip_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuToolButton, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_tool_button_set_arrow_tooltip_text"
fun fun_c2ats_gtk_menu_tool_button_set_arrow_tooltip_markup: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMenuToolButton, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_menu_tool_button_set_arrow_tooltip_markup"
// File: /usr/include/gtk-3.0/gtk/gtkmessagedialog.h
abst@ype struct_c2ats__GtkMessageDialog // FIXME! Forward declaration.
typedef type_c2ats_GtkMessageDialog = struct_c2ats__GtkMessageDialog
abst@ype struct_c2ats__GtkMessageDialogPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkMessageDialogPrivate = struct_c2ats__GtkMessageDialogPrivate
abst@ype struct_c2ats__GtkMessageDialogClass // FIXME! Forward declaration.
typedef type_c2ats_GtkMessageDialogClass = struct_c2ats__GtkMessageDialogClass
typedef struct_c2ats__GtkMessageDialog = $extype_struct"struct _GtkMessageDialog" of {
  parent_instance = type_c2ats_GtkDialog,
  priv = ptr (* cPtr0(type_c2ats_GtkMessageDialogPrivate) *)
}
typedef struct_c2ats__GtkMessageDialogClass = $extype_struct"struct _GtkMessageDialogClass" of {
  parent_class = type_c2ats_GtkDialogClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
typedef type_c2ats_GtkButtonsType = int
#define enum_c2ats_GTK_BUTTONS_NONE 0
#define enum_c2ats_GTK_BUTTONS_OK 1
#define enum_c2ats_GTK_BUTTONS_CLOSE 2
#define enum_c2ats_GTK_BUTTONS_CANCEL 3
#define enum_c2ats_GTK_BUTTONS_YES_NO 4
#define enum_c2ats_GTK_BUTTONS_OK_CANCEL 5
fun fun_c2ats_gtk_message_dialog_get_type: () -> type_c2ats_GType = "mac#gtk_message_dialog_get_type"
fun fun_c2ats_gtk_message_dialog_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GtkDialogFlags, type_c2ats_GtkMessageType, type_c2ats_GtkButtonsType, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_message_dialog_new"
fun fun_c2ats_gtk_message_dialog_new_with_markup: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GtkDialogFlags, type_c2ats_GtkMessageType, type_c2ats_GtkButtonsType, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_message_dialog_new_with_markup"
fun fun_c2ats_gtk_message_dialog_set_image: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMessageDialog, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_message_dialog_set_image"
fun fun_c2ats_gtk_message_dialog_get_image: {l1:addr} (!ptr_v_1(type_c2ats_GtkMessageDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_message_dialog_get_image"
fun fun_c2ats_gtk_message_dialog_set_markup: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMessageDialog, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_message_dialog_set_markup"
fun fun_c2ats_gtk_message_dialog_format_secondary_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMessageDialog, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_message_dialog_format_secondary_text"
fun fun_c2ats_gtk_message_dialog_format_secondary_markup: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMessageDialog, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_message_dialog_format_secondary_markup"
fun fun_c2ats_gtk_message_dialog_get_message_area: {l1:addr} (!ptr_v_1(type_c2ats_GtkMessageDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_message_dialog_get_message_area"
// File: /usr/include/gtk-3.0/gtk/gtkmodelbutton.h
abst@ype struct_c2ats__GtkModelButton // FIXME! Forward declaration.
typedef type_c2ats_GtkModelButton = struct_c2ats__GtkModelButton
typedef type_c2ats_GtkButtonRole = int
#define enum_c2ats_GTK_BUTTON_ROLE_NORMAL 0
#define enum_c2ats_GTK_BUTTON_ROLE_CHECK 1
#define enum_c2ats_GTK_BUTTON_ROLE_RADIO 2
fun fun_c2ats_gtk_model_button_get_type: () -> type_c2ats_GType = "mac#gtk_model_button_get_type"
fun fun_c2ats_gtk_model_button_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_model_button_new"
// File: /usr/include/gtk-3.0/gtk/gtkmodules.h
typedef type_c2ats_GtkModuleInitFunc = {l1,l2,l2_1,l2_2:addr} (!ptr_v_1(type_c2ats_gint, l1), !ptr_v_3(type_c2ats_gchar, l2, l2_1, l2_2) | ptr l1, ptr l2) -> void
typedef type_c2ats_GtkModuleDisplayInitFunc = {l1:addr} (!ptr_v_1(type_c2ats_GdkDisplay, l1) | ptr l1) -> void
// File: /usr/include/gtk-3.0/gtk/gtkmountoperation.h
abst@ype struct_c2ats__GtkMountOperation // FIXME! Forward declaration.
typedef type_c2ats_GtkMountOperation = struct_c2ats__GtkMountOperation
abst@ype struct_c2ats__GtkMountOperationClass // FIXME! Forward declaration.
typedef type_c2ats_GtkMountOperationClass = struct_c2ats__GtkMountOperationClass
abst@ype struct_c2ats__GtkMountOperationPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkMountOperationPrivate = struct_c2ats__GtkMountOperationPrivate
typedef struct_c2ats__GtkMountOperation = $extype_struct"struct _GtkMountOperation" of {
  parent_instance = type_c2ats_GMountOperation,
  priv = ptr (* cPtr0(type_c2ats_GtkMountOperationPrivate) *)
}
typedef struct_c2ats__GtkMountOperationClass = $extype_struct"struct _GtkMountOperationClass" of {
  parent_class = type_c2ats_GMountOperationClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_mount_operation_get_type: () -> type_c2ats_GType = "mac#gtk_mount_operation_get_type"
fun fun_c2ats_gtk_mount_operation_new: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMountOperation, l2) | ptr l2) = "mac#gtk_mount_operation_new"
fun fun_c2ats_gtk_mount_operation_is_showing: {l1:addr} (!ptr_v_1(type_c2ats_GtkMountOperation, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_mount_operation_is_showing"
fun fun_c2ats_gtk_mount_operation_set_parent: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMountOperation, l1), !ptr_v_1(type_c2ats_GtkWindow, l2) | ptr l1, ptr l2) -> void = "mac#gtk_mount_operation_set_parent"
fun fun_c2ats_gtk_mount_operation_get_parent: {l1:addr} (!ptr_v_1(type_c2ats_GtkMountOperation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWindow, l2) | ptr l2) = "mac#gtk_mount_operation_get_parent"
fun fun_c2ats_gtk_mount_operation_set_screen: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkMountOperation, l1), !ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l1, ptr l2) -> void = "mac#gtk_mount_operation_set_screen"
fun fun_c2ats_gtk_mount_operation_get_screen: {l1:addr} (!ptr_v_1(type_c2ats_GtkMountOperation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l2) = "mac#gtk_mount_operation_get_screen"
// File: /usr/include/gtk-3.0/gtk/gtknotebook.h
typedef type_c2ats_GtkNotebookTab = int
#define enum_c2ats_GTK_NOTEBOOK_TAB_FIRST 0
#define enum_c2ats_GTK_NOTEBOOK_TAB_LAST 1
abst@ype struct_c2ats__GtkNotebook // FIXME! Forward declaration.
typedef type_c2ats_GtkNotebook = struct_c2ats__GtkNotebook
abst@ype struct_c2ats__GtkNotebookPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkNotebookPrivate = struct_c2ats__GtkNotebookPrivate
abst@ype struct_c2ats__GtkNotebookClass // FIXME! Forward declaration.
typedef type_c2ats_GtkNotebookClass = struct_c2ats__GtkNotebookClass
typedef struct_c2ats__GtkNotebook = $extype_struct"struct _GtkNotebook" of {
  container = type_c2ats_GtkContainer,
  priv = ptr (* cPtr0(type_c2ats_GtkNotebookPrivate) *)
}
typedef struct_c2ats__GtkNotebookClass = $extype_struct"struct _GtkNotebookClass" of {
  parent_class = type_c2ats_GtkContainerClass,
  switch_page = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_guint) -> void,
  select_page = {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1, type_c2ats_gboolean) -> type_c2ats_gboolean,
  focus_tab = {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1, type_c2ats_GtkNotebookTab) -> type_c2ats_gboolean,
  change_current_page = {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean,
  move_focus_out = {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1, type_c2ats_GtkDirectionType) -> void,
  reorder_tab = {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1, type_c2ats_GtkDirectionType, type_c2ats_gboolean) -> type_c2ats_gboolean,
  insert_page = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_GtkWidget, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gint) -> type_c2ats_gint,
  create_window = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> [l3:addr] (ptr_v_1(type_c2ats_GtkNotebook, l3) | ptr l3),
  page_reordered = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_guint) -> void,
  page_removed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_guint) -> void,
  page_added = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_guint) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void,
  _gtk_reserved6 = () -> void,
  _gtk_reserved7 = () -> void,
  _gtk_reserved8 = () -> void
}
fun fun_c2ats_gtk_notebook_get_type: () -> type_c2ats_GType = "mac#gtk_notebook_get_type"
fun fun_c2ats_gtk_notebook_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_notebook_new"
fun fun_c2ats_gtk_notebook_append_page: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gint = "mac#gtk_notebook_append_page"
fun fun_c2ats_gtk_notebook_append_page_menu: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_GtkWidget, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gint = "mac#gtk_notebook_append_page_menu"
fun fun_c2ats_gtk_notebook_prepend_page: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gint = "mac#gtk_notebook_prepend_page"
fun fun_c2ats_gtk_notebook_prepend_page_menu: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_GtkWidget, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gint = "mac#gtk_notebook_prepend_page_menu"
fun fun_c2ats_gtk_notebook_insert_page: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint) -> type_c2ats_gint = "mac#gtk_notebook_insert_page"
fun fun_c2ats_gtk_notebook_insert_page_menu: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_GtkWidget, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gint) -> type_c2ats_gint = "mac#gtk_notebook_insert_page_menu"
fun fun_c2ats_gtk_notebook_remove_page: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_notebook_remove_page"
fun fun_c2ats_gtk_notebook_set_group_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_notebook_set_group_name"
fun fun_c2ats_gtk_notebook_get_group_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_notebook_get_group_name"
fun fun_c2ats_gtk_notebook_get_current_page: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_notebook_get_current_page"
fun fun_c2ats_gtk_notebook_get_nth_page: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_notebook_get_nth_page"
fun fun_c2ats_gtk_notebook_get_n_pages: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_notebook_get_n_pages"
fun fun_c2ats_gtk_notebook_page_num: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gtk_notebook_page_num"
fun fun_c2ats_gtk_notebook_set_current_page: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_notebook_set_current_page"
fun fun_c2ats_gtk_notebook_next_page: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1) -> void = "mac#gtk_notebook_next_page"
fun fun_c2ats_gtk_notebook_prev_page: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1) -> void = "mac#gtk_notebook_prev_page"
fun fun_c2ats_gtk_notebook_set_show_border: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_notebook_set_show_border"
fun fun_c2ats_gtk_notebook_get_show_border: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_notebook_get_show_border"
fun fun_c2ats_gtk_notebook_set_show_tabs: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_notebook_set_show_tabs"
fun fun_c2ats_gtk_notebook_get_show_tabs: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_notebook_get_show_tabs"
fun fun_c2ats_gtk_notebook_set_tab_pos: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1, type_c2ats_GtkPositionType) -> void = "mac#gtk_notebook_set_tab_pos"
fun fun_c2ats_gtk_notebook_get_tab_pos: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1) -> type_c2ats_GtkPositionType = "mac#gtk_notebook_get_tab_pos"
fun fun_c2ats_gtk_notebook_set_scrollable: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_notebook_set_scrollable"
fun fun_c2ats_gtk_notebook_get_scrollable: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_notebook_get_scrollable"
fun fun_c2ats_gtk_notebook_get_tab_hborder: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1) -> type_c2ats_guint16 = "mac#gtk_notebook_get_tab_hborder"
fun fun_c2ats_gtk_notebook_get_tab_vborder: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1) -> type_c2ats_guint16 = "mac#gtk_notebook_get_tab_vborder"
fun fun_c2ats_gtk_notebook_popup_enable: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1) -> void = "mac#gtk_notebook_popup_enable"
fun fun_c2ats_gtk_notebook_popup_disable: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1) -> void = "mac#gtk_notebook_popup_disable"
fun fun_c2ats_gtk_notebook_get_tab_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_notebook_get_tab_label"
fun fun_c2ats_gtk_notebook_set_tab_label: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_notebook_set_tab_label"
fun fun_c2ats_gtk_notebook_set_tab_label_text: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_notebook_set_tab_label_text"
fun fun_c2ats_gtk_notebook_get_tab_label_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#gtk_notebook_get_tab_label_text"
fun fun_c2ats_gtk_notebook_get_menu_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_notebook_get_menu_label"
fun fun_c2ats_gtk_notebook_set_menu_label: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_notebook_set_menu_label"
fun fun_c2ats_gtk_notebook_set_menu_label_text: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_notebook_set_menu_label_text"
fun fun_c2ats_gtk_notebook_get_menu_label_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#gtk_notebook_get_menu_label_text"
fun fun_c2ats_gtk_notebook_reorder_child: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_notebook_reorder_child"
fun fun_c2ats_gtk_notebook_get_tab_reorderable: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_notebook_get_tab_reorderable"
fun fun_c2ats_gtk_notebook_set_tab_reorderable: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gtk_notebook_set_tab_reorderable"
fun fun_c2ats_gtk_notebook_get_tab_detachable: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_notebook_get_tab_detachable"
fun fun_c2ats_gtk_notebook_set_tab_detachable: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gtk_notebook_set_tab_detachable"
fun fun_c2ats_gtk_notebook_detach_tab: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_notebook_detach_tab"
fun fun_c2ats_gtk_notebook_get_action_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1) | ptr l1, type_c2ats_GtkPackType) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_notebook_get_action_widget"
fun fun_c2ats_gtk_notebook_set_action_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNotebook, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_GtkPackType) -> void = "mac#gtk_notebook_set_action_widget"
// File: /usr/include/gtk-3.0/gtk/gtkoffscreenwindow.h
abst@ype struct_c2ats__GtkOffscreenWindow // FIXME! Forward declaration.
typedef type_c2ats_GtkOffscreenWindow = struct_c2ats__GtkOffscreenWindow
abst@ype struct_c2ats__GtkOffscreenWindowClass // FIXME! Forward declaration.
typedef type_c2ats_GtkOffscreenWindowClass = struct_c2ats__GtkOffscreenWindowClass
typedef struct_c2ats__GtkOffscreenWindow = $extype_struct"struct _GtkOffscreenWindow" of {
  parent_object = type_c2ats_GtkWindow
}
typedef struct_c2ats__GtkOffscreenWindowClass = $extype_struct"struct _GtkOffscreenWindowClass" of {
  parent_class = type_c2ats_GtkWindowClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_offscreen_window_get_type: () -> type_c2ats_GType = "mac#gtk_offscreen_window_get_type"
fun fun_c2ats_gtk_offscreen_window_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_offscreen_window_new"
fun fun_c2ats_gtk_offscreen_window_get_surface: {l1:addr} (!ptr_v_1(type_c2ats_GtkOffscreenWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_surface_t, l2) | ptr l2) = "mac#gtk_offscreen_window_get_surface"
fun fun_c2ats_gtk_offscreen_window_get_pixbuf: {l1:addr} (!ptr_v_1(type_c2ats_GtkOffscreenWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gtk_offscreen_window_get_pixbuf"
// File: /usr/include/gtk-3.0/gtk/gtkorientable.h
abst@ype struct_c2ats__GtkOrientable // FIXME! Forward declaration.
typedef type_c2ats_GtkOrientable = struct_c2ats__GtkOrientable
abst@ype struct_c2ats__GtkOrientableIface // FIXME! Forward declaration.
typedef type_c2ats_GtkOrientableIface = struct_c2ats__GtkOrientableIface
typedef struct_c2ats__GtkOrientableIface = $extype_struct"struct _GtkOrientableIface" of {
  base_iface = type_c2ats_GTypeInterface
}
fun fun_c2ats_gtk_orientable_get_type: () -> type_c2ats_GType = "mac#gtk_orientable_get_type"
fun fun_c2ats_gtk_orientable_set_orientation: {l1:addr} (!ptr_v_1(type_c2ats_GtkOrientable, l1) | ptr l1, type_c2ats_GtkOrientation) -> void = "mac#gtk_orientable_set_orientation"
fun fun_c2ats_gtk_orientable_get_orientation: {l1:addr} (!ptr_v_1(type_c2ats_GtkOrientable, l1) | ptr l1) -> type_c2ats_GtkOrientation = "mac#gtk_orientable_get_orientation"
// File: /usr/include/gtk-3.0/gtk/gtkoverlay.h
abst@ype struct_c2ats__GtkOverlay // FIXME! Forward declaration.
typedef type_c2ats_GtkOverlay = struct_c2ats__GtkOverlay
abst@ype struct_c2ats__GtkOverlayClass // FIXME! Forward declaration.
typedef type_c2ats_GtkOverlayClass = struct_c2ats__GtkOverlayClass
abst@ype struct_c2ats__GtkOverlayPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkOverlayPrivate = struct_c2ats__GtkOverlayPrivate
typedef struct_c2ats__GtkOverlay = $extype_struct"struct _GtkOverlay" of {
  parent = type_c2ats_GtkBin,
  priv = ptr (* cPtr0(type_c2ats_GtkOverlayPrivate) *)
}
typedef struct_c2ats__GtkOverlayClass = $extype_struct"struct _GtkOverlayClass" of {
  parent_class = type_c2ats_GtkBinClass,
  get_child_position = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkOverlay, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GtkAllocation, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void,
  _gtk_reserved6 = () -> void,
  _gtk_reserved7 = () -> void,
  _gtk_reserved8 = () -> void
}
fun fun_c2ats_gtk_overlay_get_type: () -> type_c2ats_GType = "mac#gtk_overlay_get_type"
fun fun_c2ats_gtk_overlay_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_overlay_new"
fun fun_c2ats_gtk_overlay_add_overlay: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkOverlay, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_overlay_add_overlay"
fun fun_c2ats_gtk_overlay_reorder_overlay: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkOverlay, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_overlay_reorder_overlay"
fun fun_c2ats_gtk_overlay_get_overlay_pass_through: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkOverlay, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_overlay_get_overlay_pass_through"
fun fun_c2ats_gtk_overlay_set_overlay_pass_through: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkOverlay, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gtk_overlay_set_overlay_pass_through"
// File: /usr/include/gtk-3.0/gtk/gtkpadcontroller.h
abst@ype struct_c2ats__GtkPadController // FIXME! Forward declaration.
typedef type_c2ats_GtkPadController = struct_c2ats__GtkPadController
abst@ype struct_c2ats__GtkPadControllerClass // FIXME! Forward declaration.
typedef type_c2ats_GtkPadControllerClass = struct_c2ats__GtkPadControllerClass
abst@ype struct_c2ats__GtkPadActionEntry // FIXME! Forward declaration.
typedef type_c2ats_GtkPadActionEntry = struct_c2ats__GtkPadActionEntry
typedef type_c2ats_GtkPadActionType = int
#define enum_c2ats_GTK_PAD_ACTION_BUTTON 0
#define enum_c2ats_GTK_PAD_ACTION_RING 1
#define enum_c2ats_GTK_PAD_ACTION_STRIP 2
typedef struct_c2ats__GtkPadActionEntry = $extype_struct"struct _GtkPadActionEntry" of {
  type = type_c2ats_GtkPadActionType,
  index = type_c2ats_gint,
  mode = type_c2ats_gint,
  label = ptr (* cPtr0(type_c2ats_gchar) *),
  action_name = ptr (* cPtr0(type_c2ats_gchar) *)
}
fun fun_c2ats_gtk_pad_controller_get_type: () -> type_c2ats_GType = "mac#gtk_pad_controller_get_type"
fun fun_c2ats_gtk_pad_controller_new: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GActionGroup, l2), !ptr_v_1(type_c2ats_GdkDevice, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GtkPadController, l4) | ptr l4) = "mac#gtk_pad_controller_new"
fun fun_c2ats_gtk_pad_controller_set_action_entries: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPadController, l1), !ptr_v_1(type_c2ats_GtkPadActionEntry, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_pad_controller_set_action_entries"
fun fun_c2ats_gtk_pad_controller_set_action: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkPadController, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, type_c2ats_GtkPadActionType, type_c2ats_gint, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#gtk_pad_controller_set_action"
// File: /usr/include/gtk-3.0/gtk/gtkpapersize.h
abst@ype struct_c2ats__GtkPaperSize // FIXME! Forward declaration.
typedef type_c2ats_GtkPaperSize = struct_c2ats__GtkPaperSize
fun fun_c2ats_gtk_paper_size_get_type: () -> type_c2ats_GType = "mac#gtk_paper_size_get_type"
fun fun_c2ats_gtk_paper_size_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkPaperSize, l2) | ptr l2) = "mac#gtk_paper_size_new"
fun fun_c2ats_gtk_paper_size_new_from_ppd: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble) -> [l3:addr] (ptr_v_1(type_c2ats_GtkPaperSize, l3) | ptr l3) = "mac#gtk_paper_size_new_from_ppd"
fun fun_c2ats_gtk_paper_size_new_from_ipp: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gdouble, type_c2ats_gdouble) -> [l2:addr] (ptr_v_1(type_c2ats_GtkPaperSize, l2) | ptr l2) = "mac#gtk_paper_size_new_from_ipp"
fun fun_c2ats_gtk_paper_size_new_custom: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_GtkUnit) -> [l3:addr] (ptr_v_1(type_c2ats_GtkPaperSize, l3) | ptr l3) = "mac#gtk_paper_size_new_custom"
fun fun_c2ats_gtk_paper_size_copy: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaperSize, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkPaperSize, l2) | ptr l2) = "mac#gtk_paper_size_copy"
fun fun_c2ats_gtk_paper_size_free: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaperSize, l1) | ptr l1) -> void = "mac#gtk_paper_size_free"
fun fun_c2ats_gtk_paper_size_is_equal: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPaperSize, l1), !ptr_v_1(type_c2ats_GtkPaperSize, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_paper_size_is_equal"
fun fun_c2ats_gtk_paper_size_get_paper_sizes: (type_c2ats_gboolean) -> [l1:addr] (ptr_v_1(type_c2ats_GList, l1) | ptr l1) = "mac#gtk_paper_size_get_paper_sizes"
fun fun_c2ats_gtk_paper_size_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaperSize, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_paper_size_get_name"
fun fun_c2ats_gtk_paper_size_get_display_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaperSize, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_paper_size_get_display_name"
fun fun_c2ats_gtk_paper_size_get_ppd_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaperSize, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_paper_size_get_ppd_name"
fun fun_c2ats_gtk_paper_size_get_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaperSize, l1) | ptr l1, type_c2ats_GtkUnit) -> type_c2ats_gdouble = "mac#gtk_paper_size_get_width"
fun fun_c2ats_gtk_paper_size_get_height: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaperSize, l1) | ptr l1, type_c2ats_GtkUnit) -> type_c2ats_gdouble = "mac#gtk_paper_size_get_height"
fun fun_c2ats_gtk_paper_size_is_custom: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaperSize, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_paper_size_is_custom"
fun fun_c2ats_gtk_paper_size_is_ipp: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaperSize, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_paper_size_is_ipp"
fun fun_c2ats_gtk_paper_size_set_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaperSize, l1) | ptr l1, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_GtkUnit) -> void = "mac#gtk_paper_size_set_size"
fun fun_c2ats_gtk_paper_size_get_default_top_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaperSize, l1) | ptr l1, type_c2ats_GtkUnit) -> type_c2ats_gdouble = "mac#gtk_paper_size_get_default_top_margin"
fun fun_c2ats_gtk_paper_size_get_default_bottom_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaperSize, l1) | ptr l1, type_c2ats_GtkUnit) -> type_c2ats_gdouble = "mac#gtk_paper_size_get_default_bottom_margin"
fun fun_c2ats_gtk_paper_size_get_default_left_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaperSize, l1) | ptr l1, type_c2ats_GtkUnit) -> type_c2ats_gdouble = "mac#gtk_paper_size_get_default_left_margin"
fun fun_c2ats_gtk_paper_size_get_default_right_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaperSize, l1) | ptr l1, type_c2ats_GtkUnit) -> type_c2ats_gdouble = "mac#gtk_paper_size_get_default_right_margin"
fun fun_c2ats_gtk_paper_size_get_default: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#gtk_paper_size_get_default"
fun fun_c2ats_gtk_paper_size_new_from_key_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GtkPaperSize, l4) | ptr l4) = "mac#gtk_paper_size_new_from_key_file"
fun fun_c2ats_gtk_paper_size_to_key_file: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkPaperSize, l1), !ptr_v_1(type_c2ats_GKeyFile, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_paper_size_to_key_file"
fun fun_c2ats_gtk_paper_size_new_from_gvariant: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkPaperSize, l2) | ptr l2) = "mac#gtk_paper_size_new_from_gvariant"
fun fun_c2ats_gtk_paper_size_to_gvariant: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaperSize, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#gtk_paper_size_to_gvariant"
// File: /usr/include/gtk-3.0/gtk/gtkpagesetup.h
abst@ype struct_c2ats__GtkPageSetup // FIXME! Forward declaration.
typedef type_c2ats_GtkPageSetup = struct_c2ats__GtkPageSetup
fun fun_c2ats_gtk_page_setup_get_type: () -> type_c2ats_GType = "mac#gtk_page_setup_get_type"
fun fun_c2ats_gtk_page_setup_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkPageSetup, l1) | ptr l1) = "mac#gtk_page_setup_new"
fun fun_c2ats_gtk_page_setup_copy: {l1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkPageSetup, l2) | ptr l2) = "mac#gtk_page_setup_copy"
fun fun_c2ats_gtk_page_setup_get_orientation: {l1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1) | ptr l1) -> type_c2ats_GtkPageOrientation = "mac#gtk_page_setup_get_orientation"
fun fun_c2ats_gtk_page_setup_set_orientation: {l1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1) | ptr l1, type_c2ats_GtkPageOrientation) -> void = "mac#gtk_page_setup_set_orientation"
fun fun_c2ats_gtk_page_setup_get_paper_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkPaperSize, l2) | ptr l2) = "mac#gtk_page_setup_get_paper_size"
fun fun_c2ats_gtk_page_setup_set_paper_size: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1), !ptr_v_1(type_c2ats_GtkPaperSize, l2) | ptr l1, ptr l2) -> void = "mac#gtk_page_setup_set_paper_size"
fun fun_c2ats_gtk_page_setup_get_top_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1) | ptr l1, type_c2ats_GtkUnit) -> type_c2ats_gdouble = "mac#gtk_page_setup_get_top_margin"
fun fun_c2ats_gtk_page_setup_set_top_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1) | ptr l1, type_c2ats_gdouble, type_c2ats_GtkUnit) -> void = "mac#gtk_page_setup_set_top_margin"
fun fun_c2ats_gtk_page_setup_get_bottom_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1) | ptr l1, type_c2ats_GtkUnit) -> type_c2ats_gdouble = "mac#gtk_page_setup_get_bottom_margin"
fun fun_c2ats_gtk_page_setup_set_bottom_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1) | ptr l1, type_c2ats_gdouble, type_c2ats_GtkUnit) -> void = "mac#gtk_page_setup_set_bottom_margin"
fun fun_c2ats_gtk_page_setup_get_left_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1) | ptr l1, type_c2ats_GtkUnit) -> type_c2ats_gdouble = "mac#gtk_page_setup_get_left_margin"
fun fun_c2ats_gtk_page_setup_set_left_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1) | ptr l1, type_c2ats_gdouble, type_c2ats_GtkUnit) -> void = "mac#gtk_page_setup_set_left_margin"
fun fun_c2ats_gtk_page_setup_get_right_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1) | ptr l1, type_c2ats_GtkUnit) -> type_c2ats_gdouble = "mac#gtk_page_setup_get_right_margin"
fun fun_c2ats_gtk_page_setup_set_right_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1) | ptr l1, type_c2ats_gdouble, type_c2ats_GtkUnit) -> void = "mac#gtk_page_setup_set_right_margin"
fun fun_c2ats_gtk_page_setup_set_paper_size_and_default_margins: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1), !ptr_v_1(type_c2ats_GtkPaperSize, l2) | ptr l1, ptr l2) -> void = "mac#gtk_page_setup_set_paper_size_and_default_margins"
fun fun_c2ats_gtk_page_setup_get_paper_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1) | ptr l1, type_c2ats_GtkUnit) -> type_c2ats_gdouble = "mac#gtk_page_setup_get_paper_width"
fun fun_c2ats_gtk_page_setup_get_paper_height: {l1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1) | ptr l1, type_c2ats_GtkUnit) -> type_c2ats_gdouble = "mac#gtk_page_setup_get_paper_height"
fun fun_c2ats_gtk_page_setup_get_page_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1) | ptr l1, type_c2ats_GtkUnit) -> type_c2ats_gdouble = "mac#gtk_page_setup_get_page_width"
fun fun_c2ats_gtk_page_setup_get_page_height: {l1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1) | ptr l1, type_c2ats_GtkUnit) -> type_c2ats_gdouble = "mac#gtk_page_setup_get_page_height"
fun fun_c2ats_gtk_page_setup_new_from_file: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkPageSetup, l3) | ptr l3) = "mac#gtk_page_setup_new_from_file"
fun fun_c2ats_gtk_page_setup_load_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_page_setup_load_file"
fun fun_c2ats_gtk_page_setup_to_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_page_setup_to_file"
fun fun_c2ats_gtk_page_setup_new_from_key_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GtkPageSetup, l4) | ptr l4) = "mac#gtk_page_setup_new_from_key_file"
fun fun_c2ats_gtk_page_setup_load_key_file: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1), !ptr_v_1(type_c2ats_GKeyFile, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#gtk_page_setup_load_key_file"
fun fun_c2ats_gtk_page_setup_to_key_file: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1), !ptr_v_1(type_c2ats_GKeyFile, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_page_setup_to_key_file"
fun fun_c2ats_gtk_page_setup_to_gvariant: {l1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#gtk_page_setup_to_gvariant"
fun fun_c2ats_gtk_page_setup_new_from_gvariant: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkPageSetup, l2) | ptr l2) = "mac#gtk_page_setup_new_from_gvariant"
// File: /usr/include/gtk-3.0/gtk/gtkpaned.h
abst@ype struct_c2ats__GtkPaned // FIXME! Forward declaration.
typedef type_c2ats_GtkPaned = struct_c2ats__GtkPaned
abst@ype struct_c2ats__GtkPanedClass // FIXME! Forward declaration.
typedef type_c2ats_GtkPanedClass = struct_c2ats__GtkPanedClass
abst@ype struct_c2ats__GtkPanedPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkPanedPrivate = struct_c2ats__GtkPanedPrivate
typedef struct_c2ats__GtkPaned = $extype_struct"struct _GtkPaned" of {
  container = type_c2ats_GtkContainer,
  priv = ptr (* cPtr0(type_c2ats_GtkPanedPrivate) *)
}
typedef struct_c2ats__GtkPanedClass = $extype_struct"struct _GtkPanedClass" of {
  parent_class = type_c2ats_GtkContainerClass,
  cycle_child_focus = {l1:addr} (!ptr_v_1(type_c2ats_GtkPaned, l1) | ptr l1, type_c2ats_gboolean) -> type_c2ats_gboolean,
  toggle_handle_focus = {l1:addr} (!ptr_v_1(type_c2ats_GtkPaned, l1) | ptr l1) -> type_c2ats_gboolean,
  move_handle = {l1:addr} (!ptr_v_1(type_c2ats_GtkPaned, l1) | ptr l1, type_c2ats_GtkScrollType) -> type_c2ats_gboolean,
  cycle_handle_focus = {l1:addr} (!ptr_v_1(type_c2ats_GtkPaned, l1) | ptr l1, type_c2ats_gboolean) -> type_c2ats_gboolean,
  accept_position = {l1:addr} (!ptr_v_1(type_c2ats_GtkPaned, l1) | ptr l1) -> type_c2ats_gboolean,
  cancel_position = {l1:addr} (!ptr_v_1(type_c2ats_GtkPaned, l1) | ptr l1) -> type_c2ats_gboolean,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_paned_get_type: () -> type_c2ats_GType = "mac#gtk_paned_get_type"
fun fun_c2ats_gtk_paned_new: (type_c2ats_GtkOrientation) -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_paned_new"
fun fun_c2ats_gtk_paned_add1: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPaned, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_paned_add1"
fun fun_c2ats_gtk_paned_add2: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPaned, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_paned_add2"
fun fun_c2ats_gtk_paned_pack1: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPaned, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_gboolean) -> void = "mac#gtk_paned_pack1"
fun fun_c2ats_gtk_paned_pack2: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPaned, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_gboolean) -> void = "mac#gtk_paned_pack2"
fun fun_c2ats_gtk_paned_get_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaned, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_paned_get_position"
fun fun_c2ats_gtk_paned_set_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaned, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_paned_set_position"
fun fun_c2ats_gtk_paned_get_child1: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaned, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_paned_get_child1"
fun fun_c2ats_gtk_paned_get_child2: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaned, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_paned_get_child2"
fun fun_c2ats_gtk_paned_get_handle_window: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaned, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gtk_paned_get_handle_window"
fun fun_c2ats_gtk_paned_set_wide_handle: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaned, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_paned_set_wide_handle"
fun fun_c2ats_gtk_paned_get_wide_handle: {l1:addr} (!ptr_v_1(type_c2ats_GtkPaned, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_paned_get_wide_handle"
// File: /usr/include/gtk-3.0/gtk/gtkplacessidebar.h
abst@ype struct_c2ats__GtkPlacesSidebar // FIXME! Forward declaration.
typedef type_c2ats_GtkPlacesSidebar = struct_c2ats__GtkPlacesSidebar
abst@ype struct_c2ats__GtkPlacesSidebarClass // FIXME! Forward declaration.
typedef type_c2ats_GtkPlacesSidebarClass = struct_c2ats__GtkPlacesSidebarClass
typedef type_c2ats_GtkPlacesOpenFlags = int
#define enum_c2ats_GTK_PLACES_OPEN_NORMAL 1 << 0
#define enum_c2ats_GTK_PLACES_OPEN_NEW_TAB 1 << 1
#define enum_c2ats_GTK_PLACES_OPEN_NEW_WINDOW 1 << 2
fun fun_c2ats_gtk_places_sidebar_get_type: () -> type_c2ats_GType = "mac#gtk_places_sidebar_get_type"
fun fun_c2ats_gtk_places_sidebar_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_places_sidebar_new"
fun fun_c2ats_gtk_places_sidebar_get_open_flags: {l1:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1) | ptr l1) -> type_c2ats_GtkPlacesOpenFlags = "mac#gtk_places_sidebar_get_open_flags"
fun fun_c2ats_gtk_places_sidebar_set_open_flags: {l1:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1) | ptr l1, type_c2ats_GtkPlacesOpenFlags) -> void = "mac#gtk_places_sidebar_set_open_flags"
fun fun_c2ats_gtk_places_sidebar_get_location: {l1:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2) = "mac#gtk_places_sidebar_get_location"
fun fun_c2ats_gtk_places_sidebar_set_location: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1), !ptr_v_1(type_c2ats_GFile, l2) | ptr l1, ptr l2) -> void = "mac#gtk_places_sidebar_set_location"
fun fun_c2ats_gtk_places_sidebar_get_show_recent: {l1:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_places_sidebar_get_show_recent"
fun fun_c2ats_gtk_places_sidebar_set_show_recent: {l1:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_places_sidebar_set_show_recent"
fun fun_c2ats_gtk_places_sidebar_get_show_desktop: {l1:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_places_sidebar_get_show_desktop"
fun fun_c2ats_gtk_places_sidebar_set_show_desktop: {l1:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_places_sidebar_set_show_desktop"
fun fun_c2ats_gtk_places_sidebar_get_show_connect_to_server: {l1:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_places_sidebar_get_show_connect_to_server"
fun fun_c2ats_gtk_places_sidebar_set_show_connect_to_server: {l1:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_places_sidebar_set_show_connect_to_server"
fun fun_c2ats_gtk_places_sidebar_get_show_enter_location: {l1:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_places_sidebar_get_show_enter_location"
fun fun_c2ats_gtk_places_sidebar_set_show_enter_location: {l1:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_places_sidebar_set_show_enter_location"
fun fun_c2ats_gtk_places_sidebar_set_local_only: {l1:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_places_sidebar_set_local_only"
fun fun_c2ats_gtk_places_sidebar_get_local_only: {l1:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_places_sidebar_get_local_only"
fun fun_c2ats_gtk_places_sidebar_add_shortcut: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1), !ptr_v_1(type_c2ats_GFile, l2) | ptr l1, ptr l2) -> void = "mac#gtk_places_sidebar_add_shortcut"
fun fun_c2ats_gtk_places_sidebar_remove_shortcut: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1), !ptr_v_1(type_c2ats_GFile, l2) | ptr l1, ptr l2) -> void = "mac#gtk_places_sidebar_remove_shortcut"
fun fun_c2ats_gtk_places_sidebar_list_shortcuts: {l1:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_places_sidebar_list_shortcuts"
fun fun_c2ats_gtk_places_sidebar_get_nth_bookmark: {l1:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GFile, l2) | ptr l2) = "mac#gtk_places_sidebar_get_nth_bookmark"
fun fun_c2ats_gtk_places_sidebar_set_drop_targets_visible: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1), !ptr_v_1(type_c2ats_GdkDragContext, l2) | ptr l1, type_c2ats_gboolean, ptr l2) -> void = "mac#gtk_places_sidebar_set_drop_targets_visible"
fun fun_c2ats_gtk_places_sidebar_get_show_trash: {l1:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_places_sidebar_get_show_trash"
fun fun_c2ats_gtk_places_sidebar_set_show_trash: {l1:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_places_sidebar_set_show_trash"
fun fun_c2ats_gtk_places_sidebar_set_show_other_locations: {l1:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_places_sidebar_set_show_other_locations"
fun fun_c2ats_gtk_places_sidebar_get_show_other_locations: {l1:addr} (!ptr_v_1(type_c2ats_GtkPlacesSidebar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_places_sidebar_get_show_other_locations"
// File: /usr/include/gtk-3.0/gtk/gtkpopovermenu.h
abst@ype struct_c2ats__GtkPopoverMenu // FIXME! Forward declaration.
typedef type_c2ats_GtkPopoverMenu = struct_c2ats__GtkPopoverMenu
abst@ype struct_c2ats__GtkPopoverMenuClass // FIXME! Forward declaration.
typedef type_c2ats_GtkPopoverMenuClass = struct_c2ats__GtkPopoverMenuClass
typedef struct_c2ats__GtkPopoverMenuClass = $extype_struct"struct _GtkPopoverMenuClass" of {
  parent_class = type_c2ats_GtkPopoverClass,
  reserved = @[type_c2ats_gpointer][10]
}
fun fun_c2ats_gtk_popover_menu_get_type: () -> type_c2ats_GType = "mac#gtk_popover_menu_get_type"
fun fun_c2ats_gtk_popover_menu_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_popover_menu_new"
fun fun_c2ats_gtk_popover_menu_open_submenu: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPopoverMenu, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_popover_menu_open_submenu"
// File: /usr/include/gtk-3.0/gtk/gtkprintcontext.h
abst@ype struct_c2ats__GtkPrintContext // FIXME! Forward declaration.
typedef type_c2ats_GtkPrintContext = struct_c2ats__GtkPrintContext
fun fun_c2ats_gtk_print_context_get_type: () -> type_c2ats_GType = "mac#gtk_print_context_get_type"
fun fun_c2ats_gtk_print_context_get_cairo_context: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_t, l2) | ptr l2) = "mac#gtk_print_context_get_cairo_context"
fun fun_c2ats_gtk_print_context_get_page_setup: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkPageSetup, l2) | ptr l2) = "mac#gtk_print_context_get_page_setup"
fun fun_c2ats_gtk_print_context_get_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintContext, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_print_context_get_width"
fun fun_c2ats_gtk_print_context_get_height: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintContext, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_print_context_get_height"
fun fun_c2ats_gtk_print_context_get_dpi_x: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintContext, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_print_context_get_dpi_x"
fun fun_c2ats_gtk_print_context_get_dpi_y: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintContext, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_print_context_get_dpi_y"
fun fun_c2ats_gtk_print_context_get_hard_margins: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkPrintContext, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3), !ptr_v_1(type_c2ats_gdouble, l4), !ptr_v_1(type_c2ats_gdouble, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#gtk_print_context_get_hard_margins"
fun fun_c2ats_gtk_print_context_get_pango_fontmap: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontMap, l2) | ptr l2) = "mac#gtk_print_context_get_pango_fontmap"
fun fun_c2ats_gtk_print_context_create_pango_context: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoContext, l2) | ptr l2) = "mac#gtk_print_context_create_pango_context"
fun fun_c2ats_gtk_print_context_create_pango_layout: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayout, l2) | ptr l2) = "mac#gtk_print_context_create_pango_layout"
fun fun_c2ats_gtk_print_context_set_cairo_context: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintContext, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, double, double) -> void = "mac#gtk_print_context_set_cairo_context"
// File: /usr/include/gtk-3.0/gtk/gtkprintsettings.h
abst@ype struct_c2ats__GtkPrintSettings // FIXME! Forward declaration.
typedef type_c2ats_GtkPrintSettings = struct_c2ats__GtkPrintSettings
typedef type_c2ats_GtkPrintSettingsFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> void
abst@ype struct_c2ats__GtkPageRange // FIXME! Forward declaration.
typedef type_c2ats_GtkPageRange = struct_c2ats__GtkPageRange
typedef struct_c2ats__GtkPageRange = $extype_struct"struct _GtkPageRange" of {
  start = type_c2ats_gint
}
fun fun_c2ats_gtk_print_settings_get_type: () -> type_c2ats_GType = "mac#gtk_print_settings_get_type"
fun fun_c2ats_gtk_print_settings_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) = "mac#gtk_print_settings_new"
fun fun_c2ats_gtk_print_settings_copy: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkPrintSettings, l2) | ptr l2) = "mac#gtk_print_settings_copy"
fun fun_c2ats_gtk_print_settings_new_from_file: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkPrintSettings, l3) | ptr l3) = "mac#gtk_print_settings_new_from_file"
fun fun_c2ats_gtk_print_settings_load_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_print_settings_load_file"
fun fun_c2ats_gtk_print_settings_to_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_print_settings_to_file"
fun fun_c2ats_gtk_print_settings_new_from_key_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GKeyFile, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GtkPrintSettings, l4) | ptr l4) = "mac#gtk_print_settings_new_from_key_file"
fun fun_c2ats_gtk_print_settings_load_key_file: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_GKeyFile, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#gtk_print_settings_load_key_file"
fun fun_c2ats_gtk_print_settings_to_key_file: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_GKeyFile, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_print_settings_to_key_file"
fun fun_c2ats_gtk_print_settings_has_key: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_print_settings_has_key"
fun fun_c2ats_gtk_print_settings_get: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#gtk_print_settings_get"
fun fun_c2ats_gtk_print_settings_set: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_print_settings_set"
fun fun_c2ats_gtk_print_settings_unset: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_print_settings_unset"
fun fun_c2ats_gtk_print_settings_foreach: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_GtkPrintSettingsFunc, type_c2ats_gpointer) -> void = "mac#gtk_print_settings_foreach"
fun fun_c2ats_gtk_print_settings_get_bool: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_print_settings_get_bool"
fun fun_c2ats_gtk_print_settings_set_bool: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gtk_print_settings_set_bool"
fun fun_c2ats_gtk_print_settings_get_double: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gdouble = "mac#gtk_print_settings_get_double"
fun fun_c2ats_gtk_print_settings_get_double_with_default: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gdouble) -> type_c2ats_gdouble = "mac#gtk_print_settings_get_double_with_default"
fun fun_c2ats_gtk_print_settings_set_double: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gdouble) -> void = "mac#gtk_print_settings_set_double"
fun fun_c2ats_gtk_print_settings_get_length: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GtkUnit) -> type_c2ats_gdouble = "mac#gtk_print_settings_get_length"
fun fun_c2ats_gtk_print_settings_set_length: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_GtkUnit) -> void = "mac#gtk_print_settings_set_length"
fun fun_c2ats_gtk_print_settings_get_int: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gtk_print_settings_get_int"
fun fun_c2ats_gtk_print_settings_get_int_with_default: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint) -> type_c2ats_gint = "mac#gtk_print_settings_get_int_with_default"
fun fun_c2ats_gtk_print_settings_set_int: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_print_settings_set_int"
fun fun_c2ats_gtk_print_settings_get_printer: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_print_settings_get_printer"
fun fun_c2ats_gtk_print_settings_set_printer: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_print_settings_set_printer"
fun fun_c2ats_gtk_print_settings_get_orientation: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> type_c2ats_GtkPageOrientation = "mac#gtk_print_settings_get_orientation"
fun fun_c2ats_gtk_print_settings_set_orientation: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_GtkPageOrientation) -> void = "mac#gtk_print_settings_set_orientation"
fun fun_c2ats_gtk_print_settings_get_paper_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkPaperSize, l2) | ptr l2) = "mac#gtk_print_settings_get_paper_size"
fun fun_c2ats_gtk_print_settings_set_paper_size: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_GtkPaperSize, l2) | ptr l1, ptr l2) -> void = "mac#gtk_print_settings_set_paper_size"
fun fun_c2ats_gtk_print_settings_get_paper_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_GtkUnit) -> type_c2ats_gdouble = "mac#gtk_print_settings_get_paper_width"
fun fun_c2ats_gtk_print_settings_set_paper_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_gdouble, type_c2ats_GtkUnit) -> void = "mac#gtk_print_settings_set_paper_width"
fun fun_c2ats_gtk_print_settings_get_paper_height: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_GtkUnit) -> type_c2ats_gdouble = "mac#gtk_print_settings_get_paper_height"
fun fun_c2ats_gtk_print_settings_set_paper_height: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_gdouble, type_c2ats_GtkUnit) -> void = "mac#gtk_print_settings_set_paper_height"
fun fun_c2ats_gtk_print_settings_get_use_color: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_print_settings_get_use_color"
fun fun_c2ats_gtk_print_settings_set_use_color: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_print_settings_set_use_color"
fun fun_c2ats_gtk_print_settings_get_collate: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_print_settings_get_collate"
fun fun_c2ats_gtk_print_settings_set_collate: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_print_settings_set_collate"
fun fun_c2ats_gtk_print_settings_get_reverse: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_print_settings_get_reverse"
fun fun_c2ats_gtk_print_settings_set_reverse: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_print_settings_set_reverse"
fun fun_c2ats_gtk_print_settings_get_duplex: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> type_c2ats_GtkPrintDuplex = "mac#gtk_print_settings_get_duplex"
fun fun_c2ats_gtk_print_settings_set_duplex: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_GtkPrintDuplex) -> void = "mac#gtk_print_settings_set_duplex"
fun fun_c2ats_gtk_print_settings_get_quality: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> type_c2ats_GtkPrintQuality = "mac#gtk_print_settings_get_quality"
fun fun_c2ats_gtk_print_settings_set_quality: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_GtkPrintQuality) -> void = "mac#gtk_print_settings_set_quality"
fun fun_c2ats_gtk_print_settings_get_n_copies: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_print_settings_get_n_copies"
fun fun_c2ats_gtk_print_settings_set_n_copies: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_print_settings_set_n_copies"
fun fun_c2ats_gtk_print_settings_get_number_up: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_print_settings_get_number_up"
fun fun_c2ats_gtk_print_settings_set_number_up: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_print_settings_set_number_up"
fun fun_c2ats_gtk_print_settings_get_number_up_layout: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> type_c2ats_GtkNumberUpLayout = "mac#gtk_print_settings_get_number_up_layout"
fun fun_c2ats_gtk_print_settings_set_number_up_layout: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_GtkNumberUpLayout) -> void = "mac#gtk_print_settings_set_number_up_layout"
fun fun_c2ats_gtk_print_settings_get_resolution: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_print_settings_get_resolution"
fun fun_c2ats_gtk_print_settings_set_resolution: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_print_settings_set_resolution"
fun fun_c2ats_gtk_print_settings_get_resolution_x: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_print_settings_get_resolution_x"
fun fun_c2ats_gtk_print_settings_get_resolution_y: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_print_settings_get_resolution_y"
fun fun_c2ats_gtk_print_settings_set_resolution_xy: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_print_settings_set_resolution_xy"
fun fun_c2ats_gtk_print_settings_get_printer_lpi: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_print_settings_get_printer_lpi"
fun fun_c2ats_gtk_print_settings_set_printer_lpi: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_print_settings_set_printer_lpi"
fun fun_c2ats_gtk_print_settings_get_scale: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_print_settings_get_scale"
fun fun_c2ats_gtk_print_settings_set_scale: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_print_settings_set_scale"
fun fun_c2ats_gtk_print_settings_get_print_pages: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> type_c2ats_GtkPrintPages = "mac#gtk_print_settings_get_print_pages"
fun fun_c2ats_gtk_print_settings_set_print_pages: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_GtkPrintPages) -> void = "mac#gtk_print_settings_set_print_pages"
fun fun_c2ats_gtk_print_settings_get_page_ranges: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkPageRange, l3) | ptr l3) = "mac#gtk_print_settings_get_page_ranges"
fun fun_c2ats_gtk_print_settings_set_page_ranges: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_GtkPageRange, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_print_settings_set_page_ranges"
fun fun_c2ats_gtk_print_settings_get_page_set: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> type_c2ats_GtkPageSet = "mac#gtk_print_settings_get_page_set"
fun fun_c2ats_gtk_print_settings_set_page_set: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1, type_c2ats_GtkPageSet) -> void = "mac#gtk_print_settings_set_page_set"
fun fun_c2ats_gtk_print_settings_get_default_source: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_print_settings_get_default_source"
fun fun_c2ats_gtk_print_settings_set_default_source: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_print_settings_set_default_source"
fun fun_c2ats_gtk_print_settings_get_media_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_print_settings_get_media_type"
fun fun_c2ats_gtk_print_settings_set_media_type: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_print_settings_set_media_type"
fun fun_c2ats_gtk_print_settings_get_dither: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_print_settings_get_dither"
fun fun_c2ats_gtk_print_settings_set_dither: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_print_settings_set_dither"
fun fun_c2ats_gtk_print_settings_get_finishings: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_print_settings_get_finishings"
fun fun_c2ats_gtk_print_settings_set_finishings: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_print_settings_set_finishings"
fun fun_c2ats_gtk_print_settings_get_output_bin: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_print_settings_get_output_bin"
fun fun_c2ats_gtk_print_settings_set_output_bin: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_print_settings_set_output_bin"
fun fun_c2ats_gtk_print_settings_to_gvariant: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintSettings, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2) | ptr l2) = "mac#gtk_print_settings_to_gvariant"
fun fun_c2ats_gtk_print_settings_new_from_gvariant: {l1:addr} (!ptr_v_1(type_c2ats_GVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkPrintSettings, l2) | ptr l2) = "mac#gtk_print_settings_new_from_gvariant"
// File: /usr/include/gtk-3.0/gtk/gtkprintoperationpreview.h
abst@ype struct_c2ats__GtkPrintOperationPreview // FIXME! Forward declaration.
typedef type_c2ats_GtkPrintOperationPreview = struct_c2ats__GtkPrintOperationPreview
abst@ype struct_c2ats__GtkPrintOperationPreviewIface // FIXME! Forward declaration.
typedef type_c2ats_GtkPrintOperationPreviewIface = struct_c2ats__GtkPrintOperationPreviewIface
typedef struct_c2ats__GtkPrintOperationPreviewIface = $extype_struct"struct _GtkPrintOperationPreviewIface" of {
  g_iface = type_c2ats_GTypeInterface,
  ready = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintOperationPreview, l1), !ptr_v_1(type_c2ats_GtkPrintContext, l2) | ptr l1, ptr l2) -> void,
  got_page_size = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkPrintOperationPreview, l1), !ptr_v_1(type_c2ats_GtkPrintContext, l2), !ptr_v_1(type_c2ats_GtkPageSetup, l3) | ptr l1, ptr l2, ptr l3) -> void,
  render_page = {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperationPreview, l1) | ptr l1, type_c2ats_gint) -> void,
  is_selected = {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperationPreview, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean,
  end_preview = {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperationPreview, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void,
  _gtk_reserved6 = () -> void,
  _gtk_reserved7 = () -> void,
  _gtk_reserved8 = () -> void
}
fun fun_c2ats_gtk_print_operation_preview_get_type: () -> type_c2ats_GType = "mac#gtk_print_operation_preview_get_type"
fun fun_c2ats_gtk_print_operation_preview_render_page: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperationPreview, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_print_operation_preview_render_page"
fun fun_c2ats_gtk_print_operation_preview_end_preview: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperationPreview, l1) | ptr l1) -> void = "mac#gtk_print_operation_preview_end_preview"
fun fun_c2ats_gtk_print_operation_preview_is_selected: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperationPreview, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_print_operation_preview_is_selected"
// File: /usr/include/gtk-3.0/gtk/gtkprintoperation.h
abst@ype struct_c2ats__GtkPrintOperationClass // FIXME! Forward declaration.
typedef type_c2ats_GtkPrintOperationClass = struct_c2ats__GtkPrintOperationClass
abst@ype struct_c2ats__GtkPrintOperationPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkPrintOperationPrivate = struct_c2ats__GtkPrintOperationPrivate
abst@ype struct_c2ats__GtkPrintOperation // FIXME! Forward declaration.
typedef type_c2ats_GtkPrintOperation = struct_c2ats__GtkPrintOperation
typedef type_c2ats_GtkPrintStatus = int
#define enum_c2ats_GTK_PRINT_STATUS_INITIAL 0
#define enum_c2ats_GTK_PRINT_STATUS_PREPARING 1
#define enum_c2ats_GTK_PRINT_STATUS_GENERATING_DATA 2
#define enum_c2ats_GTK_PRINT_STATUS_SENDING_DATA 3
#define enum_c2ats_GTK_PRINT_STATUS_PENDING 4
#define enum_c2ats_GTK_PRINT_STATUS_PENDING_ISSUE 5
#define enum_c2ats_GTK_PRINT_STATUS_PRINTING 6
#define enum_c2ats_GTK_PRINT_STATUS_FINISHED 7
#define enum_c2ats_GTK_PRINT_STATUS_FINISHED_ABORTED 8
typedef type_c2ats_GtkPrintOperationResult = int
#define enum_c2ats_GTK_PRINT_OPERATION_RESULT_ERROR 0
#define enum_c2ats_GTK_PRINT_OPERATION_RESULT_APPLY 1
#define enum_c2ats_GTK_PRINT_OPERATION_RESULT_CANCEL 2
#define enum_c2ats_GTK_PRINT_OPERATION_RESULT_IN_PROGRESS 3
typedef type_c2ats_GtkPrintOperationAction = int
#define enum_c2ats_GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG 0
#define enum_c2ats_GTK_PRINT_OPERATION_ACTION_PRINT 1
#define enum_c2ats_GTK_PRINT_OPERATION_ACTION_PREVIEW 2
#define enum_c2ats_GTK_PRINT_OPERATION_ACTION_EXPORT 3
typedef struct_c2ats__GtkPrintOperation = $extype_struct"struct _GtkPrintOperation" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkPrintOperationPrivate) *)
}
typedef struct_c2ats__GtkPrintOperationClass = $extype_struct"struct _GtkPrintOperationClass" of {
  parent_class = type_c2ats_GObjectClass,
  done = {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1, type_c2ats_GtkPrintOperationResult) -> void,
  begin_print = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1), !ptr_v_1(type_c2ats_GtkPrintContext, l2) | ptr l1, ptr l2) -> void,
  paginate = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1), !ptr_v_1(type_c2ats_GtkPrintContext, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  request_page_setup = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1), !ptr_v_1(type_c2ats_GtkPrintContext, l2), !ptr_v_1(type_c2ats_GtkPageSetup, l3) | ptr l1, ptr l2, type_c2ats_gint, ptr l3) -> void,
  draw_page = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1), !ptr_v_1(type_c2ats_GtkPrintContext, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void,
  end_print = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1), !ptr_v_1(type_c2ats_GtkPrintContext, l2) | ptr l1, ptr l2) -> void,
  status_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1) -> void,
  create_custom_widget = {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2),
  custom_widget_apply = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void,
  preview = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1), !ptr_v_1(type_c2ats_GtkPrintOperationPreview, l2), !ptr_v_1(type_c2ats_GtkPrintContext, l3), !ptr_v_1(type_c2ats_GtkWindow, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean,
  update_custom_widget = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GtkPageSetup, l3), !ptr_v_1(type_c2ats_GtkPrintSettings, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void,
  _gtk_reserved6 = () -> void,
  _gtk_reserved7 = () -> void,
  _gtk_reserved8 = () -> void
}
typedef type_c2ats_GtkPrintError = int
#define enum_c2ats_GTK_PRINT_ERROR_GENERAL 0
#define enum_c2ats_GTK_PRINT_ERROR_INTERNAL_ERROR 1
#define enum_c2ats_GTK_PRINT_ERROR_NOMEM 2
#define enum_c2ats_GTK_PRINT_ERROR_INVALID_FILE 3
fun fun_c2ats_gtk_print_error_quark: () -> type_c2ats_GQuark = "mac#gtk_print_error_quark"
fun fun_c2ats_gtk_print_operation_get_type: () -> type_c2ats_GType = "mac#gtk_print_operation_get_type"
fun fun_c2ats_gtk_print_operation_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1) = "mac#gtk_print_operation_new"
fun fun_c2ats_gtk_print_operation_set_default_page_setup: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1), !ptr_v_1(type_c2ats_GtkPageSetup, l2) | ptr l1, ptr l2) -> void = "mac#gtk_print_operation_set_default_page_setup"
fun fun_c2ats_gtk_print_operation_get_default_page_setup: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkPageSetup, l2) | ptr l2) = "mac#gtk_print_operation_get_default_page_setup"
fun fun_c2ats_gtk_print_operation_set_print_settings: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1), !ptr_v_1(type_c2ats_GtkPrintSettings, l2) | ptr l1, ptr l2) -> void = "mac#gtk_print_operation_set_print_settings"
fun fun_c2ats_gtk_print_operation_get_print_settings: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkPrintSettings, l2) | ptr l2) = "mac#gtk_print_operation_get_print_settings"
fun fun_c2ats_gtk_print_operation_set_job_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_print_operation_set_job_name"
fun fun_c2ats_gtk_print_operation_set_n_pages: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_print_operation_set_n_pages"
fun fun_c2ats_gtk_print_operation_set_current_page: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_print_operation_set_current_page"
fun fun_c2ats_gtk_print_operation_set_use_full_page: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_print_operation_set_use_full_page"
fun fun_c2ats_gtk_print_operation_set_unit: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1, type_c2ats_GtkUnit) -> void = "mac#gtk_print_operation_set_unit"
fun fun_c2ats_gtk_print_operation_set_export_filename: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_print_operation_set_export_filename"
fun fun_c2ats_gtk_print_operation_set_track_print_status: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_print_operation_set_track_print_status"
fun fun_c2ats_gtk_print_operation_set_show_progress: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_print_operation_set_show_progress"
fun fun_c2ats_gtk_print_operation_set_allow_async: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_print_operation_set_allow_async"
fun fun_c2ats_gtk_print_operation_set_custom_tab_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_print_operation_set_custom_tab_label"
fun fun_c2ats_gtk_print_operation_run: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1), !ptr_v_1(type_c2ats_GtkWindow, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, type_c2ats_GtkPrintOperationAction, ptr l2, ptr l3) -> type_c2ats_GtkPrintOperationResult = "mac#gtk_print_operation_run"
fun fun_c2ats_gtk_print_operation_get_error: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> void = "mac#gtk_print_operation_get_error"
fun fun_c2ats_gtk_print_operation_get_status: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1) -> type_c2ats_GtkPrintStatus = "mac#gtk_print_operation_get_status"
fun fun_c2ats_gtk_print_operation_get_status_string: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_print_operation_get_status_string"
fun fun_c2ats_gtk_print_operation_is_finished: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_print_operation_is_finished"
fun fun_c2ats_gtk_print_operation_cancel: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1) -> void = "mac#gtk_print_operation_cancel"
fun fun_c2ats_gtk_print_operation_draw_page_finish: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1) -> void = "mac#gtk_print_operation_draw_page_finish"
fun fun_c2ats_gtk_print_operation_set_defer_drawing: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1) -> void = "mac#gtk_print_operation_set_defer_drawing"
fun fun_c2ats_gtk_print_operation_set_support_selection: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_print_operation_set_support_selection"
fun fun_c2ats_gtk_print_operation_get_support_selection: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_print_operation_get_support_selection"
fun fun_c2ats_gtk_print_operation_set_has_selection: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_print_operation_set_has_selection"
fun fun_c2ats_gtk_print_operation_get_has_selection: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_print_operation_get_has_selection"
fun fun_c2ats_gtk_print_operation_set_embed_page_setup: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_print_operation_set_embed_page_setup"
fun fun_c2ats_gtk_print_operation_get_embed_page_setup: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_print_operation_get_embed_page_setup"
fun fun_c2ats_gtk_print_operation_get_n_pages_to_print: {l1:addr} (!ptr_v_1(type_c2ats_GtkPrintOperation, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_print_operation_get_n_pages_to_print"
fun fun_c2ats_gtk_print_run_page_setup_dialog: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GtkPageSetup, l2), !ptr_v_1(type_c2ats_GtkPrintSettings, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GtkPageSetup, l4) | ptr l4) = "mac#gtk_print_run_page_setup_dialog"
typedef type_c2ats_GtkPageSetupDoneFunc = {l1:addr} (!ptr_v_1(type_c2ats_GtkPageSetup, l1) | ptr l1, type_c2ats_gpointer) -> void
fun fun_c2ats_gtk_print_run_page_setup_dialog_async: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(type_c2ats_GtkPageSetup, l2), !ptr_v_1(type_c2ats_GtkPrintSettings, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GtkPageSetupDoneFunc, type_c2ats_gpointer) -> void = "mac#gtk_print_run_page_setup_dialog_async"
// File: /usr/include/gtk-3.0/gtk/gtkprogressbar.h
abst@ype struct_c2ats__GtkProgressBar // FIXME! Forward declaration.
typedef type_c2ats_GtkProgressBar = struct_c2ats__GtkProgressBar
abst@ype struct_c2ats__GtkProgressBarPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkProgressBarPrivate = struct_c2ats__GtkProgressBarPrivate
abst@ype struct_c2ats__GtkProgressBarClass // FIXME! Forward declaration.
typedef type_c2ats_GtkProgressBarClass = struct_c2ats__GtkProgressBarClass
typedef struct_c2ats__GtkProgressBar = $extype_struct"struct _GtkProgressBar" of {
  parent = type_c2ats_GtkWidget,
  priv = ptr (* cPtr0(type_c2ats_GtkProgressBarPrivate) *)
}
typedef struct_c2ats__GtkProgressBarClass = $extype_struct"struct _GtkProgressBarClass" of {
  parent_class = type_c2ats_GtkWidgetClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_progress_bar_get_type: () -> type_c2ats_GType = "mac#gtk_progress_bar_get_type"
fun fun_c2ats_gtk_progress_bar_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_progress_bar_new"
fun fun_c2ats_gtk_progress_bar_pulse: {l1:addr} (!ptr_v_1(type_c2ats_GtkProgressBar, l1) | ptr l1) -> void = "mac#gtk_progress_bar_pulse"
fun fun_c2ats_gtk_progress_bar_set_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkProgressBar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_progress_bar_set_text"
fun fun_c2ats_gtk_progress_bar_set_fraction: {l1:addr} (!ptr_v_1(type_c2ats_GtkProgressBar, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_progress_bar_set_fraction"
fun fun_c2ats_gtk_progress_bar_set_pulse_step: {l1:addr} (!ptr_v_1(type_c2ats_GtkProgressBar, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_progress_bar_set_pulse_step"
fun fun_c2ats_gtk_progress_bar_set_inverted: {l1:addr} (!ptr_v_1(type_c2ats_GtkProgressBar, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_progress_bar_set_inverted"
fun fun_c2ats_gtk_progress_bar_get_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkProgressBar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_progress_bar_get_text"
fun fun_c2ats_gtk_progress_bar_get_fraction: {l1:addr} (!ptr_v_1(type_c2ats_GtkProgressBar, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_progress_bar_get_fraction"
fun fun_c2ats_gtk_progress_bar_get_pulse_step: {l1:addr} (!ptr_v_1(type_c2ats_GtkProgressBar, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_progress_bar_get_pulse_step"
fun fun_c2ats_gtk_progress_bar_get_inverted: {l1:addr} (!ptr_v_1(type_c2ats_GtkProgressBar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_progress_bar_get_inverted"
fun fun_c2ats_gtk_progress_bar_set_ellipsize: {l1:addr} (!ptr_v_1(type_c2ats_GtkProgressBar, l1) | ptr l1, type_c2ats_PangoEllipsizeMode) -> void = "mac#gtk_progress_bar_set_ellipsize"
fun fun_c2ats_gtk_progress_bar_get_ellipsize: {l1:addr} (!ptr_v_1(type_c2ats_GtkProgressBar, l1) | ptr l1) -> type_c2ats_PangoEllipsizeMode = "mac#gtk_progress_bar_get_ellipsize"
fun fun_c2ats_gtk_progress_bar_set_show_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkProgressBar, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_progress_bar_set_show_text"
fun fun_c2ats_gtk_progress_bar_get_show_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkProgressBar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_progress_bar_get_show_text"
// File: /usr/include/gtk-3.0/gtk/gtkradiobutton.h
abst@ype struct_c2ats__GtkRadioButton // FIXME! Forward declaration.
typedef type_c2ats_GtkRadioButton = struct_c2ats__GtkRadioButton
abst@ype struct_c2ats__GtkRadioButtonPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkRadioButtonPrivate = struct_c2ats__GtkRadioButtonPrivate
abst@ype struct_c2ats__GtkRadioButtonClass // FIXME! Forward declaration.
typedef type_c2ats_GtkRadioButtonClass = struct_c2ats__GtkRadioButtonClass
typedef struct_c2ats__GtkRadioButton = $extype_struct"struct _GtkRadioButton" of {
  check_button = type_c2ats_GtkCheckButton,
  priv = ptr (* cPtr0(type_c2ats_GtkRadioButtonPrivate) *)
}
typedef struct_c2ats__GtkRadioButtonClass = $extype_struct"struct _GtkRadioButtonClass" of {
  parent_class = type_c2ats_GtkCheckButtonClass,
  group_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkRadioButton, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_radio_button_get_type: () -> type_c2ats_GType = "mac#gtk_radio_button_get_type"
fun fun_c2ats_gtk_radio_button_new: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_radio_button_new"
fun fun_c2ats_gtk_radio_button_new_from_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkRadioButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_radio_button_new_from_widget"
fun fun_c2ats_gtk_radio_button_new_with_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSList, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_radio_button_new_with_label"
fun fun_c2ats_gtk_radio_button_new_with_label_from_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRadioButton, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_radio_button_new_with_label_from_widget"
fun fun_c2ats_gtk_radio_button_new_with_mnemonic: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSList, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_radio_button_new_with_mnemonic"
fun fun_c2ats_gtk_radio_button_new_with_mnemonic_from_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRadioButton, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_radio_button_new_with_mnemonic_from_widget"
fun fun_c2ats_gtk_radio_button_get_group: {l1:addr} (!ptr_v_1(type_c2ats_GtkRadioButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_radio_button_get_group"
fun fun_c2ats_gtk_radio_button_set_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRadioButton, l1), !ptr_v_1(type_c2ats_GSList, l2) | ptr l1, ptr l2) -> void = "mac#gtk_radio_button_set_group"
fun fun_c2ats_gtk_radio_button_join_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRadioButton, l1), !ptr_v_1(type_c2ats_GtkRadioButton, l2) | ptr l1, ptr l2) -> void = "mac#gtk_radio_button_join_group"
// File: /usr/include/gtk-3.0/gtk/gtkradiomenuitem.h
abst@ype struct_c2ats__GtkRadioMenuItem // FIXME! Forward declaration.
typedef type_c2ats_GtkRadioMenuItem = struct_c2ats__GtkRadioMenuItem
abst@ype struct_c2ats__GtkRadioMenuItemPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkRadioMenuItemPrivate = struct_c2ats__GtkRadioMenuItemPrivate
abst@ype struct_c2ats__GtkRadioMenuItemClass // FIXME! Forward declaration.
typedef type_c2ats_GtkRadioMenuItemClass = struct_c2ats__GtkRadioMenuItemClass
typedef struct_c2ats__GtkRadioMenuItem = $extype_struct"struct _GtkRadioMenuItem" of {
  check_menu_item = type_c2ats_GtkCheckMenuItem,
  priv = ptr (* cPtr0(type_c2ats_GtkRadioMenuItemPrivate) *)
}
typedef struct_c2ats__GtkRadioMenuItemClass = $extype_struct"struct _GtkRadioMenuItemClass" of {
  parent_class = type_c2ats_GtkCheckMenuItemClass,
  group_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkRadioMenuItem, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_radio_menu_item_get_type: () -> type_c2ats_GType = "mac#gtk_radio_menu_item_get_type"
fun fun_c2ats_gtk_radio_menu_item_new: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_radio_menu_item_new"
fun fun_c2ats_gtk_radio_menu_item_new_with_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSList, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_radio_menu_item_new_with_label"
fun fun_c2ats_gtk_radio_menu_item_new_with_mnemonic: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSList, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_radio_menu_item_new_with_mnemonic"
fun fun_c2ats_gtk_radio_menu_item_new_from_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkRadioMenuItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_radio_menu_item_new_from_widget"
fun fun_c2ats_gtk_radio_menu_item_new_with_mnemonic_from_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRadioMenuItem, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_radio_menu_item_new_with_mnemonic_from_widget"
fun fun_c2ats_gtk_radio_menu_item_new_with_label_from_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRadioMenuItem, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_radio_menu_item_new_with_label_from_widget"
fun fun_c2ats_gtk_radio_menu_item_get_group: {l1:addr} (!ptr_v_1(type_c2ats_GtkRadioMenuItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_radio_menu_item_get_group"
fun fun_c2ats_gtk_radio_menu_item_set_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRadioMenuItem, l1), !ptr_v_1(type_c2ats_GSList, l2) | ptr l1, ptr l2) -> void = "mac#gtk_radio_menu_item_set_group"
fun fun_c2ats_gtk_radio_menu_item_join_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRadioMenuItem, l1), !ptr_v_1(type_c2ats_GtkRadioMenuItem, l2) | ptr l1, ptr l2) -> void = "mac#gtk_radio_menu_item_join_group"
// File: /usr/include/gtk-3.0/gtk/gtktoggletoolbutton.h
abst@ype struct_c2ats__GtkToggleToolButton // FIXME! Forward declaration.
typedef type_c2ats_GtkToggleToolButton = struct_c2ats__GtkToggleToolButton
abst@ype struct_c2ats__GtkToggleToolButtonClass // FIXME! Forward declaration.
typedef type_c2ats_GtkToggleToolButtonClass = struct_c2ats__GtkToggleToolButtonClass
abst@ype struct_c2ats__GtkToggleToolButtonPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkToggleToolButtonPrivate = struct_c2ats__GtkToggleToolButtonPrivate
typedef struct_c2ats__GtkToggleToolButton = $extype_struct"struct _GtkToggleToolButton" of {
  parent = type_c2ats_GtkToolButton,
  priv = ptr (* cPtr0(type_c2ats_GtkToggleToolButtonPrivate) *)
}
typedef struct_c2ats__GtkToggleToolButtonClass = $extype_struct"struct _GtkToggleToolButtonClass" of {
  parent_class = type_c2ats_GtkToolButtonClass,
  toggled = {l1:addr} (!ptr_v_1(type_c2ats_GtkToggleToolButton, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_toggle_tool_button_get_type: () -> type_c2ats_GType = "mac#gtk_toggle_tool_button_get_type"
fun fun_c2ats_gtk_toggle_tool_button_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) = "mac#gtk_toggle_tool_button_new"
fun fun_c2ats_gtk_toggle_tool_button_new_from_stock: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkToolItem, l2) | ptr l2) = "mac#gtk_toggle_tool_button_new_from_stock"
fun fun_c2ats_gtk_toggle_tool_button_set_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkToggleToolButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_toggle_tool_button_set_active"
fun fun_c2ats_gtk_toggle_tool_button_get_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkToggleToolButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_toggle_tool_button_get_active"
// File: /usr/include/gtk-3.0/gtk/gtkradiotoolbutton.h
abst@ype struct_c2ats__GtkRadioToolButton // FIXME! Forward declaration.
typedef type_c2ats_GtkRadioToolButton = struct_c2ats__GtkRadioToolButton
abst@ype struct_c2ats__GtkRadioToolButtonClass // FIXME! Forward declaration.
typedef type_c2ats_GtkRadioToolButtonClass = struct_c2ats__GtkRadioToolButtonClass
typedef struct_c2ats__GtkRadioToolButton = $extype_struct"struct _GtkRadioToolButton" of {
  parent = type_c2ats_GtkToggleToolButton
}
typedef struct_c2ats__GtkRadioToolButtonClass = $extype_struct"struct _GtkRadioToolButtonClass" of {
  parent_class = type_c2ats_GtkToggleToolButtonClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_radio_tool_button_get_type: () -> type_c2ats_GType = "mac#gtk_radio_tool_button_get_type"
fun fun_c2ats_gtk_radio_tool_button_new: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkToolItem, l2) | ptr l2) = "mac#gtk_radio_tool_button_new"
fun fun_c2ats_gtk_radio_tool_button_new_from_stock: {l1,l2:addr} (!ptr_v_1(type_c2ats_GSList, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkToolItem, l3) | ptr l3) = "mac#gtk_radio_tool_button_new_from_stock"
fun fun_c2ats_gtk_radio_tool_button_new_from_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkRadioToolButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkToolItem, l2) | ptr l2) = "mac#gtk_radio_tool_button_new_from_widget"
fun fun_c2ats_gtk_radio_tool_button_new_with_stock_from_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRadioToolButton, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkToolItem, l3) | ptr l3) = "mac#gtk_radio_tool_button_new_with_stock_from_widget"
fun fun_c2ats_gtk_radio_tool_button_get_group: {l1:addr} (!ptr_v_1(type_c2ats_GtkRadioToolButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_radio_tool_button_get_group"
fun fun_c2ats_gtk_radio_tool_button_set_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRadioToolButton, l1), !ptr_v_1(type_c2ats_GSList, l2) | ptr l1, ptr l2) -> void = "mac#gtk_radio_tool_button_set_group"
// File: /usr/include/gtk-3.0/gtk/gtkrange.h
abst@ype struct_c2ats__GtkRange // FIXME! Forward declaration.
typedef type_c2ats_GtkRange = struct_c2ats__GtkRange
abst@ype struct_c2ats__GtkRangePrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkRangePrivate = struct_c2ats__GtkRangePrivate
abst@ype struct_c2ats__GtkRangeClass // FIXME! Forward declaration.
typedef type_c2ats_GtkRangeClass = struct_c2ats__GtkRangeClass
typedef struct_c2ats__GtkRange = $extype_struct"struct _GtkRange" of {
  widget = type_c2ats_GtkWidget,
  priv = ptr (* cPtr0(type_c2ats_GtkRangePrivate) *)
}
typedef struct_c2ats__GtkRangeClass = $extype_struct"struct _GtkRangeClass" of {
  parent_class = type_c2ats_GtkWidgetClass,
  slider_detail = ptr (* cPtr0(type_c2ats_gchar) *),
  stepper_detail = ptr (* cPtr0(type_c2ats_gchar) *),
  value_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1) -> void,
  adjust_bounds = {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1, type_c2ats_gdouble) -> void,
  move_slider = {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1, type_c2ats_GtkScrollType) -> void,
  get_range_border = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRange, l1), !ptr_v_1(type_c2ats_GtkBorder, l2) | ptr l1, ptr l2) -> void,
  change_value = {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1, type_c2ats_GtkScrollType, type_c2ats_gdouble) -> type_c2ats_gboolean,
  get_range_size_request = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkRange, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_GtkOrientation, ptr l2, ptr l3) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void
}
fun fun_c2ats_gtk_range_get_type: () -> type_c2ats_GType = "mac#gtk_range_get_type"
fun fun_c2ats_gtk_range_set_adjustment: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRange, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> void = "mac#gtk_range_set_adjustment"
fun fun_c2ats_gtk_range_get_adjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_range_get_adjustment"
fun fun_c2ats_gtk_range_set_inverted: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_range_set_inverted"
fun fun_c2ats_gtk_range_get_inverted: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_range_get_inverted"
fun fun_c2ats_gtk_range_set_flippable: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_range_set_flippable"
fun fun_c2ats_gtk_range_get_flippable: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_range_get_flippable"
fun fun_c2ats_gtk_range_set_slider_size_fixed: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_range_set_slider_size_fixed"
fun fun_c2ats_gtk_range_get_slider_size_fixed: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_range_get_slider_size_fixed"
fun fun_c2ats_gtk_range_set_min_slider_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_range_set_min_slider_size"
fun fun_c2ats_gtk_range_get_min_slider_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_range_get_min_slider_size"
fun fun_c2ats_gtk_range_get_range_rect: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRange, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> void = "mac#gtk_range_get_range_rect"
fun fun_c2ats_gtk_range_get_slider_range: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkRange, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_range_get_slider_range"
fun fun_c2ats_gtk_range_set_lower_stepper_sensitivity: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1, type_c2ats_GtkSensitivityType) -> void = "mac#gtk_range_set_lower_stepper_sensitivity"
fun fun_c2ats_gtk_range_get_lower_stepper_sensitivity: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1) -> type_c2ats_GtkSensitivityType = "mac#gtk_range_get_lower_stepper_sensitivity"
fun fun_c2ats_gtk_range_set_upper_stepper_sensitivity: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1, type_c2ats_GtkSensitivityType) -> void = "mac#gtk_range_set_upper_stepper_sensitivity"
fun fun_c2ats_gtk_range_get_upper_stepper_sensitivity: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1) -> type_c2ats_GtkSensitivityType = "mac#gtk_range_get_upper_stepper_sensitivity"
fun fun_c2ats_gtk_range_set_increments: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_range_set_increments"
fun fun_c2ats_gtk_range_set_range: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_range_set_range"
fun fun_c2ats_gtk_range_set_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_range_set_value"
fun fun_c2ats_gtk_range_get_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_range_get_value"
fun fun_c2ats_gtk_range_set_show_fill_level: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_range_set_show_fill_level"
fun fun_c2ats_gtk_range_get_show_fill_level: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_range_get_show_fill_level"
fun fun_c2ats_gtk_range_set_restrict_to_fill_level: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_range_set_restrict_to_fill_level"
fun fun_c2ats_gtk_range_get_restrict_to_fill_level: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_range_get_restrict_to_fill_level"
fun fun_c2ats_gtk_range_set_fill_level: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_range_set_fill_level"
fun fun_c2ats_gtk_range_get_fill_level: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_range_get_fill_level"
fun fun_c2ats_gtk_range_set_round_digits: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_range_set_round_digits"
fun fun_c2ats_gtk_range_get_round_digits: {l1:addr} (!ptr_v_1(type_c2ats_GtkRange, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_range_get_round_digits"
// File: /usr/include/gtk-3.0/gtk/gtkrecentmanager.h
abst@ype struct_c2ats__GtkRecentInfo // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentInfo = struct_c2ats__GtkRecentInfo
abst@ype struct_c2ats__GtkRecentData // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentData = struct_c2ats__GtkRecentData
abst@ype struct_c2ats__GtkRecentManager // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentManager = struct_c2ats__GtkRecentManager
abst@ype struct_c2ats__GtkRecentManagerClass // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentManagerClass = struct_c2ats__GtkRecentManagerClass
abst@ype struct_c2ats__GtkRecentManagerPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentManagerPrivate = struct_c2ats__GtkRecentManagerPrivate
typedef struct_c2ats__GtkRecentData = $extype_struct"struct _GtkRecentData" of {
  display_name = ptr (* cPtr0(type_c2ats_gchar) *),
  description = ptr (* cPtr0(type_c2ats_gchar) *),
  mime_type = ptr (* cPtr0(type_c2ats_gchar) *),
  app_name = ptr (* cPtr0(type_c2ats_gchar) *),
  app_exec = ptr (* cPtr0(type_c2ats_gchar) *),
  groups = ptr (* cPtr0(cPtr0(type_c2ats_gchar)) *),
  is_private = type_c2ats_gboolean
}
typedef struct_c2ats__GtkRecentManager = $extype_struct"struct _GtkRecentManager" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkRecentManagerPrivate) *)
}
typedef struct_c2ats__GtkRecentManagerClass = $extype_struct"struct _GtkRecentManagerClass" of {
  parent_class = type_c2ats_GObjectClass,
  changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentManager, l1) | ptr l1) -> void,
  _gtk_recent1 = () -> void,
  _gtk_recent2 = () -> void,
  _gtk_recent3 = () -> void,
  _gtk_recent4 = () -> void
}
typedef type_c2ats_GtkRecentManagerError = int
#define enum_c2ats_GTK_RECENT_MANAGER_ERROR_NOT_FOUND 0
#define enum_c2ats_GTK_RECENT_MANAGER_ERROR_INVALID_URI 1
#define enum_c2ats_GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING 2
#define enum_c2ats_GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED 3
#define enum_c2ats_GTK_RECENT_MANAGER_ERROR_READ 4
#define enum_c2ats_GTK_RECENT_MANAGER_ERROR_WRITE 5
#define enum_c2ats_GTK_RECENT_MANAGER_ERROR_UNKNOWN 6
fun fun_c2ats_gtk_recent_manager_error_quark: () -> type_c2ats_GQuark = "mac#gtk_recent_manager_error_quark"
fun fun_c2ats_gtk_recent_manager_get_type: () -> type_c2ats_GType = "mac#gtk_recent_manager_get_type"
fun fun_c2ats_gtk_recent_manager_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkRecentManager, l1) | ptr l1) = "mac#gtk_recent_manager_new"
fun fun_c2ats_gtk_recent_manager_get_default: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkRecentManager, l1) | ptr l1) = "mac#gtk_recent_manager_get_default"
fun fun_c2ats_gtk_recent_manager_add_item: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentManager, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_recent_manager_add_item"
fun fun_c2ats_gtk_recent_manager_add_full: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkRecentManager, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkRecentData, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_recent_manager_add_full"
fun fun_c2ats_gtk_recent_manager_remove_item: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkRecentManager, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_recent_manager_remove_item"
fun fun_c2ats_gtk_recent_manager_lookup_item: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkRecentManager, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GtkRecentInfo, l4) | ptr l4) = "mac#gtk_recent_manager_lookup_item"
fun fun_c2ats_gtk_recent_manager_has_item: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentManager, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_recent_manager_has_item"
fun fun_c2ats_gtk_recent_manager_move_item: {l1,l2,l3,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GtkRecentManager, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_2(type_c2ats_GError, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#gtk_recent_manager_move_item"
fun fun_c2ats_gtk_recent_manager_get_items: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentManager, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_recent_manager_get_items"
fun fun_c2ats_gtk_recent_manager_purge_items: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GtkRecentManager, l1), !ptr_v_2(type_c2ats_GError, l2, l2_1) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gtk_recent_manager_purge_items"
fun fun_c2ats_gtk_recent_info_get_type: () -> type_c2ats_GType = "mac#gtk_recent_info_get_type"
fun fun_c2ats_gtk_recent_info_ref: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkRecentInfo, l2) | ptr l2) = "mac#gtk_recent_info_ref"
fun fun_c2ats_gtk_recent_info_unref: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1) | ptr l1) -> void = "mac#gtk_recent_info_unref"
fun fun_c2ats_gtk_recent_info_get_uri: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_recent_info_get_uri"
fun fun_c2ats_gtk_recent_info_get_display_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_recent_info_get_display_name"
fun fun_c2ats_gtk_recent_info_get_description: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_recent_info_get_description"
fun fun_c2ats_gtk_recent_info_get_mime_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_recent_info_get_mime_type"
fun fun_c2ats_gtk_recent_info_get_added: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1) | ptr l1) -> type_c2ats_time_t = "mac#gtk_recent_info_get_added"
fun fun_c2ats_gtk_recent_info_get_modified: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1) | ptr l1) -> type_c2ats_time_t = "mac#gtk_recent_info_get_modified"
fun fun_c2ats_gtk_recent_info_get_visited: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1) | ptr l1) -> type_c2ats_time_t = "mac#gtk_recent_info_get_visited"
fun fun_c2ats_gtk_recent_info_get_private_hint: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_recent_info_get_private_hint"
fun fun_c2ats_gtk_recent_info_get_application_info: {l1,l2,l3,l3_1,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1), !ptr_v_1(type_c2ats_guint, l4), !ptr_v_1(type_c2ats_time_t, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> type_c2ats_gboolean = "mac#gtk_recent_info_get_application_info"
fun fun_c2ats_gtk_recent_info_create_app_info: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GAppInfo, l4) | ptr l4) = "mac#gtk_recent_info_create_app_info"
fun fun_c2ats_gtk_recent_info_get_applications: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#gtk_recent_info_get_applications"
fun fun_c2ats_gtk_recent_info_last_application: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_recent_info_last_application"
fun fun_c2ats_gtk_recent_info_has_application: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_recent_info_has_application"
fun fun_c2ats_gtk_recent_info_get_groups: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#gtk_recent_info_get_groups"
fun fun_c2ats_gtk_recent_info_has_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_recent_info_has_group"
fun fun_c2ats_gtk_recent_info_get_icon: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gtk_recent_info_get_icon"
fun fun_c2ats_gtk_recent_info_get_gicon: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#gtk_recent_info_get_gicon"
fun fun_c2ats_gtk_recent_info_get_short_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_recent_info_get_short_name"
fun fun_c2ats_gtk_recent_info_get_uri_display: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_recent_info_get_uri_display"
fun fun_c2ats_gtk_recent_info_get_age: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_recent_info_get_age"
fun fun_c2ats_gtk_recent_info_is_local: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_recent_info_is_local"
fun fun_c2ats_gtk_recent_info_exists: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_recent_info_exists"
fun fun_c2ats_gtk_recent_info_match: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1), !ptr_v_1(type_c2ats_GtkRecentInfo, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_recent_info_match"
fun fun_c2ats__gtk_recent_manager_sync: () -> void = "mac#_gtk_recent_manager_sync"
// File: /usr/include/gtk-3.0/gtk/gtkrecentfilter.h
abst@ype struct_c2ats__GtkRecentFilter // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentFilter = struct_c2ats__GtkRecentFilter
abst@ype struct_c2ats__GtkRecentFilterInfo // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentFilterInfo = struct_c2ats__GtkRecentFilterInfo
typedef type_c2ats_GtkRecentFilterFlags = int
#define enum_c2ats_GTK_RECENT_FILTER_URI 1 << 0
#define enum_c2ats_GTK_RECENT_FILTER_DISPLAY_NAME 1 << 1
#define enum_c2ats_GTK_RECENT_FILTER_MIME_TYPE 1 << 2
#define enum_c2ats_GTK_RECENT_FILTER_APPLICATION 1 << 3
#define enum_c2ats_GTK_RECENT_FILTER_GROUP 1 << 4
#define enum_c2ats_GTK_RECENT_FILTER_AGE 1 << 5
typedef type_c2ats_GtkRecentFilterFunc = {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentFilterInfo, l1) | ptr l1, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef struct_c2ats__GtkRecentFilterInfo = $extype_struct"struct _GtkRecentFilterInfo" of {
  contains = type_c2ats_GtkRecentFilterFlags,
  uri = ptr (* cPtr0(type_c2ats_gchar) *),
  display_name = ptr (* cPtr0(type_c2ats_gchar) *),
  mime_type = ptr (* cPtr0(type_c2ats_gchar) *),
  applications = ptr (* cPtr0(cPtr0(type_c2ats_gchar)) *),
  groups = ptr (* cPtr0(cPtr0(type_c2ats_gchar)) *),
  age = type_c2ats_gint
}
fun fun_c2ats_gtk_recent_filter_get_type: () -> type_c2ats_GType = "mac#gtk_recent_filter_get_type"
fun fun_c2ats_gtk_recent_filter_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkRecentFilter, l1) | ptr l1) = "mac#gtk_recent_filter_new"
fun fun_c2ats_gtk_recent_filter_set_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentFilter, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_recent_filter_set_name"
fun fun_c2ats_gtk_recent_filter_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentFilter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_recent_filter_get_name"
fun fun_c2ats_gtk_recent_filter_add_mime_type: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentFilter, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_recent_filter_add_mime_type"
fun fun_c2ats_gtk_recent_filter_add_pattern: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentFilter, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_recent_filter_add_pattern"
fun fun_c2ats_gtk_recent_filter_add_pixbuf_formats: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentFilter, l1) | ptr l1) -> void = "mac#gtk_recent_filter_add_pixbuf_formats"
fun fun_c2ats_gtk_recent_filter_add_application: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentFilter, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_recent_filter_add_application"
fun fun_c2ats_gtk_recent_filter_add_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentFilter, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_recent_filter_add_group"
fun fun_c2ats_gtk_recent_filter_add_age: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentFilter, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_recent_filter_add_age"
fun fun_c2ats_gtk_recent_filter_add_custom: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentFilter, l1) | ptr l1, type_c2ats_GtkRecentFilterFlags, type_c2ats_GtkRecentFilterFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_recent_filter_add_custom"
fun fun_c2ats_gtk_recent_filter_get_needed: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentFilter, l1) | ptr l1) -> type_c2ats_GtkRecentFilterFlags = "mac#gtk_recent_filter_get_needed"
fun fun_c2ats_gtk_recent_filter_filter: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentFilter, l1), !ptr_v_1(type_c2ats_GtkRecentFilterInfo, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_recent_filter_filter"
// File: /usr/include/gtk-3.0/gtk/gtkrecentchooser.h
typedef type_c2ats_GtkRecentSortType = int
#define enum_c2ats_GTK_RECENT_SORT_NONE 0
#define enum_c2ats_GTK_RECENT_SORT_MRU 0 + 1
#define enum_c2ats_GTK_RECENT_SORT_LRU 0 + 2
#define enum_c2ats_GTK_RECENT_SORT_CUSTOM 0 + 3
typedef type_c2ats_GtkRecentSortFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentInfo, l1), !ptr_v_1(type_c2ats_GtkRecentInfo, l2) | ptr l1, ptr l2, type_c2ats_gpointer) -> type_c2ats_gint
abst@ype struct_c2ats__GtkRecentChooser // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentChooser = struct_c2ats__GtkRecentChooser
abst@ype struct_c2ats__GtkRecentChooserIface // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentChooserIface = struct_c2ats__GtkRecentChooserIface
typedef type_c2ats_GtkRecentChooserError = int
#define enum_c2ats_GTK_RECENT_CHOOSER_ERROR_NOT_FOUND 0
#define enum_c2ats_GTK_RECENT_CHOOSER_ERROR_INVALID_URI 1
fun fun_c2ats_gtk_recent_chooser_error_quark: () -> type_c2ats_GQuark = "mac#gtk_recent_chooser_error_quark"
typedef struct_c2ats__GtkRecentChooserIface = $extype_struct"struct _GtkRecentChooserIface" of {
  base_iface = type_c2ats_GTypeInterface,
  set_current_uri = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  get_current_uri = {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  select_uri = {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  unselect_uri = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  select_all = {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> void,
  unselect_all = {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> void,
  get_items = {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2),
  get_recent_manager = {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkRecentManager, l2) | ptr l2),
  add_filter = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1), !ptr_v_1(type_c2ats_GtkRecentFilter, l2) | ptr l1, ptr l2) -> void,
  remove_filter = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1), !ptr_v_1(type_c2ats_GtkRecentFilter, l2) | ptr l1, ptr l2) -> void,
  list_filters = {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2),
  set_sort_func = {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1, type_c2ats_GtkRecentSortFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void,
  item_activated = {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> void,
  selection_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> void
}
fun fun_c2ats_gtk_recent_chooser_get_type: () -> type_c2ats_GType = "mac#gtk_recent_chooser_get_type"
fun fun_c2ats_gtk_recent_chooser_set_show_private: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_recent_chooser_set_show_private"
fun fun_c2ats_gtk_recent_chooser_get_show_private: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_recent_chooser_get_show_private"
fun fun_c2ats_gtk_recent_chooser_set_show_not_found: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_recent_chooser_set_show_not_found"
fun fun_c2ats_gtk_recent_chooser_get_show_not_found: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_recent_chooser_get_show_not_found"
fun fun_c2ats_gtk_recent_chooser_set_select_multiple: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_recent_chooser_set_select_multiple"
fun fun_c2ats_gtk_recent_chooser_get_select_multiple: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_recent_chooser_get_select_multiple"
fun fun_c2ats_gtk_recent_chooser_set_limit: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_recent_chooser_set_limit"
fun fun_c2ats_gtk_recent_chooser_get_limit: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_recent_chooser_get_limit"
fun fun_c2ats_gtk_recent_chooser_set_local_only: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_recent_chooser_set_local_only"
fun fun_c2ats_gtk_recent_chooser_get_local_only: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_recent_chooser_get_local_only"
fun fun_c2ats_gtk_recent_chooser_set_show_tips: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_recent_chooser_set_show_tips"
fun fun_c2ats_gtk_recent_chooser_get_show_tips: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_recent_chooser_get_show_tips"
fun fun_c2ats_gtk_recent_chooser_set_show_icons: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_recent_chooser_set_show_icons"
fun fun_c2ats_gtk_recent_chooser_get_show_icons: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_recent_chooser_get_show_icons"
fun fun_c2ats_gtk_recent_chooser_set_sort_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1, type_c2ats_GtkRecentSortType) -> void = "mac#gtk_recent_chooser_set_sort_type"
fun fun_c2ats_gtk_recent_chooser_get_sort_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> type_c2ats_GtkRecentSortType = "mac#gtk_recent_chooser_get_sort_type"
fun fun_c2ats_gtk_recent_chooser_set_sort_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1, type_c2ats_GtkRecentSortFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_recent_chooser_set_sort_func"
fun fun_c2ats_gtk_recent_chooser_set_current_uri: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_recent_chooser_set_current_uri"
fun fun_c2ats_gtk_recent_chooser_get_current_uri: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_recent_chooser_get_current_uri"
fun fun_c2ats_gtk_recent_chooser_get_current_item: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkRecentInfo, l2) | ptr l2) = "mac#gtk_recent_chooser_get_current_item"
fun fun_c2ats_gtk_recent_chooser_select_uri: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_recent_chooser_select_uri"
fun fun_c2ats_gtk_recent_chooser_unselect_uri: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_recent_chooser_unselect_uri"
fun fun_c2ats_gtk_recent_chooser_select_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> void = "mac#gtk_recent_chooser_select_all"
fun fun_c2ats_gtk_recent_chooser_unselect_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> void = "mac#gtk_recent_chooser_unselect_all"
fun fun_c2ats_gtk_recent_chooser_get_items: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_recent_chooser_get_items"
fun fun_c2ats_gtk_recent_chooser_get_uris: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1), !ptr_v_1(type_c2ats_gsize, l2) | ptr l1, ptr l2) -> [l3,l3_1:addr] (ptr_v_2(type_c2ats_gchar, l3, l3_1) | ptr l3) = "mac#gtk_recent_chooser_get_uris"
fun fun_c2ats_gtk_recent_chooser_add_filter: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1), !ptr_v_1(type_c2ats_GtkRecentFilter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_recent_chooser_add_filter"
fun fun_c2ats_gtk_recent_chooser_remove_filter: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1), !ptr_v_1(type_c2ats_GtkRecentFilter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_recent_chooser_remove_filter"
fun fun_c2ats_gtk_recent_chooser_list_filters: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_recent_chooser_list_filters"
fun fun_c2ats_gtk_recent_chooser_set_filter: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1), !ptr_v_1(type_c2ats_GtkRecentFilter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_recent_chooser_set_filter"
fun fun_c2ats_gtk_recent_chooser_get_filter: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooser, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkRecentFilter, l2) | ptr l2) = "mac#gtk_recent_chooser_get_filter"
// File: /usr/include/gtk-3.0/gtk/gtkrecentchooserdialog.h
abst@ype struct_c2ats__GtkRecentChooserDialog // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentChooserDialog = struct_c2ats__GtkRecentChooserDialog
abst@ype struct_c2ats__GtkRecentChooserDialogClass // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentChooserDialogClass = struct_c2ats__GtkRecentChooserDialogClass
abst@ype struct_c2ats__GtkRecentChooserDialogPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentChooserDialogPrivate = struct_c2ats__GtkRecentChooserDialogPrivate
typedef struct_c2ats__GtkRecentChooserDialog = $extype_struct"struct _GtkRecentChooserDialog" of {
  parent_instance = type_c2ats_GtkDialog,
  priv = ptr (* cPtr0(type_c2ats_GtkRecentChooserDialogPrivate) *)
}
typedef struct_c2ats__GtkRecentChooserDialogClass = $extype_struct"struct _GtkRecentChooserDialogClass" of {
  parent_class = type_c2ats_GtkDialogClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_recent_chooser_dialog_get_type: () -> type_c2ats_GType = "mac#gtk_recent_chooser_dialog_get_type"
fun fun_c2ats_gtk_recent_chooser_dialog_new: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GtkWindow, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GtkWidget, l4) | ptr l4) = "mac#gtk_recent_chooser_dialog_new"
fun fun_c2ats_gtk_recent_chooser_dialog_new_for_manager: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GtkWindow, l2), !ptr_v_1(type_c2ats_GtkRecentManager, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GtkWidget, l5) | ptr l5) = "mac#gtk_recent_chooser_dialog_new_for_manager"
// File: /usr/include/gtk-3.0/gtk/gtkrecentchoosermenu.h
abst@ype struct_c2ats__GtkRecentChooserMenu // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentChooserMenu = struct_c2ats__GtkRecentChooserMenu
abst@ype struct_c2ats__GtkRecentChooserMenuClass // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentChooserMenuClass = struct_c2ats__GtkRecentChooserMenuClass
abst@ype struct_c2ats__GtkRecentChooserMenuPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentChooserMenuPrivate = struct_c2ats__GtkRecentChooserMenuPrivate
typedef struct_c2ats__GtkRecentChooserMenu = $extype_struct"struct _GtkRecentChooserMenu" of {
  parent_instance = type_c2ats_GtkMenu,
  priv = ptr (* cPtr0(type_c2ats_GtkRecentChooserMenuPrivate) *)
}
typedef struct_c2ats__GtkRecentChooserMenuClass = $extype_struct"struct _GtkRecentChooserMenuClass" of {
  parent_class = type_c2ats_GtkMenuClass,
  gtk_recent1 = () -> void,
  gtk_recent2 = () -> void,
  gtk_recent3 = () -> void,
  gtk_recent4 = () -> void
}
fun fun_c2ats_gtk_recent_chooser_menu_get_type: () -> type_c2ats_GType = "mac#gtk_recent_chooser_menu_get_type"
fun fun_c2ats_gtk_recent_chooser_menu_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_recent_chooser_menu_new"
fun fun_c2ats_gtk_recent_chooser_menu_new_for_manager: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentManager, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_recent_chooser_menu_new_for_manager"
fun fun_c2ats_gtk_recent_chooser_menu_get_show_numbers: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooserMenu, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_recent_chooser_menu_get_show_numbers"
fun fun_c2ats_gtk_recent_chooser_menu_set_show_numbers: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentChooserMenu, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_recent_chooser_menu_set_show_numbers"
// File: /usr/include/gtk-3.0/gtk/gtkrecentchooserwidget.h
abst@ype struct_c2ats__GtkRecentChooserWidget // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentChooserWidget = struct_c2ats__GtkRecentChooserWidget
abst@ype struct_c2ats__GtkRecentChooserWidgetClass // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentChooserWidgetClass = struct_c2ats__GtkRecentChooserWidgetClass
abst@ype struct_c2ats__GtkRecentChooserWidgetPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentChooserWidgetPrivate = struct_c2ats__GtkRecentChooserWidgetPrivate
typedef struct_c2ats__GtkRecentChooserWidget = $extype_struct"struct _GtkRecentChooserWidget" of {
  parent_instance = type_c2ats_GtkBox,
  priv = ptr (* cPtr0(type_c2ats_GtkRecentChooserWidgetPrivate) *)
}
typedef struct_c2ats__GtkRecentChooserWidgetClass = $extype_struct"struct _GtkRecentChooserWidgetClass" of {
  parent_class = type_c2ats_GtkBoxClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_recent_chooser_widget_get_type: () -> type_c2ats_GType = "mac#gtk_recent_chooser_widget_get_type"
fun fun_c2ats_gtk_recent_chooser_widget_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_recent_chooser_widget_new"
fun fun_c2ats_gtk_recent_chooser_widget_new_for_manager: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentManager, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_recent_chooser_widget_new_for_manager"
// File: /usr/include/gtk-3.0/gtk/gtkrender.h
fun fun_c2ats_gtk_render_check: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_render_check"
fun fun_c2ats_gtk_render_option: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_render_option"
fun fun_c2ats_gtk_render_arrow: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_render_arrow"
fun fun_c2ats_gtk_render_background: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_render_background"
fun fun_c2ats_gtk_render_background_get_clip: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, ptr l2) -> void = "mac#gtk_render_background_get_clip"
fun fun_c2ats_gtk_render_frame: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_render_frame"
fun fun_c2ats_gtk_render_expander: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_render_expander"
fun fun_c2ats_gtk_render_focus: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_render_focus"
fun fun_c2ats_gtk_render_layout: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_PangoLayout, l3) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, ptr l3) -> void = "mac#gtk_render_layout"
fun fun_c2ats_gtk_render_line: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_render_line"
fun fun_c2ats_gtk_render_slider: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_GtkOrientation) -> void = "mac#gtk_render_slider"
fun fun_c2ats_gtk_render_frame_gap: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_GtkPositionType, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_render_frame_gap"
fun fun_c2ats_gtk_render_extension: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_GtkPositionType) -> void = "mac#gtk_render_extension"
fun fun_c2ats_gtk_render_handle: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_render_handle"
fun fun_c2ats_gtk_render_activity: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_render_activity"
fun fun_c2ats_gtk_render_icon_pixbuf: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_GtkIconSource, l2) | ptr l1, ptr l2, type_c2ats_GtkIconSize) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l3) = "mac#gtk_render_icon_pixbuf"
fun fun_c2ats_gtk_render_icon: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_render_icon"
fun fun_c2ats_gtk_render_icon_surface: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkStyleContext, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_cairo_surface_t, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_render_icon_surface"
// File: /usr/include/gtk-3.0/gtk/gtkrevealer.h
abst@ype struct_c2ats__GtkRevealer // FIXME! Forward declaration.
typedef type_c2ats_GtkRevealer = struct_c2ats__GtkRevealer
abst@ype struct_c2ats__GtkRevealerClass // FIXME! Forward declaration.
typedef type_c2ats_GtkRevealerClass = struct_c2ats__GtkRevealerClass
typedef type_c2ats_GtkRevealerTransitionType = int
#define enum_c2ats_GTK_REVEALER_TRANSITION_TYPE_NONE 0
#define enum_c2ats_GTK_REVEALER_TRANSITION_TYPE_CROSSFADE 1
#define enum_c2ats_GTK_REVEALER_TRANSITION_TYPE_SLIDE_RIGHT 2
#define enum_c2ats_GTK_REVEALER_TRANSITION_TYPE_SLIDE_LEFT 3
#define enum_c2ats_GTK_REVEALER_TRANSITION_TYPE_SLIDE_UP 4
#define enum_c2ats_GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN 5
typedef struct_c2ats__GtkRevealer = $extype_struct"struct _GtkRevealer" of {
  parent_instance = type_c2ats_GtkBin
}
typedef struct_c2ats__GtkRevealerClass = $extype_struct"struct _GtkRevealerClass" of {
  parent_class = type_c2ats_GtkBinClass
}
fun fun_c2ats_gtk_revealer_get_type: () -> type_c2ats_GType = "mac#gtk_revealer_get_type"
fun fun_c2ats_gtk_revealer_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_revealer_new"
fun fun_c2ats_gtk_revealer_get_reveal_child: {l1:addr} (!ptr_v_1(type_c2ats_GtkRevealer, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_revealer_get_reveal_child"
fun fun_c2ats_gtk_revealer_set_reveal_child: {l1:addr} (!ptr_v_1(type_c2ats_GtkRevealer, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_revealer_set_reveal_child"
fun fun_c2ats_gtk_revealer_get_child_revealed: {l1:addr} (!ptr_v_1(type_c2ats_GtkRevealer, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_revealer_get_child_revealed"
fun fun_c2ats_gtk_revealer_get_transition_duration: {l1:addr} (!ptr_v_1(type_c2ats_GtkRevealer, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_revealer_get_transition_duration"
fun fun_c2ats_gtk_revealer_set_transition_duration: {l1:addr} (!ptr_v_1(type_c2ats_GtkRevealer, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_revealer_set_transition_duration"
fun fun_c2ats_gtk_revealer_set_transition_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkRevealer, l1) | ptr l1, type_c2ats_GtkRevealerTransitionType) -> void = "mac#gtk_revealer_set_transition_type"
fun fun_c2ats_gtk_revealer_get_transition_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkRevealer, l1) | ptr l1) -> type_c2ats_GtkRevealerTransitionType = "mac#gtk_revealer_get_transition_type"
// File: /usr/include/gtk-3.0/gtk/gtkscale.h
abst@ype struct_c2ats__GtkScale // FIXME! Forward declaration.
typedef type_c2ats_GtkScale = struct_c2ats__GtkScale
abst@ype struct_c2ats__GtkScalePrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkScalePrivate = struct_c2ats__GtkScalePrivate
abst@ype struct_c2ats__GtkScaleClass // FIXME! Forward declaration.
typedef type_c2ats_GtkScaleClass = struct_c2ats__GtkScaleClass
typedef struct_c2ats__GtkScale = $extype_struct"struct _GtkScale" of {
  range = type_c2ats_GtkRange,
  priv = ptr (* cPtr0(type_c2ats_GtkScalePrivate) *)
}
typedef struct_c2ats__GtkScaleClass = $extype_struct"struct _GtkScaleClass" of {
  parent_class = type_c2ats_GtkRangeClass,
  format_value = {l1:addr} (!ptr_v_1(type_c2ats_GtkScale, l1) | ptr l1, type_c2ats_gdouble) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2),
  draw_value = {l1:addr} (!ptr_v_1(type_c2ats_GtkScale, l1) | ptr l1) -> void,
  get_layout_offsets = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkScale, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_scale_get_type: () -> type_c2ats_GType = "mac#gtk_scale_get_type"
fun fun_c2ats_gtk_scale_new: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | type_c2ats_GtkOrientation, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_scale_new"
fun fun_c2ats_gtk_scale_new_with_range: (type_c2ats_GtkOrientation, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_scale_new_with_range"
fun fun_c2ats_gtk_scale_set_digits: {l1:addr} (!ptr_v_1(type_c2ats_GtkScale, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_scale_set_digits"
fun fun_c2ats_gtk_scale_get_digits: {l1:addr} (!ptr_v_1(type_c2ats_GtkScale, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_scale_get_digits"
fun fun_c2ats_gtk_scale_set_draw_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkScale, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_scale_set_draw_value"
fun fun_c2ats_gtk_scale_get_draw_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkScale, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_scale_get_draw_value"
fun fun_c2ats_gtk_scale_set_has_origin: {l1:addr} (!ptr_v_1(type_c2ats_GtkScale, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_scale_set_has_origin"
fun fun_c2ats_gtk_scale_get_has_origin: {l1:addr} (!ptr_v_1(type_c2ats_GtkScale, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_scale_get_has_origin"
fun fun_c2ats_gtk_scale_set_value_pos: {l1:addr} (!ptr_v_1(type_c2ats_GtkScale, l1) | ptr l1, type_c2ats_GtkPositionType) -> void = "mac#gtk_scale_set_value_pos"
fun fun_c2ats_gtk_scale_get_value_pos: {l1:addr} (!ptr_v_1(type_c2ats_GtkScale, l1) | ptr l1) -> type_c2ats_GtkPositionType = "mac#gtk_scale_get_value_pos"
fun fun_c2ats_gtk_scale_get_layout: {l1:addr} (!ptr_v_1(type_c2ats_GtkScale, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayout, l2) | ptr l2) = "mac#gtk_scale_get_layout"
fun fun_c2ats_gtk_scale_get_layout_offsets: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkScale, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_scale_get_layout_offsets"
fun fun_c2ats_gtk_scale_add_mark: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkScale, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gdouble, type_c2ats_GtkPositionType, ptr l2) -> void = "mac#gtk_scale_add_mark"
fun fun_c2ats_gtk_scale_clear_marks: {l1:addr} (!ptr_v_1(type_c2ats_GtkScale, l1) | ptr l1) -> void = "mac#gtk_scale_clear_marks"
// File: /usr/include/gtk-3.0/gtk/gtkscalebutton.h
abst@ype struct_c2ats__GtkScaleButton // FIXME! Forward declaration.
typedef type_c2ats_GtkScaleButton = struct_c2ats__GtkScaleButton
abst@ype struct_c2ats__GtkScaleButtonClass // FIXME! Forward declaration.
typedef type_c2ats_GtkScaleButtonClass = struct_c2ats__GtkScaleButtonClass
abst@ype struct_c2ats__GtkScaleButtonPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkScaleButtonPrivate = struct_c2ats__GtkScaleButtonPrivate
typedef struct_c2ats__GtkScaleButton = $extype_struct"struct _GtkScaleButton" of {
  parent = type_c2ats_GtkButton,
  priv = ptr (* cPtr0(type_c2ats_GtkScaleButtonPrivate) *)
}
typedef struct_c2ats__GtkScaleButtonClass = $extype_struct"struct _GtkScaleButtonClass" of {
  parent_class = type_c2ats_GtkButtonClass,
  value_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkScaleButton, l1) | ptr l1, type_c2ats_gdouble) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_scale_button_get_type: () -> type_c2ats_GType = "mac#gtk_scale_button_get_type"
fun fun_c2ats_gtk_scale_button_new: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_gchar, l1, l1_1) | type_c2ats_GtkIconSize, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_scale_button_new"
fun fun_c2ats_gtk_scale_button_set_icons: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GtkScaleButton, l1), !ptr_v_2(type_c2ats_gchar, l2, l2_1) | ptr l1, ptr l2) -> void = "mac#gtk_scale_button_set_icons"
fun fun_c2ats_gtk_scale_button_get_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkScaleButton, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_scale_button_get_value"
fun fun_c2ats_gtk_scale_button_set_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkScaleButton, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_scale_button_set_value"
fun fun_c2ats_gtk_scale_button_get_adjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkScaleButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_scale_button_get_adjustment"
fun fun_c2ats_gtk_scale_button_set_adjustment: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkScaleButton, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> void = "mac#gtk_scale_button_set_adjustment"
fun fun_c2ats_gtk_scale_button_get_plus_button: {l1:addr} (!ptr_v_1(type_c2ats_GtkScaleButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_scale_button_get_plus_button"
fun fun_c2ats_gtk_scale_button_get_minus_button: {l1:addr} (!ptr_v_1(type_c2ats_GtkScaleButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_scale_button_get_minus_button"
fun fun_c2ats_gtk_scale_button_get_popup: {l1:addr} (!ptr_v_1(type_c2ats_GtkScaleButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_scale_button_get_popup"
// File: /usr/include/gtk-3.0/gtk/gtkscrollable.h
abst@ype struct_c2ats__GtkScrollable // FIXME! Forward declaration.
typedef type_c2ats_GtkScrollable = struct_c2ats__GtkScrollable
abst@ype struct_c2ats__GtkScrollableInterface // FIXME! Forward declaration.
typedef type_c2ats_GtkScrollableInterface = struct_c2ats__GtkScrollableInterface
typedef struct_c2ats__GtkScrollableInterface = $extype_struct"struct _GtkScrollableInterface" of {
  base_iface = type_c2ats_GTypeInterface,
  get_border = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkScrollable, l1), !ptr_v_1(type_c2ats_GtkBorder, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean
}
fun fun_c2ats_gtk_scrollable_get_type: () -> type_c2ats_GType = "mac#gtk_scrollable_get_type"
fun fun_c2ats_gtk_scrollable_get_hadjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrollable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_scrollable_get_hadjustment"
fun fun_c2ats_gtk_scrollable_set_hadjustment: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkScrollable, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> void = "mac#gtk_scrollable_set_hadjustment"
fun fun_c2ats_gtk_scrollable_get_vadjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrollable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_scrollable_get_vadjustment"
fun fun_c2ats_gtk_scrollable_set_vadjustment: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkScrollable, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> void = "mac#gtk_scrollable_set_vadjustment"
fun fun_c2ats_gtk_scrollable_get_hscroll_policy: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrollable, l1) | ptr l1) -> type_c2ats_GtkScrollablePolicy = "mac#gtk_scrollable_get_hscroll_policy"
fun fun_c2ats_gtk_scrollable_set_hscroll_policy: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrollable, l1) | ptr l1, type_c2ats_GtkScrollablePolicy) -> void = "mac#gtk_scrollable_set_hscroll_policy"
fun fun_c2ats_gtk_scrollable_get_vscroll_policy: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrollable, l1) | ptr l1) -> type_c2ats_GtkScrollablePolicy = "mac#gtk_scrollable_get_vscroll_policy"
fun fun_c2ats_gtk_scrollable_set_vscroll_policy: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrollable, l1) | ptr l1, type_c2ats_GtkScrollablePolicy) -> void = "mac#gtk_scrollable_set_vscroll_policy"
fun fun_c2ats_gtk_scrollable_get_border: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkScrollable, l1), !ptr_v_1(type_c2ats_GtkBorder, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_scrollable_get_border"
// File: /usr/include/gtk-3.0/gtk/gtkscrollbar.h
abst@ype struct_c2ats__GtkScrollbar // FIXME! Forward declaration.
typedef type_c2ats_GtkScrollbar = struct_c2ats__GtkScrollbar
abst@ype struct_c2ats__GtkScrollbarClass // FIXME! Forward declaration.
typedef type_c2ats_GtkScrollbarClass = struct_c2ats__GtkScrollbarClass
typedef struct_c2ats__GtkScrollbar = $extype_struct"struct _GtkScrollbar" of {
  range = type_c2ats_GtkRange
}
typedef struct_c2ats__GtkScrollbarClass = $extype_struct"struct _GtkScrollbarClass" of {
  parent_class = type_c2ats_GtkRangeClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_scrollbar_get_type: () -> type_c2ats_GType = "mac#gtk_scrollbar_get_type"
fun fun_c2ats_gtk_scrollbar_new: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | type_c2ats_GtkOrientation, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_scrollbar_new"
// File: /usr/include/gtk-3.0/gtk/gtkscrolledwindow.h
abst@ype struct_c2ats__GtkScrolledWindow // FIXME! Forward declaration.
typedef type_c2ats_GtkScrolledWindow = struct_c2ats__GtkScrolledWindow
abst@ype struct_c2ats__GtkScrolledWindowPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkScrolledWindowPrivate = struct_c2ats__GtkScrolledWindowPrivate
abst@ype struct_c2ats__GtkScrolledWindowClass // FIXME! Forward declaration.
typedef type_c2ats_GtkScrolledWindowClass = struct_c2ats__GtkScrolledWindowClass
typedef struct_c2ats__GtkScrolledWindow = $extype_struct"struct _GtkScrolledWindow" of {
  container = type_c2ats_GtkBin,
  priv = ptr (* cPtr0(type_c2ats_GtkScrolledWindowPrivate) *)
}
typedef struct_c2ats__GtkScrolledWindowClass = $extype_struct"struct _GtkScrolledWindowClass" of {
  parent_class = type_c2ats_GtkBinClass,
  scrollbar_spacing = type_c2ats_gint,
  scroll_child = {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1, type_c2ats_GtkScrollType, type_c2ats_gboolean) -> type_c2ats_gboolean,
  move_focus_out = {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1, type_c2ats_GtkDirectionType) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
typedef type_c2ats_GtkCornerType = int
#define enum_c2ats_GTK_CORNER_TOP_LEFT 0
#define enum_c2ats_GTK_CORNER_BOTTOM_LEFT 1
#define enum_c2ats_GTK_CORNER_TOP_RIGHT 2
#define enum_c2ats_GTK_CORNER_BOTTOM_RIGHT 3
typedef type_c2ats_GtkPolicyType = int
#define enum_c2ats_GTK_POLICY_ALWAYS 0
#define enum_c2ats_GTK_POLICY_AUTOMATIC 1
#define enum_c2ats_GTK_POLICY_NEVER 2
#define enum_c2ats_GTK_POLICY_EXTERNAL 3
fun fun_c2ats_gtk_scrolled_window_get_type: () -> type_c2ats_GType = "mac#gtk_scrolled_window_get_type"
fun fun_c2ats_gtk_scrolled_window_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_scrolled_window_new"
fun fun_c2ats_gtk_scrolled_window_set_hadjustment: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> void = "mac#gtk_scrolled_window_set_hadjustment"
fun fun_c2ats_gtk_scrolled_window_set_vadjustment: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> void = "mac#gtk_scrolled_window_set_vadjustment"
fun fun_c2ats_gtk_scrolled_window_get_hadjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_scrolled_window_get_hadjustment"
fun fun_c2ats_gtk_scrolled_window_get_vadjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_scrolled_window_get_vadjustment"
fun fun_c2ats_gtk_scrolled_window_get_hscrollbar: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_scrolled_window_get_hscrollbar"
fun fun_c2ats_gtk_scrolled_window_get_vscrollbar: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_scrolled_window_get_vscrollbar"
fun fun_c2ats_gtk_scrolled_window_set_policy: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1, type_c2ats_GtkPolicyType, type_c2ats_GtkPolicyType) -> void = "mac#gtk_scrolled_window_set_policy"
fun fun_c2ats_gtk_scrolled_window_get_policy: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1), !ptr_v_1(type_c2ats_GtkPolicyType, l2), !ptr_v_1(type_c2ats_GtkPolicyType, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_scrolled_window_get_policy"
fun fun_c2ats_gtk_scrolled_window_set_placement: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1, type_c2ats_GtkCornerType) -> void = "mac#gtk_scrolled_window_set_placement"
fun fun_c2ats_gtk_scrolled_window_unset_placement: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1) -> void = "mac#gtk_scrolled_window_unset_placement"
fun fun_c2ats_gtk_scrolled_window_get_placement: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1) -> type_c2ats_GtkCornerType = "mac#gtk_scrolled_window_get_placement"
fun fun_c2ats_gtk_scrolled_window_set_shadow_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1, type_c2ats_GtkShadowType) -> void = "mac#gtk_scrolled_window_set_shadow_type"
fun fun_c2ats_gtk_scrolled_window_get_shadow_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1) -> type_c2ats_GtkShadowType = "mac#gtk_scrolled_window_get_shadow_type"
fun fun_c2ats_gtk_scrolled_window_add_with_viewport: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_scrolled_window_add_with_viewport"
fun fun_c2ats_gtk_scrolled_window_get_min_content_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_scrolled_window_get_min_content_width"
fun fun_c2ats_gtk_scrolled_window_set_min_content_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_scrolled_window_set_min_content_width"
fun fun_c2ats_gtk_scrolled_window_get_min_content_height: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_scrolled_window_get_min_content_height"
fun fun_c2ats_gtk_scrolled_window_set_min_content_height: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_scrolled_window_set_min_content_height"
fun fun_c2ats_gtk_scrolled_window_set_kinetic_scrolling: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_scrolled_window_set_kinetic_scrolling"
fun fun_c2ats_gtk_scrolled_window_get_kinetic_scrolling: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_scrolled_window_get_kinetic_scrolling"
fun fun_c2ats_gtk_scrolled_window_set_capture_button_press: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_scrolled_window_set_capture_button_press"
fun fun_c2ats_gtk_scrolled_window_get_capture_button_press: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_scrolled_window_get_capture_button_press"
fun fun_c2ats_gtk_scrolled_window_set_overlay_scrolling: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_scrolled_window_set_overlay_scrolling"
fun fun_c2ats_gtk_scrolled_window_get_overlay_scrolling: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_scrolled_window_get_overlay_scrolling"
fun fun_c2ats_gtk_scrolled_window_set_max_content_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_scrolled_window_set_max_content_width"
fun fun_c2ats_gtk_scrolled_window_get_max_content_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_scrolled_window_get_max_content_width"
fun fun_c2ats_gtk_scrolled_window_set_max_content_height: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_scrolled_window_set_max_content_height"
fun fun_c2ats_gtk_scrolled_window_get_max_content_height: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_scrolled_window_get_max_content_height"
fun fun_c2ats_gtk_scrolled_window_set_propagate_natural_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_scrolled_window_set_propagate_natural_width"
fun fun_c2ats_gtk_scrolled_window_get_propagate_natural_width: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_scrolled_window_get_propagate_natural_width"
fun fun_c2ats_gtk_scrolled_window_set_propagate_natural_height: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_scrolled_window_set_propagate_natural_height"
fun fun_c2ats_gtk_scrolled_window_get_propagate_natural_height: {l1:addr} (!ptr_v_1(type_c2ats_GtkScrolledWindow, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_scrolled_window_get_propagate_natural_height"
// File: /usr/include/gtk-3.0/gtk/gtksearchbar.h
abst@ype struct_c2ats__GtkSearchBar // FIXME! Forward declaration.
typedef type_c2ats_GtkSearchBar = struct_c2ats__GtkSearchBar
abst@ype struct_c2ats__GtkSearchBarClass // FIXME! Forward declaration.
typedef type_c2ats_GtkSearchBarClass = struct_c2ats__GtkSearchBarClass
typedef struct_c2ats__GtkSearchBar = $extype_struct"struct _GtkSearchBar" of {
  parent = type_c2ats_GtkBin
}
typedef struct_c2ats__GtkSearchBarClass = $extype_struct"struct _GtkSearchBarClass" of {
  parent_class = type_c2ats_GtkBinClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_search_bar_get_type: () -> type_c2ats_GType = "mac#gtk_search_bar_get_type"
fun fun_c2ats_gtk_search_bar_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_search_bar_new"
fun fun_c2ats_gtk_search_bar_connect_entry: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkSearchBar, l1), !ptr_v_1(type_c2ats_GtkEntry, l2) | ptr l1, ptr l2) -> void = "mac#gtk_search_bar_connect_entry"
fun fun_c2ats_gtk_search_bar_get_search_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkSearchBar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_search_bar_get_search_mode"
fun fun_c2ats_gtk_search_bar_set_search_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkSearchBar, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_search_bar_set_search_mode"
fun fun_c2ats_gtk_search_bar_get_show_close_button: {l1:addr} (!ptr_v_1(type_c2ats_GtkSearchBar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_search_bar_get_show_close_button"
fun fun_c2ats_gtk_search_bar_set_show_close_button: {l1:addr} (!ptr_v_1(type_c2ats_GtkSearchBar, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_search_bar_set_show_close_button"
fun fun_c2ats_gtk_search_bar_handle_event: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkSearchBar, l1), !ptr_v_1(type_c2ats_GdkEvent, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_search_bar_handle_event"
// File: /usr/include/gtk-3.0/gtk/gtksearchentry.h
abst@ype struct_c2ats__GtkSearchEntry // FIXME! Forward declaration.
typedef type_c2ats_GtkSearchEntry = struct_c2ats__GtkSearchEntry
abst@ype struct_c2ats__GtkSearchEntryClass // FIXME! Forward declaration.
typedef type_c2ats_GtkSearchEntryClass = struct_c2ats__GtkSearchEntryClass
typedef struct_c2ats__GtkSearchEntry = $extype_struct"struct _GtkSearchEntry" of {
  parent = type_c2ats_GtkEntry
}
typedef struct_c2ats__GtkSearchEntryClass = $extype_struct"struct _GtkSearchEntryClass" of {
  parent_class = type_c2ats_GtkEntryClass,
  search_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkSearchEntry, l1) | ptr l1) -> void,
  next_match = {l1:addr} (!ptr_v_1(type_c2ats_GtkSearchEntry, l1) | ptr l1) -> void,
  previous_match = {l1:addr} (!ptr_v_1(type_c2ats_GtkSearchEntry, l1) | ptr l1) -> void,
  stop_search = {l1:addr} (!ptr_v_1(type_c2ats_GtkSearchEntry, l1) | ptr l1) -> void
}
fun fun_c2ats_gtk_search_entry_get_type: () -> type_c2ats_GType = "mac#gtk_search_entry_get_type"
fun fun_c2ats_gtk_search_entry_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_search_entry_new"
fun fun_c2ats_gtk_search_entry_handle_event: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkSearchEntry, l1), !ptr_v_1(type_c2ats_GdkEvent, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_search_entry_handle_event"
// File: /usr/include/gtk-3.0/gtk/gtkseparator.h
abst@ype struct_c2ats__GtkSeparator // FIXME! Forward declaration.
typedef type_c2ats_GtkSeparator = struct_c2ats__GtkSeparator
abst@ype struct_c2ats__GtkSeparatorPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkSeparatorPrivate = struct_c2ats__GtkSeparatorPrivate
abst@ype struct_c2ats__GtkSeparatorClass // FIXME! Forward declaration.
typedef type_c2ats_GtkSeparatorClass = struct_c2ats__GtkSeparatorClass
typedef struct_c2ats__GtkSeparator = $extype_struct"struct _GtkSeparator" of {
  widget = type_c2ats_GtkWidget,
  priv = ptr (* cPtr0(type_c2ats_GtkSeparatorPrivate) *)
}
typedef struct_c2ats__GtkSeparatorClass = $extype_struct"struct _GtkSeparatorClass" of {
  parent_class = type_c2ats_GtkWidgetClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_separator_get_type: () -> type_c2ats_GType = "mac#gtk_separator_get_type"
fun fun_c2ats_gtk_separator_new: (type_c2ats_GtkOrientation) -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_separator_new"
// File: /usr/include/gtk-3.0/gtk/gtkseparatormenuitem.h
abst@ype struct_c2ats__GtkSeparatorMenuItem // FIXME! Forward declaration.
typedef type_c2ats_GtkSeparatorMenuItem = struct_c2ats__GtkSeparatorMenuItem
abst@ype struct_c2ats__GtkSeparatorMenuItemClass // FIXME! Forward declaration.
typedef type_c2ats_GtkSeparatorMenuItemClass = struct_c2ats__GtkSeparatorMenuItemClass
typedef struct_c2ats__GtkSeparatorMenuItem = $extype_struct"struct _GtkSeparatorMenuItem" of {
  menu_item = type_c2ats_GtkMenuItem
}
typedef struct_c2ats__GtkSeparatorMenuItemClass = $extype_struct"struct _GtkSeparatorMenuItemClass" of {
  parent_class = type_c2ats_GtkMenuItemClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_separator_menu_item_get_type: () -> type_c2ats_GType = "mac#gtk_separator_menu_item_get_type"
fun fun_c2ats_gtk_separator_menu_item_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_separator_menu_item_new"
// File: /usr/include/gtk-3.0/gtk/gtkseparatortoolitem.h
abst@ype struct_c2ats__GtkSeparatorToolItem // FIXME! Forward declaration.
typedef type_c2ats_GtkSeparatorToolItem = struct_c2ats__GtkSeparatorToolItem
abst@ype struct_c2ats__GtkSeparatorToolItemClass // FIXME! Forward declaration.
typedef type_c2ats_GtkSeparatorToolItemClass = struct_c2ats__GtkSeparatorToolItemClass
abst@ype struct_c2ats__GtkSeparatorToolItemPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkSeparatorToolItemPrivate = struct_c2ats__GtkSeparatorToolItemPrivate
typedef struct_c2ats__GtkSeparatorToolItem = $extype_struct"struct _GtkSeparatorToolItem" of {
  parent = type_c2ats_GtkToolItem,
  priv = ptr (* cPtr0(type_c2ats_GtkSeparatorToolItemPrivate) *)
}
typedef struct_c2ats__GtkSeparatorToolItemClass = $extype_struct"struct _GtkSeparatorToolItemClass" of {
  parent_class = type_c2ats_GtkToolItemClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_separator_tool_item_get_type: () -> type_c2ats_GType = "mac#gtk_separator_tool_item_get_type"
fun fun_c2ats_gtk_separator_tool_item_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkToolItem, l1) | ptr l1) = "mac#gtk_separator_tool_item_new"
fun fun_c2ats_gtk_separator_tool_item_get_draw: {l1:addr} (!ptr_v_1(type_c2ats_GtkSeparatorToolItem, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_separator_tool_item_get_draw"
fun fun_c2ats_gtk_separator_tool_item_set_draw: {l1:addr} (!ptr_v_1(type_c2ats_GtkSeparatorToolItem, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_separator_tool_item_set_draw"
// File: /usr/include/gtk-3.0/gtk/gtksettings.h
abst@ype struct_c2ats__GtkSettingsPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkSettingsPrivate = struct_c2ats__GtkSettingsPrivate
abst@ype struct_c2ats__GtkSettingsClass // FIXME! Forward declaration.
typedef type_c2ats_GtkSettingsClass = struct_c2ats__GtkSettingsClass
abst@ype struct_c2ats__GtkSettingsValue // FIXME! Forward declaration.
typedef type_c2ats_GtkSettingsValue = struct_c2ats__GtkSettingsValue
typedef struct_c2ats__GtkSettings = $extype_struct"struct _GtkSettings" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkSettingsPrivate) *)
}
typedef struct_c2ats__GtkSettingsClass = $extype_struct"struct _GtkSettingsClass" of {
  parent_class = type_c2ats_GObjectClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
typedef struct_c2ats__GtkSettingsValue = $extype_struct"struct _GtkSettingsValue" of {
  origin = ptr (* cPtr0(type_c2ats_gchar) *),
  value = type_c2ats_GValue
}
fun fun_c2ats_gtk_settings_get_type: () -> type_c2ats_GType = "mac#gtk_settings_get_type"
fun fun_c2ats_gtk_settings_get_default: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkSettings, l1) | ptr l1) = "mac#gtk_settings_get_default"
fun fun_c2ats_gtk_settings_get_for_screen: {l1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSettings, l2) | ptr l2) = "mac#gtk_settings_get_for_screen"
fun fun_c2ats_gtk_settings_install_property: {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | ptr l1) -> void = "mac#gtk_settings_install_property"
fun fun_c2ats_gtk_settings_install_property_parser: {l1:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1) | ptr l1, type_c2ats_GtkRcPropertyParser) -> void = "mac#gtk_settings_install_property_parser"
fun fun_c2ats_gtk_rc_property_parse_color: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1), !ptr_v_1(type_c2ats_GString, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_rc_property_parse_color"
fun fun_c2ats_gtk_rc_property_parse_enum: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1), !ptr_v_1(type_c2ats_GString, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_rc_property_parse_enum"
fun fun_c2ats_gtk_rc_property_parse_flags: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1), !ptr_v_1(type_c2ats_GString, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_rc_property_parse_flags"
fun fun_c2ats_gtk_rc_property_parse_requisition: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1), !ptr_v_1(type_c2ats_GString, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_rc_property_parse_requisition"
fun fun_c2ats_gtk_rc_property_parse_border: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GParamSpec, l1), !ptr_v_1(type_c2ats_GString, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_rc_property_parse_border"
fun fun_c2ats_gtk_settings_set_property_value: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkSettings, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkSettingsValue, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_settings_set_property_value"
fun fun_c2ats_gtk_settings_set_string_property: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkSettings, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_settings_set_string_property"
fun fun_c2ats_gtk_settings_set_long_property: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkSettings, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, type_c2ats_glong, ptr l3) -> void = "mac#gtk_settings_set_long_property"
fun fun_c2ats_gtk_settings_set_double_property: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkSettings, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, type_c2ats_gdouble, ptr l3) -> void = "mac#gtk_settings_set_double_property"
fun fun_c2ats_gtk_settings_reset_property: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkSettings, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_settings_reset_property"
// File: /usr/include/gtk-3.0/gtk/gtkshortcutlabel.h
abst@ype struct_c2ats__GtkShortcutLabel // FIXME! Forward declaration.
typedef type_c2ats_GtkShortcutLabel = struct_c2ats__GtkShortcutLabel
abst@ype struct_c2ats__GtkShortcutLabelClass // FIXME! Forward declaration.
typedef type_c2ats_GtkShortcutLabelClass = struct_c2ats__GtkShortcutLabelClass
fun fun_c2ats_gtk_shortcut_label_get_type: () -> type_c2ats_GType = "mac#gtk_shortcut_label_get_type"
fun fun_c2ats_gtk_shortcut_label_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_shortcut_label_new"
fun fun_c2ats_gtk_shortcut_label_get_accelerator: {l1:addr} (!ptr_v_1(type_c2ats_GtkShortcutLabel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_shortcut_label_get_accelerator"
fun fun_c2ats_gtk_shortcut_label_set_accelerator: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkShortcutLabel, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_shortcut_label_set_accelerator"
fun fun_c2ats_gtk_shortcut_label_get_disabled_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkShortcutLabel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_shortcut_label_get_disabled_text"
fun fun_c2ats_gtk_shortcut_label_set_disabled_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkShortcutLabel, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_shortcut_label_set_disabled_text"
// File: /usr/include/gtk-3.0/gtk/gtkshortcutsgroup.h
abst@ype struct_c2ats__GtkShortcutsGroup // FIXME! Forward declaration.
typedef type_c2ats_GtkShortcutsGroup = struct_c2ats__GtkShortcutsGroup
abst@ype struct_c2ats__GtkShortcutsGroupClass // FIXME! Forward declaration.
typedef type_c2ats_GtkShortcutsGroupClass = struct_c2ats__GtkShortcutsGroupClass
fun fun_c2ats_gtk_shortcuts_group_get_type: () -> type_c2ats_GType = "mac#gtk_shortcuts_group_get_type"
// File: /usr/include/gtk-3.0/gtk/gtkshortcutssection.h
abst@ype struct_c2ats__GtkShortcutsSection // FIXME! Forward declaration.
typedef type_c2ats_GtkShortcutsSection = struct_c2ats__GtkShortcutsSection
abst@ype struct_c2ats__GtkShortcutsSectionClass // FIXME! Forward declaration.
typedef type_c2ats_GtkShortcutsSectionClass = struct_c2ats__GtkShortcutsSectionClass
fun fun_c2ats_gtk_shortcuts_section_get_type: () -> type_c2ats_GType = "mac#gtk_shortcuts_section_get_type"
// File: /usr/include/gtk-3.0/gtk/gtkshortcutsshortcut.h
abst@ype struct_c2ats__GtkShortcutsShortcut // FIXME! Forward declaration.
typedef type_c2ats_GtkShortcutsShortcut = struct_c2ats__GtkShortcutsShortcut
abst@ype struct_c2ats__GtkShortcutsShortcutClass // FIXME! Forward declaration.
typedef type_c2ats_GtkShortcutsShortcutClass = struct_c2ats__GtkShortcutsShortcutClass
typedef type_c2ats_GtkShortcutType = int
#define enum_c2ats_GTK_SHORTCUT_ACCELERATOR 0
#define enum_c2ats_GTK_SHORTCUT_GESTURE_PINCH 1
#define enum_c2ats_GTK_SHORTCUT_GESTURE_STRETCH 2
#define enum_c2ats_GTK_SHORTCUT_GESTURE_ROTATE_CLOCKWISE 3
#define enum_c2ats_GTK_SHORTCUT_GESTURE_ROTATE_COUNTERCLOCKWISE 4
#define enum_c2ats_GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_LEFT 5
#define enum_c2ats_GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_RIGHT 6
#define enum_c2ats_GTK_SHORTCUT_GESTURE 7
fun fun_c2ats_gtk_shortcuts_shortcut_get_type: () -> type_c2ats_GType = "mac#gtk_shortcuts_shortcut_get_type"
// File: /usr/include/gtk-3.0/gtk/gtkshow.h
fun fun_c2ats_gtk_show_uri: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_guint32, ptr l3) -> type_c2ats_gboolean = "mac#gtk_show_uri"
fun fun_c2ats_gtk_show_uri_on_window: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkWindow, l1), !ptr_v_1(char, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_guint32, ptr l3) -> type_c2ats_gboolean = "mac#gtk_show_uri_on_window"
// File: /usr/include/gtk-3.0/gtk/gtkstack.h
abst@ype struct_c2ats__GtkStack // FIXME! Forward declaration.
typedef type_c2ats_GtkStack = struct_c2ats__GtkStack
abst@ype struct_c2ats__GtkStackClass // FIXME! Forward declaration.
typedef type_c2ats_GtkStackClass = struct_c2ats__GtkStackClass
typedef type_c2ats_GtkStackTransitionType = int
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_NONE 0
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_CROSSFADE 1
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_SLIDE_RIGHT 2
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT 3
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_SLIDE_UP 4
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_SLIDE_DOWN 5
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT_RIGHT 6
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_SLIDE_UP_DOWN 7
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_OVER_UP 8
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_OVER_DOWN 9
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_OVER_LEFT 10
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_OVER_RIGHT 11
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_UNDER_UP 12
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_UNDER_DOWN 13
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_UNDER_LEFT 14
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_UNDER_RIGHT 15
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_OVER_UP_DOWN 16
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_OVER_DOWN_UP 17
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_OVER_LEFT_RIGHT 18
#define enum_c2ats_GTK_STACK_TRANSITION_TYPE_OVER_RIGHT_LEFT 19
typedef struct_c2ats__GtkStack = $extype_struct"struct _GtkStack" of {
  parent_instance = type_c2ats_GtkContainer
}
typedef struct_c2ats__GtkStackClass = $extype_struct"struct _GtkStackClass" of {
  parent_class = type_c2ats_GtkContainerClass
}
fun fun_c2ats_gtk_stack_get_type: () -> type_c2ats_GType = "mac#gtk_stack_get_type"
fun fun_c2ats_gtk_stack_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_stack_new"
fun fun_c2ats_gtk_stack_add_named: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkStack, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_stack_add_named"
fun fun_c2ats_gtk_stack_add_titled: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStack, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_stack_add_titled"
fun fun_c2ats_gtk_stack_get_child_by_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStack, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_stack_get_child_by_name"
fun fun_c2ats_gtk_stack_set_visible_child: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStack, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_stack_set_visible_child"
fun fun_c2ats_gtk_stack_get_visible_child: {l1:addr} (!ptr_v_1(type_c2ats_GtkStack, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_stack_get_visible_child"
fun fun_c2ats_gtk_stack_set_visible_child_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStack, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_stack_set_visible_child_name"
fun fun_c2ats_gtk_stack_get_visible_child_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkStack, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_stack_get_visible_child_name"
fun fun_c2ats_gtk_stack_set_visible_child_full: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStack, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GtkStackTransitionType) -> void = "mac#gtk_stack_set_visible_child_full"
fun fun_c2ats_gtk_stack_set_homogeneous: {l1:addr} (!ptr_v_1(type_c2ats_GtkStack, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_stack_set_homogeneous"
fun fun_c2ats_gtk_stack_get_homogeneous: {l1:addr} (!ptr_v_1(type_c2ats_GtkStack, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_stack_get_homogeneous"
fun fun_c2ats_gtk_stack_set_hhomogeneous: {l1:addr} (!ptr_v_1(type_c2ats_GtkStack, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_stack_set_hhomogeneous"
fun fun_c2ats_gtk_stack_get_hhomogeneous: {l1:addr} (!ptr_v_1(type_c2ats_GtkStack, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_stack_get_hhomogeneous"
fun fun_c2ats_gtk_stack_set_vhomogeneous: {l1:addr} (!ptr_v_1(type_c2ats_GtkStack, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_stack_set_vhomogeneous"
fun fun_c2ats_gtk_stack_get_vhomogeneous: {l1:addr} (!ptr_v_1(type_c2ats_GtkStack, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_stack_get_vhomogeneous"
fun fun_c2ats_gtk_stack_set_transition_duration: {l1:addr} (!ptr_v_1(type_c2ats_GtkStack, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_stack_set_transition_duration"
fun fun_c2ats_gtk_stack_get_transition_duration: {l1:addr} (!ptr_v_1(type_c2ats_GtkStack, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_stack_get_transition_duration"
fun fun_c2ats_gtk_stack_set_transition_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkStack, l1) | ptr l1, type_c2ats_GtkStackTransitionType) -> void = "mac#gtk_stack_set_transition_type"
fun fun_c2ats_gtk_stack_get_transition_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkStack, l1) | ptr l1) -> type_c2ats_GtkStackTransitionType = "mac#gtk_stack_get_transition_type"
fun fun_c2ats_gtk_stack_get_transition_running: {l1:addr} (!ptr_v_1(type_c2ats_GtkStack, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_stack_get_transition_running"
fun fun_c2ats_gtk_stack_set_interpolate_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkStack, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_stack_set_interpolate_size"
fun fun_c2ats_gtk_stack_get_interpolate_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkStack, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_stack_get_interpolate_size"
// File: /usr/include/gtk-3.0/gtk/gtkstacksidebar.h
abst@ype struct_c2ats__GtkStackSidebar // FIXME! Forward declaration.
typedef type_c2ats_GtkStackSidebar = struct_c2ats__GtkStackSidebar
abst@ype struct_c2ats__GtkStackSidebarPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkStackSidebarPrivate = struct_c2ats__GtkStackSidebarPrivate
abst@ype struct_c2ats__GtkStackSidebarClass // FIXME! Forward declaration.
typedef type_c2ats_GtkStackSidebarClass = struct_c2ats__GtkStackSidebarClass
typedef struct_c2ats__GtkStackSidebar = $extype_struct"struct _GtkStackSidebar" of {
  parent = type_c2ats_GtkBin
}
typedef struct_c2ats__GtkStackSidebarClass = $extype_struct"struct _GtkStackSidebarClass" of {
  parent_class = type_c2ats_GtkBinClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_stack_sidebar_get_type: () -> type_c2ats_GType = "mac#gtk_stack_sidebar_get_type"
fun fun_c2ats_gtk_stack_sidebar_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_stack_sidebar_new"
fun fun_c2ats_gtk_stack_sidebar_set_stack: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStackSidebar, l1), !ptr_v_1(type_c2ats_GtkStack, l2) | ptr l1, ptr l2) -> void = "mac#gtk_stack_sidebar_set_stack"
fun fun_c2ats_gtk_stack_sidebar_get_stack: {l1:addr} (!ptr_v_1(type_c2ats_GtkStackSidebar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStack, l2) | ptr l2) = "mac#gtk_stack_sidebar_get_stack"
// File: /usr/include/gtk-3.0/gtk/gtksizerequest.h
abst@ype struct_c2ats__GtkRequestedSize // FIXME! Forward declaration.
typedef type_c2ats_GtkRequestedSize = struct_c2ats__GtkRequestedSize
typedef struct_c2ats__GtkRequestedSize = $extype_struct"struct _GtkRequestedSize" of {
  data = type_c2ats_gpointer,
  minimum_size = type_c2ats_gint,
  natural_size = type_c2ats_gint
}
fun fun_c2ats_gtk_distribute_natural_allocation: {l1:addr} (!ptr_v_1(type_c2ats_GtkRequestedSize, l1) | type_c2ats_gint, type_c2ats_guint, ptr l1) -> type_c2ats_gint = "mac#gtk_distribute_natural_allocation"
// File: /usr/include/gtk-3.0/gtk/gtkspinbutton.h
typedef type_c2ats_GtkSpinButtonUpdatePolicy = int
#define enum_c2ats_GTK_UPDATE_ALWAYS 0
#define enum_c2ats_GTK_UPDATE_IF_VALID 1
typedef type_c2ats_GtkSpinType = int
#define enum_c2ats_GTK_SPIN_STEP_FORWARD 0
#define enum_c2ats_GTK_SPIN_STEP_BACKWARD 1
#define enum_c2ats_GTK_SPIN_PAGE_FORWARD 2
#define enum_c2ats_GTK_SPIN_PAGE_BACKWARD 3
#define enum_c2ats_GTK_SPIN_HOME 4
#define enum_c2ats_GTK_SPIN_END 5
#define enum_c2ats_GTK_SPIN_USER_DEFINED 6
abst@ype struct_c2ats__GtkSpinButton // FIXME! Forward declaration.
typedef type_c2ats_GtkSpinButton = struct_c2ats__GtkSpinButton
abst@ype struct_c2ats__GtkSpinButtonPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkSpinButtonPrivate = struct_c2ats__GtkSpinButtonPrivate
abst@ype struct_c2ats__GtkSpinButtonClass // FIXME! Forward declaration.
typedef type_c2ats_GtkSpinButtonClass = struct_c2ats__GtkSpinButtonClass
typedef struct_c2ats__GtkSpinButton = $extype_struct"struct _GtkSpinButton" of {
  entry = type_c2ats_GtkEntry,
  priv = ptr (* cPtr0(type_c2ats_GtkSpinButtonPrivate) *)
}
typedef struct_c2ats__GtkSpinButtonClass = $extype_struct"struct _GtkSpinButtonClass" of {
  parent_class = type_c2ats_GtkEntryClass,
  input = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1), !ptr_v_1(type_c2ats_gdouble, l2) | ptr l1, ptr l2) -> type_c2ats_gint,
  output = {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1) -> type_c2ats_gint,
  value_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1) -> void,
  change_value = {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1, type_c2ats_GtkScrollType) -> void,
  wrapped = {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_spin_button_get_type: () -> type_c2ats_GType = "mac#gtk_spin_button_get_type"
fun fun_c2ats_gtk_spin_button_configure: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_guint) -> void = "mac#gtk_spin_button_configure"
fun fun_c2ats_gtk_spin_button_new: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1, type_c2ats_gdouble, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_spin_button_new"
fun fun_c2ats_gtk_spin_button_new_with_range: (type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_spin_button_new_with_range"
fun fun_c2ats_gtk_spin_button_set_adjustment: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> void = "mac#gtk_spin_button_set_adjustment"
fun fun_c2ats_gtk_spin_button_get_adjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_spin_button_get_adjustment"
fun fun_c2ats_gtk_spin_button_set_digits: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_spin_button_set_digits"
fun fun_c2ats_gtk_spin_button_get_digits: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_spin_button_get_digits"
fun fun_c2ats_gtk_spin_button_set_increments: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_spin_button_set_increments"
fun fun_c2ats_gtk_spin_button_get_increments: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_spin_button_get_increments"
fun fun_c2ats_gtk_spin_button_set_range: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_spin_button_set_range"
fun fun_c2ats_gtk_spin_button_get_range: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_spin_button_get_range"
fun fun_c2ats_gtk_spin_button_get_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1) -> type_c2ats_gdouble = "mac#gtk_spin_button_get_value"
fun fun_c2ats_gtk_spin_button_get_value_as_int: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_spin_button_get_value_as_int"
fun fun_c2ats_gtk_spin_button_set_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1, type_c2ats_gdouble) -> void = "mac#gtk_spin_button_set_value"
fun fun_c2ats_gtk_spin_button_set_update_policy: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1, type_c2ats_GtkSpinButtonUpdatePolicy) -> void = "mac#gtk_spin_button_set_update_policy"
fun fun_c2ats_gtk_spin_button_get_update_policy: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1) -> type_c2ats_GtkSpinButtonUpdatePolicy = "mac#gtk_spin_button_get_update_policy"
fun fun_c2ats_gtk_spin_button_set_numeric: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_spin_button_set_numeric"
fun fun_c2ats_gtk_spin_button_get_numeric: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_spin_button_get_numeric"
fun fun_c2ats_gtk_spin_button_spin: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1, type_c2ats_GtkSpinType, type_c2ats_gdouble) -> void = "mac#gtk_spin_button_spin"
fun fun_c2ats_gtk_spin_button_set_wrap: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_spin_button_set_wrap"
fun fun_c2ats_gtk_spin_button_get_wrap: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_spin_button_get_wrap"
fun fun_c2ats_gtk_spin_button_set_snap_to_ticks: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_spin_button_set_snap_to_ticks"
fun fun_c2ats_gtk_spin_button_get_snap_to_ticks: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_spin_button_get_snap_to_ticks"
fun fun_c2ats_gtk_spin_button_update: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1) -> void = "mac#gtk_spin_button_update"
fun fun_c2ats__gtk_spin_button_get_panels: {l1,l2,l2_1,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1), !ptr_v_2(type_c2ats_GdkWindow, l2, l2_1), !ptr_v_2(type_c2ats_GdkWindow, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> void = "mac#_gtk_spin_button_get_panels"
// File: /usr/include/gtk-3.0/gtk/gtkspinner.h
abst@ype struct_c2ats__GtkSpinner // FIXME! Forward declaration.
typedef type_c2ats_GtkSpinner = struct_c2ats__GtkSpinner
abst@ype struct_c2ats__GtkSpinnerClass // FIXME! Forward declaration.
typedef type_c2ats_GtkSpinnerClass = struct_c2ats__GtkSpinnerClass
abst@ype struct_c2ats__GtkSpinnerPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkSpinnerPrivate = struct_c2ats__GtkSpinnerPrivate
typedef struct_c2ats__GtkSpinner = $extype_struct"struct _GtkSpinner" of {
  parent = type_c2ats_GtkWidget,
  priv = ptr (* cPtr0(type_c2ats_GtkSpinnerPrivate) *)
}
typedef struct_c2ats__GtkSpinnerClass = $extype_struct"struct _GtkSpinnerClass" of {
  parent_class = type_c2ats_GtkWidgetClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_spinner_get_type: () -> type_c2ats_GType = "mac#gtk_spinner_get_type"
fun fun_c2ats_gtk_spinner_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_spinner_new"
fun fun_c2ats_gtk_spinner_start: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinner, l1) | ptr l1) -> void = "mac#gtk_spinner_start"
fun fun_c2ats_gtk_spinner_stop: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinner, l1) | ptr l1) -> void = "mac#gtk_spinner_stop"
// File: /usr/include/gtk-3.0/gtk/gtkstackswitcher.h
abst@ype struct_c2ats__GtkStackSwitcher // FIXME! Forward declaration.
typedef type_c2ats_GtkStackSwitcher = struct_c2ats__GtkStackSwitcher
abst@ype struct_c2ats__GtkStackSwitcherClass // FIXME! Forward declaration.
typedef type_c2ats_GtkStackSwitcherClass = struct_c2ats__GtkStackSwitcherClass
typedef struct_c2ats__GtkStackSwitcher = $extype_struct"struct _GtkStackSwitcher" of {
  widget = type_c2ats_GtkBox
}
typedef struct_c2ats__GtkStackSwitcherClass = $extype_struct"struct _GtkStackSwitcherClass" of {
  parent_class = type_c2ats_GtkBoxClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_stack_switcher_get_type: () -> type_c2ats_GType = "mac#gtk_stack_switcher_get_type"
fun fun_c2ats_gtk_stack_switcher_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_stack_switcher_new"
fun fun_c2ats_gtk_stack_switcher_set_stack: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStackSwitcher, l1), !ptr_v_1(type_c2ats_GtkStack, l2) | ptr l1, ptr l2) -> void = "mac#gtk_stack_switcher_set_stack"
fun fun_c2ats_gtk_stack_switcher_get_stack: {l1:addr} (!ptr_v_1(type_c2ats_GtkStackSwitcher, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStack, l2) | ptr l2) = "mac#gtk_stack_switcher_get_stack"
// File: /usr/include/gtk-3.0/gtk/gtkstatusbar.h
abst@ype struct_c2ats__GtkStatusbar // FIXME! Forward declaration.
typedef type_c2ats_GtkStatusbar = struct_c2ats__GtkStatusbar
abst@ype struct_c2ats__GtkStatusbarPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkStatusbarPrivate = struct_c2ats__GtkStatusbarPrivate
abst@ype struct_c2ats__GtkStatusbarClass // FIXME! Forward declaration.
typedef type_c2ats_GtkStatusbarClass = struct_c2ats__GtkStatusbarClass
typedef struct_c2ats__GtkStatusbar = $extype_struct"struct _GtkStatusbar" of {
  parent_widget = type_c2ats_GtkBox,
  priv = ptr (* cPtr0(type_c2ats_GtkStatusbarPrivate) *)
}
typedef struct_c2ats__GtkStatusbarClass = $extype_struct"struct _GtkStatusbarClass" of {
  parent_class = type_c2ats_GtkBoxClass,
  reserved = type_c2ats_gpointer,
  text_pushed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStatusbar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_guint, ptr l2) -> void,
  text_popped = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStatusbar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_guint, ptr l2) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_statusbar_get_type: () -> type_c2ats_GType = "mac#gtk_statusbar_get_type"
fun fun_c2ats_gtk_statusbar_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_statusbar_new"
fun fun_c2ats_gtk_statusbar_get_context_id: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStatusbar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_guint = "mac#gtk_statusbar_get_context_id"
fun fun_c2ats_gtk_statusbar_push: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStatusbar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_guint, ptr l2) -> type_c2ats_guint = "mac#gtk_statusbar_push"
fun fun_c2ats_gtk_statusbar_pop: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusbar, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_statusbar_pop"
fun fun_c2ats_gtk_statusbar_remove: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusbar, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint) -> void = "mac#gtk_statusbar_remove"
fun fun_c2ats_gtk_statusbar_remove_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusbar, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_statusbar_remove_all"
fun fun_c2ats_gtk_statusbar_get_message_area: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusbar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_statusbar_get_message_area"
// File: /usr/include/gtk-3.0/gtk/gtkswitch.h
abst@ype struct_c2ats__GtkSwitch // FIXME! Forward declaration.
typedef type_c2ats_GtkSwitch = struct_c2ats__GtkSwitch
abst@ype struct_c2ats__GtkSwitchPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkSwitchPrivate = struct_c2ats__GtkSwitchPrivate
abst@ype struct_c2ats__GtkSwitchClass // FIXME! Forward declaration.
typedef type_c2ats_GtkSwitchClass = struct_c2ats__GtkSwitchClass
typedef struct_c2ats__GtkSwitch = $extype_struct"struct _GtkSwitch" of {
  parent_instance = type_c2ats_GtkWidget,
  priv = ptr (* cPtr0(type_c2ats_GtkSwitchPrivate) *)
}
typedef struct_c2ats__GtkSwitchClass = $extype_struct"struct _GtkSwitchClass" of {
  parent_class = type_c2ats_GtkWidgetClass,
  activate = {l1:addr} (!ptr_v_1(type_c2ats_GtkSwitch, l1) | ptr l1) -> void,
  state_set = {l1:addr} (!ptr_v_1(type_c2ats_GtkSwitch, l1) | ptr l1, type_c2ats_gboolean) -> type_c2ats_gboolean,
  _switch_padding_1 = () -> void,
  _switch_padding_2 = () -> void,
  _switch_padding_3 = () -> void,
  _switch_padding_4 = () -> void,
  _switch_padding_5 = () -> void
}
fun fun_c2ats_gtk_switch_get_type: () -> type_c2ats_GType = "mac#gtk_switch_get_type"
fun fun_c2ats_gtk_switch_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_switch_new"
fun fun_c2ats_gtk_switch_set_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkSwitch, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_switch_set_active"
fun fun_c2ats_gtk_switch_get_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkSwitch, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_switch_get_active"
fun fun_c2ats_gtk_switch_set_state: {l1:addr} (!ptr_v_1(type_c2ats_GtkSwitch, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_switch_set_state"
fun fun_c2ats_gtk_switch_get_state: {l1:addr} (!ptr_v_1(type_c2ats_GtkSwitch, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_switch_get_state"
// File: /usr/include/gtk-3.0/gtk/gtktexttagtable.h
typedef type_c2ats_GtkTextTagTableForeach = {l1:addr} (!ptr_v_1(type_c2ats_GtkTextTag, l1) | ptr l1, type_c2ats_gpointer) -> void
abst@ype struct_c2ats__GtkTextTagTablePrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkTextTagTablePrivate = struct_c2ats__GtkTextTagTablePrivate
abst@ype struct_c2ats__GtkTextTagTableClass // FIXME! Forward declaration.
typedef type_c2ats_GtkTextTagTableClass = struct_c2ats__GtkTextTagTableClass
typedef struct_c2ats__GtkTextTagTable = $extype_struct"struct _GtkTextTagTable" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkTextTagTablePrivate) *)
}
typedef struct_c2ats__GtkTextTagTableClass = $extype_struct"struct _GtkTextTagTableClass" of {
  parent_class = type_c2ats_GObjectClass,
  tag_changed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextTagTable, l1), !ptr_v_1(type_c2ats_GtkTextTag, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void,
  tag_added = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextTagTable, l1), !ptr_v_1(type_c2ats_GtkTextTag, l2) | ptr l1, ptr l2) -> void,
  tag_removed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextTagTable, l1), !ptr_v_1(type_c2ats_GtkTextTag, l2) | ptr l1, ptr l2) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_text_tag_table_get_type: () -> type_c2ats_GType = "mac#gtk_text_tag_table_get_type"
fun fun_c2ats_gtk_text_tag_table_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkTextTagTable, l1) | ptr l1) = "mac#gtk_text_tag_table_new"
fun fun_c2ats_gtk_text_tag_table_add: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextTagTable, l1), !ptr_v_1(type_c2ats_GtkTextTag, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_text_tag_table_add"
fun fun_c2ats_gtk_text_tag_table_remove: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextTagTable, l1), !ptr_v_1(type_c2ats_GtkTextTag, l2) | ptr l1, ptr l2) -> void = "mac#gtk_text_tag_table_remove"
fun fun_c2ats_gtk_text_tag_table_lookup: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextTagTable, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkTextTag, l3) | ptr l3) = "mac#gtk_text_tag_table_lookup"
fun fun_c2ats_gtk_text_tag_table_foreach: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextTagTable, l1) | ptr l1, type_c2ats_GtkTextTagTableForeach, type_c2ats_gpointer) -> void = "mac#gtk_text_tag_table_foreach"
fun fun_c2ats_gtk_text_tag_table_get_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextTagTable, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_tag_table_get_size"
fun fun_c2ats__gtk_text_tag_table_add_buffer: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextTagTable, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#_gtk_text_tag_table_add_buffer"
fun fun_c2ats__gtk_text_tag_table_remove_buffer: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextTagTable, l1) | ptr l1, type_c2ats_gpointer) -> void = "mac#_gtk_text_tag_table_remove_buffer"
// File: /usr/include/gtk-3.0/gtk/gtktextmark.h
abst@ype struct_c2ats__GtkTextMark // FIXME! Forward declaration.
typedef type_c2ats_GtkTextMark = struct_c2ats__GtkTextMark
abst@ype struct_c2ats__GtkTextMarkClass // FIXME! Forward declaration.
typedef type_c2ats_GtkTextMarkClass = struct_c2ats__GtkTextMarkClass
typedef struct_c2ats__GtkTextMark = $extype_struct"struct _GtkTextMark" of {
  parent_instance = type_c2ats_GObject,
  segment = type_c2ats_gpointer
}
typedef struct_c2ats__GtkTextMarkClass = $extype_struct"struct _GtkTextMarkClass" of {
  parent_class = type_c2ats_GObjectClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_text_mark_get_type: () -> type_c2ats_GType = "mac#gtk_text_mark_get_type"
fun fun_c2ats_gtk_text_mark_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gboolean) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTextMark, l2) | ptr l2) = "mac#gtk_text_mark_new"
fun fun_c2ats_gtk_text_mark_set_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextMark, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_text_mark_set_visible"
fun fun_c2ats_gtk_text_mark_get_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextMark, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_mark_get_visible"
fun fun_c2ats_gtk_text_mark_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextMark, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_text_mark_get_name"
fun fun_c2ats_gtk_text_mark_get_deleted: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextMark, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_mark_get_deleted"
fun fun_c2ats_gtk_text_mark_get_buffer: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextMark, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTextBuffer, l2) | ptr l2) = "mac#gtk_text_mark_get_buffer"
fun fun_c2ats_gtk_text_mark_get_left_gravity: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextMark, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_mark_get_left_gravity"
// File: /usr/include/gtk-3.0/gtk/gtktextbuffer.h
typedef type_c2ats_GtkTextBufferTargetInfo = int
#define enum_c2ats_GTK_TEXT_BUFFER_TARGET_INFO_BUFFER_CONTENTS ~1
#define enum_c2ats_GTK_TEXT_BUFFER_TARGET_INFO_RICH_TEXT ~2
#define enum_c2ats_GTK_TEXT_BUFFER_TARGET_INFO_TEXT ~3
abst@ype struct_c2ats__GtkTextBTree // FIXME! Forward declaration.
typedef type_c2ats_GtkTextBTree = struct_c2ats__GtkTextBTree
abst@ype struct_c2ats__GtkTextBufferPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkTextBufferPrivate = struct_c2ats__GtkTextBufferPrivate
abst@ype struct_c2ats__GtkTextBufferClass // FIXME! Forward declaration.
typedef type_c2ats_GtkTextBufferClass = struct_c2ats__GtkTextBufferClass
typedef struct_c2ats__GtkTextBuffer = $extype_struct"struct _GtkTextBuffer" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkTextBufferPrivate) *)
}
typedef struct_c2ats__GtkTextBufferClass = $extype_struct"struct _GtkTextBufferClass" of {
  parent_class = type_c2ats_GObjectClass,
  insert_text = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint) -> void,
  insert_pixbuf = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l1, ptr l2, ptr l3) -> void,
  insert_child_anchor = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GtkTextChildAnchor, l3) | ptr l1, ptr l2, ptr l3) -> void,
  delete_range = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3) | ptr l1, ptr l2, ptr l3) -> void,
  changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1) -> void,
  modified_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1) -> void,
  mark_set = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GtkTextMark, l3) | ptr l1, ptr l2, ptr l3) -> void,
  mark_deleted = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextMark, l2) | ptr l1, ptr l2) -> void,
  apply_tag = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextTag, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3), !ptr_v_1(type_c2ats_GtkTextIter, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void,
  remove_tag = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextTag, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3), !ptr_v_1(type_c2ats_GtkTextIter, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void,
  begin_user_action = {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1) -> void,
  end_user_action = {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1) -> void,
  paste_done = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkClipboard, l2) | ptr l1, ptr l2) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_text_buffer_get_type: () -> type_c2ats_GType = "mac#gtk_text_buffer_get_type"
fun fun_c2ats_gtk_text_buffer_new: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextTagTable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTextBuffer, l2) | ptr l2) = "mac#gtk_text_buffer_new"
fun fun_c2ats_gtk_text_buffer_get_line_count: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_buffer_get_line_count"
fun fun_c2ats_gtk_text_buffer_get_char_count: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_buffer_get_char_count"
fun fun_c2ats_gtk_text_buffer_get_tag_table: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTextTagTable, l2) | ptr l2) = "mac#gtk_text_buffer_get_tag_table"
fun fun_c2ats_gtk_text_buffer_set_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_text_buffer_set_text"
fun fun_c2ats_gtk_text_buffer_insert: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint) -> void = "mac#gtk_text_buffer_insert"
fun fun_c2ats_gtk_text_buffer_insert_at_cursor: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_text_buffer_insert_at_cursor"
fun fun_c2ats_gtk_text_buffer_insert_interactive: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gtk_text_buffer_insert_interactive"
fun fun_c2ats_gtk_text_buffer_insert_interactive_at_cursor: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gtk_text_buffer_insert_interactive_at_cursor"
fun fun_c2ats_gtk_text_buffer_insert_range: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3), !ptr_v_1(type_c2ats_GtkTextIter, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_text_buffer_insert_range"
fun fun_c2ats_gtk_text_buffer_insert_range_interactive: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3), !ptr_v_1(type_c2ats_GtkTextIter, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gtk_text_buffer_insert_range_interactive"
fun fun_c2ats_gtk_text_buffer_insert_with_tags: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_GtkTextTag, l4) | ptr l1, ptr l2, ptr l3, type_c2ats_gint, ptr l4) -> void = "mac#gtk_text_buffer_insert_with_tags"
fun fun_c2ats_gtk_text_buffer_insert_with_tags_by_name: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, type_c2ats_gint, ptr l4) -> void = "mac#gtk_text_buffer_insert_with_tags_by_name"
fun fun_c2ats_gtk_text_buffer_insert_markup: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint) -> void = "mac#gtk_text_buffer_insert_markup"
fun fun_c2ats_gtk_text_buffer_delete: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_text_buffer_delete"
fun fun_c2ats_gtk_text_buffer_delete_interactive: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gtk_text_buffer_delete_interactive"
fun fun_c2ats_gtk_text_buffer_backspace: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2, type_c2ats_gboolean, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gtk_text_buffer_backspace"
fun fun_c2ats_gtk_text_buffer_get_text: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#gtk_text_buffer_get_text"
fun fun_c2ats_gtk_text_buffer_get_slice: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#gtk_text_buffer_get_slice"
fun fun_c2ats_gtk_text_buffer_insert_pixbuf: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_text_buffer_insert_pixbuf"
fun fun_c2ats_gtk_text_buffer_insert_child_anchor: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GtkTextChildAnchor, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_text_buffer_insert_child_anchor"
fun fun_c2ats_gtk_text_buffer_create_child_anchor: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkTextChildAnchor, l3) | ptr l3) = "mac#gtk_text_buffer_create_child_anchor"
fun fun_c2ats_gtk_text_buffer_add_mark: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextMark, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_text_buffer_add_mark"
fun fun_c2ats_gtk_text_buffer_create_mark: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean) -> [l4:addr] (ptr_v_1(type_c2ats_GtkTextMark, l4) | ptr l4) = "mac#gtk_text_buffer_create_mark"
fun fun_c2ats_gtk_text_buffer_move_mark: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextMark, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_text_buffer_move_mark"
fun fun_c2ats_gtk_text_buffer_delete_mark: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextMark, l2) | ptr l1, ptr l2) -> void = "mac#gtk_text_buffer_delete_mark"
fun fun_c2ats_gtk_text_buffer_get_mark: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkTextMark, l3) | ptr l3) = "mac#gtk_text_buffer_get_mark"
fun fun_c2ats_gtk_text_buffer_move_mark_by_name: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_text_buffer_move_mark_by_name"
fun fun_c2ats_gtk_text_buffer_delete_mark_by_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_text_buffer_delete_mark_by_name"
fun fun_c2ats_gtk_text_buffer_get_insert: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTextMark, l2) | ptr l2) = "mac#gtk_text_buffer_get_insert"
fun fun_c2ats_gtk_text_buffer_get_selection_bound: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTextMark, l2) | ptr l2) = "mac#gtk_text_buffer_get_selection_bound"
fun fun_c2ats_gtk_text_buffer_place_cursor: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_text_buffer_place_cursor"
fun fun_c2ats_gtk_text_buffer_select_range: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_text_buffer_select_range"
fun fun_c2ats_gtk_text_buffer_apply_tag: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextTag, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3), !ptr_v_1(type_c2ats_GtkTextIter, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_text_buffer_apply_tag"
fun fun_c2ats_gtk_text_buffer_remove_tag: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextTag, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3), !ptr_v_1(type_c2ats_GtkTextIter, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_text_buffer_remove_tag"
fun fun_c2ats_gtk_text_buffer_apply_tag_by_name: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3), !ptr_v_1(type_c2ats_GtkTextIter, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_text_buffer_apply_tag_by_name"
fun fun_c2ats_gtk_text_buffer_remove_tag_by_name: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3), !ptr_v_1(type_c2ats_GtkTextIter, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_text_buffer_remove_tag_by_name"
fun fun_c2ats_gtk_text_buffer_remove_all_tags: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_text_buffer_remove_all_tags"
fun fun_c2ats_gtk_text_buffer_create_tag: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GtkTextTag, l4) | ptr l4) = "mac#gtk_text_buffer_create_tag"
fun fun_c2ats_gtk_text_buffer_get_iter_at_line_offset: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_text_buffer_get_iter_at_line_offset"
fun fun_c2ats_gtk_text_buffer_get_iter_at_line_index: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_text_buffer_get_iter_at_line_index"
fun fun_c2ats_gtk_text_buffer_get_iter_at_offset: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_text_buffer_get_iter_at_offset"
fun fun_c2ats_gtk_text_buffer_get_iter_at_line: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_text_buffer_get_iter_at_line"
fun fun_c2ats_gtk_text_buffer_get_start_iter: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_text_buffer_get_start_iter"
fun fun_c2ats_gtk_text_buffer_get_end_iter: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_text_buffer_get_end_iter"
fun fun_c2ats_gtk_text_buffer_get_bounds: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_text_buffer_get_bounds"
fun fun_c2ats_gtk_text_buffer_get_iter_at_mark: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GtkTextMark, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_text_buffer_get_iter_at_mark"
fun fun_c2ats_gtk_text_buffer_get_iter_at_child_anchor: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GtkTextChildAnchor, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_text_buffer_get_iter_at_child_anchor"
fun fun_c2ats_gtk_text_buffer_get_modified: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_buffer_get_modified"
fun fun_c2ats_gtk_text_buffer_set_modified: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_text_buffer_set_modified"
fun fun_c2ats_gtk_text_buffer_get_has_selection: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_buffer_get_has_selection"
fun fun_c2ats_gtk_text_buffer_add_selection_clipboard: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkClipboard, l2) | ptr l1, ptr l2) -> void = "mac#gtk_text_buffer_add_selection_clipboard"
fun fun_c2ats_gtk_text_buffer_remove_selection_clipboard: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkClipboard, l2) | ptr l1, ptr l2) -> void = "mac#gtk_text_buffer_remove_selection_clipboard"
fun fun_c2ats_gtk_text_buffer_cut_clipboard: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkClipboard, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gtk_text_buffer_cut_clipboard"
fun fun_c2ats_gtk_text_buffer_copy_clipboard: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkClipboard, l2) | ptr l1, ptr l2) -> void = "mac#gtk_text_buffer_copy_clipboard"
fun fun_c2ats_gtk_text_buffer_paste_clipboard: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkClipboard, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean) -> void = "mac#gtk_text_buffer_paste_clipboard"
fun fun_c2ats_gtk_text_buffer_get_selection_bounds: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_text_buffer_get_selection_bounds"
fun fun_c2ats_gtk_text_buffer_delete_selection: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1, type_c2ats_gboolean, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gtk_text_buffer_delete_selection"
fun fun_c2ats_gtk_text_buffer_begin_user_action: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1) -> void = "mac#gtk_text_buffer_begin_user_action"
fun fun_c2ats_gtk_text_buffer_end_user_action: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1) -> void = "mac#gtk_text_buffer_end_user_action"
fun fun_c2ats_gtk_text_buffer_get_copy_target_list: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTargetList, l2) | ptr l2) = "mac#gtk_text_buffer_get_copy_target_list"
fun fun_c2ats_gtk_text_buffer_get_paste_target_list: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTargetList, l2) | ptr l2) = "mac#gtk_text_buffer_get_paste_target_list"
// File: /usr/include/gtk-3.0/gtk/gtktextbufferrichtext.h
typedef type_c2ats_GtkTextBufferSerializeFunc = {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextBuffer, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3), !ptr_v_1(type_c2ats_GtkTextIter, l4), !ptr_v_1(type_c2ats_gsize, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5, type_c2ats_gpointer) -> [l6:addr] (ptr_v_1(type_c2ats_guint8, l6) | ptr l6)
typedef type_c2ats_GtkTextBufferDeserializeFunc = {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextBuffer, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3), !ptr_v_1(type_c2ats_guint8, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gsize, type_c2ats_gboolean, type_c2ats_gpointer, ptr l5) -> type_c2ats_gboolean
fun fun_c2ats_gtk_text_buffer_register_serialize_format: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GtkTextBufferSerializeFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_GdkAtom = "mac#gtk_text_buffer_register_serialize_format"
fun fun_c2ats_gtk_text_buffer_register_serialize_tagset: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_GdkAtom = "mac#gtk_text_buffer_register_serialize_tagset"
fun fun_c2ats_gtk_text_buffer_register_deserialize_format: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GtkTextBufferDeserializeFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> type_c2ats_GdkAtom = "mac#gtk_text_buffer_register_deserialize_format"
fun fun_c2ats_gtk_text_buffer_register_deserialize_tagset: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_GdkAtom = "mac#gtk_text_buffer_register_deserialize_tagset"
fun fun_c2ats_gtk_text_buffer_unregister_serialize_format: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1, type_c2ats_GdkAtom) -> void = "mac#gtk_text_buffer_unregister_serialize_format"
fun fun_c2ats_gtk_text_buffer_unregister_deserialize_format: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1, type_c2ats_GdkAtom) -> void = "mac#gtk_text_buffer_unregister_deserialize_format"
fun fun_c2ats_gtk_text_buffer_deserialize_set_can_create_tags: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1, type_c2ats_GdkAtom, type_c2ats_gboolean) -> void = "mac#gtk_text_buffer_deserialize_set_can_create_tags"
fun fun_c2ats_gtk_text_buffer_deserialize_get_can_create_tags: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1, type_c2ats_GdkAtom) -> type_c2ats_gboolean = "mac#gtk_text_buffer_deserialize_get_can_create_tags"
fun fun_c2ats_gtk_text_buffer_get_serialize_formats: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkAtom, l3) | ptr l3) = "mac#gtk_text_buffer_get_serialize_formats"
fun fun_c2ats_gtk_text_buffer_get_deserialize_formats: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_gint, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GdkAtom, l3) | ptr l3) = "mac#gtk_text_buffer_get_deserialize_formats"
fun fun_c2ats_gtk_text_buffer_serialize: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextBuffer, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3), !ptr_v_1(type_c2ats_GtkTextIter, l4), !ptr_v_1(type_c2ats_gsize, l5) | ptr l1, ptr l2, type_c2ats_GdkAtom, ptr l3, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_guint8, l6) | ptr l6) = "mac#gtk_text_buffer_serialize"
fun fun_c2ats_gtk_text_buffer_deserialize: {l1,l2,l3,l4,l5,l5_1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1), !ptr_v_1(type_c2ats_GtkTextBuffer, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3), !ptr_v_1(type_c2ats_guint8, l4), !ptr_v_2(type_c2ats_GError, l5, l5_1) | ptr l1, ptr l2, type_c2ats_GdkAtom, ptr l3, ptr l4, type_c2ats_gsize, ptr l5) -> type_c2ats_gboolean = "mac#gtk_text_buffer_deserialize"
// File: /usr/include/gtk-3.0/gtk/gtktextview.h
typedef type_c2ats_GtkTextWindowType = int
#define enum_c2ats_GTK_TEXT_WINDOW_PRIVATE 0
#define enum_c2ats_GTK_TEXT_WINDOW_WIDGET 1
#define enum_c2ats_GTK_TEXT_WINDOW_TEXT 2
#define enum_c2ats_GTK_TEXT_WINDOW_LEFT 3
#define enum_c2ats_GTK_TEXT_WINDOW_RIGHT 4
#define enum_c2ats_GTK_TEXT_WINDOW_TOP 5
#define enum_c2ats_GTK_TEXT_WINDOW_BOTTOM 6
typedef type_c2ats_GtkTextViewLayer = int
#define enum_c2ats_GTK_TEXT_VIEW_LAYER_BELOW 0
#define enum_c2ats_GTK_TEXT_VIEW_LAYER_ABOVE 1
#define enum_c2ats_GTK_TEXT_VIEW_LAYER_BELOW_TEXT 2
#define enum_c2ats_GTK_TEXT_VIEW_LAYER_ABOVE_TEXT 3
typedef type_c2ats_GtkTextExtendSelection = int
#define enum_c2ats_GTK_TEXT_EXTEND_SELECTION_WORD 0
#define enum_c2ats_GTK_TEXT_EXTEND_SELECTION_LINE 1
abst@ype struct_c2ats__GtkTextView // FIXME! Forward declaration.
typedef type_c2ats_GtkTextView = struct_c2ats__GtkTextView
abst@ype struct_c2ats__GtkTextViewPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkTextViewPrivate = struct_c2ats__GtkTextViewPrivate
abst@ype struct_c2ats__GtkTextViewClass // FIXME! Forward declaration.
typedef type_c2ats_GtkTextViewClass = struct_c2ats__GtkTextViewClass
typedef struct_c2ats__GtkTextView = $extype_struct"struct _GtkTextView" of {
  parent_instance = type_c2ats_GtkContainer,
  priv = ptr (* cPtr0(type_c2ats_GtkTextViewPrivate) *)
}
typedef struct_c2ats__GtkTextViewClass = $extype_struct"struct _GtkTextViewClass" of {
  parent_class = type_c2ats_GtkContainerClass,
  populate_popup = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void,
  move_cursor = {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_GtkMovementStep, type_c2ats_gint, type_c2ats_gboolean) -> void,
  set_anchor = {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> void,
  insert_at_cursor = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void,
  delete_from_cursor = {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_GtkDeleteType, type_c2ats_gint) -> void,
  backspace = {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> void,
  cut_clipboard = {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> void,
  copy_clipboard = {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> void,
  paste_clipboard = {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> void,
  toggle_overwrite = {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> void,
  create_buffer = {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTextBuffer, l2) | ptr l2),
  draw_layer = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, type_c2ats_GtkTextViewLayer, ptr l2) -> void,
  extend_selection = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GtkTextIter, l3), !ptr_v_1(type_c2ats_GtkTextIter, l4) | ptr l1, type_c2ats_GtkTextExtendSelection, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void
}
fun fun_c2ats_gtk_text_view_get_type: () -> type_c2ats_GType = "mac#gtk_text_view_get_type"
fun fun_c2ats_gtk_text_view_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_text_view_new"
fun fun_c2ats_gtk_text_view_new_with_buffer: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextBuffer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_text_view_new_with_buffer"
fun fun_c2ats_gtk_text_view_set_buffer: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkTextBuffer, l2) | ptr l1, ptr l2) -> void = "mac#gtk_text_view_set_buffer"
fun fun_c2ats_gtk_text_view_get_buffer: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTextBuffer, l2) | ptr l2) = "mac#gtk_text_view_get_buffer"
fun fun_c2ats_gtk_text_view_scroll_to_iter: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gboolean, type_c2ats_gdouble, type_c2ats_gdouble) -> type_c2ats_gboolean = "mac#gtk_text_view_scroll_to_iter"
fun fun_c2ats_gtk_text_view_scroll_to_mark: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkTextMark, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gboolean, type_c2ats_gdouble, type_c2ats_gdouble) -> void = "mac#gtk_text_view_scroll_to_mark"
fun fun_c2ats_gtk_text_view_scroll_mark_onscreen: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkTextMark, l2) | ptr l1, ptr l2) -> void = "mac#gtk_text_view_scroll_mark_onscreen"
fun fun_c2ats_gtk_text_view_move_mark_onscreen: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkTextMark, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_text_view_move_mark_onscreen"
fun fun_c2ats_gtk_text_view_place_cursor_onscreen: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_view_place_cursor_onscreen"
fun fun_c2ats_gtk_text_view_get_visible_rect: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GdkRectangle, l2) | ptr l1, ptr l2) -> void = "mac#gtk_text_view_get_visible_rect"
fun fun_c2ats_gtk_text_view_set_cursor_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_text_view_set_cursor_visible"
fun fun_c2ats_gtk_text_view_get_cursor_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_view_get_cursor_visible"
fun fun_c2ats_gtk_text_view_reset_cursor_blink: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> void = "mac#gtk_text_view_reset_cursor_blink"
fun fun_c2ats_gtk_text_view_get_cursor_locations: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GdkRectangle, l3), !ptr_v_1(type_c2ats_GdkRectangle, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_text_view_get_cursor_locations"
fun fun_c2ats_gtk_text_view_get_iter_location: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_GdkRectangle, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_text_view_get_iter_location"
fun fun_c2ats_gtk_text_view_get_iter_at_location: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_text_view_get_iter_at_location"
fun fun_c2ats_gtk_text_view_get_iter_at_position: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_text_view_get_iter_at_position"
fun fun_c2ats_gtk_text_view_get_line_yrange: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gint, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_text_view_get_line_yrange"
fun fun_c2ats_gtk_text_view_get_line_at_y: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, type_c2ats_gint, ptr l3) -> void = "mac#gtk_text_view_get_line_at_y"
fun fun_c2ats_gtk_text_view_buffer_to_window_coords: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_GtkTextWindowType, type_c2ats_gint, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#gtk_text_view_buffer_to_window_coords"
fun fun_c2ats_gtk_text_view_window_to_buffer_coords: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, type_c2ats_GtkTextWindowType, type_c2ats_gint, type_c2ats_gint, ptr l2, ptr l3) -> void = "mac#gtk_text_view_window_to_buffer_coords"
fun fun_c2ats_gtk_text_view_get_hadjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_text_view_get_hadjustment"
fun fun_c2ats_gtk_text_view_get_vadjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_text_view_get_vadjustment"
fun fun_c2ats_gtk_text_view_get_window: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_GtkTextWindowType) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gtk_text_view_get_window"
fun fun_c2ats_gtk_text_view_get_window_type: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2) -> type_c2ats_GtkTextWindowType = "mac#gtk_text_view_get_window_type"
fun fun_c2ats_gtk_text_view_set_border_window_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_GtkTextWindowType, type_c2ats_gint) -> void = "mac#gtk_text_view_set_border_window_size"
fun fun_c2ats_gtk_text_view_get_border_window_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_GtkTextWindowType) -> type_c2ats_gint = "mac#gtk_text_view_get_border_window_size"
fun fun_c2ats_gtk_text_view_forward_display_line: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_text_view_forward_display_line"
fun fun_c2ats_gtk_text_view_backward_display_line: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_text_view_backward_display_line"
fun fun_c2ats_gtk_text_view_forward_display_line_end: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_text_view_forward_display_line_end"
fun fun_c2ats_gtk_text_view_backward_display_line_start: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_text_view_backward_display_line_start"
fun fun_c2ats_gtk_text_view_starts_display_line: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_text_view_starts_display_line"
fun fun_c2ats_gtk_text_view_move_visually: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkTextIter, l2) | ptr l1, ptr l2, type_c2ats_gint) -> type_c2ats_gboolean = "mac#gtk_text_view_move_visually"
fun fun_c2ats_gtk_text_view_im_context_filter_keypress: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GdkEventKey, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_text_view_im_context_filter_keypress"
fun fun_c2ats_gtk_text_view_reset_im_context: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> void = "mac#gtk_text_view_reset_im_context"
fun fun_c2ats_gtk_text_view_add_child_at_anchor: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkWidget, l2), !ptr_v_1(type_c2ats_GtkTextChildAnchor, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_text_view_add_child_at_anchor"
fun fun_c2ats_gtk_text_view_add_child_in_window: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_GtkTextWindowType, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_text_view_add_child_in_window"
fun fun_c2ats_gtk_text_view_move_child: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_text_view_move_child"
fun fun_c2ats_gtk_text_view_set_wrap_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_GtkWrapMode) -> void = "mac#gtk_text_view_set_wrap_mode"
fun fun_c2ats_gtk_text_view_get_wrap_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> type_c2ats_GtkWrapMode = "mac#gtk_text_view_get_wrap_mode"
fun fun_c2ats_gtk_text_view_set_editable: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_text_view_set_editable"
fun fun_c2ats_gtk_text_view_get_editable: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_view_get_editable"
fun fun_c2ats_gtk_text_view_set_overwrite: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_text_view_set_overwrite"
fun fun_c2ats_gtk_text_view_get_overwrite: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_view_get_overwrite"
fun fun_c2ats_gtk_text_view_set_accepts_tab: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_text_view_set_accepts_tab"
fun fun_c2ats_gtk_text_view_get_accepts_tab: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_view_get_accepts_tab"
fun fun_c2ats_gtk_text_view_set_pixels_above_lines: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_text_view_set_pixels_above_lines"
fun fun_c2ats_gtk_text_view_get_pixels_above_lines: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_view_get_pixels_above_lines"
fun fun_c2ats_gtk_text_view_set_pixels_below_lines: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_text_view_set_pixels_below_lines"
fun fun_c2ats_gtk_text_view_get_pixels_below_lines: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_view_get_pixels_below_lines"
fun fun_c2ats_gtk_text_view_set_pixels_inside_wrap: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_text_view_set_pixels_inside_wrap"
fun fun_c2ats_gtk_text_view_get_pixels_inside_wrap: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_view_get_pixels_inside_wrap"
fun fun_c2ats_gtk_text_view_set_justification: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_GtkJustification) -> void = "mac#gtk_text_view_set_justification"
fun fun_c2ats_gtk_text_view_get_justification: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> type_c2ats_GtkJustification = "mac#gtk_text_view_get_justification"
fun fun_c2ats_gtk_text_view_set_left_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_text_view_set_left_margin"
fun fun_c2ats_gtk_text_view_get_left_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_view_get_left_margin"
fun fun_c2ats_gtk_text_view_set_right_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_text_view_set_right_margin"
fun fun_c2ats_gtk_text_view_get_right_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_view_get_right_margin"
fun fun_c2ats_gtk_text_view_set_top_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_text_view_set_top_margin"
fun fun_c2ats_gtk_text_view_get_top_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_view_get_top_margin"
fun fun_c2ats_gtk_text_view_set_bottom_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_text_view_set_bottom_margin"
fun fun_c2ats_gtk_text_view_get_bottom_margin: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_view_get_bottom_margin"
fun fun_c2ats_gtk_text_view_set_indent: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_text_view_set_indent"
fun fun_c2ats_gtk_text_view_get_indent: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_text_view_get_indent"
fun fun_c2ats_gtk_text_view_set_tabs: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1), !ptr_v_1(type_c2ats_PangoTabArray, l2) | ptr l1, ptr l2) -> void = "mac#gtk_text_view_set_tabs"
fun fun_c2ats_gtk_text_view_get_tabs: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoTabArray, l2) | ptr l2) = "mac#gtk_text_view_get_tabs"
fun fun_c2ats_gtk_text_view_get_default_attributes: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTextAttributes, l2) | ptr l2) = "mac#gtk_text_view_get_default_attributes"
fun fun_c2ats_gtk_text_view_set_input_purpose: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_GtkInputPurpose) -> void = "mac#gtk_text_view_set_input_purpose"
fun fun_c2ats_gtk_text_view_get_input_purpose: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> type_c2ats_GtkInputPurpose = "mac#gtk_text_view_get_input_purpose"
fun fun_c2ats_gtk_text_view_set_input_hints: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_GtkInputHints) -> void = "mac#gtk_text_view_set_input_hints"
fun fun_c2ats_gtk_text_view_get_input_hints: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> type_c2ats_GtkInputHints = "mac#gtk_text_view_get_input_hints"
fun fun_c2ats_gtk_text_view_set_monospace: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_text_view_set_monospace"
fun fun_c2ats_gtk_text_view_get_monospace: {l1:addr} (!ptr_v_1(type_c2ats_GtkTextView, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_text_view_get_monospace"
// File: /usr/include/gtk-3.0/gtk/gtktoolbar.h
typedef type_c2ats_GtkToolbarSpaceStyle = int
#define enum_c2ats_GTK_TOOLBAR_SPACE_EMPTY 0
#define enum_c2ats_GTK_TOOLBAR_SPACE_LINE 1
abst@ype struct_c2ats__GtkToolbar // FIXME! Forward declaration.
typedef type_c2ats_GtkToolbar = struct_c2ats__GtkToolbar
abst@ype struct_c2ats__GtkToolbarPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkToolbarPrivate = struct_c2ats__GtkToolbarPrivate
abst@ype struct_c2ats__GtkToolbarClass // FIXME! Forward declaration.
typedef type_c2ats_GtkToolbarClass = struct_c2ats__GtkToolbarClass
typedef struct_c2ats__GtkToolbar = $extype_struct"struct _GtkToolbar" of {
  container = type_c2ats_GtkContainer,
  priv = ptr (* cPtr0(type_c2ats_GtkToolbarPrivate) *)
}
typedef struct_c2ats__GtkToolbarClass = $extype_struct"struct _GtkToolbarClass" of {
  parent_class = type_c2ats_GtkContainerClass,
  orientation_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkToolbar, l1) | ptr l1, type_c2ats_GtkOrientation) -> void,
  style_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkToolbar, l1) | ptr l1, type_c2ats_GtkToolbarStyle) -> void,
  popup_context_menu = {l1:addr} (!ptr_v_1(type_c2ats_GtkToolbar, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gboolean,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_toolbar_get_type: () -> type_c2ats_GType = "mac#gtk_toolbar_get_type"
fun fun_c2ats_gtk_toolbar_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_toolbar_new"
fun fun_c2ats_gtk_toolbar_insert: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolbar, l1), !ptr_v_1(type_c2ats_GtkToolItem, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_toolbar_insert"
fun fun_c2ats_gtk_toolbar_get_item_index: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolbar, l1), !ptr_v_1(type_c2ats_GtkToolItem, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gtk_toolbar_get_item_index"
fun fun_c2ats_gtk_toolbar_get_n_items: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolbar, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_toolbar_get_n_items"
fun fun_c2ats_gtk_toolbar_get_nth_item: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolbar, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkToolItem, l2) | ptr l2) = "mac#gtk_toolbar_get_nth_item"
fun fun_c2ats_gtk_toolbar_get_show_arrow: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolbar, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_toolbar_get_show_arrow"
fun fun_c2ats_gtk_toolbar_set_show_arrow: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolbar, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_toolbar_set_show_arrow"
fun fun_c2ats_gtk_toolbar_get_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolbar, l1) | ptr l1) -> type_c2ats_GtkToolbarStyle = "mac#gtk_toolbar_get_style"
fun fun_c2ats_gtk_toolbar_set_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolbar, l1) | ptr l1, type_c2ats_GtkToolbarStyle) -> void = "mac#gtk_toolbar_set_style"
fun fun_c2ats_gtk_toolbar_unset_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolbar, l1) | ptr l1) -> void = "mac#gtk_toolbar_unset_style"
fun fun_c2ats_gtk_toolbar_get_icon_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolbar, l1) | ptr l1) -> type_c2ats_GtkIconSize = "mac#gtk_toolbar_get_icon_size"
fun fun_c2ats_gtk_toolbar_set_icon_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolbar, l1) | ptr l1, type_c2ats_GtkIconSize) -> void = "mac#gtk_toolbar_set_icon_size"
fun fun_c2ats_gtk_toolbar_unset_icon_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolbar, l1) | ptr l1) -> void = "mac#gtk_toolbar_unset_icon_size"
fun fun_c2ats_gtk_toolbar_get_relief_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolbar, l1) | ptr l1) -> type_c2ats_GtkReliefStyle = "mac#gtk_toolbar_get_relief_style"
fun fun_c2ats_gtk_toolbar_get_drop_index: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolbar, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> type_c2ats_gint = "mac#gtk_toolbar_get_drop_index"
fun fun_c2ats_gtk_toolbar_set_drop_highlight_item: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolbar, l1), !ptr_v_1(type_c2ats_GtkToolItem, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_toolbar_set_drop_highlight_item"
// File: /usr/include/gtk-3.0/gtk/gtktoolitemgroup.h
abst@ype struct_c2ats__GtkToolItemGroup // FIXME! Forward declaration.
typedef type_c2ats_GtkToolItemGroup = struct_c2ats__GtkToolItemGroup
abst@ype struct_c2ats__GtkToolItemGroupClass // FIXME! Forward declaration.
typedef type_c2ats_GtkToolItemGroupClass = struct_c2ats__GtkToolItemGroupClass
abst@ype struct_c2ats__GtkToolItemGroupPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkToolItemGroupPrivate = struct_c2ats__GtkToolItemGroupPrivate
typedef struct_c2ats__GtkToolItemGroup = $extype_struct"struct _GtkToolItemGroup" of {
  parent_instance = type_c2ats_GtkContainer,
  priv = ptr (* cPtr0(type_c2ats_GtkToolItemGroupPrivate) *)
}
typedef struct_c2ats__GtkToolItemGroupClass = $extype_struct"struct _GtkToolItemGroupClass" of {
  parent_class = type_c2ats_GtkContainerClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_tool_item_group_get_type: () -> type_c2ats_GType = "mac#gtk_tool_item_group_get_type"
fun fun_c2ats_gtk_tool_item_group_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_tool_item_group_new"
fun fun_c2ats_gtk_tool_item_group_set_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolItemGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tool_item_group_set_label"
fun fun_c2ats_gtk_tool_item_group_set_label_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolItemGroup, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tool_item_group_set_label_widget"
fun fun_c2ats_gtk_tool_item_group_set_collapsed: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItemGroup, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_tool_item_group_set_collapsed"
fun fun_c2ats_gtk_tool_item_group_set_ellipsize: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItemGroup, l1) | ptr l1, type_c2ats_PangoEllipsizeMode) -> void = "mac#gtk_tool_item_group_set_ellipsize"
fun fun_c2ats_gtk_tool_item_group_set_header_relief: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItemGroup, l1) | ptr l1, type_c2ats_GtkReliefStyle) -> void = "mac#gtk_tool_item_group_set_header_relief"
fun fun_c2ats_gtk_tool_item_group_get_label: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItemGroup, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_tool_item_group_get_label"
fun fun_c2ats_gtk_tool_item_group_get_label_widget: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItemGroup, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_tool_item_group_get_label_widget"
fun fun_c2ats_gtk_tool_item_group_get_collapsed: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItemGroup, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_tool_item_group_get_collapsed"
fun fun_c2ats_gtk_tool_item_group_get_ellipsize: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItemGroup, l1) | ptr l1) -> type_c2ats_PangoEllipsizeMode = "mac#gtk_tool_item_group_get_ellipsize"
fun fun_c2ats_gtk_tool_item_group_get_header_relief: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItemGroup, l1) | ptr l1) -> type_c2ats_GtkReliefStyle = "mac#gtk_tool_item_group_get_header_relief"
fun fun_c2ats_gtk_tool_item_group_insert: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolItemGroup, l1), !ptr_v_1(type_c2ats_GtkToolItem, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_tool_item_group_insert"
fun fun_c2ats_gtk_tool_item_group_set_item_position: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolItemGroup, l1), !ptr_v_1(type_c2ats_GtkToolItem, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_tool_item_group_set_item_position"
fun fun_c2ats_gtk_tool_item_group_get_item_position: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolItemGroup, l1), !ptr_v_1(type_c2ats_GtkToolItem, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gtk_tool_item_group_get_item_position"
fun fun_c2ats_gtk_tool_item_group_get_n_items: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItemGroup, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_tool_item_group_get_n_items"
fun fun_c2ats_gtk_tool_item_group_get_nth_item: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItemGroup, l1) | ptr l1, type_c2ats_guint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkToolItem, l2) | ptr l2) = "mac#gtk_tool_item_group_get_nth_item"
fun fun_c2ats_gtk_tool_item_group_get_drop_item: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolItemGroup, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkToolItem, l2) | ptr l2) = "mac#gtk_tool_item_group_get_drop_item"
// File: /usr/include/gtk-3.0/gtk/gtktoolpalette.h
abst@ype struct_c2ats__GtkToolPalette // FIXME! Forward declaration.
typedef type_c2ats_GtkToolPalette = struct_c2ats__GtkToolPalette
abst@ype struct_c2ats__GtkToolPaletteClass // FIXME! Forward declaration.
typedef type_c2ats_GtkToolPaletteClass = struct_c2ats__GtkToolPaletteClass
abst@ype struct_c2ats__GtkToolPalettePrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkToolPalettePrivate = struct_c2ats__GtkToolPalettePrivate
typedef type_c2ats_GtkToolPaletteDragTargets = int
#define enum_c2ats_GTK_TOOL_PALETTE_DRAG_ITEMS 1 << 0
#define enum_c2ats_GTK_TOOL_PALETTE_DRAG_GROUPS 1 << 1
typedef struct_c2ats__GtkToolPalette = $extype_struct"struct _GtkToolPalette" of {
  parent_instance = type_c2ats_GtkContainer,
  priv = ptr (* cPtr0(type_c2ats_GtkToolPalettePrivate) *)
}
typedef struct_c2ats__GtkToolPaletteClass = $extype_struct"struct _GtkToolPaletteClass" of {
  parent_class = type_c2ats_GtkContainerClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_tool_palette_get_type: () -> type_c2ats_GType = "mac#gtk_tool_palette_get_type"
fun fun_c2ats_gtk_tool_palette_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_tool_palette_new"
fun fun_c2ats_gtk_tool_palette_set_group_position: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolPalette, l1), !ptr_v_1(type_c2ats_GtkToolItemGroup, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_tool_palette_set_group_position"
fun fun_c2ats_gtk_tool_palette_set_exclusive: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolPalette, l1), !ptr_v_1(type_c2ats_GtkToolItemGroup, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gtk_tool_palette_set_exclusive"
fun fun_c2ats_gtk_tool_palette_set_expand: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolPalette, l1), !ptr_v_1(type_c2ats_GtkToolItemGroup, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#gtk_tool_palette_set_expand"
fun fun_c2ats_gtk_tool_palette_get_group_position: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolPalette, l1), !ptr_v_1(type_c2ats_GtkToolItemGroup, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gtk_tool_palette_get_group_position"
fun fun_c2ats_gtk_tool_palette_get_exclusive: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolPalette, l1), !ptr_v_1(type_c2ats_GtkToolItemGroup, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_tool_palette_get_exclusive"
fun fun_c2ats_gtk_tool_palette_get_expand: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolPalette, l1), !ptr_v_1(type_c2ats_GtkToolItemGroup, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_tool_palette_get_expand"
fun fun_c2ats_gtk_tool_palette_set_icon_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolPalette, l1) | ptr l1, type_c2ats_GtkIconSize) -> void = "mac#gtk_tool_palette_set_icon_size"
fun fun_c2ats_gtk_tool_palette_unset_icon_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolPalette, l1) | ptr l1) -> void = "mac#gtk_tool_palette_unset_icon_size"
fun fun_c2ats_gtk_tool_palette_set_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolPalette, l1) | ptr l1, type_c2ats_GtkToolbarStyle) -> void = "mac#gtk_tool_palette_set_style"
fun fun_c2ats_gtk_tool_palette_unset_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolPalette, l1) | ptr l1) -> void = "mac#gtk_tool_palette_unset_style"
fun fun_c2ats_gtk_tool_palette_get_icon_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolPalette, l1) | ptr l1) -> type_c2ats_GtkIconSize = "mac#gtk_tool_palette_get_icon_size"
fun fun_c2ats_gtk_tool_palette_get_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolPalette, l1) | ptr l1) -> type_c2ats_GtkToolbarStyle = "mac#gtk_tool_palette_get_style"
fun fun_c2ats_gtk_tool_palette_get_drop_item: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolPalette, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkToolItem, l2) | ptr l2) = "mac#gtk_tool_palette_get_drop_item"
fun fun_c2ats_gtk_tool_palette_get_drop_group: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolPalette, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkToolItemGroup, l2) | ptr l2) = "mac#gtk_tool_palette_get_drop_group"
fun fun_c2ats_gtk_tool_palette_get_drag_item: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolPalette, l1), !ptr_v_1(type_c2ats_GtkSelectionData, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_tool_palette_get_drag_item"
fun fun_c2ats_gtk_tool_palette_set_drag_source: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolPalette, l1) | ptr l1, type_c2ats_GtkToolPaletteDragTargets) -> void = "mac#gtk_tool_palette_set_drag_source"
fun fun_c2ats_gtk_tool_palette_add_drag_dest: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkToolPalette, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_GtkDestDefaults, type_c2ats_GtkToolPaletteDragTargets, type_c2ats_GdkDragAction) -> void = "mac#gtk_tool_palette_add_drag_dest"
fun fun_c2ats_gtk_tool_palette_get_hadjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolPalette, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_tool_palette_get_hadjustment"
fun fun_c2ats_gtk_tool_palette_get_vadjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolPalette, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_tool_palette_get_vadjustment"
fun fun_c2ats_gtk_tool_palette_get_drag_target_item: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkTargetEntry, l1) | ptr l1) = "mac#gtk_tool_palette_get_drag_target_item"
fun fun_c2ats_gtk_tool_palette_get_drag_target_group: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkTargetEntry, l1) | ptr l1) = "mac#gtk_tool_palette_get_drag_target_group"
// File: /usr/include/gtk-3.0/gtk/gtktoolshell.h
abst@ype struct_c2ats__GtkToolShell // FIXME! Forward declaration.
typedef type_c2ats_GtkToolShell = struct_c2ats__GtkToolShell
abst@ype struct_c2ats__GtkToolShellIface // FIXME! Forward declaration.
typedef type_c2ats_GtkToolShellIface = struct_c2ats__GtkToolShellIface
typedef struct_c2ats__GtkToolShellIface = $extype_struct"struct _GtkToolShellIface" of {
  g_iface = type_c2ats_GTypeInterface,
  get_icon_size = {l1:addr} (!ptr_v_1(type_c2ats_GtkToolShell, l1) | ptr l1) -> type_c2ats_GtkIconSize,
  get_orientation = {l1:addr} (!ptr_v_1(type_c2ats_GtkToolShell, l1) | ptr l1) -> type_c2ats_GtkOrientation,
  get_style = {l1:addr} (!ptr_v_1(type_c2ats_GtkToolShell, l1) | ptr l1) -> type_c2ats_GtkToolbarStyle,
  get_relief_style = {l1:addr} (!ptr_v_1(type_c2ats_GtkToolShell, l1) | ptr l1) -> type_c2ats_GtkReliefStyle,
  rebuild_menu = {l1:addr} (!ptr_v_1(type_c2ats_GtkToolShell, l1) | ptr l1) -> void,
  get_text_orientation = {l1:addr} (!ptr_v_1(type_c2ats_GtkToolShell, l1) | ptr l1) -> type_c2ats_GtkOrientation,
  get_text_alignment = {l1:addr} (!ptr_v_1(type_c2ats_GtkToolShell, l1) | ptr l1) -> type_c2ats_gfloat,
  get_ellipsize_mode = {l1:addr} (!ptr_v_1(type_c2ats_GtkToolShell, l1) | ptr l1) -> type_c2ats_PangoEllipsizeMode,
  get_text_size_group = {l1:addr} (!ptr_v_1(type_c2ats_GtkToolShell, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSizeGroup, l2) | ptr l2)
}
fun fun_c2ats_gtk_tool_shell_get_type: () -> type_c2ats_GType = "mac#gtk_tool_shell_get_type"
fun fun_c2ats_gtk_tool_shell_get_icon_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolShell, l1) | ptr l1) -> type_c2ats_GtkIconSize = "mac#gtk_tool_shell_get_icon_size"
fun fun_c2ats_gtk_tool_shell_get_orientation: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolShell, l1) | ptr l1) -> type_c2ats_GtkOrientation = "mac#gtk_tool_shell_get_orientation"
fun fun_c2ats_gtk_tool_shell_get_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolShell, l1) | ptr l1) -> type_c2ats_GtkToolbarStyle = "mac#gtk_tool_shell_get_style"
fun fun_c2ats_gtk_tool_shell_get_relief_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolShell, l1) | ptr l1) -> type_c2ats_GtkReliefStyle = "mac#gtk_tool_shell_get_relief_style"
fun fun_c2ats_gtk_tool_shell_rebuild_menu: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolShell, l1) | ptr l1) -> void = "mac#gtk_tool_shell_rebuild_menu"
fun fun_c2ats_gtk_tool_shell_get_text_orientation: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolShell, l1) | ptr l1) -> type_c2ats_GtkOrientation = "mac#gtk_tool_shell_get_text_orientation"
fun fun_c2ats_gtk_tool_shell_get_text_alignment: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolShell, l1) | ptr l1) -> type_c2ats_gfloat = "mac#gtk_tool_shell_get_text_alignment"
fun fun_c2ats_gtk_tool_shell_get_ellipsize_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolShell, l1) | ptr l1) -> type_c2ats_PangoEllipsizeMode = "mac#gtk_tool_shell_get_ellipsize_mode"
fun fun_c2ats_gtk_tool_shell_get_text_size_group: {l1:addr} (!ptr_v_1(type_c2ats_GtkToolShell, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSizeGroup, l2) | ptr l2) = "mac#gtk_tool_shell_get_text_size_group"
// File: /usr/include/gtk-3.0/gtk/gtktestutils.h
fun fun_c2ats_gtk_test_init: {l1,l2,l2_1,l2_2:addr} (!ptr_v_1(int, l1), !ptr_v_3(char, l2, l2_1, l2_2) | ptr l1, ptr l2) -> void = "mac#gtk_test_init"
fun fun_c2ats_gtk_test_register_all_types: () -> void = "mac#gtk_test_register_all_types"
fun fun_c2ats_gtk_test_list_all_types: {l1:addr} (!ptr_v_1(type_c2ats_guint, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GType, l2) | ptr l2) = "mac#gtk_test_list_all_types"
fun fun_c2ats_gtk_test_find_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2, type_c2ats_GType) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_test_find_widget"
fun fun_c2ats_gtk_test_create_widget: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | type_c2ats_GType, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_test_create_widget"
fun fun_c2ats_gtk_test_create_simple_window: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_test_create_simple_window"
fun fun_c2ats_gtk_test_display_button_window: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_test_display_button_window"
fun fun_c2ats_gtk_test_slider_set_perc: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, double) -> void = "mac#gtk_test_slider_set_perc"
fun fun_c2ats_gtk_test_slider_get_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> double = "mac#gtk_test_slider_get_value"
fun fun_c2ats_gtk_test_spin_button_click: {l1:addr} (!ptr_v_1(type_c2ats_GtkSpinButton, l1) | ptr l1, type_c2ats_guint, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gtk_test_spin_button_click"
fun fun_c2ats_gtk_test_widget_wait_for_draw: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_test_widget_wait_for_draw"
fun fun_c2ats_gtk_test_widget_click: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType) -> type_c2ats_gboolean = "mac#gtk_test_widget_click"
fun fun_c2ats_gtk_test_widget_send_key: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_guint, type_c2ats_GdkModifierType) -> type_c2ats_gboolean = "mac#gtk_test_widget_send_key"
fun fun_c2ats_gtk_test_text_set: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_test_text_set"
fun fun_c2ats_gtk_test_text_get: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_test_text_get"
fun fun_c2ats_gtk_test_find_sibling: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1, type_c2ats_GType) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_test_find_sibling"
fun fun_c2ats_gtk_test_find_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_test_find_label"
// File: /usr/include/gtk-3.0/gtk/gtktreednd.h
abst@ype struct_c2ats__GtkTreeDragSource // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeDragSource = struct_c2ats__GtkTreeDragSource
abst@ype struct_c2ats__GtkTreeDragSourceIface // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeDragSourceIface = struct_c2ats__GtkTreeDragSourceIface
typedef struct_c2ats__GtkTreeDragSourceIface = $extype_struct"struct _GtkTreeDragSourceIface" of {
  g_iface = type_c2ats_GTypeInterface,
  row_draggable = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeDragSource, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  drag_data_get = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeDragSource, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkSelectionData, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  drag_data_delete = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeDragSource, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean
}
fun fun_c2ats_gtk_tree_drag_source_get_type: () -> type_c2ats_GType = "mac#gtk_tree_drag_source_get_type"
fun fun_c2ats_gtk_tree_drag_source_row_draggable: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeDragSource, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_tree_drag_source_row_draggable"
fun fun_c2ats_gtk_tree_drag_source_drag_data_delete: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeDragSource, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_tree_drag_source_drag_data_delete"
fun fun_c2ats_gtk_tree_drag_source_drag_data_get: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeDragSource, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkSelectionData, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_tree_drag_source_drag_data_get"
abst@ype struct_c2ats__GtkTreeDragDest // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeDragDest = struct_c2ats__GtkTreeDragDest
abst@ype struct_c2ats__GtkTreeDragDestIface // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeDragDestIface = struct_c2ats__GtkTreeDragDestIface
typedef struct_c2ats__GtkTreeDragDestIface = $extype_struct"struct _GtkTreeDragDestIface" of {
  g_iface = type_c2ats_GTypeInterface,
  drag_data_received = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeDragDest, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkSelectionData, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean,
  row_drop_possible = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeDragDest, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkSelectionData, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean
}
fun fun_c2ats_gtk_tree_drag_dest_get_type: () -> type_c2ats_GType = "mac#gtk_tree_drag_dest_get_type"
fun fun_c2ats_gtk_tree_drag_dest_drag_data_received: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeDragDest, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkSelectionData, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_tree_drag_dest_drag_data_received"
fun fun_c2ats_gtk_tree_drag_dest_row_drop_possible: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeDragDest, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkSelectionData, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_tree_drag_dest_row_drop_possible"
fun fun_c2ats_gtk_tree_set_row_drag_data: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1), !ptr_v_1(type_c2ats_GtkTreeModel, l2), !ptr_v_1(type_c2ats_GtkTreePath, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_tree_set_row_drag_data"
fun fun_c2ats_gtk_tree_get_row_drag_data: {l1,l2,l2_1,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkSelectionData, l1), !ptr_v_2(type_c2ats_GtkTreeModel, l2, l2_1), !ptr_v_2(type_c2ats_GtkTreePath, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_tree_get_row_drag_data"
// File: /usr/include/gtk-3.0/gtk/gtktreemodelsort.h
abst@ype struct_c2ats__GtkTreeModelSort // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeModelSort = struct_c2ats__GtkTreeModelSort
abst@ype struct_c2ats__GtkTreeModelSortClass // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeModelSortClass = struct_c2ats__GtkTreeModelSortClass
abst@ype struct_c2ats__GtkTreeModelSortPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeModelSortPrivate = struct_c2ats__GtkTreeModelSortPrivate
typedef struct_c2ats__GtkTreeModelSort = $extype_struct"struct _GtkTreeModelSort" of {
  parent = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkTreeModelSortPrivate) *)
}
typedef struct_c2ats__GtkTreeModelSortClass = $extype_struct"struct _GtkTreeModelSortClass" of {
  parent_class = type_c2ats_GObjectClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_tree_model_sort_get_type: () -> type_c2ats_GType = "mac#gtk_tree_model_sort_get_type"
fun fun_c2ats_gtk_tree_model_sort_new_with_model: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeModel, l2) | ptr l2) = "mac#gtk_tree_model_sort_new_with_model"
fun fun_c2ats_gtk_tree_model_sort_get_model: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModelSort, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeModel, l2) | ptr l2) = "mac#gtk_tree_model_sort_get_model"
fun fun_c2ats_gtk_tree_model_sort_convert_child_path_to_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModelSort, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkTreePath, l3) | ptr l3) = "mac#gtk_tree_model_sort_convert_child_path_to_path"
fun fun_c2ats_gtk_tree_model_sort_convert_child_iter_to_iter: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModelSort, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_tree_model_sort_convert_child_iter_to_iter"
fun fun_c2ats_gtk_tree_model_sort_convert_path_to_child_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModelSort, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkTreePath, l3) | ptr l3) = "mac#gtk_tree_model_sort_convert_path_to_child_path"
fun fun_c2ats_gtk_tree_model_sort_convert_iter_to_child_iter: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModelSort, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_tree_model_sort_convert_iter_to_child_iter"
fun fun_c2ats_gtk_tree_model_sort_reset_default_sort_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModelSort, l1) | ptr l1) -> void = "mac#gtk_tree_model_sort_reset_default_sort_func"
fun fun_c2ats_gtk_tree_model_sort_clear_cache: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeModelSort, l1) | ptr l1) -> void = "mac#gtk_tree_model_sort_clear_cache"
fun fun_c2ats_gtk_tree_model_sort_iter_is_valid: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeModelSort, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_tree_model_sort_iter_is_valid"
// File: /usr/include/gtk-3.0/gtk/gtktreeselection.h
abst@ype struct_c2ats__GtkTreeSelectionPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeSelectionPrivate = struct_c2ats__GtkTreeSelectionPrivate
typedef type_c2ats_GtkTreeSelectionFunc = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1), !ptr_v_1(type_c2ats_GtkTreeModel, l2), !ptr_v_1(type_c2ats_GtkTreePath, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gboolean, type_c2ats_gpointer) -> type_c2ats_gboolean
typedef type_c2ats_GtkTreeSelectionForeachFunc = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeModel, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gpointer) -> void
typedef struct_c2ats__GtkTreeSelection = $extype_struct"struct _GtkTreeSelection" of {
  parent = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkTreeSelectionPrivate) *)
}
typedef struct_c2ats__GtkTreeSelectionClass = $extype_struct"struct _GtkTreeSelectionClass" of {
  parent_class = type_c2ats_GObjectClass,
  changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_tree_selection_get_type: () -> type_c2ats_GType = "mac#gtk_tree_selection_get_type"
fun fun_c2ats_gtk_tree_selection_set_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1) | ptr l1, type_c2ats_GtkSelectionMode) -> void = "mac#gtk_tree_selection_set_mode"
fun fun_c2ats_gtk_tree_selection_get_mode: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1) | ptr l1) -> type_c2ats_GtkSelectionMode = "mac#gtk_tree_selection_get_mode"
fun fun_c2ats_gtk_tree_selection_set_select_function: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1) | ptr l1, type_c2ats_GtkTreeSelectionFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_tree_selection_set_select_function"
fun fun_c2ats_gtk_tree_selection_get_user_data: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1) | ptr l1) -> type_c2ats_gpointer = "mac#gtk_tree_selection_get_user_data"
fun fun_c2ats_gtk_tree_selection_get_tree_view: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeView, l2) | ptr l2) = "mac#gtk_tree_selection_get_tree_view"
fun fun_c2ats_gtk_tree_selection_get_select_function: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1) | ptr l1) -> type_c2ats_GtkTreeSelectionFunc = "mac#gtk_tree_selection_get_select_function"
fun fun_c2ats_gtk_tree_selection_get_selected: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1), !ptr_v_2(type_c2ats_GtkTreeModel, l2, l2_1), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_tree_selection_get_selected"
fun fun_c2ats_gtk_tree_selection_get_selected_rows: {l1,l2,l2_1:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1), !ptr_v_2(type_c2ats_GtkTreeModel, l2, l2_1) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GList, l3) | ptr l3) = "mac#gtk_tree_selection_get_selected_rows"
fun fun_c2ats_gtk_tree_selection_count_selected_rows: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_tree_selection_count_selected_rows"
fun fun_c2ats_gtk_tree_selection_selected_foreach: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1) | ptr l1, type_c2ats_GtkTreeSelectionForeachFunc, type_c2ats_gpointer) -> void = "mac#gtk_tree_selection_selected_foreach"
fun fun_c2ats_gtk_tree_selection_select_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_selection_select_path"
fun fun_c2ats_gtk_tree_selection_unselect_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_selection_unselect_path"
fun fun_c2ats_gtk_tree_selection_select_iter: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_selection_select_iter"
fun fun_c2ats_gtk_tree_selection_unselect_iter: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_selection_unselect_iter"
fun fun_c2ats_gtk_tree_selection_path_is_selected: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_tree_selection_path_is_selected"
fun fun_c2ats_gtk_tree_selection_iter_is_selected: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_tree_selection_iter_is_selected"
fun fun_c2ats_gtk_tree_selection_select_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1) | ptr l1) -> void = "mac#gtk_tree_selection_select_all"
fun fun_c2ats_gtk_tree_selection_unselect_all: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1) | ptr l1) -> void = "mac#gtk_tree_selection_unselect_all"
fun fun_c2ats_gtk_tree_selection_select_range: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreePath, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_tree_selection_select_range"
fun fun_c2ats_gtk_tree_selection_unselect_range: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeSelection, l1), !ptr_v_1(type_c2ats_GtkTreePath, l2), !ptr_v_1(type_c2ats_GtkTreePath, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_tree_selection_unselect_range"
// File: /usr/include/gtk-3.0/gtk/gtktreestore.h
abst@ype struct_c2ats__GtkTreeStore // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeStore = struct_c2ats__GtkTreeStore
abst@ype struct_c2ats__GtkTreeStoreClass // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeStoreClass = struct_c2ats__GtkTreeStoreClass
abst@ype struct_c2ats__GtkTreeStorePrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkTreeStorePrivate = struct_c2ats__GtkTreeStorePrivate
typedef struct_c2ats__GtkTreeStore = $extype_struct"struct _GtkTreeStore" of {
  parent = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkTreeStorePrivate) *)
}
typedef struct_c2ats__GtkTreeStoreClass = $extype_struct"struct _GtkTreeStoreClass" of {
  parent_class = type_c2ats_GObjectClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_tree_store_get_type: () -> type_c2ats_GType = "mac#gtk_tree_store_get_type"
fun fun_c2ats_gtk_tree_store_new: (type_c2ats_gint) -> [l1:addr] (ptr_v_1(type_c2ats_GtkTreeStore, l1) | ptr l1) = "mac#gtk_tree_store_new"
fun fun_c2ats_gtk_tree_store_newv: {l1:addr} (!ptr_v_1(type_c2ats_GType, l1) | type_c2ats_gint, ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeStore, l2) | ptr l2) = "mac#gtk_tree_store_newv"
fun fun_c2ats_gtk_tree_store_set_column_types: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GType, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#gtk_tree_store_set_column_types"
fun fun_c2ats_gtk_tree_store_set_value: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_gint, ptr l3) -> void = "mac#gtk_tree_store_set_value"
fun fun_c2ats_gtk_tree_store_set: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> void = "mac#gtk_tree_store_set"
fun fun_c2ats_gtk_tree_store_set_valuesv: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_GValue, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gint) -> void = "mac#gtk_tree_store_set_valuesv"
fun fun_c2ats_gtk_tree_store_set_valist: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2, type_c2ats_va_list) -> void = "mac#gtk_tree_store_set_valist"
fun fun_c2ats_gtk_tree_store_remove: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_tree_store_remove"
fun fun_c2ats_gtk_tree_store_insert: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint) -> void = "mac#gtk_tree_store_insert"
fun fun_c2ats_gtk_tree_store_insert_before: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3), !ptr_v_1(type_c2ats_GtkTreeIter, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_tree_store_insert_before"
fun fun_c2ats_gtk_tree_store_insert_after: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3), !ptr_v_1(type_c2ats_GtkTreeIter, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_tree_store_insert_after"
fun fun_c2ats_gtk_tree_store_insert_with_values: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gint) -> void = "mac#gtk_tree_store_insert_with_values"
fun fun_c2ats_gtk_tree_store_insert_with_valuesv: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3), !ptr_v_1(type_c2ats_gint, l4), !ptr_v_1(type_c2ats_GValue, l5) | ptr l1, ptr l2, ptr l3, type_c2ats_gint, ptr l4, ptr l5, type_c2ats_gint) -> void = "mac#gtk_tree_store_insert_with_valuesv"
fun fun_c2ats_gtk_tree_store_prepend: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_tree_store_prepend"
fun fun_c2ats_gtk_tree_store_append: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_tree_store_append"
fun fun_c2ats_gtk_tree_store_is_ancestor: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_tree_store_is_ancestor"
fun fun_c2ats_gtk_tree_store_iter_depth: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gtk_tree_store_iter_depth"
fun fun_c2ats_gtk_tree_store_clear: {l1:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1) | ptr l1) -> void = "mac#gtk_tree_store_clear"
fun fun_c2ats_gtk_tree_store_iter_is_valid: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_tree_store_iter_is_valid"
fun fun_c2ats_gtk_tree_store_reorder: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_tree_store_reorder"
fun fun_c2ats_gtk_tree_store_swap: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_tree_store_swap"
fun fun_c2ats_gtk_tree_store_move_before: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_tree_store_move_before"
fun fun_c2ats_gtk_tree_store_move_after: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTreeStore, l1), !ptr_v_1(type_c2ats_GtkTreeIter, l2), !ptr_v_1(type_c2ats_GtkTreeIter, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_tree_store_move_after"
// File: /usr/include/gtk-3.0/gtk/gtktypebuiltins.h
fun fun_c2ats_gtk_license_get_type: () -> type_c2ats_GType = "mac#gtk_license_get_type"
fun fun_c2ats_gtk_accel_flags_get_type: () -> type_c2ats_GType = "mac#gtk_accel_flags_get_type"
fun fun_c2ats_gtk_application_inhibit_flags_get_type: () -> type_c2ats_GType = "mac#gtk_application_inhibit_flags_get_type"
fun fun_c2ats_gtk_assistant_page_type_get_type: () -> type_c2ats_GType = "mac#gtk_assistant_page_type_get_type"
fun fun_c2ats_gtk_button_box_style_get_type: () -> type_c2ats_GType = "mac#gtk_button_box_style_get_type"
fun fun_c2ats_gtk_builder_error_get_type: () -> type_c2ats_GType = "mac#gtk_builder_error_get_type"
fun fun_c2ats_gtk_calendar_display_options_get_type: () -> type_c2ats_GType = "mac#gtk_calendar_display_options_get_type"
fun fun_c2ats_gtk_cell_renderer_state_get_type: () -> type_c2ats_GType = "mac#gtk_cell_renderer_state_get_type"
fun fun_c2ats_gtk_cell_renderer_mode_get_type: () -> type_c2ats_GType = "mac#gtk_cell_renderer_mode_get_type"
fun fun_c2ats_gtk_cell_renderer_accel_mode_get_type: () -> type_c2ats_GType = "mac#gtk_cell_renderer_accel_mode_get_type"
fun fun_c2ats_gtk_resize_mode_get_type: () -> type_c2ats_GType = "mac#gtk_resize_mode_get_type"
fun fun_c2ats_gtk_css_provider_error_get_type: () -> type_c2ats_GType = "mac#gtk_css_provider_error_get_type"
fun fun_c2ats_gtk_css_section_type_get_type: () -> type_c2ats_GType = "mac#gtk_css_section_type_get_type"
fun fun_c2ats_gtk_debug_flag_get_type: () -> type_c2ats_GType = "mac#gtk_debug_flag_get_type"
fun fun_c2ats_gtk_dialog_flags_get_type: () -> type_c2ats_GType = "mac#gtk_dialog_flags_get_type"
fun fun_c2ats_gtk_response_type_get_type: () -> type_c2ats_GType = "mac#gtk_response_type_get_type"
fun fun_c2ats_gtk_dest_defaults_get_type: () -> type_c2ats_GType = "mac#gtk_dest_defaults_get_type"
fun fun_c2ats_gtk_entry_icon_position_get_type: () -> type_c2ats_GType = "mac#gtk_entry_icon_position_get_type"
fun fun_c2ats_gtk_align_get_type: () -> type_c2ats_GType = "mac#gtk_align_get_type"
fun fun_c2ats_gtk_arrow_type_get_type: () -> type_c2ats_GType = "mac#gtk_arrow_type_get_type"
fun fun_c2ats_gtk_baseline_position_get_type: () -> type_c2ats_GType = "mac#gtk_baseline_position_get_type"
fun fun_c2ats_gtk_delete_type_get_type: () -> type_c2ats_GType = "mac#gtk_delete_type_get_type"
fun fun_c2ats_gtk_direction_type_get_type: () -> type_c2ats_GType = "mac#gtk_direction_type_get_type"
fun fun_c2ats_gtk_icon_size_get_type: () -> type_c2ats_GType = "mac#gtk_icon_size_get_type"
fun fun_c2ats_gtk_sensitivity_type_get_type: () -> type_c2ats_GType = "mac#gtk_sensitivity_type_get_type"
fun fun_c2ats_gtk_text_direction_get_type: () -> type_c2ats_GType = "mac#gtk_text_direction_get_type"
fun fun_c2ats_gtk_justification_get_type: () -> type_c2ats_GType = "mac#gtk_justification_get_type"
fun fun_c2ats_gtk_menu_direction_type_get_type: () -> type_c2ats_GType = "mac#gtk_menu_direction_type_get_type"
fun fun_c2ats_gtk_message_type_get_type: () -> type_c2ats_GType = "mac#gtk_message_type_get_type"
fun fun_c2ats_gtk_movement_step_get_type: () -> type_c2ats_GType = "mac#gtk_movement_step_get_type"
fun fun_c2ats_gtk_scroll_step_get_type: () -> type_c2ats_GType = "mac#gtk_scroll_step_get_type"
fun fun_c2ats_gtk_orientation_get_type: () -> type_c2ats_GType = "mac#gtk_orientation_get_type"
fun fun_c2ats_gtk_pack_type_get_type: () -> type_c2ats_GType = "mac#gtk_pack_type_get_type"
fun fun_c2ats_gtk_position_type_get_type: () -> type_c2ats_GType = "mac#gtk_position_type_get_type"
fun fun_c2ats_gtk_relief_style_get_type: () -> type_c2ats_GType = "mac#gtk_relief_style_get_type"
fun fun_c2ats_gtk_scroll_type_get_type: () -> type_c2ats_GType = "mac#gtk_scroll_type_get_type"
fun fun_c2ats_gtk_selection_mode_get_type: () -> type_c2ats_GType = "mac#gtk_selection_mode_get_type"
fun fun_c2ats_gtk_shadow_type_get_type: () -> type_c2ats_GType = "mac#gtk_shadow_type_get_type"
fun fun_c2ats_gtk_state_type_get_type: () -> type_c2ats_GType = "mac#gtk_state_type_get_type"
fun fun_c2ats_gtk_toolbar_style_get_type: () -> type_c2ats_GType = "mac#gtk_toolbar_style_get_type"
fun fun_c2ats_gtk_wrap_mode_get_type: () -> type_c2ats_GType = "mac#gtk_wrap_mode_get_type"
fun fun_c2ats_gtk_sort_type_get_type: () -> type_c2ats_GType = "mac#gtk_sort_type_get_type"
fun fun_c2ats_gtk_im_preedit_style_get_type: () -> type_c2ats_GType = "mac#gtk_im_preedit_style_get_type"
fun fun_c2ats_gtk_im_status_style_get_type: () -> type_c2ats_GType = "mac#gtk_im_status_style_get_type"
fun fun_c2ats_gtk_pack_direction_get_type: () -> type_c2ats_GType = "mac#gtk_pack_direction_get_type"
fun fun_c2ats_gtk_print_pages_get_type: () -> type_c2ats_GType = "mac#gtk_print_pages_get_type"
fun fun_c2ats_gtk_page_set_get_type: () -> type_c2ats_GType = "mac#gtk_page_set_get_type"
fun fun_c2ats_gtk_number_up_layout_get_type: () -> type_c2ats_GType = "mac#gtk_number_up_layout_get_type"
fun fun_c2ats_gtk_page_orientation_get_type: () -> type_c2ats_GType = "mac#gtk_page_orientation_get_type"
fun fun_c2ats_gtk_print_quality_get_type: () -> type_c2ats_GType = "mac#gtk_print_quality_get_type"
fun fun_c2ats_gtk_print_duplex_get_type: () -> type_c2ats_GType = "mac#gtk_print_duplex_get_type"
fun fun_c2ats_gtk_unit_get_type: () -> type_c2ats_GType = "mac#gtk_unit_get_type"
fun fun_c2ats_gtk_tree_view_grid_lines_get_type: () -> type_c2ats_GType = "mac#gtk_tree_view_grid_lines_get_type"
fun fun_c2ats_gtk_drag_result_get_type: () -> type_c2ats_GType = "mac#gtk_drag_result_get_type"
fun fun_c2ats_gtk_size_group_mode_get_type: () -> type_c2ats_GType = "mac#gtk_size_group_mode_get_type"
fun fun_c2ats_gtk_size_request_mode_get_type: () -> type_c2ats_GType = "mac#gtk_size_request_mode_get_type"
fun fun_c2ats_gtk_scrollable_policy_get_type: () -> type_c2ats_GType = "mac#gtk_scrollable_policy_get_type"
fun fun_c2ats_gtk_state_flags_get_type: () -> type_c2ats_GType = "mac#gtk_state_flags_get_type"
fun fun_c2ats_gtk_region_flags_get_type: () -> type_c2ats_GType = "mac#gtk_region_flags_get_type"
fun fun_c2ats_gtk_junction_sides_get_type: () -> type_c2ats_GType = "mac#gtk_junction_sides_get_type"
fun fun_c2ats_gtk_border_style_get_type: () -> type_c2ats_GType = "mac#gtk_border_style_get_type"
fun fun_c2ats_gtk_level_bar_mode_get_type: () -> type_c2ats_GType = "mac#gtk_level_bar_mode_get_type"
fun fun_c2ats_gtk_input_purpose_get_type: () -> type_c2ats_GType = "mac#gtk_input_purpose_get_type"
fun fun_c2ats_gtk_input_hints_get_type: () -> type_c2ats_GType = "mac#gtk_input_hints_get_type"
fun fun_c2ats_gtk_propagation_phase_get_type: () -> type_c2ats_GType = "mac#gtk_propagation_phase_get_type"
fun fun_c2ats_gtk_event_sequence_state_get_type: () -> type_c2ats_GType = "mac#gtk_event_sequence_state_get_type"
fun fun_c2ats_gtk_pan_direction_get_type: () -> type_c2ats_GType = "mac#gtk_pan_direction_get_type"
fun fun_c2ats_gtk_popover_constraint_get_type: () -> type_c2ats_GType = "mac#gtk_popover_constraint_get_type"
fun fun_c2ats_gtk_file_chooser_action_get_type: () -> type_c2ats_GType = "mac#gtk_file_chooser_action_get_type"
fun fun_c2ats_gtk_file_chooser_confirmation_get_type: () -> type_c2ats_GType = "mac#gtk_file_chooser_confirmation_get_type"
fun fun_c2ats_gtk_file_chooser_error_get_type: () -> type_c2ats_GType = "mac#gtk_file_chooser_error_get_type"
fun fun_c2ats_gtk_file_filter_flags_get_type: () -> type_c2ats_GType = "mac#gtk_file_filter_flags_get_type"
fun fun_c2ats_gtk_icon_lookup_flags_get_type: () -> type_c2ats_GType = "mac#gtk_icon_lookup_flags_get_type"
fun fun_c2ats_gtk_icon_theme_error_get_type: () -> type_c2ats_GType = "mac#gtk_icon_theme_error_get_type"
fun fun_c2ats_gtk_icon_view_drop_position_get_type: () -> type_c2ats_GType = "mac#gtk_icon_view_drop_position_get_type"
fun fun_c2ats_gtk_image_type_get_type: () -> type_c2ats_GType = "mac#gtk_image_type_get_type"
fun fun_c2ats_gtk_arrow_placement_get_type: () -> type_c2ats_GType = "mac#gtk_arrow_placement_get_type"
fun fun_c2ats_gtk_buttons_type_get_type: () -> type_c2ats_GType = "mac#gtk_buttons_type_get_type"
fun fun_c2ats_gtk_button_role_get_type: () -> type_c2ats_GType = "mac#gtk_button_role_get_type"
fun fun_c2ats_gtk_notebook_tab_get_type: () -> type_c2ats_GType = "mac#gtk_notebook_tab_get_type"
fun fun_c2ats_gtk_pad_action_type_get_type: () -> type_c2ats_GType = "mac#gtk_pad_action_type_get_type"
fun fun_c2ats_gtk_places_open_flags_get_type: () -> type_c2ats_GType = "mac#gtk_places_open_flags_get_type"
fun fun_c2ats_gtk_print_status_get_type: () -> type_c2ats_GType = "mac#gtk_print_status_get_type"
fun fun_c2ats_gtk_print_operation_result_get_type: () -> type_c2ats_GType = "mac#gtk_print_operation_result_get_type"
fun fun_c2ats_gtk_print_operation_action_get_type: () -> type_c2ats_GType = "mac#gtk_print_operation_action_get_type"
fun fun_c2ats_gtk_print_error_get_type: () -> type_c2ats_GType = "mac#gtk_print_error_get_type"
fun fun_c2ats_gtk_recent_sort_type_get_type: () -> type_c2ats_GType = "mac#gtk_recent_sort_type_get_type"
fun fun_c2ats_gtk_recent_chooser_error_get_type: () -> type_c2ats_GType = "mac#gtk_recent_chooser_error_get_type"
fun fun_c2ats_gtk_recent_filter_flags_get_type: () -> type_c2ats_GType = "mac#gtk_recent_filter_flags_get_type"
fun fun_c2ats_gtk_recent_manager_error_get_type: () -> type_c2ats_GType = "mac#gtk_recent_manager_error_get_type"
fun fun_c2ats_gtk_revealer_transition_type_get_type: () -> type_c2ats_GType = "mac#gtk_revealer_transition_type_get_type"
fun fun_c2ats_gtk_corner_type_get_type: () -> type_c2ats_GType = "mac#gtk_corner_type_get_type"
fun fun_c2ats_gtk_policy_type_get_type: () -> type_c2ats_GType = "mac#gtk_policy_type_get_type"
fun fun_c2ats_gtk_target_flags_get_type: () -> type_c2ats_GType = "mac#gtk_target_flags_get_type"
fun fun_c2ats_gtk_shortcut_type_get_type: () -> type_c2ats_GType = "mac#gtk_shortcut_type_get_type"
fun fun_c2ats_gtk_spin_button_update_policy_get_type: () -> type_c2ats_GType = "mac#gtk_spin_button_update_policy_get_type"
fun fun_c2ats_gtk_spin_type_get_type: () -> type_c2ats_GType = "mac#gtk_spin_type_get_type"
fun fun_c2ats_gtk_stack_transition_type_get_type: () -> type_c2ats_GType = "mac#gtk_stack_transition_type_get_type"
fun fun_c2ats_gtk_style_context_print_flags_get_type: () -> type_c2ats_GType = "mac#gtk_style_context_print_flags_get_type"
fun fun_c2ats_gtk_text_buffer_target_info_get_type: () -> type_c2ats_GType = "mac#gtk_text_buffer_target_info_get_type"
fun fun_c2ats_gtk_text_search_flags_get_type: () -> type_c2ats_GType = "mac#gtk_text_search_flags_get_type"
fun fun_c2ats_gtk_text_window_type_get_type: () -> type_c2ats_GType = "mac#gtk_text_window_type_get_type"
fun fun_c2ats_gtk_text_view_layer_get_type: () -> type_c2ats_GType = "mac#gtk_text_view_layer_get_type"
fun fun_c2ats_gtk_text_extend_selection_get_type: () -> type_c2ats_GType = "mac#gtk_text_extend_selection_get_type"
fun fun_c2ats_gtk_toolbar_space_style_get_type: () -> type_c2ats_GType = "mac#gtk_toolbar_space_style_get_type"
fun fun_c2ats_gtk_tool_palette_drag_targets_get_type: () -> type_c2ats_GType = "mac#gtk_tool_palette_drag_targets_get_type"
fun fun_c2ats_gtk_tree_model_flags_get_type: () -> type_c2ats_GType = "mac#gtk_tree_model_flags_get_type"
fun fun_c2ats_gtk_tree_view_drop_position_get_type: () -> type_c2ats_GType = "mac#gtk_tree_view_drop_position_get_type"
fun fun_c2ats_gtk_tree_view_column_sizing_get_type: () -> type_c2ats_GType = "mac#gtk_tree_view_column_sizing_get_type"
fun fun_c2ats_gtk_widget_help_type_get_type: () -> type_c2ats_GType = "mac#gtk_widget_help_type_get_type"
fun fun_c2ats_gtk_window_type_get_type: () -> type_c2ats_GType = "mac#gtk_window_type_get_type"
fun fun_c2ats_gtk_window_position_get_type: () -> type_c2ats_GType = "mac#gtk_window_position_get_type"
fun fun_c2ats_gtk_rc_flags_get_type: () -> type_c2ats_GType = "mac#gtk_rc_flags_get_type"
fun fun_c2ats_gtk_rc_token_type_get_type: () -> type_c2ats_GType = "mac#gtk_rc_token_type_get_type"
fun fun_c2ats_gtk_path_priority_type_get_type: () -> type_c2ats_GType = "mac#gtk_path_priority_type_get_type"
fun fun_c2ats_gtk_path_type_get_type: () -> type_c2ats_GType = "mac#gtk_path_type_get_type"
fun fun_c2ats_gtk_expander_style_get_type: () -> type_c2ats_GType = "mac#gtk_expander_style_get_type"
fun fun_c2ats_gtk_attach_options_get_type: () -> type_c2ats_GType = "mac#gtk_attach_options_get_type"
fun fun_c2ats_gtk_ui_manager_item_type_get_type: () -> type_c2ats_GType = "mac#gtk_ui_manager_item_type_get_type"
// File: /usr/include/gtk-3.0/gtk/gtkviewport.h
abst@ype struct_c2ats__GtkViewport // FIXME! Forward declaration.
typedef type_c2ats_GtkViewport = struct_c2ats__GtkViewport
abst@ype struct_c2ats__GtkViewportPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkViewportPrivate = struct_c2ats__GtkViewportPrivate
abst@ype struct_c2ats__GtkViewportClass // FIXME! Forward declaration.
typedef type_c2ats_GtkViewportClass = struct_c2ats__GtkViewportClass
typedef struct_c2ats__GtkViewport = $extype_struct"struct _GtkViewport" of {
  bin = type_c2ats_GtkBin,
  priv = ptr (* cPtr0(type_c2ats_GtkViewportPrivate) *)
}
typedef struct_c2ats__GtkViewportClass = $extype_struct"struct _GtkViewportClass" of {
  parent_class = type_c2ats_GtkBinClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_viewport_get_type: () -> type_c2ats_GType = "mac#gtk_viewport_get_type"
fun fun_c2ats_gtk_viewport_new: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_viewport_new"
fun fun_c2ats_gtk_viewport_get_hadjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkViewport, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_viewport_get_hadjustment"
fun fun_c2ats_gtk_viewport_get_vadjustment: {l1:addr} (!ptr_v_1(type_c2ats_GtkViewport, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l2) = "mac#gtk_viewport_get_vadjustment"
fun fun_c2ats_gtk_viewport_set_hadjustment: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkViewport, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> void = "mac#gtk_viewport_set_hadjustment"
fun fun_c2ats_gtk_viewport_set_vadjustment: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkViewport, l1), !ptr_v_1(type_c2ats_GtkAdjustment, l2) | ptr l1, ptr l2) -> void = "mac#gtk_viewport_set_vadjustment"
fun fun_c2ats_gtk_viewport_set_shadow_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkViewport, l1) | ptr l1, type_c2ats_GtkShadowType) -> void = "mac#gtk_viewport_set_shadow_type"
fun fun_c2ats_gtk_viewport_get_shadow_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkViewport, l1) | ptr l1) -> type_c2ats_GtkShadowType = "mac#gtk_viewport_get_shadow_type"
fun fun_c2ats_gtk_viewport_get_bin_window: {l1:addr} (!ptr_v_1(type_c2ats_GtkViewport, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gtk_viewport_get_bin_window"
fun fun_c2ats_gtk_viewport_get_view_window: {l1:addr} (!ptr_v_1(type_c2ats_GtkViewport, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l2) = "mac#gtk_viewport_get_view_window"
// File: /usr/include/gtk-3.0/gtk/gtkvolumebutton.h
abst@ype struct_c2ats__GtkVolumeButton // FIXME! Forward declaration.
typedef type_c2ats_GtkVolumeButton = struct_c2ats__GtkVolumeButton
abst@ype struct_c2ats__GtkVolumeButtonClass // FIXME! Forward declaration.
typedef type_c2ats_GtkVolumeButtonClass = struct_c2ats__GtkVolumeButtonClass
typedef struct_c2ats__GtkVolumeButton = $extype_struct"struct _GtkVolumeButton" of {
  parent = type_c2ats_GtkScaleButton
}
typedef struct_c2ats__GtkVolumeButtonClass = $extype_struct"struct _GtkVolumeButtonClass" of {
  parent_class = type_c2ats_GtkScaleButtonClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_volume_button_get_type: () -> type_c2ats_GType = "mac#gtk_volume_button_get_type"
fun fun_c2ats_gtk_volume_button_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_volume_button_new"
// File: /usr/include/gtk-3.0/gtk/gtkwidgetpath.h
fun fun_c2ats_gtk_widget_path_get_type: () -> type_c2ats_GType = "mac#gtk_widget_path_get_type"
fun fun_c2ats_gtk_widget_path_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1) = "mac#gtk_widget_path_new"
fun fun_c2ats_gtk_widget_path_copy: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidgetPath, l2) | ptr l2) = "mac#gtk_widget_path_copy"
fun fun_c2ats_gtk_widget_path_ref: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidgetPath, l2) | ptr l2) = "mac#gtk_widget_path_ref"
fun fun_c2ats_gtk_widget_path_unref: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1) -> void = "mac#gtk_widget_path_unref"
fun fun_c2ats_gtk_widget_path_free: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1) -> void = "mac#gtk_widget_path_free"
fun fun_c2ats_gtk_widget_path_to_string: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#gtk_widget_path_to_string"
fun fun_c2ats_gtk_widget_path_length: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_widget_path_length"
fun fun_c2ats_gtk_widget_path_append_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1, type_c2ats_GType) -> type_c2ats_gint = "mac#gtk_widget_path_append_type"
fun fun_c2ats_gtk_widget_path_prepend_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1, type_c2ats_GType) -> void = "mac#gtk_widget_path_prepend_type"
fun fun_c2ats_gtk_widget_path_append_with_siblings: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1), !ptr_v_1(type_c2ats_GtkWidgetPath, l2) | ptr l1, ptr l2, type_c2ats_guint) -> type_c2ats_gint = "mac#gtk_widget_path_append_with_siblings"
fun fun_c2ats_gtk_widget_path_append_for_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> type_c2ats_gint = "mac#gtk_widget_path_append_for_widget"
fun fun_c2ats_gtk_widget_path_iter_get_object_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_GType = "mac#gtk_widget_path_iter_get_object_type"
fun fun_c2ats_gtk_widget_path_iter_set_object_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1, type_c2ats_gint, type_c2ats_GType) -> void = "mac#gtk_widget_path_iter_set_object_type"
fun fun_c2ats_gtk_widget_path_iter_get_object_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#gtk_widget_path_iter_get_object_name"
fun fun_c2ats_gtk_widget_path_iter_set_object_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1), !ptr_v_1(char, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#gtk_widget_path_iter_set_object_name"
fun fun_c2ats_gtk_widget_path_iter_get_siblings: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidgetPath, l2) | ptr l2) = "mac#gtk_widget_path_iter_get_siblings"
fun fun_c2ats_gtk_widget_path_iter_get_sibling_index: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_guint = "mac#gtk_widget_path_iter_get_sibling_index"
fun fun_c2ats_gtk_widget_path_iter_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_widget_path_iter_get_name"
fun fun_c2ats_gtk_widget_path_iter_set_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#gtk_widget_path_iter_set_name"
fun fun_c2ats_gtk_widget_path_iter_has_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gint, ptr l2) -> type_c2ats_gboolean = "mac#gtk_widget_path_iter_has_name"
fun fun_c2ats_gtk_widget_path_iter_has_qname: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1, type_c2ats_gint, type_c2ats_GQuark) -> type_c2ats_gboolean = "mac#gtk_widget_path_iter_has_qname"
fun fun_c2ats_gtk_widget_path_iter_get_state: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_GtkStateFlags = "mac#gtk_widget_path_iter_get_state"
fun fun_c2ats_gtk_widget_path_iter_set_state: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1, type_c2ats_gint, type_c2ats_GtkStateFlags) -> void = "mac#gtk_widget_path_iter_set_state"
fun fun_c2ats_gtk_widget_path_iter_add_class: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#gtk_widget_path_iter_add_class"
fun fun_c2ats_gtk_widget_path_iter_remove_class: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#gtk_widget_path_iter_remove_class"
fun fun_c2ats_gtk_widget_path_iter_clear_classes: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_widget_path_iter_clear_classes"
fun fun_c2ats_gtk_widget_path_iter_list_classes: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_widget_path_iter_list_classes"
fun fun_c2ats_gtk_widget_path_iter_has_class: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gint, ptr l2) -> type_c2ats_gboolean = "mac#gtk_widget_path_iter_has_class"
fun fun_c2ats_gtk_widget_path_iter_has_qclass: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1, type_c2ats_gint, type_c2ats_GQuark) -> type_c2ats_gboolean = "mac#gtk_widget_path_iter_has_qclass"
fun fun_c2ats_gtk_widget_path_iter_add_region: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gint, ptr l2, type_c2ats_GtkRegionFlags) -> void = "mac#gtk_widget_path_iter_add_region"
fun fun_c2ats_gtk_widget_path_iter_remove_region: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_gint, ptr l2) -> void = "mac#gtk_widget_path_iter_remove_region"
fun fun_c2ats_gtk_widget_path_iter_clear_regions: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_widget_path_iter_clear_regions"
fun fun_c2ats_gtk_widget_path_iter_list_regions: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_widget_path_iter_list_regions"
fun fun_c2ats_gtk_widget_path_iter_has_region: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkRegionFlags, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_widget_path_iter_has_region"
fun fun_c2ats_gtk_widget_path_iter_has_qregion: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1), !ptr_v_1(type_c2ats_GtkRegionFlags, l2) | ptr l1, type_c2ats_gint, type_c2ats_GQuark, ptr l2) -> type_c2ats_gboolean = "mac#gtk_widget_path_iter_has_qregion"
fun fun_c2ats_gtk_widget_path_get_object_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1) -> type_c2ats_GType = "mac#gtk_widget_path_get_object_type"
fun fun_c2ats_gtk_widget_path_is_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1, type_c2ats_GType) -> type_c2ats_gboolean = "mac#gtk_widget_path_is_type"
fun fun_c2ats_gtk_widget_path_has_parent: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidgetPath, l1) | ptr l1, type_c2ats_GType) -> type_c2ats_gboolean = "mac#gtk_widget_path_has_parent"
// File: /usr/include/gtk-3.0/gtk/gtkwindowgroup.h
typedef struct_c2ats__GtkWindowGroup = $extype_struct"struct _GtkWindowGroup" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkWindowGroupPrivate) *)
}
typedef struct_c2ats__GtkWindowGroupClass = $extype_struct"struct _GtkWindowGroupClass" of {
  parent_class = type_c2ats_GObjectClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_window_group_get_type: () -> type_c2ats_GType = "mac#gtk_window_group_get_type"
fun fun_c2ats_gtk_window_group_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWindowGroup, l1) | ptr l1) = "mac#gtk_window_group_new"
fun fun_c2ats_gtk_window_group_add_window: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindowGroup, l1), !ptr_v_1(type_c2ats_GtkWindow, l2) | ptr l1, ptr l2) -> void = "mac#gtk_window_group_add_window"
fun fun_c2ats_gtk_window_group_remove_window: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindowGroup, l1), !ptr_v_1(type_c2ats_GtkWindow, l2) | ptr l1, ptr l2) -> void = "mac#gtk_window_group_remove_window"
fun fun_c2ats_gtk_window_group_list_windows: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindowGroup, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_window_group_list_windows"
fun fun_c2ats_gtk_window_group_get_current_grab: {l1:addr} (!ptr_v_1(type_c2ats_GtkWindowGroup, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_window_group_get_current_grab"
fun fun_c2ats_gtk_window_group_get_current_device_grab: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWindowGroup, l1), !ptr_v_1(type_c2ats_GdkDevice, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_window_group_get_current_device_grab"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkarrow.h
abst@ype struct_c2ats__GtkArrow // FIXME! Forward declaration.
typedef type_c2ats_GtkArrow = struct_c2ats__GtkArrow
abst@ype struct_c2ats__GtkArrowPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkArrowPrivate = struct_c2ats__GtkArrowPrivate
abst@ype struct_c2ats__GtkArrowClass // FIXME! Forward declaration.
typedef type_c2ats_GtkArrowClass = struct_c2ats__GtkArrowClass
typedef struct_c2ats__GtkArrow = $extype_struct"struct _GtkArrow" of {
  misc = type_c2ats_GtkMisc,
  priv = ptr (* cPtr0(type_c2ats_GtkArrowPrivate) *)
}
typedef struct_c2ats__GtkArrowClass = $extype_struct"struct _GtkArrowClass" of {
  parent_class = type_c2ats_GtkMiscClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_arrow_get_type: () -> type_c2ats_GType = "mac#gtk_arrow_get_type"
fun fun_c2ats_gtk_arrow_new: (type_c2ats_GtkArrowType, type_c2ats_GtkShadowType) -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_arrow_new"
fun fun_c2ats_gtk_arrow_set: {l1:addr} (!ptr_v_1(type_c2ats_GtkArrow, l1) | ptr l1, type_c2ats_GtkArrowType, type_c2ats_GtkShadowType) -> void = "mac#gtk_arrow_set"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkaction.h
abst@ype struct_c2ats__GtkAction // FIXME! Forward declaration.
typedef type_c2ats_GtkAction = struct_c2ats__GtkAction
abst@ype struct_c2ats__GtkActionClass // FIXME! Forward declaration.
typedef type_c2ats_GtkActionClass = struct_c2ats__GtkActionClass
abst@ype struct_c2ats__GtkActionPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkActionPrivate = struct_c2ats__GtkActionPrivate
typedef struct_c2ats__GtkAction = $extype_struct"struct _GtkAction" of {
  object = type_c2ats_GObject,
  private_data = ptr (* cPtr0(type_c2ats_GtkActionPrivate) *)
}
typedef struct_c2ats__GtkActionClass = $extype_struct"struct _GtkActionClass" of {
  parent_class = type_c2ats_GObjectClass,
  activate = {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> void,
  menu_item_type = type_c2ats_GType,
  toolbar_item_type = type_c2ats_GType,
  create_menu_item = {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2),
  create_tool_item = {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2),
  connect_proxy = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAction, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void,
  disconnect_proxy = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAction, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void,
  create_menu = {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2),
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_action_get_type: () -> type_c2ats_GType = "mac#gtk_action_get_type"
fun fun_c2ats_gtk_action_new: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GtkAction, l5) | ptr l5) = "mac#gtk_action_new"
fun fun_c2ats_gtk_action_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_action_get_name"
fun fun_c2ats_gtk_action_is_sensitive: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_action_is_sensitive"
fun fun_c2ats_gtk_action_get_sensitive: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_action_get_sensitive"
fun fun_c2ats_gtk_action_set_sensitive: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_action_set_sensitive"
fun fun_c2ats_gtk_action_is_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_action_is_visible"
fun fun_c2ats_gtk_action_get_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_action_get_visible"
fun fun_c2ats_gtk_action_set_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_action_set_visible"
fun fun_c2ats_gtk_action_activate: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> void = "mac#gtk_action_activate"
fun fun_c2ats_gtk_action_create_icon: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1, type_c2ats_GtkIconSize) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_action_create_icon"
fun fun_c2ats_gtk_action_create_menu_item: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_action_create_menu_item"
fun fun_c2ats_gtk_action_create_tool_item: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_action_create_tool_item"
fun fun_c2ats_gtk_action_create_menu: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_action_create_menu"
fun fun_c2ats_gtk_action_get_proxies: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_action_get_proxies"
fun fun_c2ats_gtk_action_connect_accelerator: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> void = "mac#gtk_action_connect_accelerator"
fun fun_c2ats_gtk_action_disconnect_accelerator: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> void = "mac#gtk_action_disconnect_accelerator"
fun fun_c2ats_gtk_action_get_accel_path: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_action_get_accel_path"
fun fun_c2ats_gtk_action_get_accel_closure: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GClosure, l2) | ptr l2) = "mac#gtk_action_get_accel_closure"
fun fun_c2ats_gtk_action_block_activate: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> void = "mac#gtk_action_block_activate"
fun fun_c2ats_gtk_action_unblock_activate: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> void = "mac#gtk_action_unblock_activate"
fun fun_c2ats__gtk_action_add_to_proxy_list: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAction, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#_gtk_action_add_to_proxy_list"
fun fun_c2ats__gtk_action_remove_from_proxy_list: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAction, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#_gtk_action_remove_from_proxy_list"
fun fun_c2ats__gtk_action_emit_activate: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> void = "mac#_gtk_action_emit_activate"
fun fun_c2ats_gtk_action_set_accel_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAction, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_action_set_accel_path"
fun fun_c2ats_gtk_action_set_accel_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAction, l1), !ptr_v_1(type_c2ats_GtkAccelGroup, l2) | ptr l1, ptr l2) -> void = "mac#gtk_action_set_accel_group"
fun fun_c2ats__gtk_action_sync_menu_visible: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAction, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_gboolean) -> void = "mac#_gtk_action_sync_menu_visible"
fun fun_c2ats_gtk_action_set_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAction, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_action_set_label"
fun fun_c2ats_gtk_action_get_label: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_action_get_label"
fun fun_c2ats_gtk_action_set_short_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAction, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_action_set_short_label"
fun fun_c2ats_gtk_action_get_short_label: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_action_get_short_label"
fun fun_c2ats_gtk_action_set_tooltip: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAction, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_action_set_tooltip"
fun fun_c2ats_gtk_action_get_tooltip: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_action_get_tooltip"
fun fun_c2ats_gtk_action_set_stock_id: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAction, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_action_set_stock_id"
fun fun_c2ats_gtk_action_get_stock_id: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_action_get_stock_id"
fun fun_c2ats_gtk_action_set_gicon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAction, l1), !ptr_v_1(type_c2ats_GIcon, l2) | ptr l1, ptr l2) -> void = "mac#gtk_action_set_gicon"
fun fun_c2ats_gtk_action_get_gicon: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#gtk_action_get_gicon"
fun fun_c2ats_gtk_action_set_icon_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkAction, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_action_set_icon_name"
fun fun_c2ats_gtk_action_get_icon_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_action_get_icon_name"
fun fun_c2ats_gtk_action_set_visible_horizontal: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_action_set_visible_horizontal"
fun fun_c2ats_gtk_action_get_visible_horizontal: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_action_get_visible_horizontal"
fun fun_c2ats_gtk_action_set_visible_vertical: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_action_set_visible_vertical"
fun fun_c2ats_gtk_action_get_visible_vertical: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_action_get_visible_vertical"
fun fun_c2ats_gtk_action_set_is_important: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_action_set_is_important"
fun fun_c2ats_gtk_action_get_is_important: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_action_get_is_important"
fun fun_c2ats_gtk_action_set_always_show_image: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_action_set_always_show_image"
fun fun_c2ats_gtk_action_get_always_show_image: {l1:addr} (!ptr_v_1(type_c2ats_GtkAction, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_action_get_always_show_image"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkactivatable.h
abst@ype struct_c2ats__GtkActivatable // FIXME! Forward declaration.
typedef type_c2ats_GtkActivatable = struct_c2ats__GtkActivatable
abst@ype struct_c2ats__GtkActivatableIface // FIXME! Forward declaration.
typedef type_c2ats_GtkActivatableIface = struct_c2ats__GtkActivatableIface
typedef struct_c2ats__GtkActivatableIface = $extype_struct"struct _GtkActivatableIface" of {
  g_iface = type_c2ats_GTypeInterface,
  update = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkActivatable, l1), !ptr_v_1(type_c2ats_GtkAction, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void,
  sync_action_properties = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActivatable, l1), !ptr_v_1(type_c2ats_GtkAction, l2) | ptr l1, ptr l2) -> void
}
fun fun_c2ats_gtk_activatable_get_type: () -> type_c2ats_GType = "mac#gtk_activatable_get_type"
fun fun_c2ats_gtk_activatable_sync_action_properties: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActivatable, l1), !ptr_v_1(type_c2ats_GtkAction, l2) | ptr l1, ptr l2) -> void = "mac#gtk_activatable_sync_action_properties"
fun fun_c2ats_gtk_activatable_set_related_action: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActivatable, l1), !ptr_v_1(type_c2ats_GtkAction, l2) | ptr l1, ptr l2) -> void = "mac#gtk_activatable_set_related_action"
fun fun_c2ats_gtk_activatable_get_related_action: {l1:addr} (!ptr_v_1(type_c2ats_GtkActivatable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAction, l2) | ptr l2) = "mac#gtk_activatable_get_related_action"
fun fun_c2ats_gtk_activatable_set_use_action_appearance: {l1:addr} (!ptr_v_1(type_c2ats_GtkActivatable, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_activatable_set_use_action_appearance"
fun fun_c2ats_gtk_activatable_get_use_action_appearance: {l1:addr} (!ptr_v_1(type_c2ats_GtkActivatable, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_activatable_get_use_action_appearance"
fun fun_c2ats_gtk_activatable_do_set_related_action: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActivatable, l1), !ptr_v_1(type_c2ats_GtkAction, l2) | ptr l1, ptr l2) -> void = "mac#gtk_activatable_do_set_related_action"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkstock.h
typedef type_c2ats_GtkTranslateFunc = {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gpointer) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2)
abst@ype struct_c2ats__GtkStockItem // FIXME! Forward declaration.
typedef type_c2ats_GtkStockItem = struct_c2ats__GtkStockItem
typedef struct_c2ats__GtkStockItem = $extype_struct"struct _GtkStockItem" of {
  stock_id = ptr (* cPtr0(type_c2ats_gchar) *),
  label = ptr (* cPtr0(type_c2ats_gchar) *),
  modifier = type_c2ats_GdkModifierType,
  keyval = type_c2ats_guint,
  translation_domain = ptr (* cPtr0(type_c2ats_gchar) *)
}
fun fun_c2ats_gtk_stock_add: {l1:addr} (!ptr_v_1(type_c2ats_GtkStockItem, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_stock_add"
fun fun_c2ats_gtk_stock_add_static: {l1:addr} (!ptr_v_1(type_c2ats_GtkStockItem, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_stock_add_static"
fun fun_c2ats_gtk_stock_lookup: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GtkStockItem, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_stock_lookup"
fun fun_c2ats_gtk_stock_list_ids: () -> [l1:addr] (ptr_v_1(type_c2ats_GSList, l1) | ptr l1) = "mac#gtk_stock_list_ids"
fun fun_c2ats_gtk_stock_item_copy: {l1:addr} (!ptr_v_1(type_c2ats_GtkStockItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStockItem, l2) | ptr l2) = "mac#gtk_stock_item_copy"
fun fun_c2ats_gtk_stock_item_free: {l1:addr} (!ptr_v_1(type_c2ats_GtkStockItem, l1) | ptr l1) -> void = "mac#gtk_stock_item_free"
fun fun_c2ats_gtk_stock_set_translate_func: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_GtkTranslateFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_stock_set_translate_func"
typedef type_c2ats_GtkStock = cPtr0(char)
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkactiongroup.h
abst@ype struct_c2ats__GtkActionGroup // FIXME! Forward declaration.
typedef type_c2ats_GtkActionGroup = struct_c2ats__GtkActionGroup
abst@ype struct_c2ats__GtkActionGroupPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkActionGroupPrivate = struct_c2ats__GtkActionGroupPrivate
abst@ype struct_c2ats__GtkActionGroupClass // FIXME! Forward declaration.
typedef type_c2ats_GtkActionGroupClass = struct_c2ats__GtkActionGroupClass
abst@ype struct_c2ats__GtkActionEntry // FIXME! Forward declaration.
typedef type_c2ats_GtkActionEntry = struct_c2ats__GtkActionEntry
abst@ype struct_c2ats__GtkToggleActionEntry // FIXME! Forward declaration.
typedef type_c2ats_GtkToggleActionEntry = struct_c2ats__GtkToggleActionEntry
abst@ype struct_c2ats__GtkRadioActionEntry // FIXME! Forward declaration.
typedef type_c2ats_GtkRadioActionEntry = struct_c2ats__GtkRadioActionEntry
typedef struct_c2ats__GtkActionGroup = $extype_struct"struct _GtkActionGroup" of {
  parent = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkActionGroupPrivate) *)
}
typedef struct_c2ats__GtkActionGroupClass = $extype_struct"struct _GtkActionGroupClass" of {
  parent_class = type_c2ats_GObjectClass,
  get_action = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkAction, l3) | ptr l3),
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
typedef struct_c2ats__GtkActionEntry = $extype_struct"struct _GtkActionEntry" of {
  name = ptr (* cPtr0(type_c2ats_gchar) *),
  stock_id = ptr (* cPtr0(type_c2ats_gchar) *),
  label = ptr (* cPtr0(type_c2ats_gchar) *),
  accelerator = ptr (* cPtr0(type_c2ats_gchar) *),
  tooltip = ptr (* cPtr0(type_c2ats_gchar) *),
  callback = type_c2ats_GCallback
}
typedef struct_c2ats__GtkToggleActionEntry = $extype_struct"struct _GtkToggleActionEntry" of {
  name = ptr (* cPtr0(type_c2ats_gchar) *),
  stock_id = ptr (* cPtr0(type_c2ats_gchar) *),
  label = ptr (* cPtr0(type_c2ats_gchar) *),
  accelerator = ptr (* cPtr0(type_c2ats_gchar) *),
  tooltip = ptr (* cPtr0(type_c2ats_gchar) *),
  callback = type_c2ats_GCallback,
  is_active = type_c2ats_gboolean
}
typedef struct_c2ats__GtkRadioActionEntry = $extype_struct"struct _GtkRadioActionEntry" of {
  name = ptr (* cPtr0(type_c2ats_gchar) *),
  stock_id = ptr (* cPtr0(type_c2ats_gchar) *),
  label = ptr (* cPtr0(type_c2ats_gchar) *),
  accelerator = ptr (* cPtr0(type_c2ats_gchar) *),
  tooltip = ptr (* cPtr0(type_c2ats_gchar) *),
  value = type_c2ats_gint
}
fun fun_c2ats_gtk_action_group_get_type: () -> type_c2ats_GType = "mac#gtk_action_group_get_type"
fun fun_c2ats_gtk_action_group_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkActionGroup, l2) | ptr l2) = "mac#gtk_action_group_new"
fun fun_c2ats_gtk_action_group_get_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_action_group_get_name"
fun fun_c2ats_gtk_action_group_get_sensitive: {l1:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_action_group_get_sensitive"
fun fun_c2ats_gtk_action_group_set_sensitive: {l1:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_action_group_set_sensitive"
fun fun_c2ats_gtk_action_group_get_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_action_group_get_visible"
fun fun_c2ats_gtk_action_group_set_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_action_group_set_visible"
fun fun_c2ats_gtk_action_group_get_accel_group: {l1:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAccelGroup, l2) | ptr l2) = "mac#gtk_action_group_get_accel_group"
fun fun_c2ats_gtk_action_group_set_accel_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1), !ptr_v_1(type_c2ats_GtkAccelGroup, l2) | ptr l1, ptr l2) -> void = "mac#gtk_action_group_set_accel_group"
fun fun_c2ats_gtk_action_group_get_action: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkAction, l3) | ptr l3) = "mac#gtk_action_group_get_action"
fun fun_c2ats_gtk_action_group_list_actions: {l1:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_action_group_list_actions"
fun fun_c2ats_gtk_action_group_add_action: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1), !ptr_v_1(type_c2ats_GtkAction, l2) | ptr l1, ptr l2) -> void = "mac#gtk_action_group_add_action"
fun fun_c2ats_gtk_action_group_add_action_with_accel: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1), !ptr_v_1(type_c2ats_GtkAction, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_action_group_add_action_with_accel"
fun fun_c2ats_gtk_action_group_remove_action: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1), !ptr_v_1(type_c2ats_GtkAction, l2) | ptr l1, ptr l2) -> void = "mac#gtk_action_group_remove_action"
fun fun_c2ats_gtk_action_group_add_actions: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1), !ptr_v_1(type_c2ats_GtkActionEntry, l2) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_gpointer) -> void = "mac#gtk_action_group_add_actions"
fun fun_c2ats_gtk_action_group_add_toggle_actions: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1), !ptr_v_1(type_c2ats_GtkToggleActionEntry, l2) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_gpointer) -> void = "mac#gtk_action_group_add_toggle_actions"
fun fun_c2ats_gtk_action_group_add_radio_actions: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1), !ptr_v_1(type_c2ats_GtkRadioActionEntry, l2) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_gint, type_c2ats_GCallback, type_c2ats_gpointer) -> void = "mac#gtk_action_group_add_radio_actions"
fun fun_c2ats_gtk_action_group_add_actions_full: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1), !ptr_v_1(type_c2ats_GtkActionEntry, l2) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_action_group_add_actions_full"
fun fun_c2ats_gtk_action_group_add_toggle_actions_full: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1), !ptr_v_1(type_c2ats_GtkToggleActionEntry, l2) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_action_group_add_toggle_actions_full"
fun fun_c2ats_gtk_action_group_add_radio_actions_full: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1), !ptr_v_1(type_c2ats_GtkRadioActionEntry, l2) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_gint, type_c2ats_GCallback, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_action_group_add_radio_actions_full"
fun fun_c2ats_gtk_action_group_set_translate_func: {l1:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1) | ptr l1, type_c2ats_GtkTranslateFunc, type_c2ats_gpointer, type_c2ats_GDestroyNotify) -> void = "mac#gtk_action_group_set_translate_func"
fun fun_c2ats_gtk_action_group_set_translation_domain: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_action_group_set_translation_domain"
fun fun_c2ats_gtk_action_group_translate_string: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_gchar, l3) | ptr l3) = "mac#gtk_action_group_translate_string"
fun fun_c2ats__gtk_action_group_emit_connect_proxy: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1), !ptr_v_1(type_c2ats_GtkAction, l2), !ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#_gtk_action_group_emit_connect_proxy"
fun fun_c2ats__gtk_action_group_emit_disconnect_proxy: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1), !ptr_v_1(type_c2ats_GtkAction, l2), !ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#_gtk_action_group_emit_disconnect_proxy"
fun fun_c2ats__gtk_action_group_emit_pre_activate: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1), !ptr_v_1(type_c2ats_GtkAction, l2) | ptr l1, ptr l2) -> void = "mac#_gtk_action_group_emit_pre_activate"
fun fun_c2ats__gtk_action_group_emit_post_activate: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkActionGroup, l1), !ptr_v_1(type_c2ats_GtkAction, l2) | ptr l1, ptr l2) -> void = "mac#_gtk_action_group_emit_post_activate"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkalignment.h
abst@ype struct_c2ats__GtkAlignment // FIXME! Forward declaration.
typedef type_c2ats_GtkAlignment = struct_c2ats__GtkAlignment
abst@ype struct_c2ats__GtkAlignmentPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkAlignmentPrivate = struct_c2ats__GtkAlignmentPrivate
abst@ype struct_c2ats__GtkAlignmentClass // FIXME! Forward declaration.
typedef type_c2ats_GtkAlignmentClass = struct_c2ats__GtkAlignmentClass
typedef struct_c2ats__GtkAlignment = $extype_struct"struct _GtkAlignment" of {
  bin = type_c2ats_GtkBin,
  priv = ptr (* cPtr0(type_c2ats_GtkAlignmentPrivate) *)
}
typedef struct_c2ats__GtkAlignmentClass = $extype_struct"struct _GtkAlignmentClass" of {
  parent_class = type_c2ats_GtkBinClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_alignment_get_type: () -> type_c2ats_GType = "mac#gtk_alignment_get_type"
fun fun_c2ats_gtk_alignment_new: (type_c2ats_gfloat, type_c2ats_gfloat, type_c2ats_gfloat, type_c2ats_gfloat) -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_alignment_new"
fun fun_c2ats_gtk_alignment_set: {l1:addr} (!ptr_v_1(type_c2ats_GtkAlignment, l1) | ptr l1, type_c2ats_gfloat, type_c2ats_gfloat, type_c2ats_gfloat, type_c2ats_gfloat) -> void = "mac#gtk_alignment_set"
fun fun_c2ats_gtk_alignment_set_padding: {l1:addr} (!ptr_v_1(type_c2ats_GtkAlignment, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint, type_c2ats_guint, type_c2ats_guint) -> void = "mac#gtk_alignment_set_padding"
fun fun_c2ats_gtk_alignment_get_padding: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkAlignment, l1), !ptr_v_1(type_c2ats_guint, l2), !ptr_v_1(type_c2ats_guint, l3), !ptr_v_1(type_c2ats_guint, l4), !ptr_v_1(type_c2ats_guint, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> void = "mac#gtk_alignment_get_padding"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkcolorsel.h
abst@ype struct_c2ats__GtkColorSelection // FIXME! Forward declaration.
typedef type_c2ats_GtkColorSelection = struct_c2ats__GtkColorSelection
abst@ype struct_c2ats__GtkColorSelectionPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkColorSelectionPrivate = struct_c2ats__GtkColorSelectionPrivate
abst@ype struct_c2ats__GtkColorSelectionClass // FIXME! Forward declaration.
typedef type_c2ats_GtkColorSelectionClass = struct_c2ats__GtkColorSelectionClass
typedef type_c2ats_GtkColorSelectionChangePaletteFunc = {l1:addr} (!ptr_v_1(type_c2ats_GdkColor, l1) | ptr l1, type_c2ats_gint) -> void
typedef type_c2ats_GtkColorSelectionChangePaletteWithScreenFunc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1), !ptr_v_1(type_c2ats_GdkColor, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void
typedef struct_c2ats__GtkColorSelection = $extype_struct"struct _GtkColorSelection" of {
  parent_instance = type_c2ats_GtkBox,
  private_data = ptr (* cPtr0(type_c2ats_GtkColorSelectionPrivate) *)
}
typedef struct_c2ats__GtkColorSelectionClass = $extype_struct"struct _GtkColorSelectionClass" of {
  parent_class = type_c2ats_GtkBoxClass,
  color_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkColorSelection, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_color_selection_get_type: () -> type_c2ats_GType = "mac#gtk_color_selection_get_type"
fun fun_c2ats_gtk_color_selection_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_color_selection_new"
fun fun_c2ats_gtk_color_selection_get_has_opacity_control: {l1:addr} (!ptr_v_1(type_c2ats_GtkColorSelection, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_color_selection_get_has_opacity_control"
fun fun_c2ats_gtk_color_selection_set_has_opacity_control: {l1:addr} (!ptr_v_1(type_c2ats_GtkColorSelection, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_color_selection_set_has_opacity_control"
fun fun_c2ats_gtk_color_selection_get_has_palette: {l1:addr} (!ptr_v_1(type_c2ats_GtkColorSelection, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_color_selection_get_has_palette"
fun fun_c2ats_gtk_color_selection_set_has_palette: {l1:addr} (!ptr_v_1(type_c2ats_GtkColorSelection, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_color_selection_set_has_palette"
fun fun_c2ats_gtk_color_selection_set_current_alpha: {l1:addr} (!ptr_v_1(type_c2ats_GtkColorSelection, l1) | ptr l1, type_c2ats_guint16) -> void = "mac#gtk_color_selection_set_current_alpha"
fun fun_c2ats_gtk_color_selection_get_current_alpha: {l1:addr} (!ptr_v_1(type_c2ats_GtkColorSelection, l1) | ptr l1) -> type_c2ats_guint16 = "mac#gtk_color_selection_get_current_alpha"
fun fun_c2ats_gtk_color_selection_set_previous_alpha: {l1:addr} (!ptr_v_1(type_c2ats_GtkColorSelection, l1) | ptr l1, type_c2ats_guint16) -> void = "mac#gtk_color_selection_set_previous_alpha"
fun fun_c2ats_gtk_color_selection_get_previous_alpha: {l1:addr} (!ptr_v_1(type_c2ats_GtkColorSelection, l1) | ptr l1) -> type_c2ats_guint16 = "mac#gtk_color_selection_get_previous_alpha"
fun fun_c2ats_gtk_color_selection_set_current_rgba: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorSelection, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, ptr l2) -> void = "mac#gtk_color_selection_set_current_rgba"
fun fun_c2ats_gtk_color_selection_get_current_rgba: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorSelection, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, ptr l2) -> void = "mac#gtk_color_selection_get_current_rgba"
fun fun_c2ats_gtk_color_selection_set_previous_rgba: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorSelection, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, ptr l2) -> void = "mac#gtk_color_selection_set_previous_rgba"
fun fun_c2ats_gtk_color_selection_get_previous_rgba: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorSelection, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, ptr l2) -> void = "mac#gtk_color_selection_get_previous_rgba"
fun fun_c2ats_gtk_color_selection_is_adjusting: {l1:addr} (!ptr_v_1(type_c2ats_GtkColorSelection, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_color_selection_is_adjusting"
fun fun_c2ats_gtk_color_selection_palette_from_string: {l1,l2,l2_1,l3:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_2(type_c2ats_GdkColor, l2, l2_1), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_color_selection_palette_from_string"
fun fun_c2ats_gtk_color_selection_palette_to_string: {l1:addr} (!ptr_v_1(type_c2ats_GdkColor, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_color_selection_palette_to_string"
fun fun_c2ats_gtk_color_selection_set_change_palette_with_screen_hook: (type_c2ats_GtkColorSelectionChangePaletteWithScreenFunc) -> type_c2ats_GtkColorSelectionChangePaletteWithScreenFunc = "mac#gtk_color_selection_set_change_palette_with_screen_hook"
fun fun_c2ats_gtk_color_selection_set_current_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorSelection, l1), !ptr_v_1(type_c2ats_GdkColor, l2) | ptr l1, ptr l2) -> void = "mac#gtk_color_selection_set_current_color"
fun fun_c2ats_gtk_color_selection_get_current_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorSelection, l1), !ptr_v_1(type_c2ats_GdkColor, l2) | ptr l1, ptr l2) -> void = "mac#gtk_color_selection_get_current_color"
fun fun_c2ats_gtk_color_selection_set_previous_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorSelection, l1), !ptr_v_1(type_c2ats_GdkColor, l2) | ptr l1, ptr l2) -> void = "mac#gtk_color_selection_set_previous_color"
fun fun_c2ats_gtk_color_selection_get_previous_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkColorSelection, l1), !ptr_v_1(type_c2ats_GdkColor, l2) | ptr l1, ptr l2) -> void = "mac#gtk_color_selection_get_previous_color"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkcolorseldialog.h
abst@ype struct_c2ats__GtkColorSelectionDialog // FIXME! Forward declaration.
typedef type_c2ats_GtkColorSelectionDialog = struct_c2ats__GtkColorSelectionDialog
abst@ype struct_c2ats__GtkColorSelectionDialogPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkColorSelectionDialogPrivate = struct_c2ats__GtkColorSelectionDialogPrivate
abst@ype struct_c2ats__GtkColorSelectionDialogClass // FIXME! Forward declaration.
typedef type_c2ats_GtkColorSelectionDialogClass = struct_c2ats__GtkColorSelectionDialogClass
typedef struct_c2ats__GtkColorSelectionDialog = $extype_struct"struct _GtkColorSelectionDialog" of {
  parent_instance = type_c2ats_GtkDialog,
  priv = ptr (* cPtr0(type_c2ats_GtkColorSelectionDialogPrivate) *)
}
typedef struct_c2ats__GtkColorSelectionDialogClass = $extype_struct"struct _GtkColorSelectionDialogClass" of {
  parent_class = type_c2ats_GtkDialogClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_color_selection_dialog_get_type: () -> type_c2ats_GType = "mac#gtk_color_selection_dialog_get_type"
fun fun_c2ats_gtk_color_selection_dialog_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_color_selection_dialog_new"
fun fun_c2ats_gtk_color_selection_dialog_get_color_selection: {l1:addr} (!ptr_v_1(type_c2ats_GtkColorSelectionDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_color_selection_dialog_get_color_selection"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkfontsel.h
abst@ype struct_c2ats__GtkFontSelection // FIXME! Forward declaration.
typedef type_c2ats_GtkFontSelection = struct_c2ats__GtkFontSelection
abst@ype struct_c2ats__GtkFontSelectionPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkFontSelectionPrivate = struct_c2ats__GtkFontSelectionPrivate
abst@ype struct_c2ats__GtkFontSelectionClass // FIXME! Forward declaration.
typedef type_c2ats_GtkFontSelectionClass = struct_c2ats__GtkFontSelectionClass
abst@ype struct_c2ats__GtkFontSelectionDialog // FIXME! Forward declaration.
typedef type_c2ats_GtkFontSelectionDialog = struct_c2ats__GtkFontSelectionDialog
abst@ype struct_c2ats__GtkFontSelectionDialogPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkFontSelectionDialogPrivate = struct_c2ats__GtkFontSelectionDialogPrivate
abst@ype struct_c2ats__GtkFontSelectionDialogClass // FIXME! Forward declaration.
typedef type_c2ats_GtkFontSelectionDialogClass = struct_c2ats__GtkFontSelectionDialogClass
typedef struct_c2ats__GtkFontSelection = $extype_struct"struct _GtkFontSelection" of {
  parent_instance = type_c2ats_GtkBox,
  priv = ptr (* cPtr0(type_c2ats_GtkFontSelectionPrivate) *)
}
typedef struct_c2ats__GtkFontSelectionClass = $extype_struct"struct _GtkFontSelectionClass" of {
  parent_class = type_c2ats_GtkBoxClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
typedef struct_c2ats__GtkFontSelectionDialog = $extype_struct"struct _GtkFontSelectionDialog" of {
  parent_instance = type_c2ats_GtkDialog,
  priv = ptr (* cPtr0(type_c2ats_GtkFontSelectionDialogPrivate) *)
}
typedef struct_c2ats__GtkFontSelectionDialogClass = $extype_struct"struct _GtkFontSelectionDialogClass" of {
  parent_class = type_c2ats_GtkDialogClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_font_selection_get_type: () -> type_c2ats_GType = "mac#gtk_font_selection_get_type"
fun fun_c2ats_gtk_font_selection_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_font_selection_new"
fun fun_c2ats_gtk_font_selection_get_family_list: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontSelection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_font_selection_get_family_list"
fun fun_c2ats_gtk_font_selection_get_face_list: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontSelection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_font_selection_get_face_list"
fun fun_c2ats_gtk_font_selection_get_size_entry: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontSelection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_font_selection_get_size_entry"
fun fun_c2ats_gtk_font_selection_get_size_list: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontSelection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_font_selection_get_size_list"
fun fun_c2ats_gtk_font_selection_get_preview_entry: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontSelection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_font_selection_get_preview_entry"
fun fun_c2ats_gtk_font_selection_get_family: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontSelection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontFamily, l2) | ptr l2) = "mac#gtk_font_selection_get_family"
fun fun_c2ats_gtk_font_selection_get_face: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontSelection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontFace, l2) | ptr l2) = "mac#gtk_font_selection_get_face"
fun fun_c2ats_gtk_font_selection_get_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontSelection, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_font_selection_get_size"
fun fun_c2ats_gtk_font_selection_get_font_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontSelection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_font_selection_get_font_name"
fun fun_c2ats_gtk_font_selection_set_font_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFontSelection, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_font_selection_set_font_name"
fun fun_c2ats_gtk_font_selection_get_preview_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontSelection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_font_selection_get_preview_text"
fun fun_c2ats_gtk_font_selection_set_preview_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFontSelection, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_font_selection_set_preview_text"
fun fun_c2ats_gtk_font_selection_dialog_get_type: () -> type_c2ats_GType = "mac#gtk_font_selection_dialog_get_type"
fun fun_c2ats_gtk_font_selection_dialog_new: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_font_selection_dialog_new"
fun fun_c2ats_gtk_font_selection_dialog_get_ok_button: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontSelectionDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_font_selection_dialog_get_ok_button"
fun fun_c2ats_gtk_font_selection_dialog_get_cancel_button: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontSelectionDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_font_selection_dialog_get_cancel_button"
fun fun_c2ats_gtk_font_selection_dialog_get_font_selection: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontSelectionDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_font_selection_dialog_get_font_selection"
fun fun_c2ats_gtk_font_selection_dialog_get_font_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontSelectionDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_font_selection_dialog_get_font_name"
fun fun_c2ats_gtk_font_selection_dialog_set_font_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFontSelectionDialog, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_font_selection_dialog_set_font_name"
fun fun_c2ats_gtk_font_selection_dialog_get_preview_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkFontSelectionDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_font_selection_dialog_get_preview_text"
fun fun_c2ats_gtk_font_selection_dialog_set_preview_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkFontSelectionDialog, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_font_selection_dialog_set_preview_text"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtksymboliccolor.h
fun fun_c2ats_gtk_symbolic_color_get_type: () -> type_c2ats_GType = "mac#gtk_symbolic_color_get_type"
fun fun_c2ats_gtk_symbolic_color_new_literal: {l1:addr} (!ptr_v_1(type_c2ats_GdkRGBA, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSymbolicColor, l2) | ptr l2) = "mac#gtk_symbolic_color_new_literal"
fun fun_c2ats_gtk_symbolic_color_new_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSymbolicColor, l2) | ptr l2) = "mac#gtk_symbolic_color_new_name"
fun fun_c2ats_gtk_symbolic_color_new_shade: {l1:addr} (!ptr_v_1(type_c2ats_GtkSymbolicColor, l1) | ptr l1, type_c2ats_gdouble) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSymbolicColor, l2) | ptr l2) = "mac#gtk_symbolic_color_new_shade"
fun fun_c2ats_gtk_symbolic_color_new_alpha: {l1:addr} (!ptr_v_1(type_c2ats_GtkSymbolicColor, l1) | ptr l1, type_c2ats_gdouble) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSymbolicColor, l2) | ptr l2) = "mac#gtk_symbolic_color_new_alpha"
fun fun_c2ats_gtk_symbolic_color_new_mix: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkSymbolicColor, l1), !ptr_v_1(type_c2ats_GtkSymbolicColor, l2) | ptr l1, ptr l2, type_c2ats_gdouble) -> [l3:addr] (ptr_v_1(type_c2ats_GtkSymbolicColor, l3) | ptr l3) = "mac#gtk_symbolic_color_new_mix"
fun fun_c2ats_gtk_symbolic_color_new_win32: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1, type_c2ats_gint) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSymbolicColor, l2) | ptr l2) = "mac#gtk_symbolic_color_new_win32"
fun fun_c2ats_gtk_symbolic_color_ref: {l1:addr} (!ptr_v_1(type_c2ats_GtkSymbolicColor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSymbolicColor, l2) | ptr l2) = "mac#gtk_symbolic_color_ref"
fun fun_c2ats_gtk_symbolic_color_unref: {l1:addr} (!ptr_v_1(type_c2ats_GtkSymbolicColor, l1) | ptr l1) -> void = "mac#gtk_symbolic_color_unref"
fun fun_c2ats_gtk_symbolic_color_to_string: {l1:addr} (!ptr_v_1(type_c2ats_GtkSymbolicColor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#gtk_symbolic_color_to_string"
fun fun_c2ats_gtk_symbolic_color_resolve: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkSymbolicColor, l1), !ptr_v_1(type_c2ats_GtkStyleProperties, l2), !ptr_v_1(type_c2ats_GdkRGBA, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_symbolic_color_resolve"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkgradient.h
fun fun_c2ats_gtk_gradient_get_type: () -> type_c2ats_GType = "mac#gtk_gradient_get_type"
fun fun_c2ats_gtk_gradient_new_linear: (type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> [l1:addr] (ptr_v_1(type_c2ats_GtkGradient, l1) | ptr l1) = "mac#gtk_gradient_new_linear"
fun fun_c2ats_gtk_gradient_new_radial: (type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> [l1:addr] (ptr_v_1(type_c2ats_GtkGradient, l1) | ptr l1) = "mac#gtk_gradient_new_radial"
fun fun_c2ats_gtk_gradient_add_color_stop: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkGradient, l1), !ptr_v_1(type_c2ats_GtkSymbolicColor, l2) | ptr l1, type_c2ats_gdouble, ptr l2) -> void = "mac#gtk_gradient_add_color_stop"
fun fun_c2ats_gtk_gradient_ref: {l1:addr} (!ptr_v_1(type_c2ats_GtkGradient, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkGradient, l2) | ptr l2) = "mac#gtk_gradient_ref"
fun fun_c2ats_gtk_gradient_unref: {l1:addr} (!ptr_v_1(type_c2ats_GtkGradient, l1) | ptr l1) -> void = "mac#gtk_gradient_unref"
fun fun_c2ats_gtk_gradient_resolve: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkGradient, l1), !ptr_v_1(type_c2ats_GtkStyleProperties, l2), !ptr_v_2(type_c2ats_cairo_pattern_t, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_gradient_resolve"
fun fun_c2ats_gtk_gradient_resolve_for_context: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkGradient, l1), !ptr_v_1(type_c2ats_GtkStyleContext, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_cairo_pattern_t, l3) | ptr l3) = "mac#gtk_gradient_resolve_for_context"
fun fun_c2ats_gtk_gradient_to_string: {l1:addr} (!ptr_v_1(type_c2ats_GtkGradient, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2) | ptr l2) = "mac#gtk_gradient_to_string"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkhandlebox.h
abst@ype struct_c2ats__GtkHandleBox // FIXME! Forward declaration.
typedef type_c2ats_GtkHandleBox = struct_c2ats__GtkHandleBox
abst@ype struct_c2ats__GtkHandleBoxPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkHandleBoxPrivate = struct_c2ats__GtkHandleBoxPrivate
abst@ype struct_c2ats__GtkHandleBoxClass // FIXME! Forward declaration.
typedef type_c2ats_GtkHandleBoxClass = struct_c2ats__GtkHandleBoxClass
typedef struct_c2ats__GtkHandleBox = $extype_struct"struct _GtkHandleBox" of {
  bin = type_c2ats_GtkBin,
  priv = ptr (* cPtr0(type_c2ats_GtkHandleBoxPrivate) *)
}
typedef struct_c2ats__GtkHandleBoxClass = $extype_struct"struct _GtkHandleBoxClass" of {
  parent_class = type_c2ats_GtkBinClass,
  child_attached = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkHandleBox, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void,
  child_detached = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkHandleBox, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_handle_box_get_type: () -> type_c2ats_GType = "mac#gtk_handle_box_get_type"
fun fun_c2ats_gtk_handle_box_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_handle_box_new"
fun fun_c2ats_gtk_handle_box_set_shadow_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkHandleBox, l1) | ptr l1, type_c2ats_GtkShadowType) -> void = "mac#gtk_handle_box_set_shadow_type"
fun fun_c2ats_gtk_handle_box_get_shadow_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkHandleBox, l1) | ptr l1) -> type_c2ats_GtkShadowType = "mac#gtk_handle_box_get_shadow_type"
fun fun_c2ats_gtk_handle_box_set_handle_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkHandleBox, l1) | ptr l1, type_c2ats_GtkPositionType) -> void = "mac#gtk_handle_box_set_handle_position"
fun fun_c2ats_gtk_handle_box_get_handle_position: {l1:addr} (!ptr_v_1(type_c2ats_GtkHandleBox, l1) | ptr l1) -> type_c2ats_GtkPositionType = "mac#gtk_handle_box_get_handle_position"
fun fun_c2ats_gtk_handle_box_set_snap_edge: {l1:addr} (!ptr_v_1(type_c2ats_GtkHandleBox, l1) | ptr l1, type_c2ats_GtkPositionType) -> void = "mac#gtk_handle_box_set_snap_edge"
fun fun_c2ats_gtk_handle_box_get_snap_edge: {l1:addr} (!ptr_v_1(type_c2ats_GtkHandleBox, l1) | ptr l1) -> type_c2ats_GtkPositionType = "mac#gtk_handle_box_get_snap_edge"
fun fun_c2ats_gtk_handle_box_get_child_detached: {l1:addr} (!ptr_v_1(type_c2ats_GtkHandleBox, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_handle_box_get_child_detached"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkhbbox.h
abst@ype struct_c2ats__GtkHButtonBox // FIXME! Forward declaration.
typedef type_c2ats_GtkHButtonBox = struct_c2ats__GtkHButtonBox
abst@ype struct_c2ats__GtkHButtonBoxClass // FIXME! Forward declaration.
typedef type_c2ats_GtkHButtonBoxClass = struct_c2ats__GtkHButtonBoxClass
typedef struct_c2ats__GtkHButtonBox = $extype_struct"struct _GtkHButtonBox" of {
  button_box = type_c2ats_GtkButtonBox
}
typedef struct_c2ats__GtkHButtonBoxClass = $extype_struct"struct _GtkHButtonBoxClass" of {
  parent_class = type_c2ats_GtkButtonBoxClass
}
fun fun_c2ats_gtk_hbutton_box_get_type: () -> type_c2ats_GType = "mac#gtk_hbutton_box_get_type"
fun fun_c2ats_gtk_hbutton_box_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_hbutton_box_new"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkhbox.h
abst@ype struct_c2ats__GtkHBox // FIXME! Forward declaration.
typedef type_c2ats_GtkHBox = struct_c2ats__GtkHBox
abst@ype struct_c2ats__GtkHBoxClass // FIXME! Forward declaration.
typedef type_c2ats_GtkHBoxClass = struct_c2ats__GtkHBoxClass
typedef struct_c2ats__GtkHBox = $extype_struct"struct _GtkHBox" of {
  box = type_c2ats_GtkBox
}
typedef struct_c2ats__GtkHBoxClass = $extype_struct"struct _GtkHBoxClass" of {
  parent_class = type_c2ats_GtkBoxClass
}
fun fun_c2ats_gtk_hbox_get_type: () -> type_c2ats_GType = "mac#gtk_hbox_get_type"
fun fun_c2ats_gtk_hbox_new: (type_c2ats_gboolean, type_c2ats_gint) -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_hbox_new"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkhpaned.h
abst@ype struct_c2ats__GtkHPaned // FIXME! Forward declaration.
typedef type_c2ats_GtkHPaned = struct_c2ats__GtkHPaned
abst@ype struct_c2ats__GtkHPanedClass // FIXME! Forward declaration.
typedef type_c2ats_GtkHPanedClass = struct_c2ats__GtkHPanedClass
typedef struct_c2ats__GtkHPaned = $extype_struct"struct _GtkHPaned" of {
  paned = type_c2ats_GtkPaned
}
typedef struct_c2ats__GtkHPanedClass = $extype_struct"struct _GtkHPanedClass" of {
  parent_class = type_c2ats_GtkPanedClass
}
fun fun_c2ats_gtk_hpaned_get_type: () -> type_c2ats_GType = "mac#gtk_hpaned_get_type"
fun fun_c2ats_gtk_hpaned_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_hpaned_new"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkhsv.h
abst@ype struct_c2ats__GtkHSV // FIXME! Forward declaration.
typedef type_c2ats_GtkHSV = struct_c2ats__GtkHSV
abst@ype struct_c2ats__GtkHSVPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkHSVPrivate = struct_c2ats__GtkHSVPrivate
abst@ype struct_c2ats__GtkHSVClass // FIXME! Forward declaration.
typedef type_c2ats_GtkHSVClass = struct_c2ats__GtkHSVClass
typedef struct_c2ats__GtkHSV = $extype_struct"struct _GtkHSV" of {
  parent_instance = type_c2ats_GtkWidget,
  priv = ptr (* cPtr0(type_c2ats_GtkHSVPrivate) *)
}
typedef struct_c2ats__GtkHSVClass = $extype_struct"struct _GtkHSVClass" of {
  parent_class = type_c2ats_GtkWidgetClass,
  changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkHSV, l1) | ptr l1) -> void,
  move = {l1:addr} (!ptr_v_1(type_c2ats_GtkHSV, l1) | ptr l1, type_c2ats_GtkDirectionType) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_hsv_get_type: () -> type_c2ats_GType = "mac#gtk_hsv_get_type"
fun fun_c2ats_gtk_hsv_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_hsv_new"
fun fun_c2ats_gtk_hsv_set_color: {l1:addr} (!ptr_v_1(type_c2ats_GtkHSV, l1) | ptr l1, double, double, double) -> void = "mac#gtk_hsv_set_color"
fun fun_c2ats_gtk_hsv_get_color: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkHSV, l1), !ptr_v_1(type_c2ats_gdouble, l2), !ptr_v_1(type_c2ats_gdouble, l3), !ptr_v_1(type_c2ats_gdouble, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_hsv_get_color"
fun fun_c2ats_gtk_hsv_set_metrics: {l1:addr} (!ptr_v_1(type_c2ats_GtkHSV, l1) | ptr l1, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_hsv_set_metrics"
fun fun_c2ats_gtk_hsv_get_metrics: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkHSV, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_hsv_get_metrics"
fun fun_c2ats_gtk_hsv_is_adjusting: {l1:addr} (!ptr_v_1(type_c2ats_GtkHSV, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_hsv_is_adjusting"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkhscale.h
abst@ype struct_c2ats__GtkHScale // FIXME! Forward declaration.
typedef type_c2ats_GtkHScale = struct_c2ats__GtkHScale
abst@ype struct_c2ats__GtkHScaleClass // FIXME! Forward declaration.
typedef type_c2ats_GtkHScaleClass = struct_c2ats__GtkHScaleClass
typedef struct_c2ats__GtkHScale = $extype_struct"struct _GtkHScale" of {
  scale = type_c2ats_GtkScale
}
typedef struct_c2ats__GtkHScaleClass = $extype_struct"struct _GtkHScaleClass" of {
  parent_class = type_c2ats_GtkScaleClass
}
fun fun_c2ats_gtk_hscale_get_type: () -> type_c2ats_GType = "mac#gtk_hscale_get_type"
fun fun_c2ats_gtk_hscale_new: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_hscale_new"
fun fun_c2ats_gtk_hscale_new_with_range: (type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_hscale_new_with_range"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkhscrollbar.h
abst@ype struct_c2ats__GtkHScrollbar // FIXME! Forward declaration.
typedef type_c2ats_GtkHScrollbar = struct_c2ats__GtkHScrollbar
abst@ype struct_c2ats__GtkHScrollbarClass // FIXME! Forward declaration.
typedef type_c2ats_GtkHScrollbarClass = struct_c2ats__GtkHScrollbarClass
typedef struct_c2ats__GtkHScrollbar = $extype_struct"struct _GtkHScrollbar" of {
  scrollbar = type_c2ats_GtkScrollbar
}
typedef struct_c2ats__GtkHScrollbarClass = $extype_struct"struct _GtkHScrollbarClass" of {
  parent_class = type_c2ats_GtkScrollbarClass
}
fun fun_c2ats_gtk_hscrollbar_get_type: () -> type_c2ats_GType = "mac#gtk_hscrollbar_get_type"
fun fun_c2ats_gtk_hscrollbar_new: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_hscrollbar_new"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkhseparator.h
abst@ype struct_c2ats__GtkHSeparator // FIXME! Forward declaration.
typedef type_c2ats_GtkHSeparator = struct_c2ats__GtkHSeparator
abst@ype struct_c2ats__GtkHSeparatorClass // FIXME! Forward declaration.
typedef type_c2ats_GtkHSeparatorClass = struct_c2ats__GtkHSeparatorClass
typedef struct_c2ats__GtkHSeparator = $extype_struct"struct _GtkHSeparator" of {
  separator = type_c2ats_GtkSeparator
}
typedef struct_c2ats__GtkHSeparatorClass = $extype_struct"struct _GtkHSeparatorClass" of {
  parent_class = type_c2ats_GtkSeparatorClass
}
fun fun_c2ats_gtk_hseparator_get_type: () -> type_c2ats_GType = "mac#gtk_hseparator_get_type"
fun fun_c2ats_gtk_hseparator_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_hseparator_new"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkimagemenuitem.h
abst@ype struct_c2ats__GtkImageMenuItem // FIXME! Forward declaration.
typedef type_c2ats_GtkImageMenuItem = struct_c2ats__GtkImageMenuItem
abst@ype struct_c2ats__GtkImageMenuItemPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkImageMenuItemPrivate = struct_c2ats__GtkImageMenuItemPrivate
abst@ype struct_c2ats__GtkImageMenuItemClass // FIXME! Forward declaration.
typedef type_c2ats_GtkImageMenuItemClass = struct_c2ats__GtkImageMenuItemClass
typedef struct_c2ats__GtkImageMenuItem = $extype_struct"struct _GtkImageMenuItem" of {
  menu_item = type_c2ats_GtkMenuItem,
  priv = ptr (* cPtr0(type_c2ats_GtkImageMenuItemPrivate) *)
}
typedef struct_c2ats__GtkImageMenuItemClass = $extype_struct"struct _GtkImageMenuItemClass" of {
  parent_class = type_c2ats_GtkMenuItemClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_image_menu_item_get_type: () -> type_c2ats_GType = "mac#gtk_image_menu_item_get_type"
fun fun_c2ats_gtk_image_menu_item_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_image_menu_item_new"
fun fun_c2ats_gtk_image_menu_item_new_with_label: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_image_menu_item_new_with_label"
fun fun_c2ats_gtk_image_menu_item_new_with_mnemonic: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_image_menu_item_new_with_mnemonic"
fun fun_c2ats_gtk_image_menu_item_new_from_stock: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GtkAccelGroup, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_image_menu_item_new_from_stock"
fun fun_c2ats_gtk_image_menu_item_set_always_show_image: {l1:addr} (!ptr_v_1(type_c2ats_GtkImageMenuItem, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_image_menu_item_set_always_show_image"
fun fun_c2ats_gtk_image_menu_item_get_always_show_image: {l1:addr} (!ptr_v_1(type_c2ats_GtkImageMenuItem, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_image_menu_item_get_always_show_image"
fun fun_c2ats_gtk_image_menu_item_set_image: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkImageMenuItem, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void = "mac#gtk_image_menu_item_set_image"
fun fun_c2ats_gtk_image_menu_item_get_image: {l1:addr} (!ptr_v_1(type_c2ats_GtkImageMenuItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_image_menu_item_get_image"
fun fun_c2ats_gtk_image_menu_item_set_use_stock: {l1:addr} (!ptr_v_1(type_c2ats_GtkImageMenuItem, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_image_menu_item_set_use_stock"
fun fun_c2ats_gtk_image_menu_item_get_use_stock: {l1:addr} (!ptr_v_1(type_c2ats_GtkImageMenuItem, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_image_menu_item_get_use_stock"
fun fun_c2ats_gtk_image_menu_item_set_accel_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkImageMenuItem, l1), !ptr_v_1(type_c2ats_GtkAccelGroup, l2) | ptr l1, ptr l2) -> void = "mac#gtk_image_menu_item_set_accel_group"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtknumerableicon.h
abst@ype struct_c2ats__GtkNumerableIcon // FIXME! Forward declaration.
typedef type_c2ats_GtkNumerableIcon = struct_c2ats__GtkNumerableIcon
abst@ype struct_c2ats__GtkNumerableIconClass // FIXME! Forward declaration.
typedef type_c2ats_GtkNumerableIconClass = struct_c2ats__GtkNumerableIconClass
abst@ype struct_c2ats__GtkNumerableIconPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkNumerableIconPrivate = struct_c2ats__GtkNumerableIconPrivate
typedef struct_c2ats__GtkNumerableIcon = $extype_struct"struct _GtkNumerableIcon" of {
  parent = type_c2ats_GEmblemedIcon,
  priv = ptr (* cPtr0(type_c2ats_GtkNumerableIconPrivate) *)
}
typedef struct_c2ats__GtkNumerableIconClass = $extype_struct"struct _GtkNumerableIconClass" of {
  parent_class = type_c2ats_GEmblemedIconClass,
  padding = @[type_c2ats_gpointer][16]
}
fun fun_c2ats_gtk_numerable_icon_get_type: () -> type_c2ats_GType = "mac#gtk_numerable_icon_get_type"
fun fun_c2ats_gtk_numerable_icon_new: {l1:addr} (!ptr_v_1(type_c2ats_GIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#gtk_numerable_icon_new"
fun fun_c2ats_gtk_numerable_icon_new_with_style_context: {l1,l2:addr} (!ptr_v_1(type_c2ats_GIcon, l1), !ptr_v_1(type_c2ats_GtkStyleContext, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GIcon, l3) | ptr l3) = "mac#gtk_numerable_icon_new_with_style_context"
fun fun_c2ats_gtk_numerable_icon_get_style_context: {l1:addr} (!ptr_v_1(type_c2ats_GtkNumerableIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStyleContext, l2) | ptr l2) = "mac#gtk_numerable_icon_get_style_context"
fun fun_c2ats_gtk_numerable_icon_set_style_context: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNumerableIcon, l1), !ptr_v_1(type_c2ats_GtkStyleContext, l2) | ptr l1, ptr l2) -> void = "mac#gtk_numerable_icon_set_style_context"
fun fun_c2ats_gtk_numerable_icon_get_count: {l1:addr} (!ptr_v_1(type_c2ats_GtkNumerableIcon, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_numerable_icon_get_count"
fun fun_c2ats_gtk_numerable_icon_set_count: {l1:addr} (!ptr_v_1(type_c2ats_GtkNumerableIcon, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_numerable_icon_set_count"
fun fun_c2ats_gtk_numerable_icon_get_label: {l1:addr} (!ptr_v_1(type_c2ats_GtkNumerableIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_numerable_icon_get_label"
fun fun_c2ats_gtk_numerable_icon_set_label: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNumerableIcon, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_numerable_icon_set_label"
fun fun_c2ats_gtk_numerable_icon_set_background_gicon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNumerableIcon, l1), !ptr_v_1(type_c2ats_GIcon, l2) | ptr l1, ptr l2) -> void = "mac#gtk_numerable_icon_set_background_gicon"
fun fun_c2ats_gtk_numerable_icon_get_background_gicon: {l1:addr} (!ptr_v_1(type_c2ats_GtkNumerableIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#gtk_numerable_icon_get_background_gicon"
fun fun_c2ats_gtk_numerable_icon_set_background_icon_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkNumerableIcon, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_numerable_icon_set_background_icon_name"
fun fun_c2ats_gtk_numerable_icon_get_background_icon_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkNumerableIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_numerable_icon_get_background_icon_name"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtktoggleaction.h
abst@ype struct_c2ats__GtkToggleAction // FIXME! Forward declaration.
typedef type_c2ats_GtkToggleAction = struct_c2ats__GtkToggleAction
abst@ype struct_c2ats__GtkToggleActionPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkToggleActionPrivate = struct_c2ats__GtkToggleActionPrivate
abst@ype struct_c2ats__GtkToggleActionClass // FIXME! Forward declaration.
typedef type_c2ats_GtkToggleActionClass = struct_c2ats__GtkToggleActionClass
typedef struct_c2ats__GtkToggleAction = $extype_struct"struct _GtkToggleAction" of {
  parent = type_c2ats_GtkAction,
  private_data = ptr (* cPtr0(type_c2ats_GtkToggleActionPrivate) *)
}
typedef struct_c2ats__GtkToggleActionClass = $extype_struct"struct _GtkToggleActionClass" of {
  parent_class = type_c2ats_GtkActionClass,
  toggled = {l1:addr} (!ptr_v_1(type_c2ats_GtkToggleAction, l1) | ptr l1) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_toggle_action_get_type: () -> type_c2ats_GType = "mac#gtk_toggle_action_get_type"
fun fun_c2ats_gtk_toggle_action_new: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GtkToggleAction, l5) | ptr l5) = "mac#gtk_toggle_action_new"
fun fun_c2ats_gtk_toggle_action_toggled: {l1:addr} (!ptr_v_1(type_c2ats_GtkToggleAction, l1) | ptr l1) -> void = "mac#gtk_toggle_action_toggled"
fun fun_c2ats_gtk_toggle_action_set_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkToggleAction, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_toggle_action_set_active"
fun fun_c2ats_gtk_toggle_action_get_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkToggleAction, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_toggle_action_get_active"
fun fun_c2ats_gtk_toggle_action_set_draw_as_radio: {l1:addr} (!ptr_v_1(type_c2ats_GtkToggleAction, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_toggle_action_set_draw_as_radio"
fun fun_c2ats_gtk_toggle_action_get_draw_as_radio: {l1:addr} (!ptr_v_1(type_c2ats_GtkToggleAction, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_toggle_action_get_draw_as_radio"
fun fun_c2ats__gtk_toggle_action_set_active: {l1:addr} (!ptr_v_1(type_c2ats_GtkToggleAction, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#_gtk_toggle_action_set_active"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkradioaction.h
abst@ype struct_c2ats__GtkRadioAction // FIXME! Forward declaration.
typedef type_c2ats_GtkRadioAction = struct_c2ats__GtkRadioAction
abst@ype struct_c2ats__GtkRadioActionPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkRadioActionPrivate = struct_c2ats__GtkRadioActionPrivate
abst@ype struct_c2ats__GtkRadioActionClass // FIXME! Forward declaration.
typedef type_c2ats_GtkRadioActionClass = struct_c2ats__GtkRadioActionClass
typedef struct_c2ats__GtkRadioAction = $extype_struct"struct _GtkRadioAction" of {
  parent = type_c2ats_GtkToggleAction,
  private_data = ptr (* cPtr0(type_c2ats_GtkRadioActionPrivate) *)
}
typedef struct_c2ats__GtkRadioActionClass = $extype_struct"struct _GtkRadioActionClass" of {
  parent_class = type_c2ats_GtkToggleActionClass,
  changed = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRadioAction, l1), !ptr_v_1(type_c2ats_GtkRadioAction, l2) | ptr l1, ptr l2) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_radio_action_get_type: () -> type_c2ats_GType = "mac#gtk_radio_action_get_type"
fun fun_c2ats_gtk_radio_action_new: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gint) -> [l5:addr] (ptr_v_1(type_c2ats_GtkRadioAction, l5) | ptr l5) = "mac#gtk_radio_action_new"
fun fun_c2ats_gtk_radio_action_get_group: {l1:addr} (!ptr_v_1(type_c2ats_GtkRadioAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_radio_action_get_group"
fun fun_c2ats_gtk_radio_action_set_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRadioAction, l1), !ptr_v_1(type_c2ats_GSList, l2) | ptr l1, ptr l2) -> void = "mac#gtk_radio_action_set_group"
fun fun_c2ats_gtk_radio_action_join_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRadioAction, l1), !ptr_v_1(type_c2ats_GtkRadioAction, l2) | ptr l1, ptr l2) -> void = "mac#gtk_radio_action_join_group"
fun fun_c2ats_gtk_radio_action_get_current_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkRadioAction, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_radio_action_get_current_value"
fun fun_c2ats_gtk_radio_action_set_current_value: {l1:addr} (!ptr_v_1(type_c2ats_GtkRadioAction, l1) | ptr l1, type_c2ats_gint) -> void = "mac#gtk_radio_action_set_current_value"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkrc.h
abst@ype struct_c2ats__GtkRcContext // FIXME! Forward declaration.
typedef type_c2ats_GtkRcContext = struct_c2ats__GtkRcContext
abst@ype struct_c2ats__GtkRcStyleClass // FIXME! Forward declaration.
typedef type_c2ats_GtkRcStyleClass = struct_c2ats__GtkRcStyleClass
typedef type_c2ats_GtkRcFlags = int
#define enum_c2ats_GTK_RC_FG 1 << 0
#define enum_c2ats_GTK_RC_BG 1 << 1
#define enum_c2ats_GTK_RC_TEXT 1 << 2
#define enum_c2ats_GTK_RC_BASE 1 << 3
typedef struct_c2ats__GtkRcStyle = $extype_struct"struct _GtkRcStyle" of {
  parent_instance = type_c2ats_GObject,
  name = ptr (* cPtr0(type_c2ats_gchar) *),
  bg_pixmap_name = @[cPtr0(type_c2ats_gchar)][5],
  font_desc = ptr (* cPtr0(type_c2ats_PangoFontDescription) *),
  color_flags = @[type_c2ats_GtkRcFlags][5],
  fg = @[type_c2ats_GdkColor][5],
  bg = @[type_c2ats_GdkColor][5],
  text = @[type_c2ats_GdkColor][5],
  base = @[type_c2ats_GdkColor][5],
  xthickness = type_c2ats_gint,
  ythickness = type_c2ats_gint,
  rc_properties = ptr (* cPtr0(type_c2ats_GArray) *),
  rc_style_lists = ptr (* cPtr0(type_c2ats_GSList) *),
  icon_factories = ptr (* cPtr0(type_c2ats_GSList) *),
  engine_specified = type_c2ats_guint
}
typedef struct_c2ats__GtkRcStyleClass = $extype_struct"struct _GtkRcStyleClass" of {
  parent_class = type_c2ats_GObjectClass,
  create_rc_style = {l1:addr} (!ptr_v_1(type_c2ats_GtkRcStyle, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkRcStyle, l2) | ptr l2),
  parse = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkRcStyle, l1), !ptr_v_1(type_c2ats_GtkSettings, l2), !ptr_v_1(type_c2ats_GScanner, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_guint,
  merge = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkRcStyle, l1), !ptr_v_1(type_c2ats_GtkRcStyle, l2) | ptr l1, ptr l2) -> void,
  create_style = {l1:addr} (!ptr_v_1(type_c2ats_GtkRcStyle, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStyle, l2) | ptr l2),
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats__gtk_rc_parse_widget_class_path: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#_gtk_rc_parse_widget_class_path"
fun fun_c2ats__gtk_rc_free_widget_class_path: {l1:addr} (!ptr_v_1(type_c2ats_GSList, l1) | ptr l1) -> void = "mac#_gtk_rc_free_widget_class_path"
fun fun_c2ats__gtk_rc_match_widget_class: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GSList, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, type_c2ats_gint, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#_gtk_rc_match_widget_class"
fun fun_c2ats_gtk_rc_add_default_file: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#gtk_rc_add_default_file"
fun fun_c2ats_gtk_rc_set_default_files: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_gchar, l1, l1_1) | ptr l1) -> void = "mac#gtk_rc_set_default_files"
fun fun_c2ats_gtk_rc_get_default_files: () -> [l1,l1_1:addr] (ptr_v_2(type_c2ats_gchar, l1, l1_1) | ptr l1) = "mac#gtk_rc_get_default_files"
fun fun_c2ats_gtk_rc_get_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStyle, l2) | ptr l2) = "mac#gtk_rc_get_style"
fun fun_c2ats_gtk_rc_get_style_by_paths: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkSettings, l1), !ptr_v_1(char, l2), !ptr_v_1(char, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GType) -> [l4:addr] (ptr_v_1(type_c2ats_GtkStyle, l4) | ptr l4) = "mac#gtk_rc_get_style_by_paths"
fun fun_c2ats_gtk_rc_reparse_all_for_settings: {l1:addr} (!ptr_v_1(type_c2ats_GtkSettings, l1) | ptr l1, type_c2ats_gboolean) -> type_c2ats_gboolean = "mac#gtk_rc_reparse_all_for_settings"
fun fun_c2ats_gtk_rc_reset_styles: {l1:addr} (!ptr_v_1(type_c2ats_GtkSettings, l1) | ptr l1) -> void = "mac#gtk_rc_reset_styles"
fun fun_c2ats_gtk_rc_find_pixmap_in_path: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkSettings, l1), !ptr_v_1(type_c2ats_GScanner, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_gchar, l4) | ptr l4) = "mac#gtk_rc_find_pixmap_in_path"
fun fun_c2ats_gtk_rc_parse: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#gtk_rc_parse"
fun fun_c2ats_gtk_rc_parse_string: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> void = "mac#gtk_rc_parse_string"
fun fun_c2ats_gtk_rc_reparse_all: () -> type_c2ats_gboolean = "mac#gtk_rc_reparse_all"
fun fun_c2ats_gtk_rc_style_get_type: () -> type_c2ats_GType = "mac#gtk_rc_style_get_type"
fun fun_c2ats_gtk_rc_style_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkRcStyle, l1) | ptr l1) = "mac#gtk_rc_style_new"
fun fun_c2ats_gtk_rc_style_copy: {l1:addr} (!ptr_v_1(type_c2ats_GtkRcStyle, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkRcStyle, l2) | ptr l2) = "mac#gtk_rc_style_copy"
fun fun_c2ats_gtk_rc_find_module_in_path: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_rc_find_module_in_path"
fun fun_c2ats_gtk_rc_get_theme_dir: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#gtk_rc_get_theme_dir"
fun fun_c2ats_gtk_rc_get_module_dir: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#gtk_rc_get_module_dir"
fun fun_c2ats_gtk_rc_get_im_module_path: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#gtk_rc_get_im_module_path"
fun fun_c2ats_gtk_rc_get_im_module_file: () -> [l1:addr] (ptr_v_1(type_c2ats_gchar, l1) | ptr l1) = "mac#gtk_rc_get_im_module_file"
typedef type_c2ats_GtkRcTokenType = int
#define enum_c2ats_GTK_RC_TOKEN_INVALID G_TOKEN_LAST
#define enum_c2ats_GTK_RC_TOKEN_INCLUDE G_TOKEN_LAST + 1
#define enum_c2ats_GTK_RC_TOKEN_NORMAL G_TOKEN_LAST + 2
#define enum_c2ats_GTK_RC_TOKEN_ACTIVE G_TOKEN_LAST + 3
#define enum_c2ats_GTK_RC_TOKEN_PRELIGHT G_TOKEN_LAST + 4
#define enum_c2ats_GTK_RC_TOKEN_SELECTED G_TOKEN_LAST + 5
#define enum_c2ats_GTK_RC_TOKEN_INSENSITIVE G_TOKEN_LAST + 6
#define enum_c2ats_GTK_RC_TOKEN_FG G_TOKEN_LAST + 7
#define enum_c2ats_GTK_RC_TOKEN_BG G_TOKEN_LAST + 8
#define enum_c2ats_GTK_RC_TOKEN_TEXT G_TOKEN_LAST + 9
#define enum_c2ats_GTK_RC_TOKEN_BASE G_TOKEN_LAST + 10
#define enum_c2ats_GTK_RC_TOKEN_XTHICKNESS G_TOKEN_LAST + 11
#define enum_c2ats_GTK_RC_TOKEN_YTHICKNESS G_TOKEN_LAST + 12
#define enum_c2ats_GTK_RC_TOKEN_FONT G_TOKEN_LAST + 13
#define enum_c2ats_GTK_RC_TOKEN_FONTSET G_TOKEN_LAST + 14
#define enum_c2ats_GTK_RC_TOKEN_FONT_NAME G_TOKEN_LAST + 15
#define enum_c2ats_GTK_RC_TOKEN_BG_PIXMAP G_TOKEN_LAST + 16
#define enum_c2ats_GTK_RC_TOKEN_PIXMAP_PATH G_TOKEN_LAST + 17
#define enum_c2ats_GTK_RC_TOKEN_STYLE G_TOKEN_LAST + 18
#define enum_c2ats_GTK_RC_TOKEN_BINDING G_TOKEN_LAST + 19
#define enum_c2ats_GTK_RC_TOKEN_BIND G_TOKEN_LAST + 20
#define enum_c2ats_GTK_RC_TOKEN_WIDGET G_TOKEN_LAST + 21
#define enum_c2ats_GTK_RC_TOKEN_WIDGET_CLASS G_TOKEN_LAST + 22
#define enum_c2ats_GTK_RC_TOKEN_CLASS G_TOKEN_LAST + 23
#define enum_c2ats_GTK_RC_TOKEN_LOWEST G_TOKEN_LAST + 24
#define enum_c2ats_GTK_RC_TOKEN_GTK G_TOKEN_LAST + 25
#define enum_c2ats_GTK_RC_TOKEN_APPLICATION G_TOKEN_LAST + 26
#define enum_c2ats_GTK_RC_TOKEN_THEME G_TOKEN_LAST + 27
#define enum_c2ats_GTK_RC_TOKEN_RC G_TOKEN_LAST + 28
#define enum_c2ats_GTK_RC_TOKEN_HIGHEST G_TOKEN_LAST + 29
#define enum_c2ats_GTK_RC_TOKEN_ENGINE G_TOKEN_LAST + 30
#define enum_c2ats_GTK_RC_TOKEN_MODULE_PATH G_TOKEN_LAST + 31
#define enum_c2ats_GTK_RC_TOKEN_IM_MODULE_PATH G_TOKEN_LAST + 32
#define enum_c2ats_GTK_RC_TOKEN_IM_MODULE_FILE G_TOKEN_LAST + 33
#define enum_c2ats_GTK_RC_TOKEN_STOCK G_TOKEN_LAST + 34
#define enum_c2ats_GTK_RC_TOKEN_LTR G_TOKEN_LAST + 35
#define enum_c2ats_GTK_RC_TOKEN_RTL G_TOKEN_LAST + 36
#define enum_c2ats_GTK_RC_TOKEN_COLOR G_TOKEN_LAST + 37
#define enum_c2ats_GTK_RC_TOKEN_UNBIND G_TOKEN_LAST + 38
#define enum_c2ats_GTK_RC_TOKEN_LAST G_TOKEN_LAST + 39
typedef type_c2ats_GtkPathPriorityType = int
#define enum_c2ats_GTK_PATH_PRIO_LOWEST 0
#define enum_c2ats_GTK_PATH_PRIO_GTK 4
#define enum_c2ats_GTK_PATH_PRIO_APPLICATION 8
#define enum_c2ats_GTK_PATH_PRIO_THEME 10
#define enum_c2ats_GTK_PATH_PRIO_RC 12
#define enum_c2ats_GTK_PATH_PRIO_HIGHEST 15
typedef type_c2ats_GtkPathType = int
#define enum_c2ats_GTK_PATH_WIDGET 0
#define enum_c2ats_GTK_PATH_WIDGET_CLASS 1
#define enum_c2ats_GTK_PATH_CLASS 2
fun fun_c2ats_gtk_rc_scanner_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GScanner, l1) | ptr l1) = "mac#gtk_rc_scanner_new"
fun fun_c2ats_gtk_rc_parse_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_GScanner, l1), !ptr_v_1(type_c2ats_GdkColor, l2) | ptr l1, ptr l2) -> type_c2ats_guint = "mac#gtk_rc_parse_color"
fun fun_c2ats_gtk_rc_parse_color_full: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GScanner, l1), !ptr_v_1(type_c2ats_GtkRcStyle, l2), !ptr_v_1(type_c2ats_GdkColor, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_guint = "mac#gtk_rc_parse_color_full"
fun fun_c2ats_gtk_rc_parse_state: {l1,l2:addr} (!ptr_v_1(type_c2ats_GScanner, l1), !ptr_v_1(type_c2ats_GtkStateType, l2) | ptr l1, ptr l2) -> type_c2ats_guint = "mac#gtk_rc_parse_state"
fun fun_c2ats_gtk_rc_parse_priority: {l1,l2:addr} (!ptr_v_1(type_c2ats_GScanner, l1), !ptr_v_1(type_c2ats_GtkPathPriorityType, l2) | ptr l1, ptr l2) -> type_c2ats_guint = "mac#gtk_rc_parse_priority"
typedef struct_c2ats__GtkRcProperty = $extype_struct"struct _GtkRcProperty" of {
  type_name = type_c2ats_GQuark,
  property_name = type_c2ats_GQuark,
  origin = ptr (* cPtr0(type_c2ats_gchar) *),
  value = type_c2ats_GValue
}
fun fun_c2ats_gtk_binding_set_add_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkBindingSet, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GtkPathType, ptr l2, type_c2ats_GtkPathPriorityType) -> void = "mac#gtk_binding_set_add_path"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkrecentaction.h
abst@ype struct_c2ats__GtkRecentAction // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentAction = struct_c2ats__GtkRecentAction
abst@ype struct_c2ats__GtkRecentActionPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentActionPrivate = struct_c2ats__GtkRecentActionPrivate
abst@ype struct_c2ats__GtkRecentActionClass // FIXME! Forward declaration.
typedef type_c2ats_GtkRecentActionClass = struct_c2ats__GtkRecentActionClass
typedef struct_c2ats__GtkRecentAction = $extype_struct"struct _GtkRecentAction" of {
  parent_instance = type_c2ats_GtkAction,
  priv = ptr (* cPtr0(type_c2ats_GtkRecentActionPrivate) *)
}
typedef struct_c2ats__GtkRecentActionClass = $extype_struct"struct _GtkRecentActionClass" of {
  parent_class = type_c2ats_GtkActionClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_recent_action_get_type: () -> type_c2ats_GType = "mac#gtk_recent_action_get_type"
fun fun_c2ats_gtk_recent_action_new: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GtkAction, l5) | ptr l5) = "mac#gtk_recent_action_new"
fun fun_c2ats_gtk_recent_action_new_for_manager: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_GtkRecentManager, l5) | ptr l1, ptr l2, ptr l3, ptr l4, ptr l5) -> [l6:addr] (ptr_v_1(type_c2ats_GtkAction, l6) | ptr l6) = "mac#gtk_recent_action_new_for_manager"
fun fun_c2ats_gtk_recent_action_get_show_numbers: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentAction, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_recent_action_get_show_numbers"
fun fun_c2ats_gtk_recent_action_set_show_numbers: {l1:addr} (!ptr_v_1(type_c2ats_GtkRecentAction, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_recent_action_set_show_numbers"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkstatusicon.h
abst@ype struct_c2ats__GtkStatusIcon // FIXME! Forward declaration.
typedef type_c2ats_GtkStatusIcon = struct_c2ats__GtkStatusIcon
abst@ype struct_c2ats__GtkStatusIconClass // FIXME! Forward declaration.
typedef type_c2ats_GtkStatusIconClass = struct_c2ats__GtkStatusIconClass
abst@ype struct_c2ats__GtkStatusIconPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkStatusIconPrivate = struct_c2ats__GtkStatusIconPrivate
typedef struct_c2ats__GtkStatusIcon = $extype_struct"struct _GtkStatusIcon" of {
  parent_instance = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkStatusIconPrivate) *)
}
typedef struct_c2ats__GtkStatusIconClass = $extype_struct"struct _GtkStatusIconClass" of {
  parent_class = type_c2ats_GObjectClass,
  activate = {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1) -> void,
  popup_menu = {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint32) -> void,
  size_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1, type_c2ats_gint) -> type_c2ats_gboolean,
  button_press_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1), !ptr_v_1(type_c2ats_GdkEventButton, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  button_release_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1), !ptr_v_1(type_c2ats_GdkEventButton, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  scroll_event = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1), !ptr_v_1(type_c2ats_GdkEventScroll, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean,
  query_tooltip = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1), !ptr_v_1(type_c2ats_GtkTooltip, l2) | ptr l1, type_c2ats_gint, type_c2ats_gint, type_c2ats_gboolean, ptr l2) -> type_c2ats_gboolean,
  __gtk_reserved1 = ptr (* cPtr0(void) *),
  __gtk_reserved2 = ptr (* cPtr0(void) *),
  __gtk_reserved3 = ptr (* cPtr0(void) *),
  __gtk_reserved4 = ptr (* cPtr0(void) *)
}
fun fun_c2ats_gtk_status_icon_get_type: () -> type_c2ats_GType = "mac#gtk_status_icon_get_type"
fun fun_c2ats_gtk_status_icon_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1) = "mac#gtk_status_icon_new"
fun fun_c2ats_gtk_status_icon_new_from_pixbuf: {l1:addr} (!ptr_v_1(type_c2ats_GdkPixbuf, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStatusIcon, l2) | ptr l2) = "mac#gtk_status_icon_new_from_pixbuf"
fun fun_c2ats_gtk_status_icon_new_from_file: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStatusIcon, l2) | ptr l2) = "mac#gtk_status_icon_new_from_file"
fun fun_c2ats_gtk_status_icon_new_from_stock: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStatusIcon, l2) | ptr l2) = "mac#gtk_status_icon_new_from_stock"
fun fun_c2ats_gtk_status_icon_new_from_icon_name: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStatusIcon, l2) | ptr l2) = "mac#gtk_status_icon_new_from_icon_name"
fun fun_c2ats_gtk_status_icon_new_from_gicon: {l1:addr} (!ptr_v_1(type_c2ats_GIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStatusIcon, l2) | ptr l2) = "mac#gtk_status_icon_new_from_gicon"
fun fun_c2ats_gtk_status_icon_set_from_pixbuf: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1), !ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l1, ptr l2) -> void = "mac#gtk_status_icon_set_from_pixbuf"
fun fun_c2ats_gtk_status_icon_set_from_file: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_status_icon_set_from_file"
fun fun_c2ats_gtk_status_icon_set_from_stock: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_status_icon_set_from_stock"
fun fun_c2ats_gtk_status_icon_set_from_icon_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_status_icon_set_from_icon_name"
fun fun_c2ats_gtk_status_icon_set_from_gicon: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1), !ptr_v_1(type_c2ats_GIcon, l2) | ptr l1, ptr l2) -> void = "mac#gtk_status_icon_set_from_gicon"
fun fun_c2ats_gtk_status_icon_get_storage_type: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1) -> type_c2ats_GtkImageType = "mac#gtk_status_icon_get_storage_type"
fun fun_c2ats_gtk_status_icon_get_pixbuf: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l2) | ptr l2) = "mac#gtk_status_icon_get_pixbuf"
fun fun_c2ats_gtk_status_icon_get_stock: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_status_icon_get_stock"
fun fun_c2ats_gtk_status_icon_get_icon_name: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_status_icon_get_icon_name"
fun fun_c2ats_gtk_status_icon_get_gicon: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIcon, l2) | ptr l2) = "mac#gtk_status_icon_get_gicon"
fun fun_c2ats_gtk_status_icon_get_size: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1) -> type_c2ats_gint = "mac#gtk_status_icon_get_size"
fun fun_c2ats_gtk_status_icon_set_screen: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1), !ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l1, ptr l2) -> void = "mac#gtk_status_icon_set_screen"
fun fun_c2ats_gtk_status_icon_get_screen: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l2) = "mac#gtk_status_icon_get_screen"
fun fun_c2ats_gtk_status_icon_set_has_tooltip: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_status_icon_set_has_tooltip"
fun fun_c2ats_gtk_status_icon_set_tooltip_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_status_icon_set_tooltip_text"
fun fun_c2ats_gtk_status_icon_set_tooltip_markup: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_status_icon_set_tooltip_markup"
fun fun_c2ats_gtk_status_icon_set_title: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_status_icon_set_title"
fun fun_c2ats_gtk_status_icon_get_title: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_status_icon_get_title"
fun fun_c2ats_gtk_status_icon_set_name: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> void = "mac#gtk_status_icon_set_name"
fun fun_c2ats_gtk_status_icon_set_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_status_icon_set_visible"
fun fun_c2ats_gtk_status_icon_get_visible: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_status_icon_get_visible"
fun fun_c2ats_gtk_status_icon_is_embedded: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_status_icon_is_embedded"
fun fun_c2ats_gtk_status_icon_position_menu: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkMenu, l1), !ptr_v_1(type_c2ats_gint, l2), !ptr_v_1(type_c2ats_gint, l3), !ptr_v_1(type_c2ats_gboolean, l4) | ptr l1, ptr l2, ptr l3, ptr l4, type_c2ats_gpointer) -> void = "mac#gtk_status_icon_position_menu"
fun fun_c2ats_gtk_status_icon_get_geometry: {l1,l2,l2_1,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1), !ptr_v_2(type_c2ats_GdkScreen, l2, l2_1), !ptr_v_1(type_c2ats_GdkRectangle, l3), !ptr_v_1(type_c2ats_GtkOrientation, l4) | ptr l1, ptr l2, ptr l3, ptr l4) -> type_c2ats_gboolean = "mac#gtk_status_icon_get_geometry"
fun fun_c2ats_gtk_status_icon_get_has_tooltip: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_status_icon_get_has_tooltip"
fun fun_c2ats_gtk_status_icon_get_tooltip_text: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_status_icon_get_tooltip_text"
fun fun_c2ats_gtk_status_icon_get_tooltip_markup: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_status_icon_get_tooltip_markup"
fun fun_c2ats_gtk_status_icon_get_x11_window_id: {l1:addr} (!ptr_v_1(type_c2ats_GtkStatusIcon, l1) | ptr l1) -> type_c2ats_guint32 = "mac#gtk_status_icon_get_x11_window_id"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkstyle.h
abst@ype struct_c2ats__GtkStyleClass // FIXME! Forward declaration.
typedef type_c2ats_GtkStyleClass = struct_c2ats__GtkStyleClass
abst@ype struct_c2ats__GtkThemeEngine // FIXME! Forward declaration.
typedef type_c2ats_GtkThemeEngine = struct_c2ats__GtkThemeEngine
typedef type_c2ats_GtkRcProperty = struct_c2ats__GtkRcProperty
typedef type_c2ats_GtkExpanderStyle = int
#define enum_c2ats_GTK_EXPANDER_COLLAPSED 0
#define enum_c2ats_GTK_EXPANDER_SEMI_COLLAPSED 1
#define enum_c2ats_GTK_EXPANDER_SEMI_EXPANDED 2
#define enum_c2ats_GTK_EXPANDER_EXPANDED 3
typedef struct_c2ats__GtkStyle = $extype_struct"struct _GtkStyle" of {
  parent_instance = type_c2ats_GObject,
  fg = @[type_c2ats_GdkColor][5],
  bg = @[type_c2ats_GdkColor][5],
  light = @[type_c2ats_GdkColor][5],
  dark = @[type_c2ats_GdkColor][5],
  mid = @[type_c2ats_GdkColor][5],
  text = @[type_c2ats_GdkColor][5],
  base = @[type_c2ats_GdkColor][5],
  text_aa = @[type_c2ats_GdkColor][5],
  black = type_c2ats_GdkColor,
  white = type_c2ats_GdkColor,
  font_desc = ptr (* cPtr0(type_c2ats_PangoFontDescription) *),
  xthickness = type_c2ats_gint,
  ythickness = type_c2ats_gint,
  background = @[cPtr0(type_c2ats_cairo_pattern_t)][5],
  attach_count = type_c2ats_gint,
  visual = ptr (* cPtr0(type_c2ats_GdkVisual) *),
  private_font_desc = ptr (* cPtr0(type_c2ats_PangoFontDescription) *),
  rc_style = ptr (* cPtr0(type_c2ats_GtkRcStyle) *),
  styles = ptr (* cPtr0(type_c2ats_GSList) *),
  property_cache = ptr (* cPtr0(type_c2ats_GArray) *),
  icon_factories = ptr (* cPtr0(type_c2ats_GSList) *)
}
typedef struct_c2ats__GtkStyleClass = $extype_struct"struct _GtkStyleClass" of {
  parent_class = type_c2ats_GObjectClass,
  realize = {l1:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1) | ptr l1) -> void,
  unrealize = {l1:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1) | ptr l1) -> void,
  copy = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_GtkStyle, l2) | ptr l1, ptr l2) -> void,
  clone = {l1:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStyle, l2) | ptr l2),
  init_from_rc = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_GtkRcStyle, l2) | ptr l1, ptr l2) -> void,
  set_background = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2, type_c2ats_GtkStateType) -> void,
  render_icon = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_GtkIconSource, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkTextDirection, type_c2ats_GtkStateType, type_c2ats_GtkIconSize, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l5) | ptr l5),
  draw_hline = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void,
  draw_vline = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void,
  draw_shadow = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void,
  draw_arrow = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_GtkArrowType, type_c2ats_gboolean, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void,
  draw_diamond = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void,
  draw_box = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void,
  draw_flat_box = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void,
  draw_check = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void,
  draw_option = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void,
  draw_tab = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void,
  draw_shadow_gap = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_GtkPositionType, type_c2ats_gint, type_c2ats_gint) -> void,
  draw_box_gap = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_GtkPositionType, type_c2ats_gint, type_c2ats_gint) -> void,
  draw_extension = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_GtkPositionType) -> void,
  draw_focus = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void,
  draw_slider = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_GtkOrientation) -> void,
  draw_handle = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_GtkOrientation) -> void,
  draw_expander = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_GtkExpanderStyle) -> void,
  draw_layout = {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_PangoLayout, l5) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_gboolean, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, ptr l5) -> void,
  draw_resize_grip = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, ptr l3, ptr l4, type_c2ats_GdkWindowEdge, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void,
  draw_spinner = {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, ptr l3, ptr l4, type_c2ats_guint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void,
  _gtk_reserved5 = () -> void,
  _gtk_reserved6 = () -> void,
  _gtk_reserved7 = () -> void,
  _gtk_reserved8 = () -> void,
  _gtk_reserved9 = () -> void,
  _gtk_reserved10 = () -> void,
  _gtk_reserved11 = () -> void
}
fun fun_c2ats_gtk_style_get_type: () -> type_c2ats_GType = "mac#gtk_style_get_type"
fun fun_c2ats_gtk_style_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkStyle, l1) | ptr l1) = "mac#gtk_style_new"
fun fun_c2ats_gtk_style_copy: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStyle, l2) | ptr l2) = "mac#gtk_style_copy"
fun fun_c2ats_gtk_style_attach: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkStyle, l3) | ptr l3) = "mac#gtk_style_attach"
fun fun_c2ats_gtk_style_detach: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1) | ptr l1) -> void = "mac#gtk_style_detach"
fun fun_c2ats_gtk_style_set_background: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_GdkWindow, l2) | ptr l1, ptr l2, type_c2ats_GtkStateType) -> void = "mac#gtk_style_set_background"
fun fun_c2ats_gtk_style_apply_default_background: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GdkWindow, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_GtkStateType, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_style_apply_default_background"
fun fun_c2ats_gtk_style_lookup_icon_set: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkIconSet, l3) | ptr l3) = "mac#gtk_style_lookup_icon_set"
fun fun_c2ats_gtk_style_lookup_color: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GdkColor, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_style_lookup_color"
fun fun_c2ats_gtk_style_render_icon: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_GtkIconSource, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkTextDirection, type_c2ats_GtkStateType, type_c2ats_GtkIconSize, ptr l3, ptr l4) -> [l5:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l5) | ptr l5) = "mac#gtk_style_render_icon"
fun fun_c2ats_gtk_paint_hline: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_paint_hline"
fun fun_c2ats_gtk_paint_vline: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_paint_vline"
fun fun_c2ats_gtk_paint_shadow: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_paint_shadow"
fun fun_c2ats_gtk_paint_arrow: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_GtkArrowType, type_c2ats_gboolean, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_paint_arrow"
fun fun_c2ats_gtk_paint_diamond: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_paint_diamond"
fun fun_c2ats_gtk_paint_box: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_paint_box"
fun fun_c2ats_gtk_paint_flat_box: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_paint_flat_box"
fun fun_c2ats_gtk_paint_check: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_paint_check"
fun fun_c2ats_gtk_paint_option: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_paint_option"
fun fun_c2ats_gtk_paint_tab: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_paint_tab"
fun fun_c2ats_gtk_paint_shadow_gap: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_GtkPositionType, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_paint_shadow_gap"
fun fun_c2ats_gtk_paint_box_gap: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_GtkPositionType, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_paint_box_gap"
fun fun_c2ats_gtk_paint_extension: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_GtkPositionType) -> void = "mac#gtk_paint_extension"
fun fun_c2ats_gtk_paint_focus: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_paint_focus"
fun fun_c2ats_gtk_paint_slider: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_GtkOrientation) -> void = "mac#gtk_paint_slider"
fun fun_c2ats_gtk_paint_handle: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_GtkShadowType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_GtkOrientation) -> void = "mac#gtk_paint_handle"
fun fun_c2ats_gtk_paint_expander: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, type_c2ats_GtkExpanderStyle) -> void = "mac#gtk_paint_expander"
fun fun_c2ats_gtk_paint_layout: {l1,l2,l3,l4,l5:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4), !ptr_v_1(type_c2ats_PangoLayout, l5) | ptr l1, ptr l2, type_c2ats_GtkStateType, type_c2ats_gboolean, ptr l3, ptr l4, type_c2ats_gint, type_c2ats_gint, ptr l5) -> void = "mac#gtk_paint_layout"
fun fun_c2ats_gtk_paint_resize_grip: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, ptr l3, ptr l4, type_c2ats_GdkWindowEdge, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_paint_resize_grip"
fun fun_c2ats_gtk_paint_spinner: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GtkWidget, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, ptr l2, type_c2ats_GtkStateType, ptr l3, ptr l4, type_c2ats_guint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint, type_c2ats_gint) -> void = "mac#gtk_paint_spinner"
fun fun_c2ats_gtk_style_get_style_property: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, type_c2ats_GType, ptr l2, ptr l3) -> void = "mac#gtk_style_get_style_property"
fun fun_c2ats_gtk_style_get_valist: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GType, ptr l2, type_c2ats_va_list) -> void = "mac#gtk_style_get_valist"
fun fun_c2ats_gtk_style_get: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, type_c2ats_GType, ptr l2) -> void = "mac#gtk_style_get"
fun fun_c2ats__gtk_style_new_for_path: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkScreen, l1), !ptr_v_1(type_c2ats_GtkWidgetPath, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkStyle, l3) | ptr l3) = "mac#_gtk_style_new_for_path"
fun fun_c2ats__gtk_style_shade: {l1,l2:addr} (!ptr_v_1(type_c2ats_GdkColor, l1), !ptr_v_1(type_c2ats_GdkColor, l2) | ptr l1, ptr l2, type_c2ats_gdouble) -> void = "mac#_gtk_style_shade"
fun fun_c2ats_gtk_style_has_context: {l1:addr} (!ptr_v_1(type_c2ats_GtkStyle, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_style_has_context"
fun fun_c2ats_gtk_widget_style_attach: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_style_attach"
fun fun_c2ats_gtk_widget_has_rc_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_widget_has_rc_style"
fun fun_c2ats_gtk_widget_set_style: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkStyle, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_set_style"
fun fun_c2ats_gtk_widget_ensure_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_ensure_style"
fun fun_c2ats_gtk_widget_get_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStyle, l2) | ptr l2) = "mac#gtk_widget_get_style"
fun fun_c2ats_gtk_widget_modify_style: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GtkRcStyle, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_modify_style"
fun fun_c2ats_gtk_widget_get_modifier_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkRcStyle, l2) | ptr l2) = "mac#gtk_widget_get_modifier_style"
fun fun_c2ats_gtk_widget_modify_fg: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkColor, l2) | ptr l1, type_c2ats_GtkStateType, ptr l2) -> void = "mac#gtk_widget_modify_fg"
fun fun_c2ats_gtk_widget_modify_bg: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkColor, l2) | ptr l1, type_c2ats_GtkStateType, ptr l2) -> void = "mac#gtk_widget_modify_bg"
fun fun_c2ats_gtk_widget_modify_text: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkColor, l2) | ptr l1, type_c2ats_GtkStateType, ptr l2) -> void = "mac#gtk_widget_modify_text"
fun fun_c2ats_gtk_widget_modify_base: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkColor, l2) | ptr l1, type_c2ats_GtkStateType, ptr l2) -> void = "mac#gtk_widget_modify_base"
fun fun_c2ats_gtk_widget_modify_cursor: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_GdkColor, l2), !ptr_v_1(type_c2ats_GdkColor, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_widget_modify_cursor"
fun fun_c2ats_gtk_widget_modify_font: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l1, ptr l2) -> void = "mac#gtk_widget_modify_font"
fun fun_c2ats_gtk_widget_reset_rc_styles: {l1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) -> void = "mac#gtk_widget_reset_rc_styles"
fun fun_c2ats_gtk_widget_get_default_style: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkStyle, l1) | ptr l1) = "mac#gtk_widget_get_default_style"
fun fun_c2ats_gtk_widget_path: {l1,l2,l3,l3_1,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_guint, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1), !ptr_v_2(type_c2ats_gchar, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_widget_path"
fun fun_c2ats_gtk_widget_class_path: {l1,l2,l3,l3_1,l4,l4_1:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_guint, l2), !ptr_v_2(type_c2ats_gchar, l3, l3_1), !ptr_v_2(type_c2ats_gchar, l4, l4_1) | ptr l1, ptr l2, ptr l3, ptr l4) -> void = "mac#gtk_widget_class_path"
fun fun_c2ats_gtk_widget_render_icon: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkWidget, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3) | ptr l1, ptr l2, type_c2ats_GtkIconSize, ptr l3) -> [l4:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l4) | ptr l4) = "mac#gtk_widget_render_icon"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtktable.h
abst@ype struct_c2ats__GtkTable // FIXME! Forward declaration.
typedef type_c2ats_GtkTable = struct_c2ats__GtkTable
abst@ype struct_c2ats__GtkTablePrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkTablePrivate = struct_c2ats__GtkTablePrivate
abst@ype struct_c2ats__GtkTableClass // FIXME! Forward declaration.
typedef type_c2ats_GtkTableClass = struct_c2ats__GtkTableClass
abst@ype struct_c2ats__GtkTableChild // FIXME! Forward declaration.
typedef type_c2ats_GtkTableChild = struct_c2ats__GtkTableChild
abst@ype struct_c2ats__GtkTableRowCol // FIXME! Forward declaration.
typedef type_c2ats_GtkTableRowCol = struct_c2ats__GtkTableRowCol
typedef struct_c2ats__GtkTable = $extype_struct"struct _GtkTable" of {
  container = type_c2ats_GtkContainer,
  priv = ptr (* cPtr0(type_c2ats_GtkTablePrivate) *)
}
typedef struct_c2ats__GtkTableClass = $extype_struct"struct _GtkTableClass" of {
  parent_class = type_c2ats_GtkContainerClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
typedef struct_c2ats__GtkTableChild = $extype_struct"struct _GtkTableChild" of {
  widget = ptr (* cPtr0(type_c2ats_GtkWidget) *),
  left_attach = type_c2ats_guint16,
  right_attach = type_c2ats_guint16,
  top_attach = type_c2ats_guint16,
  bottom_attach = type_c2ats_guint16,
  xpadding = type_c2ats_guint16,
  ypadding = type_c2ats_guint16,
  xexpand = type_c2ats_guint,
  yexpand = type_c2ats_guint,
  xshrink = type_c2ats_guint,
  yshrink = type_c2ats_guint,
  xfill = type_c2ats_guint,
  yfill = type_c2ats_guint
}
typedef struct_c2ats__GtkTableRowCol = $extype_struct"struct _GtkTableRowCol" of {
  requisition = type_c2ats_guint16,
  allocation = type_c2ats_guint16,
  spacing = type_c2ats_guint16,
  need_expand = type_c2ats_guint,
  need_shrink = type_c2ats_guint,
  expand = type_c2ats_guint,
  shrink = type_c2ats_guint,
  empty = type_c2ats_guint
}
typedef type_c2ats_GtkAttachOptions = int
#define enum_c2ats_GTK_EXPAND 1 << 0
#define enum_c2ats_GTK_SHRINK 1 << 1
#define enum_c2ats_GTK_FILL 1 << 2
fun fun_c2ats_gtk_table_get_type: () -> type_c2ats_GType = "mac#gtk_table_get_type"
fun fun_c2ats_gtk_table_new: (type_c2ats_guint, type_c2ats_guint, type_c2ats_gboolean) -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_table_new"
fun fun_c2ats_gtk_table_resize: {l1:addr} (!ptr_v_1(type_c2ats_GtkTable, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint) -> void = "mac#gtk_table_resize"
fun fun_c2ats_gtk_table_attach: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTable, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_guint, type_c2ats_guint, type_c2ats_guint, type_c2ats_GtkAttachOptions, type_c2ats_GtkAttachOptions, type_c2ats_guint, type_c2ats_guint) -> void = "mac#gtk_table_attach"
fun fun_c2ats_gtk_table_attach_defaults: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkTable, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2, type_c2ats_guint, type_c2ats_guint, type_c2ats_guint, type_c2ats_guint) -> void = "mac#gtk_table_attach_defaults"
fun fun_c2ats_gtk_table_set_row_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkTable, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint) -> void = "mac#gtk_table_set_row_spacing"
fun fun_c2ats_gtk_table_get_row_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkTable, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_guint = "mac#gtk_table_get_row_spacing"
fun fun_c2ats_gtk_table_set_col_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkTable, l1) | ptr l1, type_c2ats_guint, type_c2ats_guint) -> void = "mac#gtk_table_set_col_spacing"
fun fun_c2ats_gtk_table_get_col_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkTable, l1) | ptr l1, type_c2ats_guint) -> type_c2ats_guint = "mac#gtk_table_get_col_spacing"
fun fun_c2ats_gtk_table_set_row_spacings: {l1:addr} (!ptr_v_1(type_c2ats_GtkTable, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_table_set_row_spacings"
fun fun_c2ats_gtk_table_get_default_row_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkTable, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_table_get_default_row_spacing"
fun fun_c2ats_gtk_table_set_col_spacings: {l1:addr} (!ptr_v_1(type_c2ats_GtkTable, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_table_set_col_spacings"
fun fun_c2ats_gtk_table_get_default_col_spacing: {l1:addr} (!ptr_v_1(type_c2ats_GtkTable, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_table_get_default_col_spacing"
fun fun_c2ats_gtk_table_set_homogeneous: {l1:addr} (!ptr_v_1(type_c2ats_GtkTable, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_table_set_homogeneous"
fun fun_c2ats_gtk_table_get_homogeneous: {l1:addr} (!ptr_v_1(type_c2ats_GtkTable, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_table_get_homogeneous"
fun fun_c2ats_gtk_table_get_size: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkTable, l1), !ptr_v_1(type_c2ats_guint, l2), !ptr_v_1(type_c2ats_guint, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_table_get_size"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtktearoffmenuitem.h
abst@ype struct_c2ats__GtkTearoffMenuItem // FIXME! Forward declaration.
typedef type_c2ats_GtkTearoffMenuItem = struct_c2ats__GtkTearoffMenuItem
abst@ype struct_c2ats__GtkTearoffMenuItemPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkTearoffMenuItemPrivate = struct_c2ats__GtkTearoffMenuItemPrivate
abst@ype struct_c2ats__GtkTearoffMenuItemClass // FIXME! Forward declaration.
typedef type_c2ats_GtkTearoffMenuItemClass = struct_c2ats__GtkTearoffMenuItemClass
typedef struct_c2ats__GtkTearoffMenuItem = $extype_struct"struct _GtkTearoffMenuItem" of {
  menu_item = type_c2ats_GtkMenuItem,
  priv = ptr (* cPtr0(type_c2ats_GtkTearoffMenuItemPrivate) *)
}
typedef struct_c2ats__GtkTearoffMenuItemClass = $extype_struct"struct _GtkTearoffMenuItemClass" of {
  parent_class = type_c2ats_GtkMenuItemClass,
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
fun fun_c2ats_gtk_tearoff_menu_item_get_type: () -> type_c2ats_GType = "mac#gtk_tearoff_menu_item_get_type"
fun fun_c2ats_gtk_tearoff_menu_item_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_tearoff_menu_item_new"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkthemingengine.h
abst@ype struct_c2ats__GtkThemingEngine // FIXME! Forward declaration.
typedef type_c2ats_GtkThemingEngine = struct_c2ats__GtkThemingEngine
abst@ype struct_c2ats_GtkThemingEnginePrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkThemingEnginePrivate = struct_c2ats_GtkThemingEnginePrivate
abst@ype struct_c2ats__GtkThemingEngineClass // FIXME! Forward declaration.
typedef type_c2ats_GtkThemingEngineClass = struct_c2ats__GtkThemingEngineClass
typedef struct_c2ats__GtkThemingEngine = $extype_struct"struct _GtkThemingEngine" of {
  parent_object = type_c2ats_GObject,
  priv = ptr (* cPtr0(type_c2ats_GtkThemingEnginePrivate) *)
}
typedef struct_c2ats__GtkThemingEngineClass = $extype_struct"struct _GtkThemingEngineClass" of {
  parent_class = type_c2ats_GObjectClass,
  render_line = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void,
  render_background = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void,
  render_frame = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void,
  render_frame_gap = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_GtkPositionType, type_c2ats_gdouble, type_c2ats_gdouble) -> void,
  render_extension = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_GtkPositionType) -> void,
  render_check = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void,
  render_option = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void,
  render_arrow = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void,
  render_expander = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void,
  render_focus = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void,
  render_layout = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_PangoLayout, l3) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, ptr l3) -> void,
  render_slider = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_GtkOrientation) -> void,
  render_handle = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void,
  render_activity = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_cairo_t, l2) | ptr l1, ptr l2, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> void,
  render_icon_pixbuf = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_GtkIconSource, l2) | ptr l1, ptr l2, type_c2ats_GtkIconSize) -> [l3:addr] (ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l3),
  render_icon = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_GdkPixbuf, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gdouble, type_c2ats_gdouble) -> void,
  render_icon_surface = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_cairo_t, l2), !ptr_v_1(type_c2ats_cairo_surface_t, l3) | ptr l1, ptr l2, ptr l3, type_c2ats_gdouble, type_c2ats_gdouble) -> void,
  padding = @[type_c2ats_gpointer][14]
}
fun fun_c2ats_gtk_theming_engine_get_type: () -> type_c2ats_GType = "mac#gtk_theming_engine_get_type"
fun fun_c2ats_gtk_theming_engine_register_property: {l1,l2:addr} (!ptr_v_1(type_c2ats_gchar, l1), !ptr_v_1(type_c2ats_GParamSpec, l2) | ptr l1, type_c2ats_GtkStylePropertyParser, ptr l2) -> void = "mac#gtk_theming_engine_register_property"
fun fun_c2ats_gtk_theming_engine_get_property: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, type_c2ats_GtkStateFlags, ptr l3) -> void = "mac#gtk_theming_engine_get_property"
fun fun_c2ats_gtk_theming_engine_get_valist: {l1:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1) | ptr l1, type_c2ats_GtkStateFlags, type_c2ats_va_list) -> void = "mac#gtk_theming_engine_get_valist"
fun fun_c2ats_gtk_theming_engine_get: {l1:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1) | ptr l1, type_c2ats_GtkStateFlags) -> void = "mac#gtk_theming_engine_get"
fun fun_c2ats_gtk_theming_engine_get_style_property: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GValue, l3) | ptr l1, ptr l2, ptr l3) -> void = "mac#gtk_theming_engine_get_style_property"
fun fun_c2ats_gtk_theming_engine_get_style_valist: {l1:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1) | ptr l1, type_c2ats_va_list) -> void = "mac#gtk_theming_engine_get_style_valist"
fun fun_c2ats_gtk_theming_engine_get_style: {l1:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1) | ptr l1) -> void = "mac#gtk_theming_engine_get_style"
fun fun_c2ats_gtk_theming_engine_lookup_color: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GdkRGBA, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_theming_engine_lookup_color"
fun fun_c2ats_gtk_theming_engine_get_path: {l1:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidgetPath, l2) | ptr l2) = "mac#gtk_theming_engine_get_path"
fun fun_c2ats_gtk_theming_engine_has_class: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> type_c2ats_gboolean = "mac#gtk_theming_engine_has_class"
fun fun_c2ats_gtk_theming_engine_has_region: {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_GtkRegionFlags, l3) | ptr l1, ptr l2, ptr l3) -> type_c2ats_gboolean = "mac#gtk_theming_engine_has_region"
fun fun_c2ats_gtk_theming_engine_get_state: {l1:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1) | ptr l1) -> type_c2ats_GtkStateFlags = "mac#gtk_theming_engine_get_state"
fun fun_c2ats_gtk_theming_engine_state_is_running: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_gdouble, l2) | ptr l1, type_c2ats_GtkStateType, ptr l2) -> type_c2ats_gboolean = "mac#gtk_theming_engine_state_is_running"
fun fun_c2ats_gtk_theming_engine_get_direction: {l1:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1) | ptr l1) -> type_c2ats_GtkTextDirection = "mac#gtk_theming_engine_get_direction"
fun fun_c2ats_gtk_theming_engine_get_junction_sides: {l1:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1) | ptr l1) -> type_c2ats_GtkJunctionSides = "mac#gtk_theming_engine_get_junction_sides"
fun fun_c2ats_gtk_theming_engine_get_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, type_c2ats_GtkStateFlags, ptr l2) -> void = "mac#gtk_theming_engine_get_color"
fun fun_c2ats_gtk_theming_engine_get_background_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, type_c2ats_GtkStateFlags, ptr l2) -> void = "mac#gtk_theming_engine_get_background_color"
fun fun_c2ats_gtk_theming_engine_get_border_color: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_GdkRGBA, l2) | ptr l1, type_c2ats_GtkStateFlags, ptr l2) -> void = "mac#gtk_theming_engine_get_border_color"
fun fun_c2ats_gtk_theming_engine_get_border: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_GtkBorder, l2) | ptr l1, type_c2ats_GtkStateFlags, ptr l2) -> void = "mac#gtk_theming_engine_get_border"
fun fun_c2ats_gtk_theming_engine_get_padding: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_GtkBorder, l2) | ptr l1, type_c2ats_GtkStateFlags, ptr l2) -> void = "mac#gtk_theming_engine_get_padding"
fun fun_c2ats_gtk_theming_engine_get_margin: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1), !ptr_v_1(type_c2ats_GtkBorder, l2) | ptr l1, type_c2ats_GtkStateFlags, ptr l2) -> void = "mac#gtk_theming_engine_get_margin"
fun fun_c2ats_gtk_theming_engine_get_font: {l1:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1) | ptr l1, type_c2ats_GtkStateFlags) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontDescription, l2) | ptr l2) = "mac#gtk_theming_engine_get_font"
fun fun_c2ats_gtk_theming_engine_load: {l1:addr} (!ptr_v_1(type_c2ats_gchar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkThemingEngine, l2) | ptr l2) = "mac#gtk_theming_engine_load"
fun fun_c2ats_gtk_theming_engine_get_screen: {l1:addr} (!ptr_v_1(type_c2ats_GtkThemingEngine, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkScreen, l2) | ptr l2) = "mac#gtk_theming_engine_get_screen"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkuimanager.h
abst@ype struct_c2ats__GtkUIManager // FIXME! Forward declaration.
typedef type_c2ats_GtkUIManager = struct_c2ats__GtkUIManager
abst@ype struct_c2ats__GtkUIManagerClass // FIXME! Forward declaration.
typedef type_c2ats_GtkUIManagerClass = struct_c2ats__GtkUIManagerClass
abst@ype struct_c2ats__GtkUIManagerPrivate // FIXME! Forward declaration.
typedef type_c2ats_GtkUIManagerPrivate = struct_c2ats__GtkUIManagerPrivate
typedef struct_c2ats__GtkUIManager = $extype_struct"struct _GtkUIManager" of {
  parent = type_c2ats_GObject,
  private_data = ptr (* cPtr0(type_c2ats_GtkUIManagerPrivate) *)
}
typedef struct_c2ats__GtkUIManagerClass = $extype_struct"struct _GtkUIManagerClass" of {
  parent_class = type_c2ats_GObjectClass,
  add_widget = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1), !ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l1, ptr l2) -> void,
  actions_changed = {l1:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1) | ptr l1) -> void,
  connect_proxy = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1), !ptr_v_1(type_c2ats_GtkAction, l2), !ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l1, ptr l2, ptr l3) -> void,
  disconnect_proxy = {l1,l2,l3:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1), !ptr_v_1(type_c2ats_GtkAction, l2), !ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l1, ptr l2, ptr l3) -> void,
  pre_activate = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1), !ptr_v_1(type_c2ats_GtkAction, l2) | ptr l1, ptr l2) -> void,
  post_activate = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1), !ptr_v_1(type_c2ats_GtkAction, l2) | ptr l1, ptr l2) -> void,
  get_widget = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3),
  get_action = {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkAction, l3) | ptr l3),
  _gtk_reserved1 = () -> void,
  _gtk_reserved2 = () -> void,
  _gtk_reserved3 = () -> void,
  _gtk_reserved4 = () -> void
}
typedef type_c2ats_GtkUIManagerItemType = int
#define enum_c2ats_GTK_UI_MANAGER_AUTO 0
#define enum_c2ats_GTK_UI_MANAGER_MENUBAR 1 << 0
#define enum_c2ats_GTK_UI_MANAGER_MENU 1 << 1
#define enum_c2ats_GTK_UI_MANAGER_TOOLBAR 1 << 2
#define enum_c2ats_GTK_UI_MANAGER_PLACEHOLDER 1 << 3
#define enum_c2ats_GTK_UI_MANAGER_POPUP 1 << 4
#define enum_c2ats_GTK_UI_MANAGER_MENUITEM 1 << 5
#define enum_c2ats_GTK_UI_MANAGER_TOOLITEM 1 << 6
#define enum_c2ats_GTK_UI_MANAGER_SEPARATOR 1 << 7
#define enum_c2ats_GTK_UI_MANAGER_ACCELERATOR 1 << 8
#define enum_c2ats_GTK_UI_MANAGER_POPUP_WITH_ACCELS 1 << 9
fun fun_c2ats_gtk_ui_manager_get_type: () -> type_c2ats_GType = "mac#gtk_ui_manager_get_type"
fun fun_c2ats_gtk_ui_manager_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkUIManager, l1) | ptr l1) = "mac#gtk_ui_manager_new"
fun fun_c2ats_gtk_ui_manager_set_add_tearoffs: {l1:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1) | ptr l1, type_c2ats_gboolean) -> void = "mac#gtk_ui_manager_set_add_tearoffs"
fun fun_c2ats_gtk_ui_manager_get_add_tearoffs: {l1:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1) | ptr l1) -> type_c2ats_gboolean = "mac#gtk_ui_manager_get_add_tearoffs"
fun fun_c2ats_gtk_ui_manager_insert_action_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1), !ptr_v_1(type_c2ats_GtkActionGroup, l2) | ptr l1, ptr l2, type_c2ats_gint) -> void = "mac#gtk_ui_manager_insert_action_group"
fun fun_c2ats_gtk_ui_manager_remove_action_group: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1), !ptr_v_1(type_c2ats_GtkActionGroup, l2) | ptr l1, ptr l2) -> void = "mac#gtk_ui_manager_remove_action_group"
fun fun_c2ats_gtk_ui_manager_get_action_groups: {l1:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2) | ptr l2) = "mac#gtk_ui_manager_get_action_groups"
fun fun_c2ats_gtk_ui_manager_get_accel_group: {l1:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAccelGroup, l2) | ptr l2) = "mac#gtk_ui_manager_get_accel_group"
fun fun_c2ats_gtk_ui_manager_get_widget: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkWidget, l3) | ptr l3) = "mac#gtk_ui_manager_get_widget"
fun fun_c2ats_gtk_ui_manager_get_toplevels: {l1:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1) | ptr l1, type_c2ats_GtkUIManagerItemType) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2) | ptr l2) = "mac#gtk_ui_manager_get_toplevels"
fun fun_c2ats_gtk_ui_manager_get_action: {l1,l2:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1), !ptr_v_1(type_c2ats_gchar, l2) | ptr l1, ptr l2) -> [l3:addr] (ptr_v_1(type_c2ats_GtkAction, l3) | ptr l3) = "mac#gtk_ui_manager_get_action"
fun fun_c2ats_gtk_ui_manager_add_ui_from_string: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, type_c2ats_gssize, ptr l3) -> type_c2ats_guint = "mac#gtk_ui_manager_add_ui_from_string"
fun fun_c2ats_gtk_ui_manager_add_ui_from_file: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_guint = "mac#gtk_ui_manager_add_ui_from_file"
fun fun_c2ats_gtk_ui_manager_add_ui_from_resource: {l1,l2,l3,l3_1:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_2(type_c2ats_GError, l3, l3_1) | ptr l1, ptr l2, ptr l3) -> type_c2ats_guint = "mac#gtk_ui_manager_add_ui_from_resource"
fun fun_c2ats_gtk_ui_manager_add_ui: {l1,l2,l3,l4:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1), !ptr_v_1(type_c2ats_gchar, l2), !ptr_v_1(type_c2ats_gchar, l3), !ptr_v_1(type_c2ats_gchar, l4) | ptr l1, type_c2ats_guint, ptr l2, ptr l3, ptr l4, type_c2ats_GtkUIManagerItemType, type_c2ats_gboolean) -> void = "mac#gtk_ui_manager_add_ui"
fun fun_c2ats_gtk_ui_manager_remove_ui: {l1:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1) | ptr l1, type_c2ats_guint) -> void = "mac#gtk_ui_manager_remove_ui"
fun fun_c2ats_gtk_ui_manager_get_ui: {l1:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2) | ptr l2) = "mac#gtk_ui_manager_get_ui"
fun fun_c2ats_gtk_ui_manager_ensure_update: {l1:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1) | ptr l1) -> void = "mac#gtk_ui_manager_ensure_update"
fun fun_c2ats_gtk_ui_manager_new_merge_id: {l1:addr} (!ptr_v_1(type_c2ats_GtkUIManager, l1) | ptr l1) -> type_c2ats_guint = "mac#gtk_ui_manager_new_merge_id"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkvbbox.h
abst@ype struct_c2ats__GtkVButtonBox // FIXME! Forward declaration.
typedef type_c2ats_GtkVButtonBox = struct_c2ats__GtkVButtonBox
abst@ype struct_c2ats__GtkVButtonBoxClass // FIXME! Forward declaration.
typedef type_c2ats_GtkVButtonBoxClass = struct_c2ats__GtkVButtonBoxClass
typedef struct_c2ats__GtkVButtonBox = $extype_struct"struct _GtkVButtonBox" of {
  button_box = type_c2ats_GtkButtonBox
}
typedef struct_c2ats__GtkVButtonBoxClass = $extype_struct"struct _GtkVButtonBoxClass" of {
  parent_class = type_c2ats_GtkButtonBoxClass
}
fun fun_c2ats_gtk_vbutton_box_get_type: () -> type_c2ats_GType = "mac#gtk_vbutton_box_get_type"
fun fun_c2ats_gtk_vbutton_box_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_vbutton_box_new"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkvbox.h
abst@ype struct_c2ats__GtkVBox // FIXME! Forward declaration.
typedef type_c2ats_GtkVBox = struct_c2ats__GtkVBox
abst@ype struct_c2ats__GtkVBoxClass // FIXME! Forward declaration.
typedef type_c2ats_GtkVBoxClass = struct_c2ats__GtkVBoxClass
typedef struct_c2ats__GtkVBox = $extype_struct"struct _GtkVBox" of {
  box = type_c2ats_GtkBox
}
typedef struct_c2ats__GtkVBoxClass = $extype_struct"struct _GtkVBoxClass" of {
  parent_class = type_c2ats_GtkBoxClass
}
fun fun_c2ats_gtk_vbox_get_type: () -> type_c2ats_GType = "mac#gtk_vbox_get_type"
fun fun_c2ats_gtk_vbox_new: (type_c2ats_gboolean, type_c2ats_gint) -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_vbox_new"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkvpaned.h
abst@ype struct_c2ats__GtkVPaned // FIXME! Forward declaration.
typedef type_c2ats_GtkVPaned = struct_c2ats__GtkVPaned
abst@ype struct_c2ats__GtkVPanedClass // FIXME! Forward declaration.
typedef type_c2ats_GtkVPanedClass = struct_c2ats__GtkVPanedClass
typedef struct_c2ats__GtkVPaned = $extype_struct"struct _GtkVPaned" of {
  paned = type_c2ats_GtkPaned
}
typedef struct_c2ats__GtkVPanedClass = $extype_struct"struct _GtkVPanedClass" of {
  parent_class = type_c2ats_GtkPanedClass
}
fun fun_c2ats_gtk_vpaned_get_type: () -> type_c2ats_GType = "mac#gtk_vpaned_get_type"
fun fun_c2ats_gtk_vpaned_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_vpaned_new"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkvscale.h
abst@ype struct_c2ats__GtkVScale // FIXME! Forward declaration.
typedef type_c2ats_GtkVScale = struct_c2ats__GtkVScale
abst@ype struct_c2ats__GtkVScaleClass // FIXME! Forward declaration.
typedef type_c2ats_GtkVScaleClass = struct_c2ats__GtkVScaleClass
typedef struct_c2ats__GtkVScale = $extype_struct"struct _GtkVScale" of {
  scale = type_c2ats_GtkScale
}
typedef struct_c2ats__GtkVScaleClass = $extype_struct"struct _GtkVScaleClass" of {
  parent_class = type_c2ats_GtkScaleClass
}
fun fun_c2ats_gtk_vscale_get_type: () -> type_c2ats_GType = "mac#gtk_vscale_get_type"
fun fun_c2ats_gtk_vscale_new: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_vscale_new"
fun fun_c2ats_gtk_vscale_new_with_range: (type_c2ats_gdouble, type_c2ats_gdouble, type_c2ats_gdouble) -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_vscale_new_with_range"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkvscrollbar.h
abst@ype struct_c2ats__GtkVScrollbar // FIXME! Forward declaration.
typedef type_c2ats_GtkVScrollbar = struct_c2ats__GtkVScrollbar
abst@ype struct_c2ats__GtkVScrollbarClass // FIXME! Forward declaration.
typedef type_c2ats_GtkVScrollbarClass = struct_c2ats__GtkVScrollbarClass
typedef struct_c2ats__GtkVScrollbar = $extype_struct"struct _GtkVScrollbar" of {
  scrollbar = type_c2ats_GtkScrollbar
}
typedef struct_c2ats__GtkVScrollbarClass = $extype_struct"struct _GtkVScrollbarClass" of {
  parent_class = type_c2ats_GtkScrollbarClass
}
fun fun_c2ats_gtk_vscrollbar_get_type: () -> type_c2ats_GType = "mac#gtk_vscrollbar_get_type"
fun fun_c2ats_gtk_vscrollbar_new: {l1:addr} (!ptr_v_1(type_c2ats_GtkAdjustment, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2) | ptr l2) = "mac#gtk_vscrollbar_new"
// File: /usr/include/gtk-3.0/gtk/deprecated/gtkvseparator.h
abst@ype struct_c2ats__GtkVSeparator // FIXME! Forward declaration.
typedef type_c2ats_GtkVSeparator = struct_c2ats__GtkVSeparator
abst@ype struct_c2ats__GtkVSeparatorClass // FIXME! Forward declaration.
typedef type_c2ats_GtkVSeparatorClass = struct_c2ats__GtkVSeparatorClass
typedef struct_c2ats__GtkVSeparator = $extype_struct"struct _GtkVSeparator" of {
  separator = type_c2ats_GtkSeparator
}
typedef struct_c2ats__GtkVSeparatorClass = $extype_struct"struct _GtkVSeparatorClass" of {
  parent_class = type_c2ats_GtkSeparatorClass
}
fun fun_c2ats_gtk_vseparator_get_type: () -> type_c2ats_GType = "mac#gtk_vseparator_get_type"
fun fun_c2ats_gtk_vseparator_new: () -> [l1:addr] (ptr_v_1(type_c2ats_GtkWidget, l1) | ptr l1) = "mac#gtk_vseparator_new"
// File: /usr/include/gtk-3.0/gtk/gtk-autocleanups.h
typedef type_c2ats_GtkAccessible_autoptr = cPtr0(type_c2ats_GtkAccessible)
fun fun_c2ats_glib_autoptr_cleanup_GtkAccessible: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkAccessible, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkAccessible"
typedef type_c2ats_GtkActionBar_autoptr = cPtr0(type_c2ats_GtkActionBar)
fun fun_c2ats_glib_autoptr_cleanup_GtkActionBar: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkActionBar, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkActionBar"
typedef type_c2ats_GtkActionable_autoptr = cPtr0(type_c2ats_GtkActionable)
fun fun_c2ats_glib_autoptr_cleanup_GtkActionable: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkActionable, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkActionable"
typedef type_c2ats_GtkAdjustment_autoptr = cPtr0(type_c2ats_GtkAdjustment)
fun fun_c2ats_glib_autoptr_cleanup_GtkAdjustment: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkAdjustment, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkAdjustment"
typedef type_c2ats_GtkAppChooser_autoptr = cPtr0(type_c2ats_GtkAppChooser)
fun fun_c2ats_glib_autoptr_cleanup_GtkAppChooser: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkAppChooser, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkAppChooser"
typedef type_c2ats_GtkAppChooserButton_autoptr = cPtr0(type_c2ats_GtkAppChooserButton)
fun fun_c2ats_glib_autoptr_cleanup_GtkAppChooserButton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkAppChooserButton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkAppChooserButton"
typedef type_c2ats_GtkAppChooserDialog_autoptr = cPtr0(type_c2ats_GtkAppChooserDialog)
fun fun_c2ats_glib_autoptr_cleanup_GtkAppChooserDialog: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkAppChooserDialog, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkAppChooserDialog"
typedef type_c2ats_GtkAppChooserWidget_autoptr = cPtr0(type_c2ats_GtkAppChooserWidget)
fun fun_c2ats_glib_autoptr_cleanup_GtkAppChooserWidget: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkAppChooserWidget, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkAppChooserWidget"
typedef type_c2ats_GtkApplicationWindow_autoptr = cPtr0(type_c2ats_GtkApplicationWindow)
fun fun_c2ats_glib_autoptr_cleanup_GtkApplicationWindow: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkApplicationWindow, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkApplicationWindow"
typedef type_c2ats_GtkAspectFrame_autoptr = cPtr0(type_c2ats_GtkAspectFrame)
fun fun_c2ats_glib_autoptr_cleanup_GtkAspectFrame: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkAspectFrame, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkAspectFrame"
typedef type_c2ats_GtkAssistant_autoptr = cPtr0(type_c2ats_GtkAssistant)
fun fun_c2ats_glib_autoptr_cleanup_GtkAssistant: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkAssistant, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkAssistant"
typedef type_c2ats_GtkBox_autoptr = cPtr0(type_c2ats_GtkBox)
fun fun_c2ats_glib_autoptr_cleanup_GtkBox: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkBox, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkBox"
typedef type_c2ats_GtkBuildable_autoptr = cPtr0(type_c2ats_GtkBuildable)
fun fun_c2ats_glib_autoptr_cleanup_GtkBuildable: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkBuildable, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkBuildable"
typedef type_c2ats_GtkBuilder_autoptr = cPtr0(type_c2ats_GtkBuilder)
fun fun_c2ats_glib_autoptr_cleanup_GtkBuilder: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkBuilder, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkBuilder"
typedef type_c2ats_GtkButton_autoptr = cPtr0(type_c2ats_GtkButton)
fun fun_c2ats_glib_autoptr_cleanup_GtkButton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkButton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkButton"
typedef type_c2ats_GtkButtonBox_autoptr = cPtr0(type_c2ats_GtkButtonBox)
fun fun_c2ats_glib_autoptr_cleanup_GtkButtonBox: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkButtonBox, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkButtonBox"
typedef type_c2ats_GtkCalendar_autoptr = cPtr0(type_c2ats_GtkCalendar)
fun fun_c2ats_glib_autoptr_cleanup_GtkCalendar: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkCalendar, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkCalendar"
typedef type_c2ats_GtkCellArea_autoptr = cPtr0(type_c2ats_GtkCellArea)
fun fun_c2ats_glib_autoptr_cleanup_GtkCellArea: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkCellArea, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkCellArea"
typedef type_c2ats_GtkCellAreaBox_autoptr = cPtr0(type_c2ats_GtkCellAreaBox)
fun fun_c2ats_glib_autoptr_cleanup_GtkCellAreaBox: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkCellAreaBox, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkCellAreaBox"
typedef type_c2ats_GtkCellAreaContext_autoptr = cPtr0(type_c2ats_GtkCellAreaContext)
fun fun_c2ats_glib_autoptr_cleanup_GtkCellAreaContext: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkCellAreaContext, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkCellAreaContext"
typedef type_c2ats_GtkCellEditable_autoptr = cPtr0(type_c2ats_GtkCellEditable)
fun fun_c2ats_glib_autoptr_cleanup_GtkCellEditable: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkCellEditable, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkCellEditable"
typedef type_c2ats_GtkCellLayout_autoptr = cPtr0(type_c2ats_GtkCellLayout)
fun fun_c2ats_glib_autoptr_cleanup_GtkCellLayout: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkCellLayout, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkCellLayout"
typedef type_c2ats_GtkCellRenderer_autoptr = cPtr0(type_c2ats_GtkCellRenderer)
fun fun_c2ats_glib_autoptr_cleanup_GtkCellRenderer: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkCellRenderer, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkCellRenderer"
typedef type_c2ats_GtkCellRendererAccel_autoptr = cPtr0(type_c2ats_GtkCellRendererAccel)
fun fun_c2ats_glib_autoptr_cleanup_GtkCellRendererAccel: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkCellRendererAccel, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkCellRendererAccel"
typedef type_c2ats_GtkCellRendererCombo_autoptr = cPtr0(type_c2ats_GtkCellRendererCombo)
fun fun_c2ats_glib_autoptr_cleanup_GtkCellRendererCombo: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkCellRendererCombo, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkCellRendererCombo"
typedef type_c2ats_GtkCellRendererPixbuf_autoptr = cPtr0(type_c2ats_GtkCellRendererPixbuf)
fun fun_c2ats_glib_autoptr_cleanup_GtkCellRendererPixbuf: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkCellRendererPixbuf, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkCellRendererPixbuf"
typedef type_c2ats_GtkCellRendererProgress_autoptr = cPtr0(type_c2ats_GtkCellRendererProgress)
fun fun_c2ats_glib_autoptr_cleanup_GtkCellRendererProgress: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkCellRendererProgress, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkCellRendererProgress"
typedef type_c2ats_GtkCellRendererSpin_autoptr = cPtr0(type_c2ats_GtkCellRendererSpin)
fun fun_c2ats_glib_autoptr_cleanup_GtkCellRendererSpin: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkCellRendererSpin, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkCellRendererSpin"
typedef type_c2ats_GtkCellRendererSpinner_autoptr = cPtr0(type_c2ats_GtkCellRendererSpinner)
fun fun_c2ats_glib_autoptr_cleanup_GtkCellRendererSpinner: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkCellRendererSpinner, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkCellRendererSpinner"
typedef type_c2ats_GtkCellRendererText_autoptr = cPtr0(type_c2ats_GtkCellRendererText)
fun fun_c2ats_glib_autoptr_cleanup_GtkCellRendererText: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkCellRendererText, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkCellRendererText"
typedef type_c2ats_GtkCellRendererToggle_autoptr = cPtr0(type_c2ats_GtkCellRendererToggle)
fun fun_c2ats_glib_autoptr_cleanup_GtkCellRendererToggle: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkCellRendererToggle, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkCellRendererToggle"
typedef type_c2ats_GtkCellView_autoptr = cPtr0(type_c2ats_GtkCellView)
fun fun_c2ats_glib_autoptr_cleanup_GtkCellView: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkCellView, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkCellView"
typedef type_c2ats_GtkCheckButton_autoptr = cPtr0(type_c2ats_GtkCheckButton)
fun fun_c2ats_glib_autoptr_cleanup_GtkCheckButton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkCheckButton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkCheckButton"
typedef type_c2ats_GtkCheckMenuItem_autoptr = cPtr0(type_c2ats_GtkCheckMenuItem)
fun fun_c2ats_glib_autoptr_cleanup_GtkCheckMenuItem: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkCheckMenuItem, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkCheckMenuItem"
typedef type_c2ats_GtkClipboard_autoptr = cPtr0(type_c2ats_GtkClipboard)
fun fun_c2ats_glib_autoptr_cleanup_GtkClipboard: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkClipboard, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkClipboard"
typedef type_c2ats_GtkColorButton_autoptr = cPtr0(type_c2ats_GtkColorButton)
fun fun_c2ats_glib_autoptr_cleanup_GtkColorButton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkColorButton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkColorButton"
typedef type_c2ats_GtkColorChooser_autoptr = cPtr0(type_c2ats_GtkColorChooser)
fun fun_c2ats_glib_autoptr_cleanup_GtkColorChooser: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkColorChooser, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkColorChooser"
typedef type_c2ats_GtkColorChooserDialog_autoptr = cPtr0(type_c2ats_GtkColorChooserDialog)
fun fun_c2ats_glib_autoptr_cleanup_GtkColorChooserDialog: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkColorChooserDialog, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkColorChooserDialog"
typedef type_c2ats_GtkColorChooserWidget_autoptr = cPtr0(type_c2ats_GtkColorChooserWidget)
fun fun_c2ats_glib_autoptr_cleanup_GtkColorChooserWidget: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkColorChooserWidget, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkColorChooserWidget"
typedef type_c2ats_GtkComboBox_autoptr = cPtr0(type_c2ats_GtkComboBox)
fun fun_c2ats_glib_autoptr_cleanup_GtkComboBox: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkComboBox, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkComboBox"
typedef type_c2ats_GtkComboBoxText_autoptr = cPtr0(type_c2ats_GtkComboBoxText)
fun fun_c2ats_glib_autoptr_cleanup_GtkComboBoxText: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkComboBoxText, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkComboBoxText"
typedef type_c2ats_GtkCssProvider_autoptr = cPtr0(type_c2ats_GtkCssProvider)
fun fun_c2ats_glib_autoptr_cleanup_GtkCssProvider: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkCssProvider, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkCssProvider"
typedef type_c2ats_GtkDrawingArea_autoptr = cPtr0(type_c2ats_GtkDrawingArea)
fun fun_c2ats_glib_autoptr_cleanup_GtkDrawingArea: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkDrawingArea, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkDrawingArea"
typedef type_c2ats_GtkEditable_autoptr = cPtr0(type_c2ats_GtkEditable)
fun fun_c2ats_glib_autoptr_cleanup_GtkEditable: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkEditable, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkEditable"
typedef type_c2ats_GtkEntry_autoptr = cPtr0(type_c2ats_GtkEntry)
fun fun_c2ats_glib_autoptr_cleanup_GtkEntry: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkEntry, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkEntry"
typedef type_c2ats_GtkEntryBuffer_autoptr = cPtr0(type_c2ats_GtkEntryBuffer)
fun fun_c2ats_glib_autoptr_cleanup_GtkEntryBuffer: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkEntryBuffer, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkEntryBuffer"
typedef type_c2ats_GtkEntryCompletion_autoptr = cPtr0(type_c2ats_GtkEntryCompletion)
fun fun_c2ats_glib_autoptr_cleanup_GtkEntryCompletion: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkEntryCompletion, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkEntryCompletion"
typedef type_c2ats_GtkEventBox_autoptr = cPtr0(type_c2ats_GtkEventBox)
fun fun_c2ats_glib_autoptr_cleanup_GtkEventBox: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkEventBox, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkEventBox"
typedef type_c2ats_GtkEventController_autoptr = cPtr0(type_c2ats_GtkEventController)
fun fun_c2ats_glib_autoptr_cleanup_GtkEventController: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkEventController, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkEventController"
typedef type_c2ats_GtkExpander_autoptr = cPtr0(type_c2ats_GtkExpander)
fun fun_c2ats_glib_autoptr_cleanup_GtkExpander: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkExpander, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkExpander"
typedef type_c2ats_GtkFileChooserButton_autoptr = cPtr0(type_c2ats_GtkFileChooserButton)
fun fun_c2ats_glib_autoptr_cleanup_GtkFileChooserButton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkFileChooserButton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkFileChooserButton"
typedef type_c2ats_GtkFileChooserDialog_autoptr = cPtr0(type_c2ats_GtkFileChooserDialog)
fun fun_c2ats_glib_autoptr_cleanup_GtkFileChooserDialog: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkFileChooserDialog, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkFileChooserDialog"
typedef type_c2ats_GtkFileChooserWidget_autoptr = cPtr0(type_c2ats_GtkFileChooserWidget)
fun fun_c2ats_glib_autoptr_cleanup_GtkFileChooserWidget: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkFileChooserWidget, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkFileChooserWidget"
typedef type_c2ats_GtkFileFilter_autoptr = cPtr0(type_c2ats_GtkFileFilter)
fun fun_c2ats_glib_autoptr_cleanup_GtkFileFilter: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkFileFilter, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkFileFilter"
typedef type_c2ats_GtkFixed_autoptr = cPtr0(type_c2ats_GtkFixed)
fun fun_c2ats_glib_autoptr_cleanup_GtkFixed: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkFixed, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkFixed"
typedef type_c2ats_GtkFlowBox_autoptr = cPtr0(type_c2ats_GtkFlowBox)
fun fun_c2ats_glib_autoptr_cleanup_GtkFlowBox: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkFlowBox, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkFlowBox"
typedef type_c2ats_GtkFlowBoxChild_autoptr = cPtr0(type_c2ats_GtkFlowBoxChild)
fun fun_c2ats_glib_autoptr_cleanup_GtkFlowBoxChild: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkFlowBoxChild, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkFlowBoxChild"
typedef type_c2ats_GtkFontButton_autoptr = cPtr0(type_c2ats_GtkFontButton)
fun fun_c2ats_glib_autoptr_cleanup_GtkFontButton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkFontButton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkFontButton"
typedef type_c2ats_GtkFontChooser_autoptr = cPtr0(type_c2ats_GtkFontChooser)
fun fun_c2ats_glib_autoptr_cleanup_GtkFontChooser: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkFontChooser, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkFontChooser"
typedef type_c2ats_GtkFontChooserDialog_autoptr = cPtr0(type_c2ats_GtkFontChooserDialog)
fun fun_c2ats_glib_autoptr_cleanup_GtkFontChooserDialog: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkFontChooserDialog, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkFontChooserDialog"
typedef type_c2ats_GtkFontChooserWidget_autoptr = cPtr0(type_c2ats_GtkFontChooserWidget)
fun fun_c2ats_glib_autoptr_cleanup_GtkFontChooserWidget: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkFontChooserWidget, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkFontChooserWidget"
typedef type_c2ats_GtkFrame_autoptr = cPtr0(type_c2ats_GtkFrame)
fun fun_c2ats_glib_autoptr_cleanup_GtkFrame: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkFrame, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkFrame"
typedef type_c2ats_GtkGLArea_autoptr = cPtr0(type_c2ats_GtkGLArea)
fun fun_c2ats_glib_autoptr_cleanup_GtkGLArea: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkGLArea, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkGLArea"
typedef type_c2ats_GtkGesture_autoptr = cPtr0(type_c2ats_GtkGesture)
fun fun_c2ats_glib_autoptr_cleanup_GtkGesture: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkGesture, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkGesture"
typedef type_c2ats_GtkGestureDrag_autoptr = cPtr0(type_c2ats_GtkGestureDrag)
fun fun_c2ats_glib_autoptr_cleanup_GtkGestureDrag: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkGestureDrag, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkGestureDrag"
typedef type_c2ats_GtkGestureLongPress_autoptr = cPtr0(type_c2ats_GtkGestureLongPress)
fun fun_c2ats_glib_autoptr_cleanup_GtkGestureLongPress: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkGestureLongPress, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkGestureLongPress"
typedef type_c2ats_GtkGestureMultiPress_autoptr = cPtr0(type_c2ats_GtkGestureMultiPress)
fun fun_c2ats_glib_autoptr_cleanup_GtkGestureMultiPress: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkGestureMultiPress, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkGestureMultiPress"
typedef type_c2ats_GtkGesturePan_autoptr = cPtr0(type_c2ats_GtkGesturePan)
fun fun_c2ats_glib_autoptr_cleanup_GtkGesturePan: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkGesturePan, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkGesturePan"
typedef type_c2ats_GtkGestureRotate_autoptr = cPtr0(type_c2ats_GtkGestureRotate)
fun fun_c2ats_glib_autoptr_cleanup_GtkGestureRotate: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkGestureRotate, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkGestureRotate"
typedef type_c2ats_GtkGestureSingle_autoptr = cPtr0(type_c2ats_GtkGestureSingle)
fun fun_c2ats_glib_autoptr_cleanup_GtkGestureSingle: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkGestureSingle, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkGestureSingle"
typedef type_c2ats_GtkGestureSwipe_autoptr = cPtr0(type_c2ats_GtkGestureSwipe)
fun fun_c2ats_glib_autoptr_cleanup_GtkGestureSwipe: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkGestureSwipe, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkGestureSwipe"
typedef type_c2ats_GtkGestureZoom_autoptr = cPtr0(type_c2ats_GtkGestureZoom)
fun fun_c2ats_glib_autoptr_cleanup_GtkGestureZoom: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkGestureZoom, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkGestureZoom"
typedef type_c2ats_GtkGrid_autoptr = cPtr0(type_c2ats_GtkGrid)
fun fun_c2ats_glib_autoptr_cleanup_GtkGrid: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkGrid, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkGrid"
typedef type_c2ats_GtkHeaderBar_autoptr = cPtr0(type_c2ats_GtkHeaderBar)
fun fun_c2ats_glib_autoptr_cleanup_GtkHeaderBar: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkHeaderBar, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkHeaderBar"
typedef type_c2ats_GtkIMContext_autoptr = cPtr0(type_c2ats_GtkIMContext)
fun fun_c2ats_glib_autoptr_cleanup_GtkIMContext: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkIMContext, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkIMContext"
typedef type_c2ats_GtkIMContextSimple_autoptr = cPtr0(type_c2ats_GtkIMContextSimple)
fun fun_c2ats_glib_autoptr_cleanup_GtkIMContextSimple: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkIMContextSimple, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkIMContextSimple"
typedef type_c2ats_GtkIMMulticontext_autoptr = cPtr0(type_c2ats_GtkIMMulticontext)
fun fun_c2ats_glib_autoptr_cleanup_GtkIMMulticontext: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkIMMulticontext, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkIMMulticontext"
typedef type_c2ats_GtkIconInfo_autoptr = cPtr0(type_c2ats_GtkIconInfo)
fun fun_c2ats_glib_autoptr_cleanup_GtkIconInfo: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkIconInfo, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkIconInfo"
typedef type_c2ats_GtkIconTheme_autoptr = cPtr0(type_c2ats_GtkIconTheme)
fun fun_c2ats_glib_autoptr_cleanup_GtkIconTheme: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkIconTheme, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkIconTheme"
typedef type_c2ats_GtkIconView_autoptr = cPtr0(type_c2ats_GtkIconView)
fun fun_c2ats_glib_autoptr_cleanup_GtkIconView: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkIconView, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkIconView"
typedef type_c2ats_GtkImage_autoptr = cPtr0(type_c2ats_GtkImage)
fun fun_c2ats_glib_autoptr_cleanup_GtkImage: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkImage, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkImage"
typedef type_c2ats_GtkInfoBar_autoptr = cPtr0(type_c2ats_GtkInfoBar)
fun fun_c2ats_glib_autoptr_cleanup_GtkInfoBar: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkInfoBar, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkInfoBar"
typedef type_c2ats_GtkInvisible_autoptr = cPtr0(type_c2ats_GtkInvisible)
fun fun_c2ats_glib_autoptr_cleanup_GtkInvisible: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkInvisible, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkInvisible"
typedef type_c2ats_GtkLayout_autoptr = cPtr0(type_c2ats_GtkLayout)
fun fun_c2ats_glib_autoptr_cleanup_GtkLayout: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkLayout, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkLayout"
typedef type_c2ats_GtkLevelBar_autoptr = cPtr0(type_c2ats_GtkLevelBar)
fun fun_c2ats_glib_autoptr_cleanup_GtkLevelBar: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkLevelBar, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkLevelBar"
typedef type_c2ats_GtkLinkButton_autoptr = cPtr0(type_c2ats_GtkLinkButton)
fun fun_c2ats_glib_autoptr_cleanup_GtkLinkButton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkLinkButton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkLinkButton"
typedef type_c2ats_GtkListStore_autoptr = cPtr0(type_c2ats_GtkListStore)
fun fun_c2ats_glib_autoptr_cleanup_GtkListStore: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkListStore, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkListStore"
typedef type_c2ats_GtkLockButton_autoptr = cPtr0(type_c2ats_GtkLockButton)
fun fun_c2ats_glib_autoptr_cleanup_GtkLockButton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkLockButton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkLockButton"
typedef type_c2ats_GtkMenuBar_autoptr = cPtr0(type_c2ats_GtkMenuBar)
fun fun_c2ats_glib_autoptr_cleanup_GtkMenuBar: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkMenuBar, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkMenuBar"
typedef type_c2ats_GtkMenuButton_autoptr = cPtr0(type_c2ats_GtkMenuButton)
fun fun_c2ats_glib_autoptr_cleanup_GtkMenuButton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkMenuButton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkMenuButton"
typedef type_c2ats_GtkMenuItem_autoptr = cPtr0(type_c2ats_GtkMenuItem)
fun fun_c2ats_glib_autoptr_cleanup_GtkMenuItem: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkMenuItem, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkMenuItem"
typedef type_c2ats_GtkMenuToolButton_autoptr = cPtr0(type_c2ats_GtkMenuToolButton)
fun fun_c2ats_glib_autoptr_cleanup_GtkMenuToolButton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkMenuToolButton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkMenuToolButton"
typedef type_c2ats_GtkMessageDialog_autoptr = cPtr0(type_c2ats_GtkMessageDialog)
fun fun_c2ats_glib_autoptr_cleanup_GtkMessageDialog: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkMessageDialog, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkMessageDialog"
typedef type_c2ats_GtkMountOperation_autoptr = cPtr0(type_c2ats_GtkMountOperation)
fun fun_c2ats_glib_autoptr_cleanup_GtkMountOperation: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkMountOperation, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkMountOperation"
typedef type_c2ats_GtkNotebook_autoptr = cPtr0(type_c2ats_GtkNotebook)
fun fun_c2ats_glib_autoptr_cleanup_GtkNotebook: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkNotebook, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkNotebook"
typedef type_c2ats_GtkOffscreenWindow_autoptr = cPtr0(type_c2ats_GtkOffscreenWindow)
fun fun_c2ats_glib_autoptr_cleanup_GtkOffscreenWindow: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkOffscreenWindow, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkOffscreenWindow"
typedef type_c2ats_GtkOrientable_autoptr = cPtr0(type_c2ats_GtkOrientable)
fun fun_c2ats_glib_autoptr_cleanup_GtkOrientable: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkOrientable, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkOrientable"
typedef type_c2ats_GtkOverlay_autoptr = cPtr0(type_c2ats_GtkOverlay)
fun fun_c2ats_glib_autoptr_cleanup_GtkOverlay: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkOverlay, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkOverlay"
typedef type_c2ats_GtkPageSetup_autoptr = cPtr0(type_c2ats_GtkPageSetup)
fun fun_c2ats_glib_autoptr_cleanup_GtkPageSetup: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkPageSetup, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkPageSetup"
typedef type_c2ats_GtkPaned_autoptr = cPtr0(type_c2ats_GtkPaned)
fun fun_c2ats_glib_autoptr_cleanup_GtkPaned: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkPaned, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkPaned"
typedef type_c2ats_GtkPlacesSidebar_autoptr = cPtr0(type_c2ats_GtkPlacesSidebar)
fun fun_c2ats_glib_autoptr_cleanup_GtkPlacesSidebar: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkPlacesSidebar, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkPlacesSidebar"
typedef type_c2ats_GtkPopover_autoptr = cPtr0(type_c2ats_GtkPopover)
fun fun_c2ats_glib_autoptr_cleanup_GtkPopover: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkPopover, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkPopover"
typedef type_c2ats_GtkPopoverMenu_autoptr = cPtr0(type_c2ats_GtkPopoverMenu)
fun fun_c2ats_glib_autoptr_cleanup_GtkPopoverMenu: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkPopoverMenu, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkPopoverMenu"
typedef type_c2ats_GtkPrintContext_autoptr = cPtr0(type_c2ats_GtkPrintContext)
fun fun_c2ats_glib_autoptr_cleanup_GtkPrintContext: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkPrintContext, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkPrintContext"
typedef type_c2ats_GtkPrintOperation_autoptr = cPtr0(type_c2ats_GtkPrintOperation)
fun fun_c2ats_glib_autoptr_cleanup_GtkPrintOperation: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkPrintOperation, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkPrintOperation"
typedef type_c2ats_GtkPrintOperationPreview_autoptr = cPtr0(type_c2ats_GtkPrintOperationPreview)
fun fun_c2ats_glib_autoptr_cleanup_GtkPrintOperationPreview: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkPrintOperationPreview, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkPrintOperationPreview"
typedef type_c2ats_GtkPrintSettings_autoptr = cPtr0(type_c2ats_GtkPrintSettings)
fun fun_c2ats_glib_autoptr_cleanup_GtkPrintSettings: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkPrintSettings, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkPrintSettings"
typedef type_c2ats_GtkProgressBar_autoptr = cPtr0(type_c2ats_GtkProgressBar)
fun fun_c2ats_glib_autoptr_cleanup_GtkProgressBar: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkProgressBar, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkProgressBar"
typedef type_c2ats_GtkRadioButton_autoptr = cPtr0(type_c2ats_GtkRadioButton)
fun fun_c2ats_glib_autoptr_cleanup_GtkRadioButton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkRadioButton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkRadioButton"
typedef type_c2ats_GtkRadioMenuItem_autoptr = cPtr0(type_c2ats_GtkRadioMenuItem)
fun fun_c2ats_glib_autoptr_cleanup_GtkRadioMenuItem: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkRadioMenuItem, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkRadioMenuItem"
typedef type_c2ats_GtkRadioToolButton_autoptr = cPtr0(type_c2ats_GtkRadioToolButton)
fun fun_c2ats_glib_autoptr_cleanup_GtkRadioToolButton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkRadioToolButton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkRadioToolButton"
typedef type_c2ats_GtkRange_autoptr = cPtr0(type_c2ats_GtkRange)
fun fun_c2ats_glib_autoptr_cleanup_GtkRange: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkRange, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkRange"
typedef type_c2ats_GtkRcStyle_autoptr = cPtr0(type_c2ats_GtkRcStyle)
fun fun_c2ats_glib_autoptr_cleanup_GtkRcStyle: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkRcStyle, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkRcStyle"
typedef type_c2ats_GtkRecentChooser_autoptr = cPtr0(type_c2ats_GtkRecentChooser)
fun fun_c2ats_glib_autoptr_cleanup_GtkRecentChooser: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkRecentChooser, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkRecentChooser"
typedef type_c2ats_GtkRecentChooserDialog_autoptr = cPtr0(type_c2ats_GtkRecentChooserDialog)
fun fun_c2ats_glib_autoptr_cleanup_GtkRecentChooserDialog: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkRecentChooserDialog, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkRecentChooserDialog"
typedef type_c2ats_GtkRecentChooserMenu_autoptr = cPtr0(type_c2ats_GtkRecentChooserMenu)
fun fun_c2ats_glib_autoptr_cleanup_GtkRecentChooserMenu: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkRecentChooserMenu, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkRecentChooserMenu"
typedef type_c2ats_GtkRecentChooserWidget_autoptr = cPtr0(type_c2ats_GtkRecentChooserWidget)
fun fun_c2ats_glib_autoptr_cleanup_GtkRecentChooserWidget: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkRecentChooserWidget, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkRecentChooserWidget"
typedef type_c2ats_GtkRecentFilter_autoptr = cPtr0(type_c2ats_GtkRecentFilter)
fun fun_c2ats_glib_autoptr_cleanup_GtkRecentFilter: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkRecentFilter, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkRecentFilter"
typedef type_c2ats_GtkRecentManager_autoptr = cPtr0(type_c2ats_GtkRecentManager)
fun fun_c2ats_glib_autoptr_cleanup_GtkRecentManager: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkRecentManager, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkRecentManager"
typedef type_c2ats_GtkRevealer_autoptr = cPtr0(type_c2ats_GtkRevealer)
fun fun_c2ats_glib_autoptr_cleanup_GtkRevealer: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkRevealer, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkRevealer"
typedef type_c2ats_GtkScale_autoptr = cPtr0(type_c2ats_GtkScale)
fun fun_c2ats_glib_autoptr_cleanup_GtkScale: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkScale, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkScale"
typedef type_c2ats_GtkScaleButton_autoptr = cPtr0(type_c2ats_GtkScaleButton)
fun fun_c2ats_glib_autoptr_cleanup_GtkScaleButton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkScaleButton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkScaleButton"
typedef type_c2ats_GtkScrollable_autoptr = cPtr0(type_c2ats_GtkScrollable)
fun fun_c2ats_glib_autoptr_cleanup_GtkScrollable: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkScrollable, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkScrollable"
typedef type_c2ats_GtkScrollbar_autoptr = cPtr0(type_c2ats_GtkScrollbar)
fun fun_c2ats_glib_autoptr_cleanup_GtkScrollbar: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkScrollbar, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkScrollbar"
typedef type_c2ats_GtkScrolledWindow_autoptr = cPtr0(type_c2ats_GtkScrolledWindow)
fun fun_c2ats_glib_autoptr_cleanup_GtkScrolledWindow: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkScrolledWindow, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkScrolledWindow"
typedef type_c2ats_GtkSearchBar_autoptr = cPtr0(type_c2ats_GtkSearchBar)
fun fun_c2ats_glib_autoptr_cleanup_GtkSearchBar: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkSearchBar, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkSearchBar"
typedef type_c2ats_GtkSearchEntry_autoptr = cPtr0(type_c2ats_GtkSearchEntry)
fun fun_c2ats_glib_autoptr_cleanup_GtkSearchEntry: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkSearchEntry, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkSearchEntry"
typedef type_c2ats_GtkSeparator_autoptr = cPtr0(type_c2ats_GtkSeparator)
fun fun_c2ats_glib_autoptr_cleanup_GtkSeparator: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkSeparator, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkSeparator"
typedef type_c2ats_GtkSeparatorMenuItem_autoptr = cPtr0(type_c2ats_GtkSeparatorMenuItem)
fun fun_c2ats_glib_autoptr_cleanup_GtkSeparatorMenuItem: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkSeparatorMenuItem, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkSeparatorMenuItem"
typedef type_c2ats_GtkSeparatorToolItem_autoptr = cPtr0(type_c2ats_GtkSeparatorToolItem)
fun fun_c2ats_glib_autoptr_cleanup_GtkSeparatorToolItem: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkSeparatorToolItem, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkSeparatorToolItem"
typedef type_c2ats_GtkSettings_autoptr = cPtr0(type_c2ats_GtkSettings)
fun fun_c2ats_glib_autoptr_cleanup_GtkSettings: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkSettings, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkSettings"
typedef type_c2ats_GtkStackSidebar_autoptr = cPtr0(type_c2ats_GtkStackSidebar)
fun fun_c2ats_glib_autoptr_cleanup_GtkStackSidebar: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkStackSidebar, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkStackSidebar"
typedef type_c2ats_GtkSizeGroup_autoptr = cPtr0(type_c2ats_GtkSizeGroup)
fun fun_c2ats_glib_autoptr_cleanup_GtkSizeGroup: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkSizeGroup, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkSizeGroup"
typedef type_c2ats_GtkSpinButton_autoptr = cPtr0(type_c2ats_GtkSpinButton)
fun fun_c2ats_glib_autoptr_cleanup_GtkSpinButton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkSpinButton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkSpinButton"
typedef type_c2ats_GtkSpinner_autoptr = cPtr0(type_c2ats_GtkSpinner)
fun fun_c2ats_glib_autoptr_cleanup_GtkSpinner: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkSpinner, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkSpinner"
typedef type_c2ats_GtkStack_autoptr = cPtr0(type_c2ats_GtkStack)
fun fun_c2ats_glib_autoptr_cleanup_GtkStack: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkStack, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkStack"
typedef type_c2ats_GtkStackSwitcher_autoptr = cPtr0(type_c2ats_GtkStackSwitcher)
fun fun_c2ats_glib_autoptr_cleanup_GtkStackSwitcher: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkStackSwitcher, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkStackSwitcher"
typedef type_c2ats_GtkStatusbar_autoptr = cPtr0(type_c2ats_GtkStatusbar)
fun fun_c2ats_glib_autoptr_cleanup_GtkStatusbar: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkStatusbar, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkStatusbar"
typedef type_c2ats_GtkStyle_autoptr = cPtr0(type_c2ats_GtkStyle)
fun fun_c2ats_glib_autoptr_cleanup_GtkStyle: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkStyle, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkStyle"
typedef type_c2ats_GtkStyleContext_autoptr = cPtr0(type_c2ats_GtkStyleContext)
fun fun_c2ats_glib_autoptr_cleanup_GtkStyleContext: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkStyleContext, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkStyleContext"
typedef type_c2ats_GtkStyleProperties_autoptr = cPtr0(type_c2ats_GtkStyleProperties)
fun fun_c2ats_glib_autoptr_cleanup_GtkStyleProperties: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkStyleProperties, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkStyleProperties"
typedef type_c2ats_GtkStyleProvider_autoptr = cPtr0(type_c2ats_GtkStyleProvider)
fun fun_c2ats_glib_autoptr_cleanup_GtkStyleProvider: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkStyleProvider, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkStyleProvider"
typedef type_c2ats_GtkSwitch_autoptr = cPtr0(type_c2ats_GtkSwitch)
fun fun_c2ats_glib_autoptr_cleanup_GtkSwitch: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkSwitch, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkSwitch"
typedef type_c2ats_GtkTextBuffer_autoptr = cPtr0(type_c2ats_GtkTextBuffer)
fun fun_c2ats_glib_autoptr_cleanup_GtkTextBuffer: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTextBuffer, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTextBuffer"
typedef type_c2ats_GtkTextChildAnchor_autoptr = cPtr0(type_c2ats_GtkTextChildAnchor)
fun fun_c2ats_glib_autoptr_cleanup_GtkTextChildAnchor: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTextChildAnchor, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTextChildAnchor"
typedef type_c2ats_GtkTextMark_autoptr = cPtr0(type_c2ats_GtkTextMark)
fun fun_c2ats_glib_autoptr_cleanup_GtkTextMark: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTextMark, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTextMark"
typedef type_c2ats_GtkTextTag_autoptr = cPtr0(type_c2ats_GtkTextTag)
fun fun_c2ats_glib_autoptr_cleanup_GtkTextTag: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTextTag, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTextTag"
typedef type_c2ats_GtkTextTagTable_autoptr = cPtr0(type_c2ats_GtkTextTagTable)
fun fun_c2ats_glib_autoptr_cleanup_GtkTextTagTable: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTextTagTable, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTextTagTable"
typedef type_c2ats_GtkTextView_autoptr = cPtr0(type_c2ats_GtkTextView)
fun fun_c2ats_glib_autoptr_cleanup_GtkTextView: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTextView, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTextView"
typedef type_c2ats_GtkToggleButton_autoptr = cPtr0(type_c2ats_GtkToggleButton)
fun fun_c2ats_glib_autoptr_cleanup_GtkToggleButton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkToggleButton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkToggleButton"
typedef type_c2ats_GtkToggleToolButton_autoptr = cPtr0(type_c2ats_GtkToggleToolButton)
fun fun_c2ats_glib_autoptr_cleanup_GtkToggleToolButton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkToggleToolButton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkToggleToolButton"
typedef type_c2ats_GtkToolButton_autoptr = cPtr0(type_c2ats_GtkToolButton)
fun fun_c2ats_glib_autoptr_cleanup_GtkToolButton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkToolButton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkToolButton"
typedef type_c2ats_GtkToolItem_autoptr = cPtr0(type_c2ats_GtkToolItem)
fun fun_c2ats_glib_autoptr_cleanup_GtkToolItem: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkToolItem, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkToolItem"
typedef type_c2ats_GtkToolItemGroup_autoptr = cPtr0(type_c2ats_GtkToolItemGroup)
fun fun_c2ats_glib_autoptr_cleanup_GtkToolItemGroup: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkToolItemGroup, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkToolItemGroup"
typedef type_c2ats_GtkToolPalette_autoptr = cPtr0(type_c2ats_GtkToolPalette)
fun fun_c2ats_glib_autoptr_cleanup_GtkToolPalette: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkToolPalette, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkToolPalette"
typedef type_c2ats_GtkToolShell_autoptr = cPtr0(type_c2ats_GtkToolShell)
fun fun_c2ats_glib_autoptr_cleanup_GtkToolShell: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkToolShell, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkToolShell"
typedef type_c2ats_GtkToolbar_autoptr = cPtr0(type_c2ats_GtkToolbar)
fun fun_c2ats_glib_autoptr_cleanup_GtkToolbar: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkToolbar, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkToolbar"
typedef type_c2ats_GtkTooltip_autoptr = cPtr0(type_c2ats_GtkTooltip)
fun fun_c2ats_glib_autoptr_cleanup_GtkTooltip: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTooltip, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTooltip"
typedef type_c2ats_GtkTreeDragDest_autoptr = cPtr0(type_c2ats_GtkTreeDragDest)
fun fun_c2ats_glib_autoptr_cleanup_GtkTreeDragDest: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTreeDragDest, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTreeDragDest"
typedef type_c2ats_GtkTreeDragSource_autoptr = cPtr0(type_c2ats_GtkTreeDragSource)
fun fun_c2ats_glib_autoptr_cleanup_GtkTreeDragSource: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTreeDragSource, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTreeDragSource"
typedef type_c2ats_GtkTreeModel_autoptr = cPtr0(type_c2ats_GtkTreeModel)
fun fun_c2ats_glib_autoptr_cleanup_GtkTreeModel: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTreeModel, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTreeModel"
typedef type_c2ats_GtkTreeModelFilter_autoptr = cPtr0(type_c2ats_GtkTreeModelFilter)
fun fun_c2ats_glib_autoptr_cleanup_GtkTreeModelFilter: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTreeModelFilter, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTreeModelFilter"
typedef type_c2ats_GtkTreeModelSort_autoptr = cPtr0(type_c2ats_GtkTreeModelSort)
fun fun_c2ats_glib_autoptr_cleanup_GtkTreeModelSort: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTreeModelSort, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTreeModelSort"
typedef type_c2ats_GtkTreeSelection_autoptr = cPtr0(type_c2ats_GtkTreeSelection)
fun fun_c2ats_glib_autoptr_cleanup_GtkTreeSelection: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTreeSelection, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTreeSelection"
typedef type_c2ats_GtkTreeSortable_autoptr = cPtr0(type_c2ats_GtkTreeSortable)
fun fun_c2ats_glib_autoptr_cleanup_GtkTreeSortable: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTreeSortable, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTreeSortable"
typedef type_c2ats_GtkTreeStore_autoptr = cPtr0(type_c2ats_GtkTreeStore)
fun fun_c2ats_glib_autoptr_cleanup_GtkTreeStore: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTreeStore, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTreeStore"
typedef type_c2ats_GtkTreeView_autoptr = cPtr0(type_c2ats_GtkTreeView)
fun fun_c2ats_glib_autoptr_cleanup_GtkTreeView: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTreeView, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTreeView"
typedef type_c2ats_GtkTreeViewColumn_autoptr = cPtr0(type_c2ats_GtkTreeViewColumn)
fun fun_c2ats_glib_autoptr_cleanup_GtkTreeViewColumn: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTreeViewColumn, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTreeViewColumn"
typedef type_c2ats_GtkViewport_autoptr = cPtr0(type_c2ats_GtkViewport)
fun fun_c2ats_glib_autoptr_cleanup_GtkViewport: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkViewport, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkViewport"
typedef type_c2ats_GtkVolumeButton_autoptr = cPtr0(type_c2ats_GtkVolumeButton)
fun fun_c2ats_glib_autoptr_cleanup_GtkVolumeButton: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkVolumeButton, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkVolumeButton"
typedef type_c2ats_GtkPaperSize_autoptr = cPtr0(type_c2ats_GtkPaperSize)
fun fun_c2ats_glib_autoptr_cleanup_GtkPaperSize: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkPaperSize, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkPaperSize"
typedef type_c2ats_GtkSelectionData_autoptr = cPtr0(type_c2ats_GtkSelectionData)
fun fun_c2ats_glib_autoptr_cleanup_GtkSelectionData: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkSelectionData, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkSelectionData"
typedef type_c2ats_GtkTargetList_autoptr = cPtr0(type_c2ats_GtkTargetList)
fun fun_c2ats_glib_autoptr_cleanup_GtkTargetList: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTargetList, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTargetList"
typedef type_c2ats_GtkTextAttributes_autoptr = cPtr0(type_c2ats_GtkTextAttributes)
fun fun_c2ats_glib_autoptr_cleanup_GtkTextAttributes: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTextAttributes, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTextAttributes"
typedef type_c2ats_GtkTextIter_autoptr = cPtr0(type_c2ats_GtkTextIter)
fun fun_c2ats_glib_autoptr_cleanup_GtkTextIter: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTextIter, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTextIter"
typedef type_c2ats_GtkTreeIter_autoptr = cPtr0(type_c2ats_GtkTreeIter)
fun fun_c2ats_glib_autoptr_cleanup_GtkTreeIter: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTreeIter, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTreeIter"
typedef type_c2ats_GtkTreeRowReference_autoptr = cPtr0(type_c2ats_GtkTreeRowReference)
fun fun_c2ats_glib_autoptr_cleanup_GtkTreeRowReference: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkTreeRowReference, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkTreeRowReference"
typedef type_c2ats_GtkWidgetPath_autoptr = cPtr0(type_c2ats_GtkWidgetPath)
fun fun_c2ats_glib_autoptr_cleanup_GtkWidgetPath: {l1,l1_1:addr} (!ptr_v_2(type_c2ats_GtkWidgetPath, l1, l1_1) | ptr l1) -> void = "mac#glib_autoptr_cleanup_GtkWidgetPath"
%{#
#ifndef _STRUCT_C2ATS_ACCESSOR_H_
#define _STRUCT_C2ATS_ACCESSOR_H_
static inline char* take_struct_c2ats_tm___tm_zone(struct tm *p) { return (char*) p->__tm_zone; }
static inline gchar* take_struct_c2ats__GArray_data(struct _GArray *p) { return (gchar*) p->data; }
static inline guint8* take_struct_c2ats__GByteArray_data(struct _GByteArray *p) { return (guint8*) p->data; }
static inline gpointer* take_struct_c2ats__GPtrArray_pdata(struct _GPtrArray *p) { return (gpointer*) p->pdata; }
static inline gchar* take_struct_c2ats__GError_message(struct _GError *p) { return (gchar*) p->message; }
static inline gchar* take_struct_c2ats__GDebugKey_key(struct _GDebugKey *p) { return (gchar*) p->key; }
static inline GNode* take_struct_c2ats__GNode_next(struct _GNode *p) { return (GNode*) p->next; }
static inline GNode* take_struct_c2ats__GNode_prev(struct _GNode *p) { return (GNode*) p->prev; }
static inline GNode* take_struct_c2ats__GNode_parent(struct _GNode *p) { return (GNode*) p->parent; }
static inline GNode* take_struct_c2ats__GNode_children(struct _GNode *p) { return (GNode*) p->children; }
static inline GList* take_struct_c2ats__GList_next(struct _GList *p) { return (GList*) p->next; }
static inline GList* take_struct_c2ats__GList_prev(struct _GList *p) { return (GList*) p->prev; }
static inline GHook* take_struct_c2ats__GHookList_hooks(struct _GHookList *p) { return (GHook*) p->hooks; }
static inline GHook* take_struct_c2ats__GHook_next(struct _GHook *p) { return (GHook*) p->next; }
static inline GHook* take_struct_c2ats__GHook_prev(struct _GHook *p) { return (GHook*) p->prev; }
static inline GSList* take_struct_c2ats__GSList_next(struct _GSList *p) { return (GSList*) p->next; }
static inline GSourceCallbackFuncs* take_struct_c2ats__GSource_callback_funcs(struct _GSource *p) { return (GSourceCallbackFuncs*) p->callback_funcs; }
static inline GSourceFuncs* take_struct_c2ats__GSource_source_funcs(struct _GSource *p) { return (GSourceFuncs*) p->source_funcs; }
static inline GMainContext* take_struct_c2ats__GSource_context(struct _GSource *p) { return (GMainContext*) p->context; }
static inline GSList* take_struct_c2ats__GSource_poll_fds(struct _GSource *p) { return (GSList*) p->poll_fds; }
static inline GSource* take_struct_c2ats__GSource_prev(struct _GSource *p) { return (GSource*) p->prev; }
static inline GSource* take_struct_c2ats__GSource_next(struct _GSource *p) { return (GSource*) p->next; }
static inline char* take_struct_c2ats__GSource_name(struct _GSource *p) { return (char*) p->name; }
static inline GSourcePrivate* take_struct_c2ats__GSource_priv(struct _GSource *p) { return (GSourcePrivate*) p->priv; }
static inline gchar* take_struct_c2ats__GString_str(struct _GString *p) { return (gchar*) p->str; }
static inline GIOFuncs* take_struct_c2ats__GIOChannel_funcs(struct _GIOChannel *p) { return (GIOFuncs*) p->funcs; }
static inline gchar* take_struct_c2ats__GIOChannel_encoding(struct _GIOChannel *p) { return (gchar*) p->encoding; }
static inline gchar* take_struct_c2ats__GIOChannel_line_term(struct _GIOChannel *p) { return (gchar*) p->line_term; }
static inline GString* take_struct_c2ats__GIOChannel_read_buf(struct _GIOChannel *p) { return (GString*) p->read_buf; }
static inline GString* take_struct_c2ats__GIOChannel_encoded_read_buf(struct _GIOChannel *p) { return (GString*) p->encoded_read_buf; }
static inline GString* take_struct_c2ats__GIOChannel_write_buf(struct _GIOChannel *p) { return (GString*) p->write_buf; }
static inline gchar* take_struct_c2ats__GOptionEntry_long_name(struct _GOptionEntry *p) { return (gchar*) p->long_name; }
static inline gchar* take_struct_c2ats__GOptionEntry_description(struct _GOptionEntry *p) { return (gchar*) p->description; }
static inline gchar* take_struct_c2ats__GOptionEntry_arg_description(struct _GOptionEntry *p) { return (gchar*) p->arg_description; }
static inline GList* take_struct_c2ats__GQueue_head(struct _GQueue *p) { return (GList*) p->head; }
static inline GList* take_struct_c2ats__GQueue_tail(struct _GQueue *p) { return (GList*) p->tail; }
static inline gchar* take_union_c2ats__GTokenValue_v_identifier(union _GTokenValue *p) { return (gchar*) p->v_identifier; }
static inline gchar* take_union_c2ats__GTokenValue_v_string(union _GTokenValue *p) { return (gchar*) p->v_string; }
static inline gchar* take_union_c2ats__GTokenValue_v_comment(union _GTokenValue *p) { return (gchar*) p->v_comment; }
static inline gchar* take_struct_c2ats__GScannerConfig_cset_skip_characters(struct _GScannerConfig *p) { return (gchar*) p->cset_skip_characters; }
static inline gchar* take_struct_c2ats__GScannerConfig_cset_identifier_first(struct _GScannerConfig *p) { return (gchar*) p->cset_identifier_first; }
static inline gchar* take_struct_c2ats__GScannerConfig_cset_identifier_nth(struct _GScannerConfig *p) { return (gchar*) p->cset_identifier_nth; }
static inline gchar* take_struct_c2ats__GScannerConfig_cpair_comment_single(struct _GScannerConfig *p) { return (gchar*) p->cpair_comment_single; }
static inline gchar* take_struct_c2ats__GScanner_input_name(struct _GScanner *p) { return (gchar*) p->input_name; }
static inline GData* take_struct_c2ats__GScanner_qdata(struct _GScanner *p) { return (GData*) p->qdata; }
static inline GScannerConfig* take_struct_c2ats__GScanner_config(struct _GScanner *p) { return (GScannerConfig*) p->config; }
static inline GHashTable* take_struct_c2ats__GScanner_symbol_table(struct _GScanner *p) { return (GHashTable*) p->symbol_table; }
static inline gchar* take_struct_c2ats__GScanner_text(struct _GScanner *p) { return (gchar*) p->text; }
static inline gchar* take_struct_c2ats__GScanner_text_end(struct _GScanner *p) { return (gchar*) p->text_end; }
static inline gchar* take_struct_c2ats__GScanner_buffer(struct _GScanner *p) { return (gchar*) p->buffer; }
static inline GTrashStack* take_struct_c2ats__GTrashStack_next(struct _GTrashStack *p) { return (GTrashStack*) p->next; }
static inline GList* take_struct_c2ats__GCompletion_items(struct _GCompletion *p) { return (GList*) p->items; }
static inline gchar* take_struct_c2ats__GCompletion_prefix(struct _GCompletion *p) { return (gchar*) p->prefix; }
static inline GList* take_struct_c2ats__GCompletion_cache(struct _GCompletion *p) { return (GList*) p->cache; }
static inline GCond* take_struct_c2ats__GStaticRWLock_read_cond(struct _GStaticRWLock *p) { return (GCond*) p->read_cond; }
static inline GCond* take_struct_c2ats__GStaticRWLock_write_cond(struct _GStaticRWLock *p) { return (GCond*) p->write_cond; }
static inline struct __pthread_internal_list* take_struct_c2ats___pthread_internal_list___prev(struct __pthread_internal_list *p) { return (struct __pthread_internal_list*) p->__prev; }
static inline struct __pthread_internal_list* take_struct_c2ats___pthread_internal_list___next(struct __pthread_internal_list *p) { return (struct __pthread_internal_list*) p->__next; }
static inline struct _pthread_cleanup_buffer* take_struct_c2ats__pthread_cleanup_buffer___prev(struct _pthread_cleanup_buffer *p) { return (struct _pthread_cleanup_buffer*) p->__prev; }
static inline GTypeClass* take_struct_c2ats__GTypeInstance_g_class(struct _GTypeInstance *p) { return (GTypeClass*) p->g_class; }
static inline gchar* take_struct_c2ats__GTypeQuery_type_name(struct _GTypeQuery *p) { return (gchar*) p->type_name; }
static inline GTypeValueTable* take_struct_c2ats__GTypeInfo_value_table(struct _GTypeInfo *p) { return (GTypeValueTable*) p->value_table; }
static inline gchar* take_struct_c2ats__GTypeValueTable_collect_format(struct _GTypeValueTable *p) { return (gchar*) p->collect_format; }
static inline gchar* take_struct_c2ats__GTypeValueTable_lcopy_format(struct _GTypeValueTable *p) { return (gchar*) p->lcopy_format; }
static inline gchar* take_struct_c2ats__GParamSpec_name(struct _GParamSpec *p) { return (gchar*) p->name; }
static inline gchar* take_struct_c2ats__GParamSpec__nick(struct _GParamSpec *p) { return (gchar*) p->_nick; }
static inline gchar* take_struct_c2ats__GParamSpec__blurb(struct _GParamSpec *p) { return (gchar*) p->_blurb; }
static inline GData* take_struct_c2ats__GParamSpec_qdata(struct _GParamSpec *p) { return (GData*) p->qdata; }
static inline gchar* take_struct_c2ats__GParameter_name(struct _GParameter *p) { return (gchar*) p->name; }
static inline GClosureNotifyData* take_struct_c2ats__GClosure_notifiers(struct _GClosure *p) { return (GClosureNotifyData*) p->notifiers; }
static inline gchar* take_struct_c2ats__GSignalQuery_signal_name(struct _GSignalQuery *p) { return (gchar*) p->signal_name; }
static inline GType* take_struct_c2ats__GSignalQuery_param_types(struct _GSignalQuery *p) { return (GType*) p->param_types; }
static inline GData* take_struct_c2ats__GObject_qdata(struct _GObject *p) { return (GData*) p->qdata; }
static inline GSList* take_struct_c2ats__GObjectClass_construct_properties(struct _GObjectClass *p) { return (GSList*) p->construct_properties; }
static inline GParamSpec* take_struct_c2ats__GObjectConstructParam_pspec(struct _GObjectConstructParam *p) { return (GParamSpec*) p->pspec; }
static inline GValue* take_struct_c2ats__GObjectConstructParam_value(struct _GObjectConstructParam *p) { return (GValue*) p->value; }
static inline GEnumValue* take_struct_c2ats__GEnumClass_values(struct _GEnumClass *p) { return (GEnumValue*) p->values; }
static inline GFlagsValue* take_struct_c2ats__GFlagsClass_values(struct _GFlagsClass *p) { return (GFlagsValue*) p->values; }
static inline gchar* take_struct_c2ats__GEnumValue_value_name(struct _GEnumValue *p) { return (gchar*) p->value_name; }
static inline gchar* take_struct_c2ats__GEnumValue_value_nick(struct _GEnumValue *p) { return (gchar*) p->value_nick; }
static inline gchar* take_struct_c2ats__GFlagsValue_value_name(struct _GFlagsValue *p) { return (gchar*) p->value_name; }
static inline gchar* take_struct_c2ats__GFlagsValue_value_nick(struct _GFlagsValue *p) { return (gchar*) p->value_nick; }
static inline GEnumClass* take_struct_c2ats__GParamSpecEnum_enum_class(struct _GParamSpecEnum *p) { return (GEnumClass*) p->enum_class; }
static inline GFlagsClass* take_struct_c2ats__GParamSpecFlags_flags_class(struct _GParamSpecFlags *p) { return (GFlagsClass*) p->flags_class; }
static inline gchar* take_struct_c2ats__GParamSpecString_default_value(struct _GParamSpecString *p) { return (gchar*) p->default_value; }
static inline gchar* take_struct_c2ats__GParamSpecString_cset_first(struct _GParamSpecString *p) { return (gchar*) p->cset_first; }
static inline gchar* take_struct_c2ats__GParamSpecString_cset_nth(struct _GParamSpecString *p) { return (gchar*) p->cset_nth; }
static inline GParamSpec* take_struct_c2ats__GParamSpecValueArray_element_spec(struct _GParamSpecValueArray *p) { return (GParamSpec*) p->element_spec; }
static inline GParamSpec* take_struct_c2ats__GParamSpecOverride_overridden(struct _GParamSpecOverride *p) { return (GParamSpec*) p->overridden; }
static inline GVariantType* take_struct_c2ats__GParamSpecVariant_type(struct _GParamSpecVariant *p) { return (GVariantType*) p->type; }
static inline GVariant* take_struct_c2ats__GParamSpecVariant_default_value(struct _GParamSpecVariant *p) { return (GVariant*) p->default_value; }
static inline GSList* take_struct_c2ats__GTypeModule_type_infos(struct _GTypeModule *p) { return (GSList*) p->type_infos; }
static inline GSList* take_struct_c2ats__GTypeModule_interface_infos(struct _GTypeModule *p) { return (GSList*) p->interface_infos; }
static inline gchar* take_struct_c2ats__GTypeModule_name(struct _GTypeModule *p) { return (gchar*) p->name; }
static inline GValue* take_struct_c2ats__GValueArray_values(struct _GValueArray *p) { return (GValue*) p->values; }
static inline gchar* take_struct_c2ats__GActionEntry_name(struct _GActionEntry *p) { return (gchar*) p->name; }
static inline gchar* take_struct_c2ats__GActionEntry_parameter_type(struct _GActionEntry *p) { return (gchar*) p->parameter_type; }
static inline gchar* take_struct_c2ats__GActionEntry_state(struct _GActionEntry *p) { return (gchar*) p->state; }
static inline GAppLaunchContextPrivate* take_struct_c2ats__GAppLaunchContext_priv(struct _GAppLaunchContext *p) { return (GAppLaunchContextPrivate*) p->priv; }
static inline GApplicationPrivate* take_struct_c2ats__GApplication_priv(struct _GApplication *p) { return (GApplicationPrivate*) p->priv; }
static inline GApplicationCommandLinePrivate* take_struct_c2ats__GApplicationCommandLine_priv(struct _GApplicationCommandLine *p) { return (GApplicationCommandLinePrivate*) p->priv; }
static inline GInputStreamPrivate* take_struct_c2ats__GInputStream_priv(struct _GInputStream *p) { return (GInputStreamPrivate*) p->priv; }
static inline GInputStream* take_struct_c2ats__GFilterInputStream_base_stream(struct _GFilterInputStream *p) { return (GInputStream*) p->base_stream; }
static inline GBufferedInputStreamPrivate* take_struct_c2ats__GBufferedInputStream_priv(struct _GBufferedInputStream *p) { return (GBufferedInputStreamPrivate*) p->priv; }
static inline GOutputStreamPrivate* take_struct_c2ats__GOutputStream_priv(struct _GOutputStream *p) { return (GOutputStreamPrivate*) p->priv; }
static inline GOutputStream* take_struct_c2ats__GFilterOutputStream_base_stream(struct _GFilterOutputStream *p) { return (GOutputStream*) p->base_stream; }
static inline GBufferedOutputStreamPrivate* take_struct_c2ats__GBufferedOutputStream_priv(struct _GBufferedOutputStream *p) { return (GBufferedOutputStreamPrivate*) p->priv; }
static inline GCancellablePrivate* take_struct_c2ats__GCancellable_priv(struct _GCancellable *p) { return (GCancellablePrivate*) p->priv; }
static inline GConverterInputStreamPrivate* take_struct_c2ats__GConverterInputStream_priv(struct _GConverterInputStream *p) { return (GConverterInputStreamPrivate*) p->priv; }
static inline GConverterOutputStreamPrivate* take_struct_c2ats__GConverterOutputStream_priv(struct _GConverterOutputStream *p) { return (GConverterOutputStreamPrivate*) p->priv; }
static inline GDataInputStreamPrivate* take_struct_c2ats__GDataInputStream_priv(struct _GDataInputStream *p) { return (GDataInputStreamPrivate*) p->priv; }
static inline GDataOutputStreamPrivate* take_struct_c2ats__GDataOutputStream_priv(struct _GDataOutputStream *p) { return (GDataOutputStreamPrivate*) p->priv; }
static inline gchar* take_struct_c2ats__GDBusErrorEntry_dbus_error_name(struct _GDBusErrorEntry *p) { return (gchar*) p->dbus_error_name; }
static inline gchar* take_struct_c2ats__GDBusAnnotationInfo_key(struct _GDBusAnnotationInfo *p) { return (gchar*) p->key; }
static inline gchar* take_struct_c2ats__GDBusAnnotationInfo_value(struct _GDBusAnnotationInfo *p) { return (gchar*) p->value; }
static inline GDBusAnnotationInfo** take_struct_c2ats__GDBusAnnotationInfo_annotations(struct _GDBusAnnotationInfo *p) { return (GDBusAnnotationInfo**) p->annotations; }
static inline gchar* take_struct_c2ats__GDBusArgInfo_name(struct _GDBusArgInfo *p) { return (gchar*) p->name; }
static inline gchar* take_struct_c2ats__GDBusArgInfo_signature(struct _GDBusArgInfo *p) { return (gchar*) p->signature; }
static inline GDBusAnnotationInfo** take_struct_c2ats__GDBusArgInfo_annotations(struct _GDBusArgInfo *p) { return (GDBusAnnotationInfo**) p->annotations; }
static inline gchar* take_struct_c2ats__GDBusMethodInfo_name(struct _GDBusMethodInfo *p) { return (gchar*) p->name; }
static inline GDBusArgInfo** take_struct_c2ats__GDBusMethodInfo_in_args(struct _GDBusMethodInfo *p) { return (GDBusArgInfo**) p->in_args; }
static inline GDBusArgInfo** take_struct_c2ats__GDBusMethodInfo_out_args(struct _GDBusMethodInfo *p) { return (GDBusArgInfo**) p->out_args; }
static inline GDBusAnnotationInfo** take_struct_c2ats__GDBusMethodInfo_annotations(struct _GDBusMethodInfo *p) { return (GDBusAnnotationInfo**) p->annotations; }
static inline gchar* take_struct_c2ats__GDBusSignalInfo_name(struct _GDBusSignalInfo *p) { return (gchar*) p->name; }
static inline GDBusArgInfo** take_struct_c2ats__GDBusSignalInfo_args(struct _GDBusSignalInfo *p) { return (GDBusArgInfo**) p->args; }
static inline GDBusAnnotationInfo** take_struct_c2ats__GDBusSignalInfo_annotations(struct _GDBusSignalInfo *p) { return (GDBusAnnotationInfo**) p->annotations; }
static inline gchar* take_struct_c2ats__GDBusPropertyInfo_name(struct _GDBusPropertyInfo *p) { return (gchar*) p->name; }
static inline gchar* take_struct_c2ats__GDBusPropertyInfo_signature(struct _GDBusPropertyInfo *p) { return (gchar*) p->signature; }
static inline GDBusAnnotationInfo** take_struct_c2ats__GDBusPropertyInfo_annotations(struct _GDBusPropertyInfo *p) { return (GDBusAnnotationInfo**) p->annotations; }
static inline gchar* take_struct_c2ats__GDBusInterfaceInfo_name(struct _GDBusInterfaceInfo *p) { return (gchar*) p->name; }
static inline GDBusMethodInfo** take_struct_c2ats__GDBusInterfaceInfo_methods(struct _GDBusInterfaceInfo *p) { return (GDBusMethodInfo**) p->methods; }
static inline GDBusSignalInfo** take_struct_c2ats__GDBusInterfaceInfo_signals(struct _GDBusInterfaceInfo *p) { return (GDBusSignalInfo**) p->signals; }
static inline GDBusPropertyInfo** take_struct_c2ats__GDBusInterfaceInfo_properties(struct _GDBusInterfaceInfo *p) { return (GDBusPropertyInfo**) p->properties; }
static inline GDBusAnnotationInfo** take_struct_c2ats__GDBusInterfaceInfo_annotations(struct _GDBusInterfaceInfo *p) { return (GDBusAnnotationInfo**) p->annotations; }
static inline gchar* take_struct_c2ats__GDBusNodeInfo_path(struct _GDBusNodeInfo *p) { return (gchar*) p->path; }
static inline GDBusInterfaceInfo** take_struct_c2ats__GDBusNodeInfo_interfaces(struct _GDBusNodeInfo *p) { return (GDBusInterfaceInfo**) p->interfaces; }
static inline GDBusNodeInfo** take_struct_c2ats__GDBusNodeInfo_nodes(struct _GDBusNodeInfo *p) { return (GDBusNodeInfo**) p->nodes; }
static inline GDBusAnnotationInfo** take_struct_c2ats__GDBusNodeInfo_annotations(struct _GDBusNodeInfo *p) { return (GDBusAnnotationInfo**) p->annotations; }
static inline GDBusProxyPrivate* take_struct_c2ats__GDBusProxy_priv(struct _GDBusProxy *p) { return (GDBusProxyPrivate*) p->priv; }
static inline GEmblemedIconPrivate* take_struct_c2ats__GEmblemedIcon_priv(struct _GEmblemedIcon *p) { return (GEmblemedIconPrivate*) p->priv; }
static inline char* take_struct_c2ats__GFileAttributeInfo_name(struct _GFileAttributeInfo *p) { return (char*) p->name; }
static inline GFileAttributeInfo* take_struct_c2ats__GFileAttributeInfoList_infos(struct _GFileAttributeInfoList *p) { return (GFileAttributeInfo*) p->infos; }
static inline GFileEnumeratorPrivate* take_struct_c2ats__GFileEnumerator_priv(struct _GFileEnumerator *p) { return (GFileEnumeratorPrivate*) p->priv; }
static inline GFileInputStreamPrivate* take_struct_c2ats__GFileInputStream_priv(struct _GFileInputStream *p) { return (GFileInputStreamPrivate*) p->priv; }
static inline GIOStreamPrivate* take_struct_c2ats__GIOStream_priv(struct _GIOStream *p) { return (GIOStreamPrivate*) p->priv; }
static inline GFileIOStreamPrivate* take_struct_c2ats__GFileIOStream_priv(struct _GFileIOStream *p) { return (GFileIOStreamPrivate*) p->priv; }
static inline GFileMonitorPrivate* take_struct_c2ats__GFileMonitor_priv(struct _GFileMonitor *p) { return (GFileMonitorPrivate*) p->priv; }
static inline GFileOutputStreamPrivate* take_struct_c2ats__GFileOutputStream_priv(struct _GFileOutputStream *p) { return (GFileOutputStreamPrivate*) p->priv; }
static inline GInetAddressPrivate* take_struct_c2ats__GInetAddress_priv(struct _GInetAddress *p) { return (GInetAddressPrivate*) p->priv; }
static inline GInetAddressMaskPrivate* take_struct_c2ats__GInetAddressMask_priv(struct _GInetAddressMask *p) { return (GInetAddressMaskPrivate*) p->priv; }
static inline GInetSocketAddressPrivate* take_struct_c2ats__GInetSocketAddress_priv(struct _GInetSocketAddress *p) { return (GInetSocketAddressPrivate*) p->priv; }
static inline GMemoryInputStreamPrivate* take_struct_c2ats__GMemoryInputStream_priv(struct _GMemoryInputStream *p) { return (GMemoryInputStreamPrivate*) p->priv; }
static inline GMemoryOutputStreamPrivate* take_struct_c2ats__GMemoryOutputStream_priv(struct _GMemoryOutputStream *p) { return (GMemoryOutputStreamPrivate*) p->priv; }
static inline GMountOperationPrivate* take_struct_c2ats__GMountOperation_priv(struct _GMountOperation *p) { return (GMountOperationPrivate*) p->priv; }
static inline GNetworkAddressPrivate* take_struct_c2ats__GNetworkAddress_priv(struct _GNetworkAddress *p) { return (GNetworkAddressPrivate*) p->priv; }
static inline GNetworkServicePrivate* take_struct_c2ats__GNetworkService_priv(struct _GNetworkService *p) { return (GNetworkServicePrivate*) p->priv; }
static inline GPermissionPrivate* take_struct_c2ats__GPermission_priv(struct _GPermission *p) { return (GPermissionPrivate*) p->priv; }
static inline GProxyAddressPrivate* take_struct_c2ats__GProxyAddress_priv(struct _GProxyAddress *p) { return (GProxyAddressPrivate*) p->priv; }
static inline GProxyAddressEnumeratorPrivate* take_struct_c2ats__GProxyAddressEnumerator_priv(struct _GProxyAddressEnumerator *p) { return (GProxyAddressEnumeratorPrivate*) p->priv; }
static inline GResolverPrivate* take_struct_c2ats__GResolver_priv(struct _GResolver *p) { return (GResolverPrivate*) p->priv; }
static inline guint8* take_struct_c2ats__GStaticResource_data(struct _GStaticResource *p) { return (guint8*) p->data; }
static inline GResource* take_struct_c2ats__GStaticResource_resource(struct _GStaticResource *p) { return (GResource*) p->resource; }
static inline GStaticResource* take_struct_c2ats__GStaticResource_next(struct _GStaticResource *p) { return (GStaticResource*) p->next; }
static inline GSettingsPrivate* take_struct_c2ats__GSettings_priv(struct _GSettings *p) { return (GSettingsPrivate*) p->priv; }
static inline GSimpleActionGroupPrivate* take_struct_c2ats__GSimpleActionGroup_priv(struct _GSimpleActionGroup *p) { return (GSimpleActionGroupPrivate*) p->priv; }
static inline GSocketClientPrivate* take_struct_c2ats__GSocketClient_priv(struct _GSocketClient *p) { return (GSocketClientPrivate*) p->priv; }
static inline GSocketPrivate* take_struct_c2ats__GSocket_priv(struct _GSocket *p) { return (GSocketPrivate*) p->priv; }
static inline GSocketConnectionPrivate* take_struct_c2ats__GSocketConnection_priv(struct _GSocketConnection *p) { return (GSocketConnectionPrivate*) p->priv; }
static inline GSocketControlMessagePrivate* take_struct_c2ats__GSocketControlMessage_priv(struct _GSocketControlMessage *p) { return (GSocketControlMessagePrivate*) p->priv; }
static inline GSocketListenerPrivate* take_struct_c2ats__GSocketListener_priv(struct _GSocketListener *p) { return (GSocketListenerPrivate*) p->priv; }
static inline GSocketServicePrivate* take_struct_c2ats__GSocketService_priv(struct _GSocketService *p) { return (GSocketServicePrivate*) p->priv; }
static inline GSimpleProxyResolverPrivate* take_struct_c2ats__GSimpleProxyResolver_priv(struct _GSimpleProxyResolver *p) { return (GSimpleProxyResolverPrivate*) p->priv; }
static inline GTcpConnectionPrivate* take_struct_c2ats__GTcpConnection_priv(struct _GTcpConnection *p) { return (GTcpConnectionPrivate*) p->priv; }
static inline GTcpWrapperConnectionPrivate* take_struct_c2ats__GTcpWrapperConnection_priv(struct _GTcpWrapperConnection *p) { return (GTcpWrapperConnectionPrivate*) p->priv; }
static inline GThreadedSocketServicePrivate* take_struct_c2ats__GThreadedSocketService_priv(struct _GThreadedSocketService *p) { return (GThreadedSocketServicePrivate*) p->priv; }
static inline GTlsCertificatePrivate* take_struct_c2ats__GTlsCertificate_priv(struct _GTlsCertificate *p) { return (GTlsCertificatePrivate*) p->priv; }
static inline GTlsConnectionPrivate* take_struct_c2ats__GTlsConnection_priv(struct _GTlsConnection *p) { return (GTlsConnectionPrivate*) p->priv; }
static inline GTlsDatabasePrivate* take_struct_c2ats__GTlsDatabase_priv(struct _GTlsDatabase *p) { return (GTlsDatabasePrivate*) p->priv; }
static inline GTlsInteractionPrivate* take_struct_c2ats__GTlsInteraction_priv(struct _GTlsInteraction *p) { return (GTlsInteractionPrivate*) p->priv; }
static inline GTlsPasswordPrivate* take_struct_c2ats__GTlsPassword_priv(struct _GTlsPassword *p) { return (GTlsPasswordPrivate*) p->priv; }
static inline GDBusInterfaceSkeletonPrivate* take_struct_c2ats__GDBusInterfaceSkeleton_priv(struct _GDBusInterfaceSkeleton *p) { return (GDBusInterfaceSkeletonPrivate*) p->priv; }
static inline GDBusObjectSkeletonPrivate* take_struct_c2ats__GDBusObjectSkeleton_priv(struct _GDBusObjectSkeleton *p) { return (GDBusObjectSkeletonPrivate*) p->priv; }
static inline GDBusObjectProxyPrivate* take_struct_c2ats__GDBusObjectProxy_priv(struct _GDBusObjectProxy *p) { return (GDBusObjectProxyPrivate*) p->priv; }
static inline GDBusObjectManagerClientPrivate* take_struct_c2ats__GDBusObjectManagerClient_priv(struct _GDBusObjectManagerClient *p) { return (GDBusObjectManagerClientPrivate*) p->priv; }
static inline GDBusObjectManagerServerPrivate* take_struct_c2ats__GDBusObjectManagerServer_priv(struct _GDBusObjectManagerServer *p) { return (GDBusObjectManagerServerPrivate*) p->priv; }
static inline GMenuModelPrivate* take_struct_c2ats__GMenuModel_priv(struct _GMenuModel *p) { return (GMenuModelPrivate*) p->priv; }
static inline GMenuAttributeIterPrivate* take_struct_c2ats__GMenuAttributeIter_priv(struct _GMenuAttributeIter *p) { return (GMenuAttributeIterPrivate*) p->priv; }
static inline GMenuLinkIterPrivate* take_struct_c2ats__GMenuLinkIter_priv(struct _GMenuLinkIter *p) { return (GMenuLinkIterPrivate*) p->priv; }
static inline PangoAttrClass* take_struct_c2ats__PangoAttribute_klass(struct _PangoAttribute *p) { return (PangoAttrClass*) p->klass; }
static inline char* take_struct_c2ats__PangoAttrString_value(struct _PangoAttrString *p) { return (char*) p->value; }
static inline PangoLanguage* take_struct_c2ats__PangoAttrLanguage_value(struct _PangoAttrLanguage *p) { return (PangoLanguage*) p->value; }
static inline PangoFontDescription* take_struct_c2ats__PangoAttrFontDesc_desc(struct _PangoAttrFontDesc *p) { return (PangoFontDescription*) p->desc; }
static inline PangoEngineShape* take_struct_c2ats__PangoAnalysis_shape_engine(struct _PangoAnalysis *p) { return (PangoEngineShape*) p->shape_engine; }
static inline PangoEngineLang* take_struct_c2ats__PangoAnalysis_lang_engine(struct _PangoAnalysis *p) { return (PangoEngineLang*) p->lang_engine; }
static inline PangoFont* take_struct_c2ats__PangoAnalysis_font(struct _PangoAnalysis *p) { return (PangoFont*) p->font; }
static inline PangoLanguage* take_struct_c2ats__PangoAnalysis_language(struct _PangoAnalysis *p) { return (PangoLanguage*) p->language; }
static inline GSList* take_struct_c2ats__PangoAnalysis_extra_attrs(struct _PangoAnalysis *p) { return (GSList*) p->extra_attrs; }
static inline PangoGlyphInfo* take_struct_c2ats__PangoGlyphString_glyphs(struct _PangoGlyphString *p) { return (PangoGlyphInfo*) p->glyphs; }
static inline gint* take_struct_c2ats__PangoGlyphString_log_clusters(struct _PangoGlyphString *p) { return (gint*) p->log_clusters; }
static inline PangoItem* take_struct_c2ats__PangoGlyphItem_item(struct _PangoGlyphItem *p) { return (PangoItem*) p->item; }
static inline PangoGlyphString* take_struct_c2ats__PangoGlyphItem_glyphs(struct _PangoGlyphItem *p) { return (PangoGlyphString*) p->glyphs; }
static inline PangoGlyphItem* take_struct_c2ats__PangoGlyphItemIter_glyph_item(struct _PangoGlyphItemIter *p) { return (PangoGlyphItem*) p->glyph_item; }
static inline gchar* take_struct_c2ats__PangoGlyphItemIter_text(struct _PangoGlyphItemIter *p) { return (gchar*) p->text; }
static inline PangoLayout* take_struct_c2ats__PangoLayoutLine_layout(struct _PangoLayoutLine *p) { return (PangoLayout*) p->layout; }
static inline GSList* take_struct_c2ats__PangoLayoutLine_runs(struct _PangoLayoutLine *p) { return (GSList*) p->runs; }
static inline PangoMatrix* take_struct_c2ats__PangoRenderer_matrix(struct _PangoRenderer *p) { return (PangoMatrix*) p->matrix; }
static inline PangoRendererPrivate* take_struct_c2ats__PangoRenderer_priv(struct _PangoRenderer *p) { return (PangoRendererPrivate*) p->priv; }
static inline struct _IO_marker* take_struct_c2ats__IO_marker__next(struct _IO_marker *p) { return (struct _IO_marker*) p->_next; }
static inline struct _IO_FILE* take_struct_c2ats__IO_marker__sbuf(struct _IO_marker *p) { return (struct _IO_FILE*) p->_sbuf; }
static inline char* take_struct_c2ats__IO_FILE__IO_read_ptr(struct _IO_FILE *p) { return (char*) p->_IO_read_ptr; }
static inline char* take_struct_c2ats__IO_FILE__IO_read_end(struct _IO_FILE *p) { return (char*) p->_IO_read_end; }
static inline char* take_struct_c2ats__IO_FILE__IO_read_base(struct _IO_FILE *p) { return (char*) p->_IO_read_base; }
static inline char* take_struct_c2ats__IO_FILE__IO_write_base(struct _IO_FILE *p) { return (char*) p->_IO_write_base; }
static inline char* take_struct_c2ats__IO_FILE__IO_write_ptr(struct _IO_FILE *p) { return (char*) p->_IO_write_ptr; }
static inline char* take_struct_c2ats__IO_FILE__IO_write_end(struct _IO_FILE *p) { return (char*) p->_IO_write_end; }
static inline char* take_struct_c2ats__IO_FILE__IO_buf_base(struct _IO_FILE *p) { return (char*) p->_IO_buf_base; }
static inline char* take_struct_c2ats__IO_FILE__IO_buf_end(struct _IO_FILE *p) { return (char*) p->_IO_buf_end; }
static inline char* take_struct_c2ats__IO_FILE__IO_save_base(struct _IO_FILE *p) { return (char*) p->_IO_save_base; }
static inline char* take_struct_c2ats__IO_FILE__IO_backup_base(struct _IO_FILE *p) { return (char*) p->_IO_backup_base; }
static inline char* take_struct_c2ats__IO_FILE__IO_save_end(struct _IO_FILE *p) { return (char*) p->_IO_save_end; }
static inline struct _IO_marker* take_struct_c2ats__IO_FILE__markers(struct _IO_FILE *p) { return (struct _IO_marker*) p->_markers; }
static inline struct _IO_FILE* take_struct_c2ats__IO_FILE__chain(struct _IO_FILE *p) { return (struct _IO_FILE*) p->_chain; }
static inline _IO_lock_t* take_struct_c2ats__IO_FILE__lock(struct _IO_FILE *p) { return (_IO_lock_t*) p->_lock; }
static inline cairo_rectangle_t* take_struct_c2ats__cairo_rectangle_list_rectangles(struct _cairo_rectangle_list *p) { return (cairo_rectangle_t*) p->rectangles; }
static inline cairo_path_data_t* take_struct_c2ats_cairo_path_data(struct cairo_path *p) { return (cairo_path_data_t*) p->data; }
static inline GdkWindow* take_struct_c2ats__GdkEventAny_window(struct _GdkEventAny *p) { return (GdkWindow*) p->window; }
static inline GdkWindow* take_struct_c2ats__GdkEventExpose_window(struct _GdkEventExpose *p) { return (GdkWindow*) p->window; }
static inline cairo_region_t* take_struct_c2ats__GdkEventExpose_region(struct _GdkEventExpose *p) { return (cairo_region_t*) p->region; }
static inline GdkWindow* take_struct_c2ats__GdkEventVisibility_window(struct _GdkEventVisibility *p) { return (GdkWindow*) p->window; }
static inline GdkWindow* take_struct_c2ats__GdkEventMotion_window(struct _GdkEventMotion *p) { return (GdkWindow*) p->window; }
static inline gdouble* take_struct_c2ats__GdkEventMotion_axes(struct _GdkEventMotion *p) { return (gdouble*) p->axes; }
static inline GdkDevice* take_struct_c2ats__GdkEventMotion_device(struct _GdkEventMotion *p) { return (GdkDevice*) p->device; }
static inline GdkWindow* take_struct_c2ats__GdkEventButton_window(struct _GdkEventButton *p) { return (GdkWindow*) p->window; }
static inline gdouble* take_struct_c2ats__GdkEventButton_axes(struct _GdkEventButton *p) { return (gdouble*) p->axes; }
static inline GdkDevice* take_struct_c2ats__GdkEventButton_device(struct _GdkEventButton *p) { return (GdkDevice*) p->device; }
static inline GdkWindow* take_struct_c2ats__GdkEventTouch_window(struct _GdkEventTouch *p) { return (GdkWindow*) p->window; }
static inline gdouble* take_struct_c2ats__GdkEventTouch_axes(struct _GdkEventTouch *p) { return (gdouble*) p->axes; }
static inline GdkEventSequence* take_struct_c2ats__GdkEventTouch_sequence(struct _GdkEventTouch *p) { return (GdkEventSequence*) p->sequence; }
static inline GdkDevice* take_struct_c2ats__GdkEventTouch_device(struct _GdkEventTouch *p) { return (GdkDevice*) p->device; }
static inline GdkWindow* take_struct_c2ats__GdkEventScroll_window(struct _GdkEventScroll *p) { return (GdkWindow*) p->window; }
static inline GdkDevice* take_struct_c2ats__GdkEventScroll_device(struct _GdkEventScroll *p) { return (GdkDevice*) p->device; }
static inline GdkWindow* take_struct_c2ats__GdkEventKey_window(struct _GdkEventKey *p) { return (GdkWindow*) p->window; }
static inline gchar* take_struct_c2ats__GdkEventKey_string(struct _GdkEventKey *p) { return (gchar*) p->string; }
static inline GdkWindow* take_struct_c2ats__GdkEventCrossing_window(struct _GdkEventCrossing *p) { return (GdkWindow*) p->window; }
static inline GdkWindow* take_struct_c2ats__GdkEventCrossing_subwindow(struct _GdkEventCrossing *p) { return (GdkWindow*) p->subwindow; }
static inline GdkWindow* take_struct_c2ats__GdkEventFocus_window(struct _GdkEventFocus *p) { return (GdkWindow*) p->window; }
static inline GdkWindow* take_struct_c2ats__GdkEventConfigure_window(struct _GdkEventConfigure *p) { return (GdkWindow*) p->window; }
static inline GdkWindow* take_struct_c2ats__GdkEventProperty_window(struct _GdkEventProperty *p) { return (GdkWindow*) p->window; }
static inline GdkWindow* take_struct_c2ats__GdkEventSelection_window(struct _GdkEventSelection *p) { return (GdkWindow*) p->window; }
static inline GdkWindow* take_struct_c2ats__GdkEventSelection_requestor(struct _GdkEventSelection *p) { return (GdkWindow*) p->requestor; }
static inline GdkWindow* take_struct_c2ats__GdkEventOwnerChange_window(struct _GdkEventOwnerChange *p) { return (GdkWindow*) p->window; }
static inline GdkWindow* take_struct_c2ats__GdkEventOwnerChange_owner(struct _GdkEventOwnerChange *p) { return (GdkWindow*) p->owner; }
static inline GdkWindow* take_struct_c2ats__GdkEventProximity_window(struct _GdkEventProximity *p) { return (GdkWindow*) p->window; }
static inline GdkDevice* take_struct_c2ats__GdkEventProximity_device(struct _GdkEventProximity *p) { return (GdkDevice*) p->device; }
static inline GdkWindow* take_struct_c2ats__GdkEventSetting_window(struct _GdkEventSetting *p) { return (GdkWindow*) p->window; }
static inline char* take_struct_c2ats__GdkEventSetting_name(struct _GdkEventSetting *p) { return (char*) p->name; }
static inline GdkWindow* take_struct_c2ats__GdkEventWindowState_window(struct _GdkEventWindowState *p) { return (GdkWindow*) p->window; }
static inline GdkWindow* take_struct_c2ats__GdkEventGrabBroken_window(struct _GdkEventGrabBroken *p) { return (GdkWindow*) p->window; }
static inline GdkWindow* take_struct_c2ats__GdkEventGrabBroken_grab_window(struct _GdkEventGrabBroken *p) { return (GdkWindow*) p->grab_window; }
static inline GdkWindow* take_struct_c2ats__GdkEventDND_window(struct _GdkEventDND *p) { return (GdkWindow*) p->window; }
static inline GdkDragContext* take_struct_c2ats__GdkEventDND_context(struct _GdkEventDND *p) { return (GdkDragContext*) p->context; }
static inline gchar* take_struct_c2ats__GdkWindowAttr_title(struct _GdkWindowAttr *p) { return (gchar*) p->title; }
static inline GdkVisual* take_struct_c2ats__GdkWindowAttr_visual(struct _GdkWindowAttr *p) { return (GdkVisual*) p->visual; }
static inline GdkCursor* take_struct_c2ats__GdkWindowAttr_cursor(struct _GdkWindowAttr *p) { return (GdkCursor*) p->cursor; }
static inline gchar* take_struct_c2ats__GdkWindowAttr_wmclass_name(struct _GdkWindowAttr *p) { return (gchar*) p->wmclass_name; }
static inline gchar* take_struct_c2ats__GdkWindowAttr_wmclass_class(struct _GdkWindowAttr *p) { return (gchar*) p->wmclass_class; }
static inline GtkAccelGroupPrivate* take_struct_c2ats__GtkAccelGroup_priv(struct _GtkAccelGroup *p) { return (GtkAccelGroupPrivate*) p->priv; }
static inline GClosure* take_struct_c2ats__GtkAccelGroupEntry_closure(struct _GtkAccelGroupEntry *p) { return (GClosure*) p->closure; }
static inline gchar* take_struct_c2ats__AtkAttribute_name(struct _AtkAttribute *p) { return (gchar*) p->name; }
static inline gchar* take_struct_c2ats__AtkAttribute_value(struct _AtkAttribute *p) { return (gchar*) p->value; }
static inline gchar* take_struct_c2ats__AtkPropertyValues_property_name(struct _AtkPropertyValues *p) { return (gchar*) p->property_name; }
static inline gchar* take_struct_c2ats__AtkObject_description(struct _AtkObject *p) { return (gchar*) p->description; }
static inline gchar* take_struct_c2ats__AtkObject_name(struct _AtkObject *p) { return (gchar*) p->name; }
static inline AtkObject* take_struct_c2ats__AtkObject_accessible_parent(struct _AtkObject *p) { return (AtkObject*) p->accessible_parent; }
static inline AtkRelationSet* take_struct_c2ats__AtkObject_relation_set(struct _AtkObject *p) { return (AtkRelationSet*) p->relation_set; }
static inline gchar* take_struct_c2ats__AtkKeyEventStruct_string(struct _AtkKeyEventStruct *p) { return (gchar*) p->string; }
static inline gchar* take_struct_c2ats__AtkTextRange_content(struct _AtkTextRange *p) { return (gchar*) p->content; }
static inline GHashTable* take_struct_c2ats__AtkRegistry_factory_type_registry(struct _AtkRegistry *p) { return (GHashTable*) p->factory_type_registry; }
static inline GHashTable* take_struct_c2ats__AtkRegistry_factory_singleton_cache(struct _AtkRegistry *p) { return (GHashTable*) p->factory_singleton_cache; }
static inline GPtrArray* take_struct_c2ats__AtkRelation_target(struct _AtkRelation *p) { return (GPtrArray*) p->target; }
static inline GPtrArray* take_struct_c2ats__AtkRelationSet_relations(struct _AtkRelationSet *p) { return (GPtrArray*) p->relations; }
static inline gchar* take_struct_c2ats__AtkSocket_embedded_plug_id(struct _AtkSocket *p) { return (gchar*) p->embedded_plug_id; }
static inline GtkWidgetPrivate* take_struct_c2ats__GtkWidget_priv(struct _GtkWidget *p) { return (GtkWidgetPrivate*) p->priv; }
static inline GtkWidgetClassPrivate* take_struct_c2ats__GtkWidgetClass_priv(struct _GtkWidgetClass *p) { return (GtkWidgetClassPrivate*) p->priv; }
static inline GtkApplicationPrivate* take_struct_c2ats__GtkApplication_priv(struct _GtkApplication *p) { return (GtkApplicationPrivate*) p->priv; }
static inline GtkContainerPrivate* take_struct_c2ats__GtkContainer_priv(struct _GtkContainer *p) { return (GtkContainerPrivate*) p->priv; }
static inline GtkBinPrivate* take_struct_c2ats__GtkBin_priv(struct _GtkBin *p) { return (GtkBinPrivate*) p->priv; }
static inline GtkWindowPrivate* take_struct_c2ats__GtkWindow_priv(struct _GtkWindow *p) { return (GtkWindowPrivate*) p->priv; }
static inline GtkDialogPrivate* take_struct_c2ats__GtkDialog_priv(struct _GtkDialog *p) { return (GtkDialogPrivate*) p->priv; }
static inline GtkAboutDialogPrivate* take_struct_c2ats__GtkAboutDialog_priv(struct _GtkAboutDialog *p) { return (GtkAboutDialogPrivate*) p->priv; }
static inline GtkMiscPrivate* take_struct_c2ats__GtkMisc_priv(struct _GtkMisc *p) { return (GtkMiscPrivate*) p->priv; }
static inline GtkMenuShellPrivate* take_struct_c2ats__GtkMenuShell_priv(struct _GtkMenuShell *p) { return (GtkMenuShellPrivate*) p->priv; }
static inline GtkMenuPrivate* take_struct_c2ats__GtkMenu_priv(struct _GtkMenu *p) { return (GtkMenuPrivate*) p->priv; }
static inline GtkLabelPrivate* take_struct_c2ats__GtkLabel_priv(struct _GtkLabel *p) { return (GtkLabelPrivate*) p->priv; }
static inline GtkAccelLabelPrivate* take_struct_c2ats__GtkAccelLabel_priv(struct _GtkAccelLabel *p) { return (GtkAccelLabelPrivate*) p->priv; }
static inline gchar* take_struct_c2ats__GtkAccelLabelClass_signal_quote1(struct _GtkAccelLabelClass *p) { return (gchar*) p->signal_quote1; }
static inline gchar* take_struct_c2ats__GtkAccelLabelClass_signal_quote2(struct _GtkAccelLabelClass *p) { return (gchar*) p->signal_quote2; }
static inline gchar* take_struct_c2ats__GtkAccelLabelClass_mod_name_shift(struct _GtkAccelLabelClass *p) { return (gchar*) p->mod_name_shift; }
static inline gchar* take_struct_c2ats__GtkAccelLabelClass_mod_name_control(struct _GtkAccelLabelClass *p) { return (gchar*) p->mod_name_control; }
static inline gchar* take_struct_c2ats__GtkAccelLabelClass_mod_name_alt(struct _GtkAccelLabelClass *p) { return (gchar*) p->mod_name_alt; }
static inline gchar* take_struct_c2ats__GtkAccelLabelClass_mod_separator(struct _GtkAccelLabelClass *p) { return (gchar*) p->mod_separator; }
static inline GtkAccessiblePrivate* take_struct_c2ats__GtkAccessible_priv(struct _GtkAccessible *p) { return (GtkAccessiblePrivate*) p->priv; }
static inline GtkAdjustmentPrivate* take_struct_c2ats__GtkAdjustment_priv(struct _GtkAdjustment *p) { return (GtkAdjustmentPrivate*) p->priv; }
static inline GtkAppChooserDialogPrivate* take_struct_c2ats__GtkAppChooserDialog_priv(struct _GtkAppChooserDialog *p) { return (GtkAppChooserDialogPrivate*) p->priv; }
static inline GtkBoxPrivate* take_struct_c2ats__GtkBox_priv(struct _GtkBox *p) { return (GtkBoxPrivate*) p->priv; }
static inline GtkAppChooserWidgetPrivate* take_struct_c2ats__GtkAppChooserWidget_priv(struct _GtkAppChooserWidget *p) { return (GtkAppChooserWidgetPrivate*) p->priv; }
static inline GtkCellRendererPrivate* take_struct_c2ats__GtkCellRenderer_priv(struct _GtkCellRenderer *p) { return (GtkCellRendererPrivate*) p->priv; }
static inline GtkCellRendererClassPrivate* take_struct_c2ats__GtkCellRendererClass_priv(struct _GtkCellRendererClass *p) { return (GtkCellRendererClassPrivate*) p->priv; }
static inline GtkCellAreaPrivate* take_struct_c2ats__GtkCellArea_priv(struct _GtkCellArea *p) { return (GtkCellAreaPrivate*) p->priv; }
static inline GtkTreeViewColumnPrivate* take_struct_c2ats__GtkTreeViewColumn_priv(struct _GtkTreeViewColumn *p) { return (GtkTreeViewColumnPrivate*) p->priv; }
static inline PangoFontDescription* take_struct_c2ats__GtkTextAttributes_font(struct _GtkTextAttributes *p) { return (PangoFontDescription*) p->font; }
static inline PangoTabArray* take_struct_c2ats__GtkTextAttributes_tabs(struct _GtkTextAttributes *p) { return (PangoTabArray*) p->tabs; }
static inline PangoLanguage* take_struct_c2ats__GtkTextAttributes_language(struct _GtkTextAttributes *p) { return (PangoLanguage*) p->language; }
static inline GdkColor* take_struct_c2ats__GtkTextAttributes_pg_bg_color(struct _GtkTextAttributes *p) { return (GdkColor*) p->pg_bg_color; }
static inline GdkRGBA* take_struct_c2ats__GtkTextAttributes_pg_bg_rgba(struct _GtkTextAttributes *p) { return (GdkRGBA*) p->pg_bg_rgba; }
static inline GtkTextTagPrivate* take_struct_c2ats__GtkTextTag_priv(struct _GtkTextTag *p) { return (GtkTextTagPrivate*) p->priv; }
static inline gchar* take_struct_c2ats__GtkTargetEntry_target(struct _GtkTargetEntry *p) { return (gchar*) p->target; }
static inline GtkEntryBufferPrivate* take_struct_c2ats__GtkEntryBuffer_priv(struct _GtkEntryBuffer *p) { return (GtkEntryBufferPrivate*) p->priv; }
static inline GtkListStorePrivate* take_struct_c2ats__GtkListStore_priv(struct _GtkListStore *p) { return (GtkListStorePrivate*) p->priv; }
static inline GtkTreeModelFilterPrivate* take_struct_c2ats__GtkTreeModelFilter_priv(struct _GtkTreeModelFilter *p) { return (GtkTreeModelFilterPrivate*) p->priv; }
static inline GtkEntryCompletionPrivate* take_struct_c2ats__GtkEntryCompletion_priv(struct _GtkEntryCompletion *p) { return (GtkEntryCompletionPrivate*) p->priv; }
static inline GtkImagePrivate* take_struct_c2ats__GtkImage_priv(struct _GtkImage *p) { return (GtkImagePrivate*) p->priv; }
static inline GtkEntryPrivate* take_struct_c2ats__GtkEntry_priv(struct _GtkEntry *p) { return (GtkEntryPrivate*) p->priv; }
static inline GtkTreeViewPrivate* take_struct_c2ats__GtkTreeView_priv(struct _GtkTreeView *p) { return (GtkTreeViewPrivate*) p->priv; }
static inline GtkComboBoxPrivate* take_struct_c2ats__GtkComboBox_priv(struct _GtkComboBox *p) { return (GtkComboBoxPrivate*) p->priv; }
static inline GtkAppChooserButtonPrivate* take_struct_c2ats__GtkAppChooserButton_priv(struct _GtkAppChooserButton *p) { return (GtkAppChooserButtonPrivate*) p->priv; }
static inline GtkApplicationWindowPrivate* take_struct_c2ats__GtkApplicationWindow_priv(struct _GtkApplicationWindow *p) { return (GtkApplicationWindowPrivate*) p->priv; }
static inline GtkFramePrivate* take_struct_c2ats__GtkFrame_priv(struct _GtkFrame *p) { return (GtkFramePrivate*) p->priv; }
static inline GtkAspectFramePrivate* take_struct_c2ats__GtkAspectFrame_priv(struct _GtkAspectFrame *p) { return (GtkAspectFramePrivate*) p->priv; }
static inline GtkAssistantPrivate* take_struct_c2ats__GtkAssistant_priv(struct _GtkAssistant *p) { return (GtkAssistantPrivate*) p->priv; }
static inline GtkButtonBoxPrivate* take_struct_c2ats__GtkButtonBox_priv(struct _GtkButtonBox *p) { return (GtkButtonBoxPrivate*) p->priv; }
static inline gchar* take_struct_c2ats__GtkBindingSet_set_name(struct _GtkBindingSet *p) { return (gchar*) p->set_name; }
static inline GSList* take_struct_c2ats__GtkBindingSet_widget_path_pspecs(struct _GtkBindingSet *p) { return (GSList*) p->widget_path_pspecs; }
static inline GSList* take_struct_c2ats__GtkBindingSet_widget_class_pspecs(struct _GtkBindingSet *p) { return (GSList*) p->widget_class_pspecs; }
static inline GSList* take_struct_c2ats__GtkBindingSet_class_branch_pspecs(struct _GtkBindingSet *p) { return (GSList*) p->class_branch_pspecs; }
static inline GtkBindingEntry* take_struct_c2ats__GtkBindingSet_entries(struct _GtkBindingSet *p) { return (GtkBindingEntry*) p->entries; }
static inline GtkBindingEntry* take_struct_c2ats__GtkBindingSet_current(struct _GtkBindingSet *p) { return (GtkBindingEntry*) p->current; }
static inline GtkBindingSet* take_struct_c2ats__GtkBindingEntry_binding_set(struct _GtkBindingEntry *p) { return (GtkBindingSet*) p->binding_set; }
static inline GtkBindingEntry* take_struct_c2ats__GtkBindingEntry_set_next(struct _GtkBindingEntry *p) { return (GtkBindingEntry*) p->set_next; }
static inline GtkBindingEntry* take_struct_c2ats__GtkBindingEntry_hash_next(struct _GtkBindingEntry *p) { return (GtkBindingEntry*) p->hash_next; }
static inline GtkBindingSignal* take_struct_c2ats__GtkBindingEntry_signals(struct _GtkBindingEntry *p) { return (GtkBindingSignal*) p->signals; }
static inline GtkBindingSignal* take_struct_c2ats__GtkBindingSignal_next(struct _GtkBindingSignal *p) { return (GtkBindingSignal*) p->next; }
static inline gchar* take_struct_c2ats__GtkBindingSignal_signal_name(struct _GtkBindingSignal *p) { return (gchar*) p->signal_name; }
static inline GtkBindingArg* take_struct_c2ats__GtkBindingSignal_args(struct _GtkBindingSignal *p) { return (GtkBindingArg*) p->args; }
static inline GtkBuilderPrivate* take_struct_c2ats__GtkBuilder_priv(struct _GtkBuilder *p) { return (GtkBuilderPrivate*) p->priv; }
static inline GtkButtonPrivate* take_struct_c2ats__GtkButton_priv(struct _GtkButton *p) { return (GtkButtonPrivate*) p->priv; }
static inline GtkCalendarPrivate* take_struct_c2ats__GtkCalendar_priv(struct _GtkCalendar *p) { return (GtkCalendarPrivate*) p->priv; }
static inline GtkCellAreaBoxPrivate* take_struct_c2ats__GtkCellAreaBox_priv(struct _GtkCellAreaBox *p) { return (GtkCellAreaBoxPrivate*) p->priv; }
static inline GtkCellAreaContextPrivate* take_struct_c2ats__GtkCellAreaContext_priv(struct _GtkCellAreaContext *p) { return (GtkCellAreaContextPrivate*) p->priv; }
static inline GtkCellRendererTextPrivate* take_struct_c2ats__GtkCellRendererText_priv(struct _GtkCellRendererText *p) { return (GtkCellRendererTextPrivate*) p->priv; }
static inline GtkCellRendererAccelPrivate* take_struct_c2ats__GtkCellRendererAccel_priv(struct _GtkCellRendererAccel *p) { return (GtkCellRendererAccelPrivate*) p->priv; }
static inline GtkCellRendererComboPrivate* take_struct_c2ats__GtkCellRendererCombo_priv(struct _GtkCellRendererCombo *p) { return (GtkCellRendererComboPrivate*) p->priv; }
static inline GtkCellRendererPixbufPrivate* take_struct_c2ats__GtkCellRendererPixbuf_priv(struct _GtkCellRendererPixbuf *p) { return (GtkCellRendererPixbufPrivate*) p->priv; }
static inline GtkCellRendererProgressPrivate* take_struct_c2ats__GtkCellRendererProgress_priv(struct _GtkCellRendererProgress *p) { return (GtkCellRendererProgressPrivate*) p->priv; }
static inline GtkCellRendererSpinPrivate* take_struct_c2ats__GtkCellRendererSpin_priv(struct _GtkCellRendererSpin *p) { return (GtkCellRendererSpinPrivate*) p->priv; }
static inline GtkCellRendererSpinnerPrivate* take_struct_c2ats__GtkCellRendererSpinner_priv(struct _GtkCellRendererSpinner *p) { return (GtkCellRendererSpinnerPrivate*) p->priv; }
static inline GtkCellRendererTogglePrivate* take_struct_c2ats__GtkCellRendererToggle_priv(struct _GtkCellRendererToggle *p) { return (GtkCellRendererTogglePrivate*) p->priv; }
static inline GtkCellViewPrivate* take_struct_c2ats__GtkCellView_priv(struct _GtkCellView *p) { return (GtkCellViewPrivate*) p->priv; }
static inline GtkToggleButtonPrivate* take_struct_c2ats__GtkToggleButton_priv(struct _GtkToggleButton *p) { return (GtkToggleButtonPrivate*) p->priv; }
static inline GtkMenuItemPrivate* take_struct_c2ats__GtkMenuItem_priv(struct _GtkMenuItem *p) { return (GtkMenuItemPrivate*) p->priv; }
static inline GtkCheckMenuItemPrivate* take_struct_c2ats__GtkCheckMenuItem_priv(struct _GtkCheckMenuItem *p) { return (GtkCheckMenuItemPrivate*) p->priv; }
static inline GtkColorButtonPrivate* take_struct_c2ats__GtkColorButton_priv(struct _GtkColorButton *p) { return (GtkColorButtonPrivate*) p->priv; }
static inline GtkColorChooserDialogPrivate* take_struct_c2ats__GtkColorChooserDialog_priv(struct _GtkColorChooserDialog *p) { return (GtkColorChooserDialogPrivate*) p->priv; }
static inline GtkColorChooserWidgetPrivate* take_struct_c2ats__GtkColorChooserWidget_priv(struct _GtkColorChooserWidget *p) { return (GtkColorChooserWidgetPrivate*) p->priv; }
static inline GtkComboBoxTextPrivate* take_struct_c2ats__GtkComboBoxText_priv(struct _GtkComboBoxText *p) { return (GtkComboBoxTextPrivate*) p->priv; }
static inline GtkCssProviderPrivate* take_struct_c2ats__GtkCssProvider_priv(struct _GtkCssProvider *p) { return (GtkCssProviderPrivate*) p->priv; }
static inline GtkEventBoxPrivate* take_struct_c2ats__GtkEventBox_priv(struct _GtkEventBox *p) { return (GtkEventBoxPrivate*) p->priv; }
static inline GtkExpanderPrivate* take_struct_c2ats__GtkExpander_priv(struct _GtkExpander *p) { return (GtkExpanderPrivate*) p->priv; }
static inline GtkFixedPrivate* take_struct_c2ats__GtkFixed_priv(struct _GtkFixed *p) { return (GtkFixedPrivate*) p->priv; }
static inline GtkWidget* take_struct_c2ats__GtkFixedChild_widget(struct _GtkFixedChild *p) { return (GtkWidget*) p->widget; }
static inline gchar* take_struct_c2ats__GtkFileFilterInfo_filename(struct _GtkFileFilterInfo *p) { return (gchar*) p->filename; }
static inline gchar* take_struct_c2ats__GtkFileFilterInfo_uri(struct _GtkFileFilterInfo *p) { return (gchar*) p->uri; }
static inline gchar* take_struct_c2ats__GtkFileFilterInfo_display_name(struct _GtkFileFilterInfo *p) { return (gchar*) p->display_name; }
static inline gchar* take_struct_c2ats__GtkFileFilterInfo_mime_type(struct _GtkFileFilterInfo *p) { return (gchar*) p->mime_type; }
static inline GtkFileChooserButtonPrivate* take_struct_c2ats__GtkFileChooserButton_priv(struct _GtkFileChooserButton *p) { return (GtkFileChooserButtonPrivate*) p->priv; }
static inline GtkFileChooserDialogPrivate* take_struct_c2ats__GtkFileChooserDialog_priv(struct _GtkFileChooserDialog *p) { return (GtkFileChooserDialogPrivate*) p->priv; }
static inline GtkFileChooserWidgetPrivate* take_struct_c2ats__GtkFileChooserWidget_priv(struct _GtkFileChooserWidget *p) { return (GtkFileChooserWidgetPrivate*) p->priv; }
static inline GtkFontButtonPrivate* take_struct_c2ats__GtkFontButton_priv(struct _GtkFontButton *p) { return (GtkFontButtonPrivate*) p->priv; }
static inline GtkFontChooserDialogPrivate* take_struct_c2ats__GtkFontChooserDialog_priv(struct _GtkFontChooserDialog *p) { return (GtkFontChooserDialogPrivate*) p->priv; }
static inline GtkFontChooserWidgetPrivate* take_struct_c2ats__GtkFontChooserWidget_priv(struct _GtkFontChooserWidget *p) { return (GtkFontChooserWidgetPrivate*) p->priv; }
static inline GtkGridPrivate* take_struct_c2ats__GtkGrid_priv(struct _GtkGrid *p) { return (GtkGridPrivate*) p->priv; }
static inline GtkIconFactoryPrivate* take_struct_c2ats__GtkIconFactory_priv(struct _GtkIconFactory *p) { return (GtkIconFactoryPrivate*) p->priv; }
static inline GtkStylePropertiesPrivate* take_struct_c2ats__GtkStyleProperties_priv(struct _GtkStyleProperties *p) { return (GtkStylePropertiesPrivate*) p->priv; }
static inline GtkStyleContextPrivate* take_struct_c2ats__GtkStyleContext_priv(struct _GtkStyleContext *p) { return (GtkStyleContextPrivate*) p->priv; }
static inline GtkIconThemePrivate* take_struct_c2ats__GtkIconTheme_priv(struct _GtkIconTheme *p) { return (GtkIconThemePrivate*) p->priv; }
static inline GtkIconViewPrivate* take_struct_c2ats__GtkIconView_priv(struct _GtkIconView *p) { return (GtkIconViewPrivate*) p->priv; }
static inline gchar* take_struct_c2ats__GtkIMContextInfo_context_id(struct _GtkIMContextInfo *p) { return (gchar*) p->context_id; }
static inline gchar* take_struct_c2ats__GtkIMContextInfo_context_name(struct _GtkIMContextInfo *p) { return (gchar*) p->context_name; }
static inline gchar* take_struct_c2ats__GtkIMContextInfo_domain(struct _GtkIMContextInfo *p) { return (gchar*) p->domain; }
static inline gchar* take_struct_c2ats__GtkIMContextInfo_domain_dirname(struct _GtkIMContextInfo *p) { return (gchar*) p->domain_dirname; }
static inline gchar* take_struct_c2ats__GtkIMContextInfo_default_locales(struct _GtkIMContextInfo *p) { return (gchar*) p->default_locales; }
static inline GtkIMContextSimplePrivate* take_struct_c2ats__GtkIMContextSimple_priv(struct _GtkIMContextSimple *p) { return (GtkIMContextSimplePrivate*) p->priv; }
static inline GtkIMMulticontextPrivate* take_struct_c2ats__GtkIMMulticontext_priv(struct _GtkIMMulticontext *p) { return (GtkIMMulticontextPrivate*) p->priv; }
static inline GtkInfoBarPrivate* take_struct_c2ats__GtkInfoBar_priv(struct _GtkInfoBar *p) { return (GtkInfoBarPrivate*) p->priv; }
static inline GtkInvisiblePrivate* take_struct_c2ats__GtkInvisible_priv(struct _GtkInvisible *p) { return (GtkInvisiblePrivate*) p->priv; }
static inline GtkLayoutPrivate* take_struct_c2ats__GtkLayout_priv(struct _GtkLayout *p) { return (GtkLayoutPrivate*) p->priv; }
static inline GtkLevelBarPrivate* take_struct_c2ats__GtkLevelBar_priv(struct _GtkLevelBar *p) { return (GtkLevelBarPrivate*) p->priv; }
static inline GtkLinkButtonPrivate* take_struct_c2ats__GtkLinkButton_priv(struct _GtkLinkButton *p) { return (GtkLinkButtonPrivate*) p->priv; }
static inline GtkLockButtonPrivate* take_struct_c2ats__GtkLockButton_priv(struct _GtkLockButton *p) { return (GtkLockButtonPrivate*) p->priv; }
static inline GtkMenuBarPrivate* take_struct_c2ats__GtkMenuBar_priv(struct _GtkMenuBar *p) { return (GtkMenuBarPrivate*) p->priv; }
static inline GtkMenuButtonPrivate* take_struct_c2ats__GtkMenuButton_priv(struct _GtkMenuButton *p) { return (GtkMenuButtonPrivate*) p->priv; }
static inline GtkSizeGroupPrivate* take_struct_c2ats__GtkSizeGroup_priv(struct _GtkSizeGroup *p) { return (GtkSizeGroupPrivate*) p->priv; }
static inline GtkToolItemPrivate* take_struct_c2ats__GtkToolItem_priv(struct _GtkToolItem *p) { return (GtkToolItemPrivate*) p->priv; }
static inline GtkToolButtonPrivate* take_struct_c2ats__GtkToolButton_priv(struct _GtkToolButton *p) { return (GtkToolButtonPrivate*) p->priv; }
static inline GtkMenuToolButtonPrivate* take_struct_c2ats__GtkMenuToolButton_priv(struct _GtkMenuToolButton *p) { return (GtkMenuToolButtonPrivate*) p->priv; }
static inline GtkMessageDialogPrivate* take_struct_c2ats__GtkMessageDialog_priv(struct _GtkMessageDialog *p) { return (GtkMessageDialogPrivate*) p->priv; }
static inline GtkMountOperationPrivate* take_struct_c2ats__GtkMountOperation_priv(struct _GtkMountOperation *p) { return (GtkMountOperationPrivate*) p->priv; }
static inline GtkNotebookPrivate* take_struct_c2ats__GtkNotebook_priv(struct _GtkNotebook *p) { return (GtkNotebookPrivate*) p->priv; }
static inline GtkOverlayPrivate* take_struct_c2ats__GtkOverlay_priv(struct _GtkOverlay *p) { return (GtkOverlayPrivate*) p->priv; }
static inline GtkPanedPrivate* take_struct_c2ats__GtkPaned_priv(struct _GtkPaned *p) { return (GtkPanedPrivate*) p->priv; }
static inline GtkPrintOperationPrivate* take_struct_c2ats__GtkPrintOperation_priv(struct _GtkPrintOperation *p) { return (GtkPrintOperationPrivate*) p->priv; }
static inline GtkProgressBarPrivate* take_struct_c2ats__GtkProgressBar_priv(struct _GtkProgressBar *p) { return (GtkProgressBarPrivate*) p->priv; }
static inline GtkRadioButtonPrivate* take_struct_c2ats__GtkRadioButton_priv(struct _GtkRadioButton *p) { return (GtkRadioButtonPrivate*) p->priv; }
static inline GtkRadioMenuItemPrivate* take_struct_c2ats__GtkRadioMenuItem_priv(struct _GtkRadioMenuItem *p) { return (GtkRadioMenuItemPrivate*) p->priv; }
static inline GtkToggleToolButtonPrivate* take_struct_c2ats__GtkToggleToolButton_priv(struct _GtkToggleToolButton *p) { return (GtkToggleToolButtonPrivate*) p->priv; }
static inline GtkRangePrivate* take_struct_c2ats__GtkRange_priv(struct _GtkRange *p) { return (GtkRangePrivate*) p->priv; }
static inline gchar* take_struct_c2ats__GtkRangeClass_slider_detail(struct _GtkRangeClass *p) { return (gchar*) p->slider_detail; }
static inline gchar* take_struct_c2ats__GtkRangeClass_stepper_detail(struct _GtkRangeClass *p) { return (gchar*) p->stepper_detail; }
static inline gchar* take_struct_c2ats__GtkRecentData_display_name(struct _GtkRecentData *p) { return (gchar*) p->display_name; }
static inline gchar* take_struct_c2ats__GtkRecentData_description(struct _GtkRecentData *p) { return (gchar*) p->description; }
static inline gchar* take_struct_c2ats__GtkRecentData_mime_type(struct _GtkRecentData *p) { return (gchar*) p->mime_type; }
static inline gchar* take_struct_c2ats__GtkRecentData_app_name(struct _GtkRecentData *p) { return (gchar*) p->app_name; }
static inline gchar* take_struct_c2ats__GtkRecentData_app_exec(struct _GtkRecentData *p) { return (gchar*) p->app_exec; }
static inline gchar** take_struct_c2ats__GtkRecentData_groups(struct _GtkRecentData *p) { return (gchar**) p->groups; }
static inline GtkRecentManagerPrivate* take_struct_c2ats__GtkRecentManager_priv(struct _GtkRecentManager *p) { return (GtkRecentManagerPrivate*) p->priv; }
static inline gchar* take_struct_c2ats__GtkRecentFilterInfo_uri(struct _GtkRecentFilterInfo *p) { return (gchar*) p->uri; }
static inline gchar* take_struct_c2ats__GtkRecentFilterInfo_display_name(struct _GtkRecentFilterInfo *p) { return (gchar*) p->display_name; }
static inline gchar* take_struct_c2ats__GtkRecentFilterInfo_mime_type(struct _GtkRecentFilterInfo *p) { return (gchar*) p->mime_type; }
static inline gchar** take_struct_c2ats__GtkRecentFilterInfo_applications(struct _GtkRecentFilterInfo *p) { return (gchar**) p->applications; }
static inline gchar** take_struct_c2ats__GtkRecentFilterInfo_groups(struct _GtkRecentFilterInfo *p) { return (gchar**) p->groups; }
static inline GtkRecentChooserDialogPrivate* take_struct_c2ats__GtkRecentChooserDialog_priv(struct _GtkRecentChooserDialog *p) { return (GtkRecentChooserDialogPrivate*) p->priv; }
static inline GtkRecentChooserMenuPrivate* take_struct_c2ats__GtkRecentChooserMenu_priv(struct _GtkRecentChooserMenu *p) { return (GtkRecentChooserMenuPrivate*) p->priv; }
static inline GtkRecentChooserWidgetPrivate* take_struct_c2ats__GtkRecentChooserWidget_priv(struct _GtkRecentChooserWidget *p) { return (GtkRecentChooserWidgetPrivate*) p->priv; }
static inline GtkScalePrivate* take_struct_c2ats__GtkScale_priv(struct _GtkScale *p) { return (GtkScalePrivate*) p->priv; }
static inline GtkScaleButtonPrivate* take_struct_c2ats__GtkScaleButton_priv(struct _GtkScaleButton *p) { return (GtkScaleButtonPrivate*) p->priv; }
static inline GtkScrolledWindowPrivate* take_struct_c2ats__GtkScrolledWindow_priv(struct _GtkScrolledWindow *p) { return (GtkScrolledWindowPrivate*) p->priv; }
static inline GtkSeparatorPrivate* take_struct_c2ats__GtkSeparator_priv(struct _GtkSeparator *p) { return (GtkSeparatorPrivate*) p->priv; }
static inline GtkSeparatorToolItemPrivate* take_struct_c2ats__GtkSeparatorToolItem_priv(struct _GtkSeparatorToolItem *p) { return (GtkSeparatorToolItemPrivate*) p->priv; }
static inline GtkSettingsPrivate* take_struct_c2ats__GtkSettings_priv(struct _GtkSettings *p) { return (GtkSettingsPrivate*) p->priv; }
static inline gchar* take_struct_c2ats__GtkSettingsValue_origin(struct _GtkSettingsValue *p) { return (gchar*) p->origin; }
static inline GtkSpinButtonPrivate* take_struct_c2ats__GtkSpinButton_priv(struct _GtkSpinButton *p) { return (GtkSpinButtonPrivate*) p->priv; }
static inline GtkSpinnerPrivate* take_struct_c2ats__GtkSpinner_priv(struct _GtkSpinner *p) { return (GtkSpinnerPrivate*) p->priv; }
static inline GtkStatusbarPrivate* take_struct_c2ats__GtkStatusbar_priv(struct _GtkStatusbar *p) { return (GtkStatusbarPrivate*) p->priv; }
static inline GtkSwitchPrivate* take_struct_c2ats__GtkSwitch_priv(struct _GtkSwitch *p) { return (GtkSwitchPrivate*) p->priv; }
static inline GtkTextTagTablePrivate* take_struct_c2ats__GtkTextTagTable_priv(struct _GtkTextTagTable *p) { return (GtkTextTagTablePrivate*) p->priv; }
static inline GtkTextBufferPrivate* take_struct_c2ats__GtkTextBuffer_priv(struct _GtkTextBuffer *p) { return (GtkTextBufferPrivate*) p->priv; }
static inline GtkTextViewPrivate* take_struct_c2ats__GtkTextView_priv(struct _GtkTextView *p) { return (GtkTextViewPrivate*) p->priv; }
static inline GtkToolbarPrivate* take_struct_c2ats__GtkToolbar_priv(struct _GtkToolbar *p) { return (GtkToolbarPrivate*) p->priv; }
static inline GtkToolItemGroupPrivate* take_struct_c2ats__GtkToolItemGroup_priv(struct _GtkToolItemGroup *p) { return (GtkToolItemGroupPrivate*) p->priv; }
static inline GtkToolPalettePrivate* take_struct_c2ats__GtkToolPalette_priv(struct _GtkToolPalette *p) { return (GtkToolPalettePrivate*) p->priv; }
static inline GtkTreeModelSortPrivate* take_struct_c2ats__GtkTreeModelSort_priv(struct _GtkTreeModelSort *p) { return (GtkTreeModelSortPrivate*) p->priv; }
static inline GtkTreeSelectionPrivate* take_struct_c2ats__GtkTreeSelection_priv(struct _GtkTreeSelection *p) { return (GtkTreeSelectionPrivate*) p->priv; }
static inline GtkTreeStorePrivate* take_struct_c2ats__GtkTreeStore_priv(struct _GtkTreeStore *p) { return (GtkTreeStorePrivate*) p->priv; }
static inline GtkViewportPrivate* take_struct_c2ats__GtkViewport_priv(struct _GtkViewport *p) { return (GtkViewportPrivate*) p->priv; }
static inline GtkWindowGroupPrivate* take_struct_c2ats__GtkWindowGroup_priv(struct _GtkWindowGroup *p) { return (GtkWindowGroupPrivate*) p->priv; }
static inline GtkArrowPrivate* take_struct_c2ats__GtkArrow_priv(struct _GtkArrow *p) { return (GtkArrowPrivate*) p->priv; }
static inline GtkActionPrivate* take_struct_c2ats__GtkAction_private_data(struct _GtkAction *p) { return (GtkActionPrivate*) p->private_data; }
static inline gchar* take_struct_c2ats__GtkStockItem_stock_id(struct _GtkStockItem *p) { return (gchar*) p->stock_id; }
static inline gchar* take_struct_c2ats__GtkStockItem_label(struct _GtkStockItem *p) { return (gchar*) p->label; }
static inline gchar* take_struct_c2ats__GtkStockItem_translation_domain(struct _GtkStockItem *p) { return (gchar*) p->translation_domain; }
static inline GtkActionGroupPrivate* take_struct_c2ats__GtkActionGroup_priv(struct _GtkActionGroup *p) { return (GtkActionGroupPrivate*) p->priv; }
static inline gchar* take_struct_c2ats__GtkActionEntry_name(struct _GtkActionEntry *p) { return (gchar*) p->name; }
static inline gchar* take_struct_c2ats__GtkActionEntry_stock_id(struct _GtkActionEntry *p) { return (gchar*) p->stock_id; }
static inline gchar* take_struct_c2ats__GtkActionEntry_label(struct _GtkActionEntry *p) { return (gchar*) p->label; }
static inline gchar* take_struct_c2ats__GtkActionEntry_accelerator(struct _GtkActionEntry *p) { return (gchar*) p->accelerator; }
static inline gchar* take_struct_c2ats__GtkActionEntry_tooltip(struct _GtkActionEntry *p) { return (gchar*) p->tooltip; }
static inline gchar* take_struct_c2ats__GtkToggleActionEntry_name(struct _GtkToggleActionEntry *p) { return (gchar*) p->name; }
static inline gchar* take_struct_c2ats__GtkToggleActionEntry_stock_id(struct _GtkToggleActionEntry *p) { return (gchar*) p->stock_id; }
static inline gchar* take_struct_c2ats__GtkToggleActionEntry_label(struct _GtkToggleActionEntry *p) { return (gchar*) p->label; }
static inline gchar* take_struct_c2ats__GtkToggleActionEntry_accelerator(struct _GtkToggleActionEntry *p) { return (gchar*) p->accelerator; }
static inline gchar* take_struct_c2ats__GtkToggleActionEntry_tooltip(struct _GtkToggleActionEntry *p) { return (gchar*) p->tooltip; }
static inline gchar* take_struct_c2ats__GtkRadioActionEntry_name(struct _GtkRadioActionEntry *p) { return (gchar*) p->name; }
static inline gchar* take_struct_c2ats__GtkRadioActionEntry_stock_id(struct _GtkRadioActionEntry *p) { return (gchar*) p->stock_id; }
static inline gchar* take_struct_c2ats__GtkRadioActionEntry_label(struct _GtkRadioActionEntry *p) { return (gchar*) p->label; }
static inline gchar* take_struct_c2ats__GtkRadioActionEntry_accelerator(struct _GtkRadioActionEntry *p) { return (gchar*) p->accelerator; }
static inline gchar* take_struct_c2ats__GtkRadioActionEntry_tooltip(struct _GtkRadioActionEntry *p) { return (gchar*) p->tooltip; }
static inline GtkAlignmentPrivate* take_struct_c2ats__GtkAlignment_priv(struct _GtkAlignment *p) { return (GtkAlignmentPrivate*) p->priv; }
static inline GtkColorSelectionPrivate* take_struct_c2ats__GtkColorSelection_private_data(struct _GtkColorSelection *p) { return (GtkColorSelectionPrivate*) p->private_data; }
static inline GtkColorSelectionDialogPrivate* take_struct_c2ats__GtkColorSelectionDialog_priv(struct _GtkColorSelectionDialog *p) { return (GtkColorSelectionDialogPrivate*) p->priv; }
static inline GtkFontSelectionPrivate* take_struct_c2ats__GtkFontSelection_priv(struct _GtkFontSelection *p) { return (GtkFontSelectionPrivate*) p->priv; }
static inline GtkFontSelectionDialogPrivate* take_struct_c2ats__GtkFontSelectionDialog_priv(struct _GtkFontSelectionDialog *p) { return (GtkFontSelectionDialogPrivate*) p->priv; }
static inline GtkHandleBoxPrivate* take_struct_c2ats__GtkHandleBox_priv(struct _GtkHandleBox *p) { return (GtkHandleBoxPrivate*) p->priv; }
static inline GtkHSVPrivate* take_struct_c2ats__GtkHSV_priv(struct _GtkHSV *p) { return (GtkHSVPrivate*) p->priv; }
static inline GtkImageMenuItemPrivate* take_struct_c2ats__GtkImageMenuItem_priv(struct _GtkImageMenuItem *p) { return (GtkImageMenuItemPrivate*) p->priv; }
static inline GtkNumerableIconPrivate* take_struct_c2ats__GtkNumerableIcon_priv(struct _GtkNumerableIcon *p) { return (GtkNumerableIconPrivate*) p->priv; }
static inline GtkToggleActionPrivate* take_struct_c2ats__GtkToggleAction_private_data(struct _GtkToggleAction *p) { return (GtkToggleActionPrivate*) p->private_data; }
static inline GtkRadioActionPrivate* take_struct_c2ats__GtkRadioAction_private_data(struct _GtkRadioAction *p) { return (GtkRadioActionPrivate*) p->private_data; }
static inline gchar* take_struct_c2ats__GtkRcStyle_name(struct _GtkRcStyle *p) { return (gchar*) p->name; }
static inline PangoFontDescription* take_struct_c2ats__GtkRcStyle_font_desc(struct _GtkRcStyle *p) { return (PangoFontDescription*) p->font_desc; }
static inline GArray* take_struct_c2ats__GtkRcStyle_rc_properties(struct _GtkRcStyle *p) { return (GArray*) p->rc_properties; }
static inline GSList* take_struct_c2ats__GtkRcStyle_rc_style_lists(struct _GtkRcStyle *p) { return (GSList*) p->rc_style_lists; }
static inline GSList* take_struct_c2ats__GtkRcStyle_icon_factories(struct _GtkRcStyle *p) { return (GSList*) p->icon_factories; }
static inline gchar* take_struct_c2ats__GtkRcProperty_origin(struct _GtkRcProperty *p) { return (gchar*) p->origin; }
static inline GtkRecentActionPrivate* take_struct_c2ats__GtkRecentAction_priv(struct _GtkRecentAction *p) { return (GtkRecentActionPrivate*) p->priv; }
static inline GtkStatusIconPrivate* take_struct_c2ats__GtkStatusIcon_priv(struct _GtkStatusIcon *p) { return (GtkStatusIconPrivate*) p->priv; }
static inline PangoFontDescription* take_struct_c2ats__GtkStyle_font_desc(struct _GtkStyle *p) { return (PangoFontDescription*) p->font_desc; }
static inline GdkVisual* take_struct_c2ats__GtkStyle_visual(struct _GtkStyle *p) { return (GdkVisual*) p->visual; }
static inline PangoFontDescription* take_struct_c2ats__GtkStyle_private_font_desc(struct _GtkStyle *p) { return (PangoFontDescription*) p->private_font_desc; }
static inline GtkRcStyle* take_struct_c2ats__GtkStyle_rc_style(struct _GtkStyle *p) { return (GtkRcStyle*) p->rc_style; }
static inline GSList* take_struct_c2ats__GtkStyle_styles(struct _GtkStyle *p) { return (GSList*) p->styles; }
static inline GArray* take_struct_c2ats__GtkStyle_property_cache(struct _GtkStyle *p) { return (GArray*) p->property_cache; }
static inline GSList* take_struct_c2ats__GtkStyle_icon_factories(struct _GtkStyle *p) { return (GSList*) p->icon_factories; }
static inline GtkTablePrivate* take_struct_c2ats__GtkTable_priv(struct _GtkTable *p) { return (GtkTablePrivate*) p->priv; }
static inline GtkWidget* take_struct_c2ats__GtkTableChild_widget(struct _GtkTableChild *p) { return (GtkWidget*) p->widget; }
static inline GtkTearoffMenuItemPrivate* take_struct_c2ats__GtkTearoffMenuItem_priv(struct _GtkTearoffMenuItem *p) { return (GtkTearoffMenuItemPrivate*) p->priv; }
static inline GtkThemingEnginePrivate* take_struct_c2ats__GtkThemingEngine_priv(struct _GtkThemingEngine *p) { return (GtkThemingEnginePrivate*) p->priv; }
static inline GtkUIManagerPrivate* take_struct_c2ats__GtkUIManager_private_data(struct _GtkUIManager *p) { return (GtkUIManagerPrivate*) p->private_data; }
#endif /* _STRUCT_C2ATS_ACCESSOR_H_ */
%}
fun take_struct_c2ats_tm___tm_zone: {l1:agz} (!ptr_v_1(struct_c2ats_tm, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2), ptr_v_1(char, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GArray_data: {l1:agz} (!ptr_v_1(struct_c2ats__GArray, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GByteArray_data: {l1:agz} (!ptr_v_1(struct_c2ats__GByteArray, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_guint8, l2), ptr_v_1(type_c2ats_guint8, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GPtrArray_pdata: {l1:agz} (!ptr_v_1(struct_c2ats__GPtrArray, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gpointer, l2), ptr_v_1(type_c2ats_gpointer, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GError_message: {l1:agz} (!ptr_v_1(struct_c2ats__GError, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDebugKey_key: {l1:agz} (!ptr_v_1(struct_c2ats__GDebugKey, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GNode_next: {l1:agz} (!ptr_v_1(struct_c2ats__GNode, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GNode, l2), ptr_v_1(type_c2ats_GNode, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GNode_prev: {l1:agz} (!ptr_v_1(struct_c2ats__GNode, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GNode, l2), ptr_v_1(type_c2ats_GNode, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GNode_parent: {l1:agz} (!ptr_v_1(struct_c2ats__GNode, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GNode, l2), ptr_v_1(type_c2ats_GNode, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GNode_children: {l1:agz} (!ptr_v_1(struct_c2ats__GNode, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GNode, l2), ptr_v_1(type_c2ats_GNode, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GList_next: {l1:agz} (!ptr_v_1(struct_c2ats__GList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2), ptr_v_1(type_c2ats_GList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GList_prev: {l1:agz} (!ptr_v_1(struct_c2ats__GList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2), ptr_v_1(type_c2ats_GList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GHookList_hooks: {l1:agz} (!ptr_v_1(struct_c2ats__GHookList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GHook, l2), ptr_v_1(type_c2ats_GHook, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GHook_next: {l1:agz} (!ptr_v_1(struct_c2ats__GHook, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GHook, l2), ptr_v_1(type_c2ats_GHook, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GHook_prev: {l1:agz} (!ptr_v_1(struct_c2ats__GHook, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GHook, l2), ptr_v_1(type_c2ats_GHook, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSList_next: {l1:agz} (!ptr_v_1(struct_c2ats__GSList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2), ptr_v_1(type_c2ats_GSList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSource_callback_funcs: {l1:agz} (!ptr_v_1(struct_c2ats__GSource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSourceCallbackFuncs, l2), ptr_v_1(type_c2ats_GSourceCallbackFuncs, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSource_source_funcs: {l1:agz} (!ptr_v_1(struct_c2ats__GSource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSourceFuncs, l2), ptr_v_1(type_c2ats_GSourceFuncs, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSource_context: {l1:agz} (!ptr_v_1(struct_c2ats__GSource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMainContext, l2), ptr_v_1(type_c2ats_GMainContext, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSource_poll_fds: {l1:agz} (!ptr_v_1(struct_c2ats__GSource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2), ptr_v_1(type_c2ats_GSList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSource_prev: {l1:agz} (!ptr_v_1(struct_c2ats__GSource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSource, l2), ptr_v_1(type_c2ats_GSource, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSource_next: {l1:agz} (!ptr_v_1(struct_c2ats__GSource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSource, l2), ptr_v_1(type_c2ats_GSource, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSource_name: {l1:agz} (!ptr_v_1(struct_c2ats__GSource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2), ptr_v_1(char, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSource_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GSource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSourcePrivate, l2), ptr_v_1(type_c2ats_GSourcePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GString_str: {l1:agz} (!ptr_v_1(struct_c2ats__GString, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GIOChannel_funcs: {l1:agz} (!ptr_v_1(struct_c2ats__GIOChannel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIOFuncs, l2), ptr_v_1(type_c2ats_GIOFuncs, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GIOChannel_encoding: {l1:agz} (!ptr_v_1(struct_c2ats__GIOChannel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GIOChannel_line_term: {l1:agz} (!ptr_v_1(struct_c2ats__GIOChannel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GIOChannel_read_buf: {l1:agz} (!ptr_v_1(struct_c2ats__GIOChannel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GString, l2), ptr_v_1(type_c2ats_GString, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GIOChannel_encoded_read_buf: {l1:agz} (!ptr_v_1(struct_c2ats__GIOChannel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GString, l2), ptr_v_1(type_c2ats_GString, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GIOChannel_write_buf: {l1:agz} (!ptr_v_1(struct_c2ats__GIOChannel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GString, l2), ptr_v_1(type_c2ats_GString, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GOptionEntry_long_name: {l1:agz} (!ptr_v_1(struct_c2ats__GOptionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GOptionEntry_description: {l1:agz} (!ptr_v_1(struct_c2ats__GOptionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GOptionEntry_arg_description: {l1:agz} (!ptr_v_1(struct_c2ats__GOptionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GQueue_head: {l1:agz} (!ptr_v_1(struct_c2ats__GQueue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2), ptr_v_1(type_c2ats_GList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GQueue_tail: {l1:agz} (!ptr_v_1(struct_c2ats__GQueue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2), ptr_v_1(type_c2ats_GList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_union_c2ats__GTokenValue_v_identifier: {l1:agz} (!ptr_v_1(union_c2ats__GTokenValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_union_c2ats__GTokenValue_v_string: {l1:agz} (!ptr_v_1(union_c2ats__GTokenValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_union_c2ats__GTokenValue_v_comment: {l1:agz} (!ptr_v_1(union_c2ats__GTokenValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GScannerConfig_cset_skip_characters: {l1:agz} (!ptr_v_1(struct_c2ats__GScannerConfig, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GScannerConfig_cset_identifier_first: {l1:agz} (!ptr_v_1(struct_c2ats__GScannerConfig, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GScannerConfig_cset_identifier_nth: {l1:agz} (!ptr_v_1(struct_c2ats__GScannerConfig, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GScannerConfig_cpair_comment_single: {l1:agz} (!ptr_v_1(struct_c2ats__GScannerConfig, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GScanner_input_name: {l1:agz} (!ptr_v_1(struct_c2ats__GScanner, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GScanner_qdata: {l1:agz} (!ptr_v_1(struct_c2ats__GScanner, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GData, l2), ptr_v_1(type_c2ats_GData, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GScanner_config: {l1:agz} (!ptr_v_1(struct_c2ats__GScanner, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GScannerConfig, l2), ptr_v_1(type_c2ats_GScannerConfig, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GScanner_symbol_table: {l1:agz} (!ptr_v_1(struct_c2ats__GScanner, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GHashTable, l2), ptr_v_1(type_c2ats_GHashTable, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GScanner_text: {l1:agz} (!ptr_v_1(struct_c2ats__GScanner, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GScanner_text_end: {l1:agz} (!ptr_v_1(struct_c2ats__GScanner, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GScanner_buffer: {l1:agz} (!ptr_v_1(struct_c2ats__GScanner, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GTrashStack_next: {l1:agz} (!ptr_v_1(struct_c2ats__GTrashStack, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTrashStack, l2), ptr_v_1(type_c2ats_GTrashStack, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GCompletion_items: {l1:agz} (!ptr_v_1(struct_c2ats__GCompletion, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2), ptr_v_1(type_c2ats_GList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GCompletion_prefix: {l1:agz} (!ptr_v_1(struct_c2ats__GCompletion, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GCompletion_cache: {l1:agz} (!ptr_v_1(struct_c2ats__GCompletion, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GList, l2), ptr_v_1(type_c2ats_GList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GStaticRWLock_read_cond: {l1:agz} (!ptr_v_1(struct_c2ats__GStaticRWLock, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GCond, l2), ptr_v_1(type_c2ats_GCond, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GStaticRWLock_write_cond: {l1:agz} (!ptr_v_1(struct_c2ats__GStaticRWLock, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GCond, l2), ptr_v_1(type_c2ats_GCond, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats___pthread_internal_list___prev: {l1:agz} (!ptr_v_1(struct_c2ats___pthread_internal_list, l1) | ptr l1) -> [l2:addr] (ptr_v_1(struct_c2ats___pthread_internal_list, l2), ptr_v_1(struct_c2ats___pthread_internal_list, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats___pthread_internal_list___next: {l1:agz} (!ptr_v_1(struct_c2ats___pthread_internal_list, l1) | ptr l1) -> [l2:addr] (ptr_v_1(struct_c2ats___pthread_internal_list, l2), ptr_v_1(struct_c2ats___pthread_internal_list, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__pthread_cleanup_buffer___prev: {l1:agz} (!ptr_v_1(struct_c2ats__pthread_cleanup_buffer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(struct_c2ats__pthread_cleanup_buffer, l2), ptr_v_1(struct_c2ats__pthread_cleanup_buffer, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GTypeInstance_g_class: {l1:agz} (!ptr_v_1(struct_c2ats__GTypeInstance, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTypeClass, l2), ptr_v_1(type_c2ats_GTypeClass, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GTypeQuery_type_name: {l1:agz} (!ptr_v_1(struct_c2ats__GTypeQuery, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GTypeInfo_value_table: {l1:agz} (!ptr_v_1(struct_c2ats__GTypeInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTypeValueTable, l2), ptr_v_1(type_c2ats_GTypeValueTable, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GTypeValueTable_collect_format: {l1:agz} (!ptr_v_1(struct_c2ats__GTypeValueTable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GTypeValueTable_lcopy_format: {l1:agz} (!ptr_v_1(struct_c2ats__GTypeValueTable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GParamSpec_name: {l1:agz} (!ptr_v_1(struct_c2ats__GParamSpec, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GParamSpec__nick: {l1:agz} (!ptr_v_1(struct_c2ats__GParamSpec, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GParamSpec__blurb: {l1:agz} (!ptr_v_1(struct_c2ats__GParamSpec, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GParamSpec_qdata: {l1:agz} (!ptr_v_1(struct_c2ats__GParamSpec, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GData, l2), ptr_v_1(type_c2ats_GData, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GParameter_name: {l1:agz} (!ptr_v_1(struct_c2ats__GParameter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GClosure_notifiers: {l1:agz} (!ptr_v_1(struct_c2ats__GClosure, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GClosureNotifyData, l2), ptr_v_1(type_c2ats_GClosureNotifyData, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSignalQuery_signal_name: {l1:agz} (!ptr_v_1(struct_c2ats__GSignalQuery, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSignalQuery_param_types: {l1:agz} (!ptr_v_1(struct_c2ats__GSignalQuery, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GType, l2), ptr_v_1(type_c2ats_GType, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GObject_qdata: {l1:agz} (!ptr_v_1(struct_c2ats__GObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GData, l2), ptr_v_1(type_c2ats_GData, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GObjectClass_construct_properties: {l1:agz} (!ptr_v_1(struct_c2ats__GObjectClass, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2), ptr_v_1(type_c2ats_GSList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GObjectConstructParam_pspec: {l1:agz} (!ptr_v_1(struct_c2ats__GObjectConstructParam, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GParamSpec, l2), ptr_v_1(type_c2ats_GParamSpec, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GObjectConstructParam_value: {l1:agz} (!ptr_v_1(struct_c2ats__GObjectConstructParam, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GValue, l2), ptr_v_1(type_c2ats_GValue, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GEnumClass_values: {l1:agz} (!ptr_v_1(struct_c2ats__GEnumClass, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GEnumValue, l2), ptr_v_1(type_c2ats_GEnumValue, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GFlagsClass_values: {l1:agz} (!ptr_v_1(struct_c2ats__GFlagsClass, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFlagsValue, l2), ptr_v_1(type_c2ats_GFlagsValue, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GEnumValue_value_name: {l1:agz} (!ptr_v_1(struct_c2ats__GEnumValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GEnumValue_value_nick: {l1:agz} (!ptr_v_1(struct_c2ats__GEnumValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GFlagsValue_value_name: {l1:agz} (!ptr_v_1(struct_c2ats__GFlagsValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GFlagsValue_value_nick: {l1:agz} (!ptr_v_1(struct_c2ats__GFlagsValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GParamSpecEnum_enum_class: {l1:agz} (!ptr_v_1(struct_c2ats__GParamSpecEnum, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GEnumClass, l2), ptr_v_1(type_c2ats_GEnumClass, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GParamSpecFlags_flags_class: {l1:agz} (!ptr_v_1(struct_c2ats__GParamSpecFlags, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFlagsClass, l2), ptr_v_1(type_c2ats_GFlagsClass, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GParamSpecString_default_value: {l1:agz} (!ptr_v_1(struct_c2ats__GParamSpecString, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GParamSpecString_cset_first: {l1:agz} (!ptr_v_1(struct_c2ats__GParamSpecString, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GParamSpecString_cset_nth: {l1:agz} (!ptr_v_1(struct_c2ats__GParamSpecString, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GParamSpecValueArray_element_spec: {l1:agz} (!ptr_v_1(struct_c2ats__GParamSpecValueArray, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GParamSpec, l2), ptr_v_1(type_c2ats_GParamSpec, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GParamSpecOverride_overridden: {l1:agz} (!ptr_v_1(struct_c2ats__GParamSpecOverride, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GParamSpec, l2), ptr_v_1(type_c2ats_GParamSpec, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GParamSpecVariant_type: {l1:agz} (!ptr_v_1(struct_c2ats__GParamSpecVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariantType, l2), ptr_v_1(type_c2ats_GVariantType, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GParamSpecVariant_default_value: {l1:agz} (!ptr_v_1(struct_c2ats__GParamSpecVariant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GVariant, l2), ptr_v_1(type_c2ats_GVariant, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GTypeModule_type_infos: {l1:agz} (!ptr_v_1(struct_c2ats__GTypeModule, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2), ptr_v_1(type_c2ats_GSList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GTypeModule_interface_infos: {l1:agz} (!ptr_v_1(struct_c2ats__GTypeModule, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2), ptr_v_1(type_c2ats_GSList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GTypeModule_name: {l1:agz} (!ptr_v_1(struct_c2ats__GTypeModule, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GValueArray_values: {l1:agz} (!ptr_v_1(struct_c2ats__GValueArray, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GValue, l2), ptr_v_1(type_c2ats_GValue, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GActionEntry_name: {l1:agz} (!ptr_v_1(struct_c2ats__GActionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GActionEntry_parameter_type: {l1:agz} (!ptr_v_1(struct_c2ats__GActionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GActionEntry_state: {l1:agz} (!ptr_v_1(struct_c2ats__GActionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GAppLaunchContext_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GAppLaunchContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GAppLaunchContextPrivate, l2), ptr_v_1(type_c2ats_GAppLaunchContextPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GApplication_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GApplication, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GApplicationPrivate, l2), ptr_v_1(type_c2ats_GApplicationPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GApplicationCommandLine_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GApplicationCommandLine, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GApplicationCommandLinePrivate, l2), ptr_v_1(type_c2ats_GApplicationCommandLinePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GInputStream_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GInputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GInputStreamPrivate, l2), ptr_v_1(type_c2ats_GInputStreamPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GFilterInputStream_base_stream: {l1:agz} (!ptr_v_1(struct_c2ats__GFilterInputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GInputStream, l2), ptr_v_1(type_c2ats_GInputStream, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GBufferedInputStream_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GBufferedInputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GBufferedInputStreamPrivate, l2), ptr_v_1(type_c2ats_GBufferedInputStreamPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GOutputStream_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GOutputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GOutputStreamPrivate, l2), ptr_v_1(type_c2ats_GOutputStreamPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GFilterOutputStream_base_stream: {l1:agz} (!ptr_v_1(struct_c2ats__GFilterOutputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GOutputStream, l2), ptr_v_1(type_c2ats_GOutputStream, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GBufferedOutputStream_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GBufferedOutputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GBufferedOutputStreamPrivate, l2), ptr_v_1(type_c2ats_GBufferedOutputStreamPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GCancellable_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GCancellable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GCancellablePrivate, l2), ptr_v_1(type_c2ats_GCancellablePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GConverterInputStream_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GConverterInputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GConverterInputStreamPrivate, l2), ptr_v_1(type_c2ats_GConverterInputStreamPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GConverterOutputStream_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GConverterOutputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GConverterOutputStreamPrivate, l2), ptr_v_1(type_c2ats_GConverterOutputStreamPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDataInputStream_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GDataInputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDataInputStreamPrivate, l2), ptr_v_1(type_c2ats_GDataInputStreamPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDataOutputStream_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GDataOutputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDataOutputStreamPrivate, l2), ptr_v_1(type_c2ats_GDataOutputStreamPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusErrorEntry_dbus_error_name: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusErrorEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusAnnotationInfo_key: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusAnnotationInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusAnnotationInfo_value: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusAnnotationInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusAnnotationInfo_annotations: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusAnnotationInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_GDBusAnnotationInfo, l2, l2_1), ptr_v_2(type_c2ats_GDBusAnnotationInfo, l2, l2_1) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusArgInfo_name: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusArgInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusArgInfo_signature: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusArgInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusArgInfo_annotations: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusArgInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_GDBusAnnotationInfo, l2, l2_1), ptr_v_2(type_c2ats_GDBusAnnotationInfo, l2, l2_1) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusMethodInfo_name: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusMethodInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusMethodInfo_in_args: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusMethodInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_GDBusArgInfo, l2, l2_1), ptr_v_2(type_c2ats_GDBusArgInfo, l2, l2_1) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusMethodInfo_out_args: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusMethodInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_GDBusArgInfo, l2, l2_1), ptr_v_2(type_c2ats_GDBusArgInfo, l2, l2_1) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusMethodInfo_annotations: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusMethodInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_GDBusAnnotationInfo, l2, l2_1), ptr_v_2(type_c2ats_GDBusAnnotationInfo, l2, l2_1) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusSignalInfo_name: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusSignalInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusSignalInfo_args: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusSignalInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_GDBusArgInfo, l2, l2_1), ptr_v_2(type_c2ats_GDBusArgInfo, l2, l2_1) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusSignalInfo_annotations: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusSignalInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_GDBusAnnotationInfo, l2, l2_1), ptr_v_2(type_c2ats_GDBusAnnotationInfo, l2, l2_1) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusPropertyInfo_name: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusPropertyInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusPropertyInfo_signature: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusPropertyInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusPropertyInfo_annotations: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusPropertyInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_GDBusAnnotationInfo, l2, l2_1), ptr_v_2(type_c2ats_GDBusAnnotationInfo, l2, l2_1) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusInterfaceInfo_name: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusInterfaceInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusInterfaceInfo_methods: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusInterfaceInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_GDBusMethodInfo, l2, l2_1), ptr_v_2(type_c2ats_GDBusMethodInfo, l2, l2_1) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusInterfaceInfo_signals: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusInterfaceInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_GDBusSignalInfo, l2, l2_1), ptr_v_2(type_c2ats_GDBusSignalInfo, l2, l2_1) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusInterfaceInfo_properties: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusInterfaceInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_GDBusPropertyInfo, l2, l2_1), ptr_v_2(type_c2ats_GDBusPropertyInfo, l2, l2_1) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusInterfaceInfo_annotations: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusInterfaceInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_GDBusAnnotationInfo, l2, l2_1), ptr_v_2(type_c2ats_GDBusAnnotationInfo, l2, l2_1) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusNodeInfo_path: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusNodeInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusNodeInfo_interfaces: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusNodeInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_GDBusInterfaceInfo, l2, l2_1), ptr_v_2(type_c2ats_GDBusInterfaceInfo, l2, l2_1) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusNodeInfo_nodes: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusNodeInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_GDBusNodeInfo, l2, l2_1), ptr_v_2(type_c2ats_GDBusNodeInfo, l2, l2_1) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusNodeInfo_annotations: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusNodeInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_GDBusAnnotationInfo, l2, l2_1), ptr_v_2(type_c2ats_GDBusAnnotationInfo, l2, l2_1) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusProxy_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusProxy, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusProxyPrivate, l2), ptr_v_1(type_c2ats_GDBusProxyPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GEmblemedIcon_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GEmblemedIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GEmblemedIconPrivate, l2), ptr_v_1(type_c2ats_GEmblemedIconPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GFileAttributeInfo_name: {l1:agz} (!ptr_v_1(struct_c2ats__GFileAttributeInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2), ptr_v_1(char, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GFileAttributeInfoList_infos: {l1:agz} (!ptr_v_1(struct_c2ats__GFileAttributeInfoList, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFileAttributeInfo, l2), ptr_v_1(type_c2ats_GFileAttributeInfo, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GFileEnumerator_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GFileEnumerator, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFileEnumeratorPrivate, l2), ptr_v_1(type_c2ats_GFileEnumeratorPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GFileInputStream_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GFileInputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFileInputStreamPrivate, l2), ptr_v_1(type_c2ats_GFileInputStreamPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GIOStream_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GIOStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GIOStreamPrivate, l2), ptr_v_1(type_c2ats_GIOStreamPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GFileIOStream_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GFileIOStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFileIOStreamPrivate, l2), ptr_v_1(type_c2ats_GFileIOStreamPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GFileMonitor_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GFileMonitor, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFileMonitorPrivate, l2), ptr_v_1(type_c2ats_GFileMonitorPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GFileOutputStream_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GFileOutputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GFileOutputStreamPrivate, l2), ptr_v_1(type_c2ats_GFileOutputStreamPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GInetAddress_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GInetAddress, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GInetAddressPrivate, l2), ptr_v_1(type_c2ats_GInetAddressPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GInetAddressMask_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GInetAddressMask, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GInetAddressMaskPrivate, l2), ptr_v_1(type_c2ats_GInetAddressMaskPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GInetSocketAddress_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GInetSocketAddress, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GInetSocketAddressPrivate, l2), ptr_v_1(type_c2ats_GInetSocketAddressPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GMemoryInputStream_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GMemoryInputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMemoryInputStreamPrivate, l2), ptr_v_1(type_c2ats_GMemoryInputStreamPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GMemoryOutputStream_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GMemoryOutputStream, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMemoryOutputStreamPrivate, l2), ptr_v_1(type_c2ats_GMemoryOutputStreamPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GMountOperation_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GMountOperation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMountOperationPrivate, l2), ptr_v_1(type_c2ats_GMountOperationPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GNetworkAddress_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GNetworkAddress, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GNetworkAddressPrivate, l2), ptr_v_1(type_c2ats_GNetworkAddressPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GNetworkService_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GNetworkService, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GNetworkServicePrivate, l2), ptr_v_1(type_c2ats_GNetworkServicePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GPermission_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GPermission, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GPermissionPrivate, l2), ptr_v_1(type_c2ats_GPermissionPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GProxyAddress_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GProxyAddress, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GProxyAddressPrivate, l2), ptr_v_1(type_c2ats_GProxyAddressPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GProxyAddressEnumerator_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GProxyAddressEnumerator, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GProxyAddressEnumeratorPrivate, l2), ptr_v_1(type_c2ats_GProxyAddressEnumeratorPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GResolver_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GResolver, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GResolverPrivate, l2), ptr_v_1(type_c2ats_GResolverPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GStaticResource_data: {l1:agz} (!ptr_v_1(struct_c2ats__GStaticResource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_guint8, l2), ptr_v_1(type_c2ats_guint8, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GStaticResource_resource: {l1:agz} (!ptr_v_1(struct_c2ats__GStaticResource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GResource, l2), ptr_v_1(type_c2ats_GResource, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GStaticResource_next: {l1:agz} (!ptr_v_1(struct_c2ats__GStaticResource, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GStaticResource, l2), ptr_v_1(type_c2ats_GStaticResource, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSettings_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GSettings, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSettingsPrivate, l2), ptr_v_1(type_c2ats_GSettingsPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSimpleActionGroup_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GSimpleActionGroup, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSimpleActionGroupPrivate, l2), ptr_v_1(type_c2ats_GSimpleActionGroupPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSocketClient_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GSocketClient, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSocketClientPrivate, l2), ptr_v_1(type_c2ats_GSocketClientPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSocket_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GSocket, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSocketPrivate, l2), ptr_v_1(type_c2ats_GSocketPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSocketConnection_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GSocketConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSocketConnectionPrivate, l2), ptr_v_1(type_c2ats_GSocketConnectionPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSocketControlMessage_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GSocketControlMessage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSocketControlMessagePrivate, l2), ptr_v_1(type_c2ats_GSocketControlMessagePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSocketListener_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GSocketListener, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSocketListenerPrivate, l2), ptr_v_1(type_c2ats_GSocketListenerPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSocketService_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GSocketService, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSocketServicePrivate, l2), ptr_v_1(type_c2ats_GSocketServicePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GSimpleProxyResolver_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GSimpleProxyResolver, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSimpleProxyResolverPrivate, l2), ptr_v_1(type_c2ats_GSimpleProxyResolverPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GTcpConnection_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GTcpConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTcpConnectionPrivate, l2), ptr_v_1(type_c2ats_GTcpConnectionPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GTcpWrapperConnection_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GTcpWrapperConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTcpWrapperConnectionPrivate, l2), ptr_v_1(type_c2ats_GTcpWrapperConnectionPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GThreadedSocketService_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GThreadedSocketService, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GThreadedSocketServicePrivate, l2), ptr_v_1(type_c2ats_GThreadedSocketServicePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GTlsCertificate_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GTlsCertificate, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTlsCertificatePrivate, l2), ptr_v_1(type_c2ats_GTlsCertificatePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GTlsConnection_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GTlsConnection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTlsConnectionPrivate, l2), ptr_v_1(type_c2ats_GTlsConnectionPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GTlsDatabase_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GTlsDatabase, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTlsDatabasePrivate, l2), ptr_v_1(type_c2ats_GTlsDatabasePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GTlsInteraction_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GTlsInteraction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTlsInteractionPrivate, l2), ptr_v_1(type_c2ats_GTlsInteractionPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GTlsPassword_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GTlsPassword, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GTlsPasswordPrivate, l2), ptr_v_1(type_c2ats_GTlsPasswordPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusInterfaceSkeleton_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusInterfaceSkeleton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusInterfaceSkeletonPrivate, l2), ptr_v_1(type_c2ats_GDBusInterfaceSkeletonPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusObjectSkeleton_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusObjectSkeleton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusObjectSkeletonPrivate, l2), ptr_v_1(type_c2ats_GDBusObjectSkeletonPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusObjectProxy_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusObjectProxy, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusObjectProxyPrivate, l2), ptr_v_1(type_c2ats_GDBusObjectProxyPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusObjectManagerClient_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusObjectManagerClient, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusObjectManagerClientPrivate, l2), ptr_v_1(type_c2ats_GDBusObjectManagerClientPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GDBusObjectManagerServer_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GDBusObjectManagerServer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GDBusObjectManagerServerPrivate, l2), ptr_v_1(type_c2ats_GDBusObjectManagerServerPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GMenuModel_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GMenuModel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMenuModelPrivate, l2), ptr_v_1(type_c2ats_GMenuModelPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GMenuAttributeIter_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GMenuAttributeIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMenuAttributeIterPrivate, l2), ptr_v_1(type_c2ats_GMenuAttributeIterPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GMenuLinkIter_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GMenuLinkIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GMenuLinkIterPrivate, l2), ptr_v_1(type_c2ats_GMenuLinkIterPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__PangoAttribute_klass: {l1:agz} (!ptr_v_1(struct_c2ats__PangoAttribute, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoAttrClass, l2), ptr_v_1(type_c2ats_PangoAttrClass, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__PangoAttrString_value: {l1:agz} (!ptr_v_1(struct_c2ats__PangoAttrString, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2), ptr_v_1(char, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__PangoAttrLanguage_value: {l1:agz} (!ptr_v_1(struct_c2ats__PangoAttrLanguage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLanguage, l2), ptr_v_1(type_c2ats_PangoLanguage, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__PangoAttrFontDesc_desc: {l1:agz} (!ptr_v_1(struct_c2ats__PangoAttrFontDesc, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontDescription, l2), ptr_v_1(type_c2ats_PangoFontDescription, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__PangoAnalysis_shape_engine: {l1:agz} (!ptr_v_1(struct_c2ats__PangoAnalysis, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoEngineShape, l2), ptr_v_1(type_c2ats_PangoEngineShape, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__PangoAnalysis_lang_engine: {l1:agz} (!ptr_v_1(struct_c2ats__PangoAnalysis, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoEngineLang, l2), ptr_v_1(type_c2ats_PangoEngineLang, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__PangoAnalysis_font: {l1:agz} (!ptr_v_1(struct_c2ats__PangoAnalysis, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFont, l2), ptr_v_1(type_c2ats_PangoFont, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__PangoAnalysis_language: {l1:agz} (!ptr_v_1(struct_c2ats__PangoAnalysis, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLanguage, l2), ptr_v_1(type_c2ats_PangoLanguage, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__PangoAnalysis_extra_attrs: {l1:agz} (!ptr_v_1(struct_c2ats__PangoAnalysis, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2), ptr_v_1(type_c2ats_GSList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__PangoGlyphString_glyphs: {l1:agz} (!ptr_v_1(struct_c2ats__PangoGlyphString, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoGlyphInfo, l2), ptr_v_1(type_c2ats_PangoGlyphInfo, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__PangoGlyphString_log_clusters: {l1:agz} (!ptr_v_1(struct_c2ats__PangoGlyphString, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gint, l2), ptr_v_1(type_c2ats_gint, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__PangoGlyphItem_item: {l1:agz} (!ptr_v_1(struct_c2ats__PangoGlyphItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoItem, l2), ptr_v_1(type_c2ats_PangoItem, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__PangoGlyphItem_glyphs: {l1:agz} (!ptr_v_1(struct_c2ats__PangoGlyphItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoGlyphString, l2), ptr_v_1(type_c2ats_PangoGlyphString, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__PangoGlyphItemIter_glyph_item: {l1:agz} (!ptr_v_1(struct_c2ats__PangoGlyphItemIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoGlyphItem, l2), ptr_v_1(type_c2ats_PangoGlyphItem, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__PangoGlyphItemIter_text: {l1:agz} (!ptr_v_1(struct_c2ats__PangoGlyphItemIter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__PangoLayoutLine_layout: {l1:agz} (!ptr_v_1(struct_c2ats__PangoLayoutLine, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLayout, l2), ptr_v_1(type_c2ats_PangoLayout, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__PangoLayoutLine_runs: {l1:agz} (!ptr_v_1(struct_c2ats__PangoLayoutLine, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2), ptr_v_1(type_c2ats_GSList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__PangoRenderer_matrix: {l1:agz} (!ptr_v_1(struct_c2ats__PangoRenderer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoMatrix, l2), ptr_v_1(type_c2ats_PangoMatrix, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__PangoRenderer_priv: {l1:agz} (!ptr_v_1(struct_c2ats__PangoRenderer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoRendererPrivate, l2), ptr_v_1(type_c2ats_PangoRendererPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__IO_marker__next: {l1:agz} (!ptr_v_1(struct_c2ats__IO_marker, l1) | ptr l1) -> [l2:addr] (ptr_v_1(struct_c2ats__IO_marker, l2), ptr_v_1(struct_c2ats__IO_marker, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__IO_marker__sbuf: {l1:agz} (!ptr_v_1(struct_c2ats__IO_marker, l1) | ptr l1) -> [l2:addr] (ptr_v_1(struct_c2ats__IO_FILE, l2), ptr_v_1(struct_c2ats__IO_FILE, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__IO_FILE__IO_read_ptr: {l1:agz} (!ptr_v_1(struct_c2ats__IO_FILE, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2), ptr_v_1(char, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__IO_FILE__IO_read_end: {l1:agz} (!ptr_v_1(struct_c2ats__IO_FILE, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2), ptr_v_1(char, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__IO_FILE__IO_read_base: {l1:agz} (!ptr_v_1(struct_c2ats__IO_FILE, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2), ptr_v_1(char, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__IO_FILE__IO_write_base: {l1:agz} (!ptr_v_1(struct_c2ats__IO_FILE, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2), ptr_v_1(char, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__IO_FILE__IO_write_ptr: {l1:agz} (!ptr_v_1(struct_c2ats__IO_FILE, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2), ptr_v_1(char, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__IO_FILE__IO_write_end: {l1:agz} (!ptr_v_1(struct_c2ats__IO_FILE, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2), ptr_v_1(char, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__IO_FILE__IO_buf_base: {l1:agz} (!ptr_v_1(struct_c2ats__IO_FILE, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2), ptr_v_1(char, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__IO_FILE__IO_buf_end: {l1:agz} (!ptr_v_1(struct_c2ats__IO_FILE, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2), ptr_v_1(char, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__IO_FILE__IO_save_base: {l1:agz} (!ptr_v_1(struct_c2ats__IO_FILE, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2), ptr_v_1(char, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__IO_FILE__IO_backup_base: {l1:agz} (!ptr_v_1(struct_c2ats__IO_FILE, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2), ptr_v_1(char, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__IO_FILE__IO_save_end: {l1:agz} (!ptr_v_1(struct_c2ats__IO_FILE, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2), ptr_v_1(char, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__IO_FILE__markers: {l1:agz} (!ptr_v_1(struct_c2ats__IO_FILE, l1) | ptr l1) -> [l2:addr] (ptr_v_1(struct_c2ats__IO_marker, l2), ptr_v_1(struct_c2ats__IO_marker, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__IO_FILE__chain: {l1:agz} (!ptr_v_1(struct_c2ats__IO_FILE, l1) | ptr l1) -> [l2:addr] (ptr_v_1(struct_c2ats__IO_FILE, l2), ptr_v_1(struct_c2ats__IO_FILE, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__IO_FILE__lock: {l1:agz} (!ptr_v_1(struct_c2ats__IO_FILE, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats__IO_lock_t, l2), ptr_v_1(type_c2ats__IO_lock_t, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__cairo_rectangle_list_rectangles: {l1:agz} (!ptr_v_1(struct_c2ats__cairo_rectangle_list, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_rectangle_t, l2), ptr_v_1(type_c2ats_cairo_rectangle_t, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats_cairo_path_data: {l1:agz} (!ptr_v_1(struct_c2ats_cairo_path, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_path_data_t, l2), ptr_v_1(type_c2ats_cairo_path_data_t, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventAny_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventAny, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventExpose_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventExpose, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventExpose_region: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventExpose, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_cairo_region_t, l2), ptr_v_1(type_c2ats_cairo_region_t, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventVisibility_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventVisibility, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventMotion_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventMotion, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventMotion_axes: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventMotion, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gdouble, l2), ptr_v_1(type_c2ats_gdouble, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventMotion_device: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventMotion, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDevice, l2), ptr_v_1(type_c2ats_GdkDevice, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventButton_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventButton_axes: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gdouble, l2), ptr_v_1(type_c2ats_gdouble, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventButton_device: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDevice, l2), ptr_v_1(type_c2ats_GdkDevice, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventTouch_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventTouch, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventTouch_axes: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventTouch, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gdouble, l2), ptr_v_1(type_c2ats_gdouble, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventTouch_sequence: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventTouch, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkEventSequence, l2), ptr_v_1(type_c2ats_GdkEventSequence, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventTouch_device: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventTouch, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDevice, l2), ptr_v_1(type_c2ats_GdkDevice, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventScroll_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventScroll, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventScroll_device: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventScroll, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDevice, l2), ptr_v_1(type_c2ats_GdkDevice, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventKey_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventKey, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventKey_string: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventKey, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventCrossing_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventCrossing, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventCrossing_subwindow: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventCrossing, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventFocus_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventFocus, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventConfigure_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventConfigure, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventProperty_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventProperty, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventSelection_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventSelection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventSelection_requestor: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventSelection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventOwnerChange_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventOwnerChange, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventOwnerChange_owner: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventOwnerChange, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventProximity_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventProximity, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventProximity_device: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventProximity, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDevice, l2), ptr_v_1(type_c2ats_GdkDevice, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventSetting_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventSetting, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventSetting_name: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventSetting, l1) | ptr l1) -> [l2:addr] (ptr_v_1(char, l2), ptr_v_1(char, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventWindowState_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventWindowState, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventGrabBroken_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventGrabBroken, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventGrabBroken_grab_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventGrabBroken, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventDND_window: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventDND, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkWindow, l2), ptr_v_1(type_c2ats_GdkWindow, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkEventDND_context: {l1:agz} (!ptr_v_1(struct_c2ats__GdkEventDND, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkDragContext, l2), ptr_v_1(type_c2ats_GdkDragContext, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkWindowAttr_title: {l1:agz} (!ptr_v_1(struct_c2ats__GdkWindowAttr, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkWindowAttr_visual: {l1:agz} (!ptr_v_1(struct_c2ats__GdkWindowAttr, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkVisual, l2), ptr_v_1(type_c2ats_GdkVisual, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkWindowAttr_cursor: {l1:agz} (!ptr_v_1(struct_c2ats__GdkWindowAttr, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkCursor, l2), ptr_v_1(type_c2ats_GdkCursor, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkWindowAttr_wmclass_name: {l1:agz} (!ptr_v_1(struct_c2ats__GdkWindowAttr, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GdkWindowAttr_wmclass_class: {l1:agz} (!ptr_v_1(struct_c2ats__GdkWindowAttr, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkAccelGroup_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkAccelGroup, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAccelGroupPrivate, l2), ptr_v_1(type_c2ats_GtkAccelGroupPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkAccelGroupEntry_closure: {l1:agz} (!ptr_v_1(struct_c2ats__GtkAccelGroupEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GClosure, l2), ptr_v_1(type_c2ats_GClosure, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__AtkAttribute_name: {l1:agz} (!ptr_v_1(struct_c2ats__AtkAttribute, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__AtkAttribute_value: {l1:agz} (!ptr_v_1(struct_c2ats__AtkAttribute, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__AtkPropertyValues_property_name: {l1:agz} (!ptr_v_1(struct_c2ats__AtkPropertyValues, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__AtkObject_description: {l1:agz} (!ptr_v_1(struct_c2ats__AtkObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__AtkObject_name: {l1:agz} (!ptr_v_1(struct_c2ats__AtkObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__AtkObject_accessible_parent: {l1:agz} (!ptr_v_1(struct_c2ats__AtkObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkObject, l2), ptr_v_1(type_c2ats_AtkObject, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__AtkObject_relation_set: {l1:agz} (!ptr_v_1(struct_c2ats__AtkObject, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_AtkRelationSet, l2), ptr_v_1(type_c2ats_AtkRelationSet, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__AtkKeyEventStruct_string: {l1:agz} (!ptr_v_1(struct_c2ats__AtkKeyEventStruct, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__AtkTextRange_content: {l1:agz} (!ptr_v_1(struct_c2ats__AtkTextRange, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__AtkRegistry_factory_type_registry: {l1:agz} (!ptr_v_1(struct_c2ats__AtkRegistry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GHashTable, l2), ptr_v_1(type_c2ats_GHashTable, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__AtkRegistry_factory_singleton_cache: {l1:agz} (!ptr_v_1(struct_c2ats__AtkRegistry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GHashTable, l2), ptr_v_1(type_c2ats_GHashTable, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__AtkRelation_target: {l1:agz} (!ptr_v_1(struct_c2ats__AtkRelation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GPtrArray, l2), ptr_v_1(type_c2ats_GPtrArray, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__AtkRelationSet_relations: {l1:agz} (!ptr_v_1(struct_c2ats__AtkRelationSet, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GPtrArray, l2), ptr_v_1(type_c2ats_GPtrArray, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__AtkSocket_embedded_plug_id: {l1:agz} (!ptr_v_1(struct_c2ats__AtkSocket, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkWidget_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidgetPrivate, l2), ptr_v_1(type_c2ats_GtkWidgetPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkWidgetClass_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkWidgetClass, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidgetClassPrivate, l2), ptr_v_1(type_c2ats_GtkWidgetClassPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkApplication_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkApplication, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkApplicationPrivate, l2), ptr_v_1(type_c2ats_GtkApplicationPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkContainer_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkContainer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkContainerPrivate, l2), ptr_v_1(type_c2ats_GtkContainerPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkBin_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkBin, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkBinPrivate, l2), ptr_v_1(type_c2ats_GtkBinPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkWindow_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWindowPrivate, l2), ptr_v_1(type_c2ats_GtkWindowPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkDialog_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkDialogPrivate, l2), ptr_v_1(type_c2ats_GtkDialogPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkAboutDialog_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkAboutDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAboutDialogPrivate, l2), ptr_v_1(type_c2ats_GtkAboutDialogPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkMisc_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkMisc, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkMiscPrivate, l2), ptr_v_1(type_c2ats_GtkMiscPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkMenuShell_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkMenuShell, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkMenuShellPrivate, l2), ptr_v_1(type_c2ats_GtkMenuShellPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkMenu_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkMenu, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkMenuPrivate, l2), ptr_v_1(type_c2ats_GtkMenuPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkLabel_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkLabel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkLabelPrivate, l2), ptr_v_1(type_c2ats_GtkLabelPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkAccelLabel_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkAccelLabel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAccelLabelPrivate, l2), ptr_v_1(type_c2ats_GtkAccelLabelPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkAccelLabelClass_signal_quote1: {l1:agz} (!ptr_v_1(struct_c2ats__GtkAccelLabelClass, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkAccelLabelClass_signal_quote2: {l1:agz} (!ptr_v_1(struct_c2ats__GtkAccelLabelClass, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkAccelLabelClass_mod_name_shift: {l1:agz} (!ptr_v_1(struct_c2ats__GtkAccelLabelClass, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkAccelLabelClass_mod_name_control: {l1:agz} (!ptr_v_1(struct_c2ats__GtkAccelLabelClass, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkAccelLabelClass_mod_name_alt: {l1:agz} (!ptr_v_1(struct_c2ats__GtkAccelLabelClass, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkAccelLabelClass_mod_separator: {l1:agz} (!ptr_v_1(struct_c2ats__GtkAccelLabelClass, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkAccessible_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkAccessible, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAccessiblePrivate, l2), ptr_v_1(type_c2ats_GtkAccessiblePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkAdjustment_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkAdjustment, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAdjustmentPrivate, l2), ptr_v_1(type_c2ats_GtkAdjustmentPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkAppChooserDialog_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkAppChooserDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAppChooserDialogPrivate, l2), ptr_v_1(type_c2ats_GtkAppChooserDialogPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkBox_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkBox, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkBoxPrivate, l2), ptr_v_1(type_c2ats_GtkBoxPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkAppChooserWidget_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkAppChooserWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAppChooserWidgetPrivate, l2), ptr_v_1(type_c2ats_GtkAppChooserWidgetPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkCellRenderer_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkCellRenderer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellRendererPrivate, l2), ptr_v_1(type_c2ats_GtkCellRendererPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkCellRendererClass_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkCellRendererClass, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellRendererClassPrivate, l2), ptr_v_1(type_c2ats_GtkCellRendererClassPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkCellArea_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkCellArea, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellAreaPrivate, l2), ptr_v_1(type_c2ats_GtkCellAreaPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkTreeViewColumn_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkTreeViewColumn, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeViewColumnPrivate, l2), ptr_v_1(type_c2ats_GtkTreeViewColumnPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkTextAttributes_font: {l1:agz} (!ptr_v_1(struct_c2ats__GtkTextAttributes, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontDescription, l2), ptr_v_1(type_c2ats_PangoFontDescription, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkTextAttributes_tabs: {l1:agz} (!ptr_v_1(struct_c2ats__GtkTextAttributes, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoTabArray, l2), ptr_v_1(type_c2ats_PangoTabArray, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkTextAttributes_language: {l1:agz} (!ptr_v_1(struct_c2ats__GtkTextAttributes, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoLanguage, l2), ptr_v_1(type_c2ats_PangoLanguage, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkTextAttributes_pg_bg_color: {l1:agz} (!ptr_v_1(struct_c2ats__GtkTextAttributes, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkColor, l2), ptr_v_1(type_c2ats_GdkColor, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkTextAttributes_pg_bg_rgba: {l1:agz} (!ptr_v_1(struct_c2ats__GtkTextAttributes, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkRGBA, l2), ptr_v_1(type_c2ats_GdkRGBA, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkTextTag_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkTextTag, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTextTagPrivate, l2), ptr_v_1(type_c2ats_GtkTextTagPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkTargetEntry_target: {l1:agz} (!ptr_v_1(struct_c2ats__GtkTargetEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkEntryBuffer_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkEntryBuffer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkEntryBufferPrivate, l2), ptr_v_1(type_c2ats_GtkEntryBufferPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkListStore_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkListStore, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkListStorePrivate, l2), ptr_v_1(type_c2ats_GtkListStorePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkTreeModelFilter_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkTreeModelFilter, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeModelFilterPrivate, l2), ptr_v_1(type_c2ats_GtkTreeModelFilterPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkEntryCompletion_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkEntryCompletion, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkEntryCompletionPrivate, l2), ptr_v_1(type_c2ats_GtkEntryCompletionPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkImage_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkImage, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkImagePrivate, l2), ptr_v_1(type_c2ats_GtkImagePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkEntry_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkEntryPrivate, l2), ptr_v_1(type_c2ats_GtkEntryPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkTreeView_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkTreeView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeViewPrivate, l2), ptr_v_1(type_c2ats_GtkTreeViewPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkComboBox_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkComboBox, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkComboBoxPrivate, l2), ptr_v_1(type_c2ats_GtkComboBoxPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkAppChooserButton_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkAppChooserButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAppChooserButtonPrivate, l2), ptr_v_1(type_c2ats_GtkAppChooserButtonPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkApplicationWindow_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkApplicationWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkApplicationWindowPrivate, l2), ptr_v_1(type_c2ats_GtkApplicationWindowPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkFrame_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkFrame, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkFramePrivate, l2), ptr_v_1(type_c2ats_GtkFramePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkAspectFrame_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkAspectFrame, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAspectFramePrivate, l2), ptr_v_1(type_c2ats_GtkAspectFramePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkAssistant_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkAssistant, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAssistantPrivate, l2), ptr_v_1(type_c2ats_GtkAssistantPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkButtonBox_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkButtonBox, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkButtonBoxPrivate, l2), ptr_v_1(type_c2ats_GtkButtonBoxPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkBindingSet_set_name: {l1:agz} (!ptr_v_1(struct_c2ats__GtkBindingSet, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkBindingSet_widget_path_pspecs: {l1:agz} (!ptr_v_1(struct_c2ats__GtkBindingSet, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2), ptr_v_1(type_c2ats_GSList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkBindingSet_widget_class_pspecs: {l1:agz} (!ptr_v_1(struct_c2ats__GtkBindingSet, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2), ptr_v_1(type_c2ats_GSList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkBindingSet_class_branch_pspecs: {l1:agz} (!ptr_v_1(struct_c2ats__GtkBindingSet, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2), ptr_v_1(type_c2ats_GSList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkBindingSet_entries: {l1:agz} (!ptr_v_1(struct_c2ats__GtkBindingSet, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkBindingEntry, l2), ptr_v_1(type_c2ats_GtkBindingEntry, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkBindingSet_current: {l1:agz} (!ptr_v_1(struct_c2ats__GtkBindingSet, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkBindingEntry, l2), ptr_v_1(type_c2ats_GtkBindingEntry, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkBindingEntry_binding_set: {l1:agz} (!ptr_v_1(struct_c2ats__GtkBindingEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkBindingSet, l2), ptr_v_1(type_c2ats_GtkBindingSet, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkBindingEntry_set_next: {l1:agz} (!ptr_v_1(struct_c2ats__GtkBindingEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkBindingEntry, l2), ptr_v_1(type_c2ats_GtkBindingEntry, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkBindingEntry_hash_next: {l1:agz} (!ptr_v_1(struct_c2ats__GtkBindingEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkBindingEntry, l2), ptr_v_1(type_c2ats_GtkBindingEntry, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkBindingEntry_signals: {l1:agz} (!ptr_v_1(struct_c2ats__GtkBindingEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkBindingSignal, l2), ptr_v_1(type_c2ats_GtkBindingSignal, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkBindingSignal_next: {l1:agz} (!ptr_v_1(struct_c2ats__GtkBindingSignal, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkBindingSignal, l2), ptr_v_1(type_c2ats_GtkBindingSignal, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkBindingSignal_signal_name: {l1:agz} (!ptr_v_1(struct_c2ats__GtkBindingSignal, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkBindingSignal_args: {l1:agz} (!ptr_v_1(struct_c2ats__GtkBindingSignal, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkBindingArg, l2), ptr_v_1(type_c2ats_GtkBindingArg, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkBuilder_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkBuilder, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkBuilderPrivate, l2), ptr_v_1(type_c2ats_GtkBuilderPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkButton_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkButtonPrivate, l2), ptr_v_1(type_c2ats_GtkButtonPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkCalendar_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkCalendar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCalendarPrivate, l2), ptr_v_1(type_c2ats_GtkCalendarPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkCellAreaBox_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkCellAreaBox, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellAreaBoxPrivate, l2), ptr_v_1(type_c2ats_GtkCellAreaBoxPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkCellAreaContext_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkCellAreaContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellAreaContextPrivate, l2), ptr_v_1(type_c2ats_GtkCellAreaContextPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkCellRendererText_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkCellRendererText, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellRendererTextPrivate, l2), ptr_v_1(type_c2ats_GtkCellRendererTextPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkCellRendererAccel_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkCellRendererAccel, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellRendererAccelPrivate, l2), ptr_v_1(type_c2ats_GtkCellRendererAccelPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkCellRendererCombo_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkCellRendererCombo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellRendererComboPrivate, l2), ptr_v_1(type_c2ats_GtkCellRendererComboPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkCellRendererPixbuf_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkCellRendererPixbuf, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellRendererPixbufPrivate, l2), ptr_v_1(type_c2ats_GtkCellRendererPixbufPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkCellRendererProgress_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkCellRendererProgress, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellRendererProgressPrivate, l2), ptr_v_1(type_c2ats_GtkCellRendererProgressPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkCellRendererSpin_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkCellRendererSpin, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellRendererSpinPrivate, l2), ptr_v_1(type_c2ats_GtkCellRendererSpinPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkCellRendererSpinner_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkCellRendererSpinner, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellRendererSpinnerPrivate, l2), ptr_v_1(type_c2ats_GtkCellRendererSpinnerPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkCellRendererToggle_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkCellRendererToggle, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellRendererTogglePrivate, l2), ptr_v_1(type_c2ats_GtkCellRendererTogglePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkCellView_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkCellView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCellViewPrivate, l2), ptr_v_1(type_c2ats_GtkCellViewPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkToggleButton_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkToggleButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkToggleButtonPrivate, l2), ptr_v_1(type_c2ats_GtkToggleButtonPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkMenuItem_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkMenuItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkMenuItemPrivate, l2), ptr_v_1(type_c2ats_GtkMenuItemPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkCheckMenuItem_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkCheckMenuItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCheckMenuItemPrivate, l2), ptr_v_1(type_c2ats_GtkCheckMenuItemPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkColorButton_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkColorButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkColorButtonPrivate, l2), ptr_v_1(type_c2ats_GtkColorButtonPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkColorChooserDialog_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkColorChooserDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkColorChooserDialogPrivate, l2), ptr_v_1(type_c2ats_GtkColorChooserDialogPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkColorChooserWidget_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkColorChooserWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkColorChooserWidgetPrivate, l2), ptr_v_1(type_c2ats_GtkColorChooserWidgetPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkComboBoxText_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkComboBoxText, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkComboBoxTextPrivate, l2), ptr_v_1(type_c2ats_GtkComboBoxTextPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkCssProvider_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkCssProvider, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkCssProviderPrivate, l2), ptr_v_1(type_c2ats_GtkCssProviderPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkEventBox_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkEventBox, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkEventBoxPrivate, l2), ptr_v_1(type_c2ats_GtkEventBoxPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkExpander_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkExpander, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkExpanderPrivate, l2), ptr_v_1(type_c2ats_GtkExpanderPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkFixed_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkFixed, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkFixedPrivate, l2), ptr_v_1(type_c2ats_GtkFixedPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkFixedChild_widget: {l1:agz} (!ptr_v_1(struct_c2ats__GtkFixedChild, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2), ptr_v_1(type_c2ats_GtkWidget, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkFileFilterInfo_filename: {l1:agz} (!ptr_v_1(struct_c2ats__GtkFileFilterInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkFileFilterInfo_uri: {l1:agz} (!ptr_v_1(struct_c2ats__GtkFileFilterInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkFileFilterInfo_display_name: {l1:agz} (!ptr_v_1(struct_c2ats__GtkFileFilterInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkFileFilterInfo_mime_type: {l1:agz} (!ptr_v_1(struct_c2ats__GtkFileFilterInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkFileChooserButton_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkFileChooserButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkFileChooserButtonPrivate, l2), ptr_v_1(type_c2ats_GtkFileChooserButtonPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkFileChooserDialog_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkFileChooserDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkFileChooserDialogPrivate, l2), ptr_v_1(type_c2ats_GtkFileChooserDialogPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkFileChooserWidget_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkFileChooserWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkFileChooserWidgetPrivate, l2), ptr_v_1(type_c2ats_GtkFileChooserWidgetPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkFontButton_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkFontButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkFontButtonPrivate, l2), ptr_v_1(type_c2ats_GtkFontButtonPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkFontChooserDialog_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkFontChooserDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkFontChooserDialogPrivate, l2), ptr_v_1(type_c2ats_GtkFontChooserDialogPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkFontChooserWidget_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkFontChooserWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkFontChooserWidgetPrivate, l2), ptr_v_1(type_c2ats_GtkFontChooserWidgetPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkGrid_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkGrid, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkGridPrivate, l2), ptr_v_1(type_c2ats_GtkGridPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkIconFactory_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkIconFactory, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkIconFactoryPrivate, l2), ptr_v_1(type_c2ats_GtkIconFactoryPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkStyleProperties_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkStyleProperties, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStylePropertiesPrivate, l2), ptr_v_1(type_c2ats_GtkStylePropertiesPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkStyleContext_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkStyleContext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStyleContextPrivate, l2), ptr_v_1(type_c2ats_GtkStyleContextPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkIconTheme_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkIconTheme, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkIconThemePrivate, l2), ptr_v_1(type_c2ats_GtkIconThemePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkIconView_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkIconView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkIconViewPrivate, l2), ptr_v_1(type_c2ats_GtkIconViewPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkIMContextInfo_context_id: {l1:agz} (!ptr_v_1(struct_c2ats__GtkIMContextInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkIMContextInfo_context_name: {l1:agz} (!ptr_v_1(struct_c2ats__GtkIMContextInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkIMContextInfo_domain: {l1:agz} (!ptr_v_1(struct_c2ats__GtkIMContextInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkIMContextInfo_domain_dirname: {l1:agz} (!ptr_v_1(struct_c2ats__GtkIMContextInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkIMContextInfo_default_locales: {l1:agz} (!ptr_v_1(struct_c2ats__GtkIMContextInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkIMContextSimple_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkIMContextSimple, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkIMContextSimplePrivate, l2), ptr_v_1(type_c2ats_GtkIMContextSimplePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkIMMulticontext_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkIMMulticontext, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkIMMulticontextPrivate, l2), ptr_v_1(type_c2ats_GtkIMMulticontextPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkInfoBar_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkInfoBar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkInfoBarPrivate, l2), ptr_v_1(type_c2ats_GtkInfoBarPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkInvisible_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkInvisible, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkInvisiblePrivate, l2), ptr_v_1(type_c2ats_GtkInvisiblePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkLayout_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkLayout, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkLayoutPrivate, l2), ptr_v_1(type_c2ats_GtkLayoutPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkLevelBar_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkLevelBar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkLevelBarPrivate, l2), ptr_v_1(type_c2ats_GtkLevelBarPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkLinkButton_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkLinkButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkLinkButtonPrivate, l2), ptr_v_1(type_c2ats_GtkLinkButtonPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkLockButton_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkLockButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkLockButtonPrivate, l2), ptr_v_1(type_c2ats_GtkLockButtonPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkMenuBar_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkMenuBar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkMenuBarPrivate, l2), ptr_v_1(type_c2ats_GtkMenuBarPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkMenuButton_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkMenuButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkMenuButtonPrivate, l2), ptr_v_1(type_c2ats_GtkMenuButtonPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkSizeGroup_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkSizeGroup, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSizeGroupPrivate, l2), ptr_v_1(type_c2ats_GtkSizeGroupPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkToolItem_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkToolItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkToolItemPrivate, l2), ptr_v_1(type_c2ats_GtkToolItemPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkToolButton_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkToolButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkToolButtonPrivate, l2), ptr_v_1(type_c2ats_GtkToolButtonPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkMenuToolButton_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkMenuToolButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkMenuToolButtonPrivate, l2), ptr_v_1(type_c2ats_GtkMenuToolButtonPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkMessageDialog_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkMessageDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkMessageDialogPrivate, l2), ptr_v_1(type_c2ats_GtkMessageDialogPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkMountOperation_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkMountOperation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkMountOperationPrivate, l2), ptr_v_1(type_c2ats_GtkMountOperationPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkNotebook_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkNotebook, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkNotebookPrivate, l2), ptr_v_1(type_c2ats_GtkNotebookPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkOverlay_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkOverlay, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkOverlayPrivate, l2), ptr_v_1(type_c2ats_GtkOverlayPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkPaned_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkPaned, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkPanedPrivate, l2), ptr_v_1(type_c2ats_GtkPanedPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkPrintOperation_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkPrintOperation, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkPrintOperationPrivate, l2), ptr_v_1(type_c2ats_GtkPrintOperationPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkProgressBar_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkProgressBar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkProgressBarPrivate, l2), ptr_v_1(type_c2ats_GtkProgressBarPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRadioButton_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRadioButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkRadioButtonPrivate, l2), ptr_v_1(type_c2ats_GtkRadioButtonPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRadioMenuItem_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRadioMenuItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkRadioMenuItemPrivate, l2), ptr_v_1(type_c2ats_GtkRadioMenuItemPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkToggleToolButton_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkToggleToolButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkToggleToolButtonPrivate, l2), ptr_v_1(type_c2ats_GtkToggleToolButtonPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRange_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRange, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkRangePrivate, l2), ptr_v_1(type_c2ats_GtkRangePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRangeClass_slider_detail: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRangeClass, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRangeClass_stepper_detail: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRangeClass, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRecentData_display_name: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRecentData, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRecentData_description: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRecentData, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRecentData_mime_type: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRecentData, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRecentData_app_name: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRecentData, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRecentData_app_exec: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRecentData, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRecentData_groups: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRecentData, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1), ptr_v_2(type_c2ats_gchar, l2, l2_1) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRecentManager_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRecentManager, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkRecentManagerPrivate, l2), ptr_v_1(type_c2ats_GtkRecentManagerPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRecentFilterInfo_uri: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRecentFilterInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRecentFilterInfo_display_name: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRecentFilterInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRecentFilterInfo_mime_type: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRecentFilterInfo, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRecentFilterInfo_applications: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRecentFilterInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1), ptr_v_2(type_c2ats_gchar, l2, l2_1) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRecentFilterInfo_groups: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRecentFilterInfo, l1) | ptr l1) -> [l2,l2_1:addr] (ptr_v_2(type_c2ats_gchar, l2, l2_1), ptr_v_2(type_c2ats_gchar, l2, l2_1) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRecentChooserDialog_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRecentChooserDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkRecentChooserDialogPrivate, l2), ptr_v_1(type_c2ats_GtkRecentChooserDialogPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRecentChooserMenu_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRecentChooserMenu, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkRecentChooserMenuPrivate, l2), ptr_v_1(type_c2ats_GtkRecentChooserMenuPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRecentChooserWidget_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRecentChooserWidget, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkRecentChooserWidgetPrivate, l2), ptr_v_1(type_c2ats_GtkRecentChooserWidgetPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkScale_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkScale, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkScalePrivate, l2), ptr_v_1(type_c2ats_GtkScalePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkScaleButton_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkScaleButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkScaleButtonPrivate, l2), ptr_v_1(type_c2ats_GtkScaleButtonPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkScrolledWindow_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkScrolledWindow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkScrolledWindowPrivate, l2), ptr_v_1(type_c2ats_GtkScrolledWindowPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkSeparator_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkSeparator, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSeparatorPrivate, l2), ptr_v_1(type_c2ats_GtkSeparatorPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkSeparatorToolItem_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkSeparatorToolItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSeparatorToolItemPrivate, l2), ptr_v_1(type_c2ats_GtkSeparatorToolItemPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkSettings_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkSettings, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSettingsPrivate, l2), ptr_v_1(type_c2ats_GtkSettingsPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkSettingsValue_origin: {l1:agz} (!ptr_v_1(struct_c2ats__GtkSettingsValue, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkSpinButton_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkSpinButton, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSpinButtonPrivate, l2), ptr_v_1(type_c2ats_GtkSpinButtonPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkSpinner_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkSpinner, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSpinnerPrivate, l2), ptr_v_1(type_c2ats_GtkSpinnerPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkStatusbar_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkStatusbar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStatusbarPrivate, l2), ptr_v_1(type_c2ats_GtkStatusbarPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkSwitch_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkSwitch, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkSwitchPrivate, l2), ptr_v_1(type_c2ats_GtkSwitchPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkTextTagTable_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkTextTagTable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTextTagTablePrivate, l2), ptr_v_1(type_c2ats_GtkTextTagTablePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkTextBuffer_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkTextBuffer, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTextBufferPrivate, l2), ptr_v_1(type_c2ats_GtkTextBufferPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkTextView_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkTextView, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTextViewPrivate, l2), ptr_v_1(type_c2ats_GtkTextViewPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkToolbar_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkToolbar, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkToolbarPrivate, l2), ptr_v_1(type_c2ats_GtkToolbarPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkToolItemGroup_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkToolItemGroup, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkToolItemGroupPrivate, l2), ptr_v_1(type_c2ats_GtkToolItemGroupPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkToolPalette_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkToolPalette, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkToolPalettePrivate, l2), ptr_v_1(type_c2ats_GtkToolPalettePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkTreeModelSort_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkTreeModelSort, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeModelSortPrivate, l2), ptr_v_1(type_c2ats_GtkTreeModelSortPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkTreeSelection_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkTreeSelection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeSelectionPrivate, l2), ptr_v_1(type_c2ats_GtkTreeSelectionPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkTreeStore_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkTreeStore, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTreeStorePrivate, l2), ptr_v_1(type_c2ats_GtkTreeStorePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkViewport_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkViewport, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkViewportPrivate, l2), ptr_v_1(type_c2ats_GtkViewportPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkWindowGroup_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkWindowGroup, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWindowGroupPrivate, l2), ptr_v_1(type_c2ats_GtkWindowGroupPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkArrow_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkArrow, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkArrowPrivate, l2), ptr_v_1(type_c2ats_GtkArrowPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkAction_private_data: {l1:agz} (!ptr_v_1(struct_c2ats__GtkAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkActionPrivate, l2), ptr_v_1(type_c2ats_GtkActionPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkStockItem_stock_id: {l1:agz} (!ptr_v_1(struct_c2ats__GtkStockItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkStockItem_label: {l1:agz} (!ptr_v_1(struct_c2ats__GtkStockItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkStockItem_translation_domain: {l1:agz} (!ptr_v_1(struct_c2ats__GtkStockItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkActionGroup_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkActionGroup, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkActionGroupPrivate, l2), ptr_v_1(type_c2ats_GtkActionGroupPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkActionEntry_name: {l1:agz} (!ptr_v_1(struct_c2ats__GtkActionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkActionEntry_stock_id: {l1:agz} (!ptr_v_1(struct_c2ats__GtkActionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkActionEntry_label: {l1:agz} (!ptr_v_1(struct_c2ats__GtkActionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkActionEntry_accelerator: {l1:agz} (!ptr_v_1(struct_c2ats__GtkActionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkActionEntry_tooltip: {l1:agz} (!ptr_v_1(struct_c2ats__GtkActionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkToggleActionEntry_name: {l1:agz} (!ptr_v_1(struct_c2ats__GtkToggleActionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkToggleActionEntry_stock_id: {l1:agz} (!ptr_v_1(struct_c2ats__GtkToggleActionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkToggleActionEntry_label: {l1:agz} (!ptr_v_1(struct_c2ats__GtkToggleActionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkToggleActionEntry_accelerator: {l1:agz} (!ptr_v_1(struct_c2ats__GtkToggleActionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkToggleActionEntry_tooltip: {l1:agz} (!ptr_v_1(struct_c2ats__GtkToggleActionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRadioActionEntry_name: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRadioActionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRadioActionEntry_stock_id: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRadioActionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRadioActionEntry_label: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRadioActionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRadioActionEntry_accelerator: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRadioActionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRadioActionEntry_tooltip: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRadioActionEntry, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkAlignment_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkAlignment, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkAlignmentPrivate, l2), ptr_v_1(type_c2ats_GtkAlignmentPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkColorSelection_private_data: {l1:agz} (!ptr_v_1(struct_c2ats__GtkColorSelection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkColorSelectionPrivate, l2), ptr_v_1(type_c2ats_GtkColorSelectionPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkColorSelectionDialog_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkColorSelectionDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkColorSelectionDialogPrivate, l2), ptr_v_1(type_c2ats_GtkColorSelectionDialogPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkFontSelection_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkFontSelection, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkFontSelectionPrivate, l2), ptr_v_1(type_c2ats_GtkFontSelectionPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkFontSelectionDialog_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkFontSelectionDialog, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkFontSelectionDialogPrivate, l2), ptr_v_1(type_c2ats_GtkFontSelectionDialogPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkHandleBox_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkHandleBox, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkHandleBoxPrivate, l2), ptr_v_1(type_c2ats_GtkHandleBoxPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkHSV_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkHSV, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkHSVPrivate, l2), ptr_v_1(type_c2ats_GtkHSVPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkImageMenuItem_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkImageMenuItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkImageMenuItemPrivate, l2), ptr_v_1(type_c2ats_GtkImageMenuItemPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkNumerableIcon_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkNumerableIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkNumerableIconPrivate, l2), ptr_v_1(type_c2ats_GtkNumerableIconPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkToggleAction_private_data: {l1:agz} (!ptr_v_1(struct_c2ats__GtkToggleAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkToggleActionPrivate, l2), ptr_v_1(type_c2ats_GtkToggleActionPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRadioAction_private_data: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRadioAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkRadioActionPrivate, l2), ptr_v_1(type_c2ats_GtkRadioActionPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRcStyle_name: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRcStyle, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRcStyle_font_desc: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRcStyle, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontDescription, l2), ptr_v_1(type_c2ats_PangoFontDescription, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRcStyle_rc_properties: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRcStyle, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GArray, l2), ptr_v_1(type_c2ats_GArray, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRcStyle_rc_style_lists: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRcStyle, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2), ptr_v_1(type_c2ats_GSList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRcStyle_icon_factories: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRcStyle, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2), ptr_v_1(type_c2ats_GSList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRcProperty_origin: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRcProperty, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_gchar, l2), ptr_v_1(type_c2ats_gchar, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkRecentAction_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkRecentAction, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkRecentActionPrivate, l2), ptr_v_1(type_c2ats_GtkRecentActionPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkStatusIcon_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkStatusIcon, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkStatusIconPrivate, l2), ptr_v_1(type_c2ats_GtkStatusIconPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkStyle_font_desc: {l1:agz} (!ptr_v_1(struct_c2ats__GtkStyle, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontDescription, l2), ptr_v_1(type_c2ats_PangoFontDescription, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkStyle_visual: {l1:agz} (!ptr_v_1(struct_c2ats__GtkStyle, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GdkVisual, l2), ptr_v_1(type_c2ats_GdkVisual, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkStyle_private_font_desc: {l1:agz} (!ptr_v_1(struct_c2ats__GtkStyle, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_PangoFontDescription, l2), ptr_v_1(type_c2ats_PangoFontDescription, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkStyle_rc_style: {l1:agz} (!ptr_v_1(struct_c2ats__GtkStyle, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkRcStyle, l2), ptr_v_1(type_c2ats_GtkRcStyle, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkStyle_styles: {l1:agz} (!ptr_v_1(struct_c2ats__GtkStyle, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2), ptr_v_1(type_c2ats_GSList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkStyle_property_cache: {l1:agz} (!ptr_v_1(struct_c2ats__GtkStyle, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GArray, l2), ptr_v_1(type_c2ats_GArray, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkStyle_icon_factories: {l1:agz} (!ptr_v_1(struct_c2ats__GtkStyle, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GSList, l2), ptr_v_1(type_c2ats_GSList, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkTable_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkTable, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTablePrivate, l2), ptr_v_1(type_c2ats_GtkTablePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkTableChild_widget: {l1:agz} (!ptr_v_1(struct_c2ats__GtkTableChild, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkWidget, l2), ptr_v_1(type_c2ats_GtkWidget, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkTearoffMenuItem_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkTearoffMenuItem, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkTearoffMenuItemPrivate, l2), ptr_v_1(type_c2ats_GtkTearoffMenuItemPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkThemingEngine_priv: {l1:agz} (!ptr_v_1(struct_c2ats__GtkThemingEngine, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkThemingEnginePrivate, l2), ptr_v_1(type_c2ats_GtkThemingEnginePrivate, l2) -<lin,prf> void | ptr l2) = "mac#"
fun take_struct_c2ats__GtkUIManager_private_data: {l1:agz} (!ptr_v_1(struct_c2ats__GtkUIManager, l1) | ptr l1) -> [l2:addr] (ptr_v_1(type_c2ats_GtkUIManagerPrivate, l2), ptr_v_1(type_c2ats_GtkUIManagerPrivate, l2) -<lin,prf> void | ptr l2) = "mac#"

